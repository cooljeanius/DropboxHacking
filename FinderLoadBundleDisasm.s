/Users/ericgallager/.dropbox/finderplugin/FinderLoadBundle:
(__TEXT,__text) section
000000010000104c	pushq	$0x00
000000010000104e	movq	%rsp,%rbp
0000000100001051	andq	$0xf0,%rsp
0000000100001055	movq	0x08(%rbp),%rdi
0000000100001059	leaq	0x10(%rbp),%rsi
000000010000105d	movl	%edi,%edx
000000010000105f	addl	$0x01,%edx
0000000100001062	shll	$0x03,%edx
0000000100001065	addq	%rsi,%rdx
0000000100001068	movq	%rdx,%rcx
000000010000106b	jmp	0x100001071
000000010000106d	addq	$0x08,%rcx
0000000100001071	cmpq	$0x00,(%rcx)
0000000100001075	jne	0x10000106d
0000000100001077	addq	$0x08,%rcx
000000010000107b	callq	0x100002e4b
0000000100001080	movl	%eax,%edi
0000000100001082	callq	0x1000030d8	; symbol stub for: _exit
0000000100001087	hlt
0000000100001088	pushq	%r11
000000010000108a	leaq	0xffffef6f(%rip),%r11
0000000100001091	pushq	%r11
0000000100001093	jmp	*0x00002f67(%rip)
0000000100001099	nopl	(%rax)
000000010000109c	jmp	*0x00002f66(%rip)
00000001000010a2	pushq	%rbp
00000001000010a3	movq	%rsp,%rbp
00000001000010a6	subq	$0x00000140,%rsp
00000001000010ad	movq	%rdi,0xfffffee8(%rbp)
00000001000010b4	movq	%rsi,0xfffffee0(%rbp)
00000001000010bb	movq	%rdx,0xfffffed8(%rbp)
00000001000010c2	movl	%ecx,0xfffffed4(%rbp)
00000001000010c8	movq	%r8,0xfffffec8(%rbp)
00000001000010cf	cmpq	$0x00,0xfffffee8(%rbp)
00000001000010d7	sete	%al
00000001000010da	movzbl	%al,%eax
00000001000010dd	testq	%rax,%rax
00000001000010e0	je	0x100001101
00000001000010e2	leaq	0x0000208b(%rip),%rcx
00000001000010e9	movl	$0x00000039,%edx
00000001000010ee	leaq	0x0000208b(%rip),%rsi
00000001000010f5	leaq	0x0000206c(%rip),%rdi
00000001000010fc	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100001101	cmpl	$0x00,0xfffffed4(%rbp)
0000000100001108	setle	%al
000000010000110b	movzbl	%al,%eax
000000010000110e	testq	%rax,%rax
0000000100001111	je	0x100001132
0000000100001113	leaq	0x00002082(%rip),%rcx
000000010000111a	movl	$0x0000003a,%edx
000000010000111f	leaq	0x0000205a(%rip),%rsi
0000000100001126	leaq	0x0000203b(%rip),%rdi
000000010000112d	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100001132	cmpq	$0x00,0xfffffec8(%rbp)
000000010000113a	je	0x100001155
000000010000113c	cmpq	$0x00000400,0xfffffec8(%rbp)
0000000100001147	ja	0x100001155
0000000100001149	movl	$0x00000001,0xfffffec4(%rbp)
0000000100001153	jmp	0x10000115f
0000000100001155	movl	$0x00000000,0xfffffec4(%rbp)
000000010000115f	movslq	0xfffffec4(%rbp),%rax
0000000100001166	testq	%rax,%rax
0000000100001169	je	0x10000118a
000000010000116b	leaq	0x0000203e(%rip),%rcx
0000000100001172	movl	$0x0000003b,%edx
0000000100001177	leaq	0x00002002(%rip),%rsi
000000010000117e	leaq	0x00001fe3(%rip),%rdi
0000000100001185	callq	0x10000308a	; symbol stub for: ___assert_rtn
000000010000118a	leaq	0xf8(%rbp),%rax
000000010000118e	leaq	0xfc(%rbp),%rcx
0000000100001192	leaq	0xd8(%rbp),%rdx
0000000100001196	leaq	0xe0(%rbp),%rsi
000000010000119a	movq	0xfffffee8(%rbp),%rdi
00000001000011a1	movq	%rax,%r8
00000001000011a4	callq	0x1000015dc
00000001000011a9	movl	%eax,0xf4(%rbp)
00000001000011ac	cmpl	$0x00,0xf4(%rbp)
00000001000011b0	je	0x1000011d2
00000001000011b2	movq	0x00002e87(%rip),%rax
00000001000011b9	movq	(%rax),%rcx
00000001000011bc	movl	$0x00000006,%edx
00000001000011c1	movl	$0x00000001,%esi
00000001000011c6	leaq	0x00002006(%rip),%rdi
00000001000011cd	callq	0x1000030ea	; symbol stub for: _fwrite
00000001000011d2	cmpq	$0x00,0xfffffec8(%rbp)
00000001000011da	jne	0x1000011e7
00000001000011dc	movq	$0x00004000,0xfffffec8(%rbp)
00000001000011e7	movl	$0x00000000,0xf0(%rbp)
00000001000011ee	cmpl	$0x00,0xf4(%rbp)
00000001000011f2	jne	0x10000124b
00000001000011f4	movq	0x00002e55(%rip),%rax
00000001000011fb	movl	(%rax),%edi
00000001000011fd	leaq	0xf0(%rbp),%rdx
0000000100001201	movl	0xfffffed4(%rbp),%esi
0000000100001207	callq	0x100003144	; symbol stub for: _task_for_pid
000000010000120c	movl	%eax,0xf4(%rbp)
000000010000120f	cmpl	$0x00,0xf4(%rbp)
0000000100001213	je	0x10000124b
0000000100001215	movl	0xf4(%rbp),%esi
0000000100001218	leaq	0x00001fbb(%rip),%rdi
000000010000121f	callq	0x1000030f6	; symbol stub for: _mach_error
0000000100001224	cmpl	$0x05,0xf4(%rbp)
0000000100001228	jne	0x10000124b
000000010000122a	movq	0x00002e0f(%rip),%rax
0000000100001231	movq	(%rax),%rdi
0000000100001234	movl	0xfffffed4(%rbp),%edx
000000010000123a	leaq	0x00001faf(%rip),%rsi
0000000100001241	movl	$0x00000000,%eax
0000000100001246	callq	0x1000030de	; symbol stub for: _fprintf
000000010000124b	movq	$0x00000000,0xd0(%rbp)
0000000100001253	cmpl	$0x00,0xf4(%rbp)
0000000100001257	jne	0x10000129a
0000000100001259	movl	0xf0(%rbp),%edi
000000010000125c	movq	0xfffffec8(%rbp),%rdx
0000000100001263	leaq	0xd0(%rbp),%rsi
0000000100001267	movl	$0x00000001,%ecx
000000010000126c	callq	0x100003150	; symbol stub for: _vm_allocate
0000000100001271	movl	%eax,0xf4(%rbp)
0000000100001274	cmpl	$0x00,0xf4(%rbp)
0000000100001278	je	0x10000129a
000000010000127a	movq	0x00002dbf(%rip),%rax
0000000100001281	movq	(%rax),%rcx
0000000100001284	movl	$0x00000006,%edx
0000000100001289	movl	$0x00000001,%esi
000000010000128e	leaq	0x00001fad(%rip),%rdi
0000000100001295	callq	0x1000030ea	; symbol stub for: _fwrite
000000010000129a	movq	$0x00000000,0xc8(%rbp)
00000001000012a2	cmpl	$0x00,0xf4(%rbp)
00000001000012a6	jne	0x1000012e6
00000001000012a8	movq	0xd8(%rbp),%rdx
00000001000012ac	movl	0xf0(%rbp),%edi
00000001000012af	leaq	0xc8(%rbp),%rsi
00000001000012b3	movl	$0x00000001,%ecx
00000001000012b8	callq	0x100003150	; symbol stub for: _vm_allocate
00000001000012bd	movl	%eax,0xf4(%rbp)
00000001000012c0	cmpl	$0x00,0xf4(%rbp)
00000001000012c4	je	0x1000012e6
00000001000012c6	movq	0x00002d73(%rip),%rax
00000001000012cd	movq	(%rax),%rcx
00000001000012d0	movl	$0x00000006,%edx
00000001000012d5	movl	$0x00000001,%esi
00000001000012da	leaq	0x00001f68(%rip),%rdi
00000001000012e1	callq	0x1000030ea	; symbol stub for: _fwrite
00000001000012e6	cmpl	$0x00,0xf4(%rbp)
00000001000012ea	jne	0x100001330
00000001000012ec	movq	0xd8(%rbp),%rdx
00000001000012f0	movq	0xc8(%rbp),%rsi
00000001000012f4	movl	0xf0(%rbp),%edi
00000001000012f7	movl	$0x00000007,%r8d
00000001000012fd	movl	$0x00000000,%ecx
0000000100001302	callq	0x10000315c	; symbol stub for: _vm_protect
0000000100001307	movl	%eax,0xf4(%rbp)
000000010000130a	cmpl	$0x00,0xf4(%rbp)
000000010000130e	je	0x100001330
0000000100001310	movq	0x00002d29(%rip),%rax
0000000100001317	movq	(%rax),%rcx
000000010000131a	movl	$0x00000006,%edx
000000010000131f	movl	$0x00000001,%esi
0000000100001324	leaq	0x00001f25(%rip),%rdi
000000010000132b	callq	0x1000030ea	; symbol stub for: _fwrite
0000000100001330	cmpl	$0x00,0xf4(%rbp)
0000000100001334	jne	0x100001378
0000000100001336	movq	0xd8(%rbp),%rax
000000010000133a	movl	%eax,%ecx
000000010000133c	movq	0xe0(%rbp),%rax
0000000100001340	movq	%rax,%rdx
0000000100001343	movq	0xc8(%rbp),%rsi
0000000100001347	movl	0xf0(%rbp),%edi
000000010000134a	callq	0x100003162	; symbol stub for: _vm_write
000000010000134f	movl	%eax,0xf4(%rbp)
0000000100001352	cmpl	$0x00,0xf4(%rbp)
0000000100001356	je	0x100001378
0000000100001358	movq	0x00002ce1(%rip),%rax
000000010000135f	movq	(%rax),%rcx
0000000100001362	movl	$0x00000006,%edx
0000000100001367	movl	$0x00000001,%esi
000000010000136c	leaq	0x00001ee4(%rip),%rdi
0000000100001373	callq	0x1000030ea	; symbol stub for: _fwrite
0000000100001378	movq	$0x00000000,0xc0(%rbp)
0000000100001380	cmpl	$0x00,0xf4(%rbp)
0000000100001384	jne	0x100001431
000000010000138a	cmpq	$0x00,0xfffffee0(%rbp)
0000000100001392	je	0x100001431
0000000100001398	cmpq	$0x00,0xfffffed8(%rbp)
00000001000013a0	je	0x100001431
00000001000013a6	movl	0xf0(%rbp),%edi
00000001000013a9	movq	0xfffffed8(%rbp),%rdx
00000001000013b0	leaq	0xc0(%rbp),%rsi
00000001000013b4	movl	$0x00000001,%ecx
00000001000013b9	callq	0x100003150	; symbol stub for: _vm_allocate
00000001000013be	movl	%eax,0xf4(%rbp)
00000001000013c1	cmpl	$0x00,0xf4(%rbp)
00000001000013c5	jne	0x100001411
00000001000013c7	movq	0xfffffed8(%rbp),%rax
00000001000013ce	movl	%eax,%ecx
00000001000013d0	movq	0xfffffee0(%rbp),%rax
00000001000013d7	movq	%rax,%rdx
00000001000013da	movq	0xc0(%rbp),%rsi
00000001000013de	movl	0xf0(%rbp),%edi
00000001000013e1	callq	0x100003162	; symbol stub for: _vm_write
00000001000013e6	movl	%eax,0xf4(%rbp)
00000001000013e9	cmpl	$0x00,0xf4(%rbp)
00000001000013ed	je	0x100001431
00000001000013ef	movq	0x00002c4a(%rip),%rax
00000001000013f6	movq	(%rax),%rcx
00000001000013f9	movl	$0x00000006,%edx
00000001000013fe	movl	$0x00000001,%esi
0000000100001403	leaq	0x00001e54(%rip),%rdi
000000010000140a	callq	0x1000030ea	; symbol stub for: _fwrite
000000010000140f	jmp	0x100001431
0000000100001411	movq	0x00002c28(%rip),%rax
0000000100001418	movq	(%rax),%rcx
000000010000141b	movl	$0x00000006,%edx
0000000100001420	movl	$0x00000001,%esi
0000000100001425	leaq	0x00001e39(%rip),%rdi
000000010000142c	callq	0x1000030ea	; symbol stub for: _fwrite
0000000100001431	cmpl	$0x00,0xf4(%rbp)
0000000100001435	jne	0x100001457
0000000100001437	movq	0xfffffee8(%rbp),%rdx
000000010000143e	movq	0xe0(%rbp),%rax
0000000100001442	movq	%rdx,%rcx
0000000100001445	subq	%rax,%rcx
0000000100001448	movq	%rcx,%rax
000000010000144b	movq	%rax,0xb8(%rbp)
000000010000144f	movq	$0x00000000,0xb0(%rbp)
0000000100001457	cmpl	$0x00,0xf4(%rbp)
000000010000145b	jne	0x10000156c
0000000100001461	leaq	0xfffffef0(%rbp),%rdi
0000000100001468	movl	$0x000000a8,%esi
000000010000146d	callq	0x1000030c0	; symbol stub for: _bzero
0000000100001472	movq	0xd0(%rbp),%rax
0000000100001476	movq	%rax,0xa8(%rbp)
000000010000147a	movq	0xfffffec8(%rbp),%rax
0000000100001481	movq	%rax,%rdx
0000000100001484	shrq	%rdx
0000000100001487	movq	0xd0(%rbp),%rax
000000010000148b	leaq	(%rdx,%rax),%rax
000000010000148f	movq	%rax,0xd0(%rbp)
0000000100001493	movq	0xd0(%rbp),%rax
0000000100001497	subq	$0x04,%rax
000000010000149b	movq	%rax,0xd0(%rbp)
000000010000149f	movl	$0xdbea7dad,0xa0(%rbp)
00000001000014a6	movl	$0x00000dea,0xa4(%rbp)
00000001000014ad	leaq	0xa0(%rbp),%rax
00000001000014b1	movq	%rax,%rdx
00000001000014b4	movq	0xd0(%rbp),%rsi
00000001000014b8	movl	0xf0(%rbp),%edi
00000001000014bb	movl	$0x00000008,%ecx
00000001000014c0	callq	0x100003162	; symbol stub for: _vm_write
00000001000014c5	movl	%eax,0xf4(%rbp)
00000001000014c8	movq	0xb0(%rbp),%rax
00000001000014cc	movq	%rax,0xffffff10(%rbp)
00000001000014d3	movq	0xc0(%rbp),%rax
00000001000014d7	movq	%rax,0xffffff18(%rbp)
00000001000014de	movq	0xfffffed8(%rbp),%rax
00000001000014e5	movq	%rax,0xffffff08(%rbp)
00000001000014ec	movq	0xa8(%rbp),%rax
00000001000014f0	movq	%rax,0xffffff00(%rbp)
00000001000014f7	movq	0xc8(%rbp),%rax
00000001000014fb	movq	%rax,0xffffff70(%rbp)
0000000100001502	movq	0xffffff70(%rbp),%rdx
0000000100001509	movq	0xb8(%rbp),%rax
000000010000150d	leaq	(%rdx,%rax),%rax
0000000100001511	movq	%rax,0xffffff70(%rbp)
0000000100001518	movq	0xd0(%rbp),%rax
000000010000151c	movq	%rax,0xffffff28(%rbp)
0000000100001523	leaq	0xfffffef0(%rbp),%rdx
000000010000152a	movl	0xf0(%rbp),%edi
000000010000152d	leaq	0xec(%rbp),%rax
0000000100001531	movq	%rax,%r8
0000000100001534	movl	$0x0000002a,%ecx
0000000100001539	movl	$0x00000004,%esi
000000010000153e	callq	0x10000314a	; symbol stub for: _thread_create_running
0000000100001543	movl	%eax,0xf4(%rbp)
0000000100001546	cmpl	$0x00,0xf4(%rbp)
000000010000154a	je	0x10000156c
000000010000154c	movq	0x00002aed(%rip),%rax
0000000100001553	movq	(%rax),%rcx
0000000100001556	movl	$0x00000006,%edx
000000010000155b	movl	$0x00000001,%esi
0000000100001560	leaq	0x00001d05(%rip),%rdi
0000000100001567	callq	0x1000030ea	; symbol stub for: _fwrite
000000010000156c	cmpl	$0x00,0xf4(%rbp)
0000000100001570	je	0x1000015c3
0000000100001572	movq	0xc0(%rbp),%rax
0000000100001576	testq	%rax,%rax
0000000100001579	je	0x10000158e
000000010000157b	movq	0xc0(%rbp),%rsi
000000010000157f	movl	0xf0(%rbp),%edi
0000000100001582	movq	0xfffffed8(%rbp),%rdx
0000000100001589	callq	0x100003156	; symbol stub for: _vm_deallocate
000000010000158e	movq	0xc8(%rbp),%rax
0000000100001592	testq	%rax,%rax
0000000100001595	je	0x1000015a7
0000000100001597	movq	0xd8(%rbp),%rdx
000000010000159b	movq	0xc8(%rbp),%rsi
000000010000159f	movl	0xf0(%rbp),%edi
00000001000015a2	callq	0x100003156	; symbol stub for: _vm_deallocate
00000001000015a7	movq	0xd0(%rbp),%rax
00000001000015ab	testq	%rax,%rax
00000001000015ae	je	0x1000015c3
00000001000015b0	movq	0xd0(%rbp),%rsi
00000001000015b4	movl	0xf0(%rbp),%edi
00000001000015b7	movq	0xfffffec8(%rbp),%rdx
00000001000015be	callq	0x100003156	; symbol stub for: _vm_deallocate
00000001000015c3	movl	0xf4(%rbp),%esi
00000001000015c6	leaq	0x00001ca6(%rip),%rdi
00000001000015cd	movl	$0x00000000,%eax
00000001000015d2	callq	0x100003114	; symbol stub for: _printf
00000001000015d7	movl	0xf4(%rbp),%eax
00000001000015da	leave
00000001000015db	ret
00000001000015dc	pushq	%rbp
00000001000015dd	movq	%rsp,%rbp
00000001000015e0	pushq	%rbx
00000001000015e1	subq	$0x00000138,%rsp
00000001000015e8	movq	%rdi,0xfffffee8(%rbp)
00000001000015ef	movq	%rsi,0xfffffee0(%rbp)
00000001000015f6	movq	%rdx,0xfffffed8(%rbp)
00000001000015fd	movq	%rcx,0xfffffed0(%rbp)
0000000100001604	movq	%r8,0xfffffec8(%rbp)
000000010000160b	cmpq	$0x00,0xfffffee8(%rbp)
0000000100001613	sete	%al
0000000100001616	movzbl	%al,%eax
0000000100001619	testq	%rax,%rax
000000010000161c	je	0x10000163d
000000010000161e	leaq	0x00001c78(%rip),%rcx
0000000100001625	movl	$0x00000148,%edx
000000010000162a	leaq	0x00001b4f(%rip),%rsi
0000000100001631	leaq	0x00001c51(%rip),%rdi
0000000100001638	callq	0x10000308a	; symbol stub for: ___assert_rtn
000000010000163d	cmpq	$0x00,0xfffffee0(%rbp)
0000000100001645	sete	%al
0000000100001648	movzbl	%al,%eax
000000010000164b	testq	%rax,%rax
000000010000164e	je	0x10000166f
0000000100001650	leaq	0x00001c4e(%rip),%rcx
0000000100001657	movl	$0x00000149,%edx
000000010000165c	leaq	0x00001b1d(%rip),%rsi
0000000100001663	leaq	0x00001c1f(%rip),%rdi
000000010000166a	callq	0x10000308a	; symbol stub for: ___assert_rtn
000000010000166f	cmpq	$0x00,0xfffffed8(%rbp)
0000000100001677	sete	%al
000000010000167a	movzbl	%al,%eax
000000010000167d	testq	%rax,%rax
0000000100001680	je	0x1000016a1
0000000100001682	leaq	0x00001c22(%rip),%rcx
0000000100001689	movl	$0x0000014a,%edx
000000010000168e	leaq	0x00001aeb(%rip),%rsi
0000000100001695	leaq	0x00001bed(%rip),%rdi
000000010000169c	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000016a1	movq	0xfffffee8(%rbp),%rax
00000001000016a8	movq	%rax,0xd0(%rbp)
00000001000016ac	cmpq	$0x00,0xfffffed0(%rbp)
00000001000016b4	je	0x1000016da
00000001000016b6	cmpq	$0x00,0xfffffec8(%rbp)
00000001000016be	je	0x1000016da
00000001000016c0	movq	0xfffffed0(%rbp),%rax
00000001000016c7	movl	$0x00000000,(%rax)
00000001000016cd	movq	0xfffffec8(%rbp),%rax
00000001000016d4	movl	$0x00000000,(%rax)
00000001000016da	callq	0x1000030ae	; symbol stub for: __dyld_image_count
00000001000016df	movl	%eax,%eax
00000001000016e1	movq	%rax,0xc0(%rbp)
00000001000016e5	movq	$0x00000000,0xc8(%rbp)
00000001000016ed	jmp	0x1000019d9
00000001000016f2	movq	0xc8(%rbp),%rax
00000001000016f6	movl	%eax,%edi
00000001000016f8	callq	0x10000309c	; symbol stub for: __dyld_get_image_header
00000001000016fd	movq	%rax,0xb8(%rbp)
0000000100001701	movq	0xb8(%rbp),%rdi
0000000100001705	leaq	0x00001ba4(%rip),%rdx
000000010000170c	leaq	0x00001ba4(%rip),%rsi
0000000100001713	callq	0x1000030f0	; symbol stub for: _getsectbynamefromheader_64
0000000100001718	movq	%rax,0xb0(%rbp)
000000010000171c	cmpq	$0x00,0xb0(%rbp)
0000000100001721	je	0x1000019d5
0000000100001727	movq	0xb0(%rbp),%rax
000000010000172b	movq	0x20(%rax),%rbx
000000010000172f	movq	0xc8(%rbp),%rax
0000000100001733	movl	%eax,%edi
0000000100001735	callq	0x1000030a8	; symbol stub for: __dyld_get_image_vmaddr_slide
000000010000173a	leaq	(%rbx,%rax),%rax
000000010000173e	movq	%rax,0xa8(%rbp)
0000000100001742	movq	0xb0(%rbp),%rax
0000000100001746	movq	0x28(%rax),%rdx
000000010000174a	movq	0xa8(%rbp),%rax
000000010000174e	leaq	(%rdx,%rax),%rax
0000000100001752	movq	%rax,0xa0(%rbp)
0000000100001756	movq	0xa8(%rbp),%rax
000000010000175a	cmpq	0xd0(%rbp),%rax
000000010000175e	ja	0x1000019d5
0000000100001764	movq	0xa0(%rbp),%rax
0000000100001768	cmpq	0xd0(%rbp),%rax
000000010000176c	jb	0x1000019d5
0000000100001772	movq	0xc8(%rbp),%rax
0000000100001776	movl	%eax,%edi
0000000100001778	callq	0x1000030a2	; symbol stub for: __dyld_get_image_name
000000010000177d	movq	%rax,0x98(%rbp)
0000000100001781	cmpq	$0x00,0x98(%rbp)
0000000100001786	sete	%al
0000000100001789	movzbl	%al,%eax
000000010000178c	testq	%rax,%rax
000000010000178f	je	0x1000017b0
0000000100001791	leaq	0x00001b26(%rip),%rcx
0000000100001798	movl	$0x00000164,%edx
000000010000179d	leaq	0x000019dc(%rip),%rsi
00000001000017a4	leaq	0x00001ade(%rip),%rdi
00000001000017ab	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000017b0	leaq	0xfffffef0(%rbp),%rsi
00000001000017b7	movq	0x98(%rbp),%rdi
00000001000017bb	callq	0x10000312c	; symbol stub for: _stat
00000001000017c0	testl	%eax,%eax
00000001000017c2	je	0x1000017db
00000001000017c4	callq	0x100003090	; symbol stub for: ___error
00000001000017c9	movl	(%rax),%eax
00000001000017cb	movl	%eax,%edx
00000001000017cd	orb	$0xc0,%dh
00000001000017d0	movl	%edx,0xfffffec4(%rbp)
00000001000017d6	jmp	0x1000019f1
00000001000017db	cmpq	$0x00,0xfffffee0(%rbp)
00000001000017e3	je	0x1000017f3
00000001000017e5	movq	0xfffffee0(%rbp),%rdx
00000001000017ec	movq	0xb8(%rbp),%rax
00000001000017f0	movq	%rax,(%rdx)
00000001000017f3	cmpq	$0x00,0xfffffed8(%rbp)
00000001000017fb	je	0x1000019c9
0000000100001801	movq	0xffffff38(%rbp),%rax
0000000100001808	movq	%rax,%rdx
000000010000180b	movq	0xfffffed8(%rbp),%rax
0000000100001812	movq	%rdx,(%rax)
0000000100001815	movq	0x98(%rbp),%rdi
0000000100001819	movl	$0x00000000,%esi
000000010000181e	movl	$0x00000000,%eax
0000000100001823	callq	0x10000310e	; symbol stub for: _open
0000000100001828	movl	%eax,0xec(%rbp)
000000010000182b	movq	0xfffffed8(%rbp),%rax
0000000100001832	movq	(%rax),%rax
0000000100001835	movq	%rax,0x90(%rbp)
0000000100001839	movl	0xec(%rbp),%eax
000000010000183c	movq	0x90(%rbp),%rsi
0000000100001840	movl	$0x00000000,%r9d
0000000100001846	movl	%eax,%r8d
0000000100001849	movl	$0x00000001,%ecx
000000010000184e	movl	$0x00000001,%edx
0000000100001853	movl	$0x00000000,%edi
0000000100001858	callq	0x100003102	; symbol stub for: _mmap
000000010000185d	movq	%rax,0x88(%rbp)
0000000100001861	cmpq	$0xff,0x88(%rbp)
0000000100001866	sete	%al
0000000100001869	movzbl	%al,%eax
000000010000186c	testq	%rax,%rax
000000010000186f	je	0x100001890
0000000100001871	leaq	0x00001a50(%rip),%rcx
0000000100001878	movl	$0x00000175,%edx
000000010000187d	leaq	0x000018fc(%rip),%rsi
0000000100001884	leaq	0x000019fe(%rip),%rdi
000000010000188b	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100001890	movq	0x88(%rbp),%rax
0000000100001894	movq	%rax,0x80(%rbp)
0000000100001898	movq	0x80(%rbp),%rax
000000010000189c	movl	(%rax),%eax
000000010000189e	cmpl	$0xbebafeca,%eax
00000001000018a3	jne	0x1000019b4
00000001000018a9	movq	0x80(%rbp),%rax
00000001000018ad	movl	0x04(%rax),%edi
00000001000018b0	callq	0x100001a01
00000001000018b5	movl	%eax,0xe8(%rbp)
00000001000018b8	callq	0x100003084	; symbol stub for: _NXGetLocalArchInfo
00000001000018bd	movq	%rax,0xffffff78(%rbp)
00000001000018c4	movq	0x88(%rbp),%rax
00000001000018c8	addq	$0x08,%rax
00000001000018cc	movq	%rax,0xffffff70(%rbp)
00000001000018d3	movq	$0x00000000,0xffffff68(%rbp)
00000001000018de	movl	$0x00000000,0xe4(%rbp)
00000001000018e5	movl	$0x00000000,0xe4(%rbp)
00000001000018ec	jmp	0x100001983
00000001000018f1	movl	0xe4(%rbp),%eax
00000001000018f4	movslq	%eax,%rdx
00000001000018f7	movq	%rdx,%rax
00000001000018fa	shlq	$0x02,%rax
00000001000018fe	addq	%rdx,%rax
0000000100001901	shlq	$0x02,%rax
0000000100001905	addq	0xffffff70(%rbp),%rax
000000010000190c	movl	(%rax),%eax
000000010000190e	movl	%eax,%edi
0000000100001910	callq	0x100001a01
0000000100001915	movl	%eax,0xe0(%rbp)
0000000100001918	movl	0xe4(%rbp),%eax
000000010000191b	movslq	%eax,%rdx
000000010000191e	movq	%rdx,%rax
0000000100001921	shlq	$0x02,%rax
0000000100001925	addq	%rdx,%rax
0000000100001928	shlq	$0x02,%rax
000000010000192c	addq	0xffffff70(%rbp),%rax
0000000100001933	movl	0x04(%rax),%eax
0000000100001936	movl	%eax,%edi
0000000100001938	callq	0x100001a01
000000010000193d	movl	%eax,0xdc(%rbp)
0000000100001940	movq	0xffffff78(%rbp),%rax
0000000100001947	movl	0x08(%rax),%eax
000000010000194a	cmpl	0xe0(%rbp),%eax
000000010000194d	jne	0x100001980
000000010000194f	movl	0xe4(%rbp),%eax
0000000100001952	movslq	%eax,%rdx
0000000100001955	movq	%rdx,%rax
0000000100001958	shlq	$0x02,%rax
000000010000195c	addq	%rdx,%rax
000000010000195f	shlq	$0x02,%rax
0000000100001963	addq	0xffffff70(%rbp),%rax
000000010000196a	movq	%rax,0xffffff68(%rbp)
0000000100001971	movq	0xffffff78(%rbp),%rax
0000000100001978	movl	0x0c(%rax),%eax
000000010000197b	cmpl	0xdc(%rbp),%eax
000000010000197e	je	0x10000198f
0000000100001980	incl	0xe4(%rbp)
0000000100001983	movl	0xe4(%rbp),%eax
0000000100001986	cmpl	0xe8(%rbp),%eax
0000000100001989	jb	0x2000018f1
000000010000198f	cmpq	$0x00,0xffffff68(%rbp)
0000000100001997	je	0x1000019b4
0000000100001999	movq	0xffffff68(%rbp),%rax
00000001000019a0	movl	0x0c(%rax),%edi
00000001000019a3	callq	0x100001a01
00000001000019a8	movl	%eax,%edx
00000001000019aa	movq	0xfffffed8(%rbp),%rax
00000001000019b1	movq	%rdx,(%rax)
00000001000019b4	movq	0x90(%rbp),%rsi
00000001000019b8	movq	0x88(%rbp),%rdi
00000001000019bc	callq	0x100003108	; symbol stub for: _munmap
00000001000019c1	movl	0xec(%rbp),%edi
00000001000019c4	callq	0x1000030c6	; symbol stub for: _close
00000001000019c9	movl	$0x00000000,0xfffffec4(%rbp)
00000001000019d3	jmp	0x1000019f1
00000001000019d5	incq	0xc8(%rbp)
00000001000019d9	movq	0xc8(%rbp),%rax
00000001000019dd	cmpq	0xc0(%rbp),%rax
00000001000019e1	jb	0x2000016f2
00000001000019e7	movl	$0xf8000001,0xfffffec4(%rbp)
00000001000019f1	movl	0xfffffec4(%rbp),%eax
00000001000019f7	addq	$0x00000138,%rsp
00000001000019fe	popq	%rbx
00000001000019ff	leave
0000000100001a00	ret
0000000100001a01	pushq	%rbp
0000000100001a02	movq	%rsp,%rbp
0000000100001a05	movl	%edi,0xfc(%rbp)
0000000100001a08	movl	0xfc(%rbp),%eax
0000000100001a0b	bswap	%eax
0000000100001a0d	movl	%eax,0xfc(%rbp)
0000000100001a10	movl	0xfc(%rbp),%eax
0000000100001a13	leave
0000000100001a14	ret
0000000100001a15	pushq	%rbp
0000000100001a16	movq	%rsp,%rbp
0000000100001a19	movq	%rdi,0xe8(%rbp)
0000000100001a1d	movq	%rsi,0xe0(%rbp)
0000000100001a21	movq	0xe8(%rbp),%rax
0000000100001a25	movq	%rax,0xf8(%rbp)
0000000100001a29	movq	0xe0(%rbp),%rax
0000000100001a2d	movq	%rax,0xf0(%rbp)
0000000100001a31	movq	0xf8(%rbp),%rax
0000000100001a35	movzbl	(%rax),%eax
0000000100001a38	testb	%al,%al
0000000100001a3a	jne	0x100001a59
0000000100001a3c	movq	0xf0(%rbp),%rax
0000000100001a40	movzbl	(%rax),%eax
0000000100001a43	testb	%al,%al
0000000100001a45	jne	0x100001a50
0000000100001a47	movl	$0x00000000,0xdc(%rbp)
0000000100001a4e	jmp	0x100001aad
0000000100001a50	movl	$0x00000001,0xdc(%rbp)
0000000100001a57	jmp	0x100001aad
0000000100001a59	movq	0xf0(%rbp),%rax
0000000100001a5d	movzbl	(%rax),%eax
0000000100001a60	testb	%al,%al
0000000100001a62	jne	0x100001a6d
0000000100001a64	movl	$0xffffffff,0xdc(%rbp)
0000000100001a6b	jmp	0x100001aad
0000000100001a6d	movq	0xf8(%rbp),%rax
0000000100001a71	movzbl	(%rax),%edx
0000000100001a74	movq	0xf0(%rbp),%rax
0000000100001a78	movzbl	(%rax),%eax
0000000100001a7b	cmpb	%al,%dl
0000000100001a7d	jle	0x100001a88
0000000100001a7f	movl	$0xffffffff,0xdc(%rbp)
0000000100001a86	jmp	0x100001aad
0000000100001a88	movq	0xf0(%rbp),%rax
0000000100001a8c	movzbl	(%rax),%edx
0000000100001a8f	movq	0xf8(%rbp),%rax
0000000100001a93	movzbl	(%rax),%eax
0000000100001a96	cmpb	%al,%dl
0000000100001a98	jle	0x100001aa3
0000000100001a9a	movl	$0x00000001,0xdc(%rbp)
0000000100001aa1	jmp	0x100001aad
0000000100001aa3	incq	0xf8(%rbp)
0000000100001aa7	incq	0xf0(%rbp)
0000000100001aab	jmp	0x100001a31
0000000100001aad	movl	0xdc(%rbp),%eax
0000000100001ab0	leave
0000000100001ab1	ret
0000000100001ab2	pushq	%rbp
0000000100001ab3	movq	%rsp,%rbp
0000000100001ab6	pushq	%r14
0000000100001ab8	pushq	%r13
0000000100001aba	pushq	%r12
0000000100001abc	pushq	%rbx
0000000100001abd	subq	$0x00000240,%rsp
0000000100001ac4	movq	%rdi,0xfffffdb8(%rbp)
0000000100001acb	movq	%rsi,0xfffffdb0(%rbp)
0000000100001ad2	movq	%rdx,0xfffffda8(%rbp)
0000000100001ad9	movq	%rcx,0xfffffda0(%rbp)
0000000100001ae0	movq	0x00002551(%rip),%rax
0000000100001ae7	movq	(%rax),%rdx
0000000100001aea	movq	%rdx,0xd8(%rbp)
0000000100001aee	xorl	%edx,%edx
0000000100001af0	movq	0xfffffdb0(%rbp),%rdx
0000000100001af7	movq	0xfffffdb8(%rbp),%rax
0000000100001afe	movq	%rax,(%rdx)
0000000100001b01	movl	$0x5fc01008,0xffffff70(%rbp)
0000000100001b0b	movl	$0x00007fff,0xffffff74(%rbp)
0000000100001b15	movq	$0x00000000,0xffffff68(%rbp)
0000000100001b20	movq	$0x00000000,0xffffff60(%rbp)
0000000100001b2b	movq	$0x00000000,0xffffff58(%rbp)
0000000100001b36	movq	$0x00000000,0xffffff50(%rbp)
0000000100001b41	movq	$0x00000000,0xffffff48(%rbp)
0000000100001b4c	movq	$0x00000000,0xffffff40(%rbp)
0000000100001b57	leaq	0xffffff68(%rbp),%rsi
0000000100001b5e	movq	0xffffff70(%rbp),%rax
0000000100001b65	leaq	0x00001774(%rip),%rdi
0000000100001b6c	call	*%rax
0000000100001b6e	movl	%eax,0x8c(%rbp)
0000000100001b71	leaq	0xffffff60(%rbp),%rsi
0000000100001b78	movq	0xffffff70(%rbp),%rax
0000000100001b7f	leaq	0x00001772(%rip),%rdi
0000000100001b86	call	*%rax
0000000100001b88	movl	%eax,0x8c(%rbp)
0000000100001b8b	leaq	0xffffff58(%rbp),%rsi
0000000100001b92	movq	0xffffff70(%rbp),%rax
0000000100001b99	leaq	0x0000176e(%rip),%rdi
0000000100001ba0	call	*%rax
0000000100001ba2	movl	%eax,0x8c(%rbp)
0000000100001ba5	leaq	0xffffff50(%rbp),%rsi
0000000100001bac	movq	0xffffff70(%rbp),%rax
0000000100001bb3	leaq	0x00001767(%rip),%rdi
0000000100001bba	call	*%rax
0000000100001bbc	movl	%eax,0x8c(%rbp)
0000000100001bbf	leaq	0xffffff48(%rbp),%rsi
0000000100001bc6	movq	0xffffff70(%rbp),%rax
0000000100001bcd	leaq	0x0000175a(%rip),%rdi
0000000100001bd4	call	*%rax
0000000100001bd6	movl	%eax,0x8c(%rbp)
0000000100001bd9	leaq	0xffffff40(%rbp),%rsi
0000000100001be0	movq	0xffffff70(%rbp),%rax
0000000100001be7	leaq	0x0000175d(%rip),%rdi
0000000100001bee	call	*%rax
0000000100001bf0	movl	%eax,0x8c(%rbp)
0000000100001bf3	movq	0xfffffdb0(%rbp),%rax
0000000100001bfa	movq	(%rax),%rax
0000000100001bfd	movq	%rax,%rdx
0000000100001c00	leaq	0x000026a1(%rip),%rax
0000000100001c07	leaq	(%rdx,%rax),%rax
0000000100001c0b	movq	%rax,%rcx
0000000100001c0e	movq	0xfffffdb0(%rbp),%rax
0000000100001c15	movq	(%rax),%rax
0000000100001c18	movq	%rax,%rdx
0000000100001c1b	leaq	0x0000265e(%rip),%rax
0000000100001c22	leaq	(%rdx,%rax),%rax
0000000100001c26	movq	%rax,%rsi
0000000100001c29	movq	0xfffffdb0(%rbp),%rax
0000000100001c30	movq	(%rax),%rax
0000000100001c33	movq	%rax,%rdx
0000000100001c36	leaq	0x0000263b(%rip),%rax
0000000100001c3d	leaq	(%rdx,%rax),%rax
0000000100001c41	movq	%rax,%rdi
0000000100001c44	movq	0xfffffdb0(%rbp),%rax
0000000100001c4b	movq	(%rax),%rax
0000000100001c4e	movq	%rax,%rdx
0000000100001c51	leaq	0x00002630(%rip),%rax
0000000100001c58	leaq	(%rdx,%rax),%rax
0000000100001c5c	movq	%rax,%r8
0000000100001c5f	movq	0xfffffdb0(%rbp),%rax
0000000100001c66	movq	(%rax),%rax
0000000100001c69	movq	%rax,%rdx
0000000100001c6c	leaq	0x0000261d(%rip),%rax
0000000100001c73	leaq	(%rdx,%rax),%rax
0000000100001c77	movq	%rax,%r9
0000000100001c7a	movq	0xfffffdb0(%rbp),%rax
0000000100001c81	movq	(%rax),%rax
0000000100001c84	movq	%rax,%rdx
0000000100001c87	leaq	0x00002622(%rip),%rax
0000000100001c8e	leaq	(%rdx,%rax),%rax
0000000100001c92	movq	%rax,%r10
0000000100001c95	movq	0xfffffdb0(%rbp),%rax
0000000100001c9c	movq	(%rax),%rax
0000000100001c9f	movq	%rax,%rdx
0000000100001ca2	leaq	0x000025ef(%rip),%rax
0000000100001ca9	leaq	(%rdx,%rax),%rax
0000000100001cad	movq	%rax,%r11
0000000100001cb0	movq	0xfffffdb0(%rbp),%rax
0000000100001cb7	movq	(%rax),%rax
0000000100001cba	movq	%rax,%rdx
0000000100001cbd	leaq	0x000025dc(%rip),%rax
0000000100001cc4	leaq	(%rdx,%rax),%rax
0000000100001cc8	movq	%rax,%rbx
0000000100001ccb	movq	0xfffffdb0(%rbp),%rax
0000000100001cd2	movq	(%rax),%rax
0000000100001cd5	movq	%rax,%rdx
0000000100001cd8	leaq	0x00002591(%rip),%rax
0000000100001cdf	leaq	(%rdx,%rax),%rax
0000000100001ce3	movq	%rax,%r12
0000000100001ce6	movq	0xfffffdb0(%rbp),%rax
0000000100001ced	movq	(%rax),%rax
0000000100001cf0	movq	%rax,%rdx
0000000100001cf3	leaq	0x000025be(%rip),%rax
0000000100001cfa	leaq	(%rdx,%rax),%rax
0000000100001cfe	movq	%rax,%r13
0000000100001d01	movq	0xfffffdb0(%rbp),%rax
0000000100001d08	movq	(%rax),%rax
0000000100001d0b	movq	%rax,%rdx
0000000100001d0e	leaq	0x00002553(%rip),%rax
0000000100001d15	leaq	(%rdx,%rax),%rax
0000000100001d19	movq	%rax,%r14
0000000100001d1c	movq	0xfffffdb0(%rbp),%rax
0000000100001d23	movq	(%rax),%rax
0000000100001d26	movq	%rax,%rdx
0000000100001d29	leaq	0x00002530(%rip),%rax
0000000100001d30	leaq	(%rdx,%rax),%rax
0000000100001d34	movq	%rcx,0xfffffe30(%rbp)
0000000100001d3b	movq	%rsi,0xfffffe38(%rbp)
0000000100001d42	movq	%rdi,0xfffffe40(%rbp)
0000000100001d49	movq	%r8,0xfffffe48(%rbp)
0000000100001d50	movq	%r9,0xfffffe50(%rbp)
0000000100001d57	movq	%r10,0xfffffe58(%rbp)
0000000100001d5e	movq	%r11,0xfffffe60(%rbp)
0000000100001d65	movq	%rbx,0xfffffe68(%rbp)
0000000100001d6c	movq	%r12,0xfffffe70(%rbp)
0000000100001d73	movq	%r13,0xfffffe78(%rbp)
0000000100001d7a	movq	%r14,0xfffffe80(%rbp)
0000000100001d81	movq	%rax,0xfffffe88(%rbp)
0000000100001d88	movq	$0x00000000,0xfffffe90(%rbp)
0000000100001d93	leaq	0x000015ca(%rip),%rax
0000000100001d9a	movq	%rax,0xfffffdc0(%rbp)
0000000100001da1	leaq	0x000015d0(%rip),%rax
0000000100001da8	movq	%rax,0xfffffdc8(%rbp)
0000000100001daf	leaq	0x000015d5(%rip),%rax
0000000100001db6	movq	%rax,0xfffffdd0(%rbp)
0000000100001dbd	leaq	0x000015e4(%rip),%rax
0000000100001dc4	movq	%rax,0xfffffdd8(%rbp)
0000000100001dcb	leaq	0x000015f3(%rip),%rax
0000000100001dd2	movq	%rax,0xfffffde0(%rbp)
0000000100001dd9	leaq	0x00001603(%rip),%rax
0000000100001de0	movq	%rax,0xfffffde8(%rbp)
0000000100001de7	leaq	0x0000160d(%rip),%rax
0000000100001dee	movq	%rax,0xfffffdf0(%rbp)
0000000100001df5	leaq	0x0000161b(%rip),%rax
0000000100001dfc	movq	%rax,0xfffffdf8(%rbp)
0000000100001e03	leaq	0x0000161d(%rip),%rax
0000000100001e0a	movq	%rax,0xfffffe00(%rbp)
0000000100001e11	leaq	0x00001625(%rip),%rax
0000000100001e18	movq	%rax,0xfffffe08(%rbp)
0000000100001e1f	leaq	0x00001627(%rip),%rax
0000000100001e26	movq	%rax,0xfffffe10(%rbp)
0000000100001e2d	leaq	0x0000162b(%rip),%rax
0000000100001e34	movq	%rax,0xfffffe18(%rbp)
0000000100001e3b	movq	$0x00000000,0xfffffe20(%rbp)
0000000100001e46	movq	0xfffffdb0(%rbp),%rax
0000000100001e4d	movq	(%rax),%rax
0000000100001e50	movq	%rax,%rdx
0000000100001e53	leaq	0x000023f6(%rip),%rax
0000000100001e5a	leaq	(%rdx,%rax),%rax
0000000100001e5e	movq	%rax,%rsi
0000000100001e61	movq	0xfffffdb0(%rbp),%rax
0000000100001e68	movq	(%rax),%rax
0000000100001e6b	movq	%rax,%rdx
0000000100001e6e	leaq	0x000023e3(%rip),%rax
0000000100001e75	leaq	(%rdx,%rax),%rax
0000000100001e79	movq	%rax,%rcx
0000000100001e7c	movq	0xfffffdb0(%rbp),%rax
0000000100001e83	movq	(%rax),%rax
0000000100001e86	movq	%rax,%rdx
0000000100001e89	leaq	0x000023b8(%rip),%rax
0000000100001e90	leaq	(%rdx,%rax),%rax
0000000100001e94	movq	%rsi,0xfffffec0(%rbp)
0000000100001e9b	movq	%rcx,0xfffffec8(%rbp)
0000000100001ea2	movq	%rax,0xfffffed0(%rbp)
0000000100001ea9	movq	$0x00000000,0xfffffed8(%rbp)
0000000100001eb4	leaq	0x000015ac(%rip),%rax
0000000100001ebb	movq	%rax,0xfffffea0(%rbp)
0000000100001ec2	leaq	0x000015b5(%rip),%rax
0000000100001ec9	movq	%rax,0xfffffea8(%rbp)
0000000100001ed0	leaq	0x000015bd(%rip),%rax
0000000100001ed7	movq	%rax,0xfffffeb0(%rbp)
0000000100001ede	movq	$0x00000000,0xfffffeb8(%rbp)
0000000100001ee9	movq	0xffffff58(%rbp),%rax
0000000100001ef0	call	*%rax
0000000100001ef2	movq	%rax,0xffffff30(%rbp)
0000000100001ef9	movl	$0x00000000,0x88(%rbp)
0000000100001f00	movl	$0x00000000,0x84(%rbp)
0000000100001f07	movq	$0x00000000,0xffffff38(%rbp)
0000000100001f12	jmp	0x1000020ba
0000000100001f17	movq	0xffffff68(%rbp),%rax
0000000100001f1e	movq	0xffffff38(%rbp),%rdi
0000000100001f25	call	*%rax
0000000100001f27	movq	%rax,0xffffff28(%rbp)
0000000100001f2e	cmpq	$0x00,0xffffff28(%rbp)
0000000100001f36	je	0x1000020b3
0000000100001f3c	movq	0xffffff60(%rbp),%rax
0000000100001f43	movq	0xffffff38(%rbp),%rdi
0000000100001f4a	call	*%rax
0000000100001f4c	movq	%rax,0xffffff20(%rbp)
0000000100001f53	cmpq	$0x00,0xffffff20(%rbp)
0000000100001f5b	je	0x1000020b3
0000000100001f61	movq	$0x00000000,0xffffff18(%rbp)
0000000100001f6c	movq	$0x00000000,0xffffff10(%rbp)
0000000100001f77	movq	0xfffffdb0(%rbp),%rax
0000000100001f7e	movq	(%rax),%rax
0000000100001f81	movq	%rax,%rdx
0000000100001f84	leaq	0xfffffa8a(%rip),%rax
0000000100001f8b	leaq	(%rdx,%rax),%rax
0000000100001f8f	movq	0xffffff20(%rbp),%rdi
0000000100001f96	leaq	0x00001509(%rip),%rsi
0000000100001f9d	call	*%rax
0000000100001f9f	testl	%eax,%eax
0000000100001fa1	jne	0x100001fc8
0000000100001fa3	leaq	0xfffffe30(%rbp),%rax
0000000100001faa	movq	%rax,0xffffff10(%rbp)
0000000100001fb1	leaq	0xfffffdc0(%rbp),%rax
0000000100001fb8	movq	%rax,0xffffff18(%rbp)
0000000100001fbf	movl	$0x00000001,0x88(%rbp)
0000000100001fc6	jmp	0x100002017
0000000100001fc8	movq	0xfffffdb0(%rbp),%rax
0000000100001fcf	movq	(%rax),%rax
0000000100001fd2	movq	%rax,%rdx
0000000100001fd5	leaq	0xfffffa39(%rip),%rax
0000000100001fdc	leaq	(%rdx,%rax),%rax
0000000100001fe0	movq	0xffffff20(%rbp),%rdi
0000000100001fe7	leaq	0x000014da(%rip),%rsi
0000000100001fee	call	*%rax
0000000100001ff0	testl	%eax,%eax
0000000100001ff2	jne	0x100002017
0000000100001ff4	leaq	0xfffffec0(%rbp),%rax
0000000100001ffb	movq	%rax,0xffffff10(%rbp)
0000000100002002	leaq	0xfffffea0(%rbp),%rax
0000000100002009	movq	%rax,0xffffff18(%rbp)
0000000100002010	movl	$0x00000001,0x84(%rbp)
0000000100002017	cmpq	$0x00,0xffffff10(%rbp)
000000010000201f	je	0x1000020b3
0000000100002025	movl	$0x00000000,0x80(%rbp)
000000010000202c	movl	$0x00000000,0x80(%rbp)
0000000100002033	movl	0x80(%rbp),%eax
0000000100002036	cdqe
0000000100002038	shlq	$0x03,%rax
000000010000203c	addq	0xffffff10(%rbp),%rax
0000000100002043	movq	(%rax),%rax
0000000100002046	testq	%rax,%rax
0000000100002049	je	0x1000020b3
000000010000204b	movq	0xffffff48(%rbp),%rcx
0000000100002052	movl	0x80(%rbp),%eax
0000000100002055	cdqe
0000000100002057	shlq	$0x03,%rax
000000010000205b	addq	0xffffff18(%rbp),%rax
0000000100002062	movq	(%rax),%rsi
0000000100002065	movq	0xffffff28(%rbp),%rdi
000000010000206c	movl	$0x00000004,%edx
0000000100002071	call	*%rcx
0000000100002073	movq	%rax,0xffffff08(%rbp)
000000010000207a	movq	0xffffff40(%rbp),%rax
0000000100002081	movq	0xffffff08(%rbp),%rdi
0000000100002088	call	*%rax
000000010000208a	movq	%rax,0xffffff00(%rbp)
0000000100002091	movl	0x80(%rbp),%eax
0000000100002094	cdqe
0000000100002096	shlq	$0x03,%rax
000000010000209a	addq	0xffffff10(%rbp),%rax
00000001000020a1	movq	(%rax),%rdx
00000001000020a4	movq	0xffffff00(%rbp),%rax
00000001000020ab	movq	%rax,(%rdx)
00000001000020ae	incl	0x80(%rbp)
00000001000020b1	jmp	0x100002033
00000001000020b3	incq	0xffffff38(%rbp)
00000001000020ba	movq	0xffffff38(%rbp),%rax
00000001000020c1	cmpq	0xffffff30(%rbp),%rax
00000001000020c8	jb	0x200001f17
00000001000020ce	movq	0xfffffdb0(%rbp),%rax
00000001000020d5	movq	(%rax),%rax
00000001000020d8	movq	%rax,%rdx
00000001000020db	leaq	0x000021c6(%rip),%rax
00000001000020e2	leaq	(%rdx,%rax),%rax
00000001000020e6	movq	(%rax),%rax
00000001000020e9	movq	0xfffffda0(%rbp),%rdi
00000001000020f0	call	*%rax
00000001000020f2	movq	0xfffffdb0(%rbp),%rax
00000001000020f9	movq	(%rax),%rax
00000001000020fc	movq	%rax,%rdx
00000001000020ff	leaq	0x0000217a(%rip),%rax
0000000100002106	leaq	(%rdx,%rax),%rax
000000010000210a	movq	(%rax),%rax
000000010000210d	leaq	0x90(%rbp),%rdi
0000000100002111	call	*%rax
0000000100002113	movq	0xfffffdb0(%rbp),%rax
000000010000211a	movq	(%rax),%rax
000000010000211d	movq	%rax,%rdx
0000000100002120	leaq	0x00002151(%rip),%rax
0000000100002127	leaq	(%rdx,%rax),%rax
000000010000212b	movq	(%rax),%rax
000000010000212e	leaq	0xffffff7c(%rbp),%rsi
0000000100002135	leaq	0x90(%rbp),%rdi
0000000100002139	call	*%rax
000000010000213b	movq	0xfffffdb0(%rbp),%rax
0000000100002142	movq	(%rax),%rax
0000000100002145	movq	%rax,%rdx
0000000100002148	leaq	0x00002139(%rip),%rax
000000010000214f	leaq	(%rdx,%rax),%rax
0000000100002153	movq	(%rax),%rax
0000000100002156	leaq	0x90(%rbp),%rdi
000000010000215a	movl	$0x00000002,%esi
000000010000215f	call	*%rax
0000000100002161	movq	0xfffffdb0(%rbp),%rax
0000000100002168	movq	(%rax),%rax
000000010000216b	movq	%rax,%rdx
000000010000216e	leaq	0x0000211b(%rip),%rax
0000000100002175	leaq	(%rdx,%rax),%rax
0000000100002179	movq	(%rax),%rax
000000010000217c	leaq	0x90(%rbp),%rdi
0000000100002180	movl	$0x00000002,%esi
0000000100002185	call	*%rax
0000000100002187	movq	0xfffffdb0(%rbp),%rax
000000010000218e	movq	(%rax),%rax
0000000100002191	movq	%rax,%rdx
0000000100002194	leaq	0x00002115(%rip),%rax
000000010000219b	leaq	(%rdx,%rax),%rax
000000010000219f	movq	(%rax),%rax
00000001000021a2	movl	0xffffff7c(%rbp),%edi
00000001000021a8	call	*%rax
00000001000021aa	movl	%eax,0xfffffef0(%rbp)
00000001000021b0	movq	0xfffffdb0(%rbp),%rax
00000001000021b7	movq	(%rax),%rax
00000001000021ba	movq	%rax,%rdx
00000001000021bd	leaq	0x000020d4(%rip),%rax
00000001000021c4	leaq	(%rdx,%rax),%rax
00000001000021c8	movq	(%rax),%rax
00000001000021cb	leaq	0xfffffef0(%rbp),%rsi
00000001000021d2	leaq	0x90(%rbp),%rdi
00000001000021d6	call	*%rax
00000001000021d8	movq	0xfffffdb0(%rbp),%rax
00000001000021df	movq	(%rax),%rax
00000001000021e2	movq	%rax,%rdx
00000001000021e5	leaq	0x000020b4(%rip),%rax
00000001000021ec	leaq	(%rdx,%rax),%rax
00000001000021f0	movq	(%rax),%r8
00000001000021f3	movq	0xfffffdb0(%rbp),%rax
00000001000021fa	movq	(%rax),%rax
00000001000021fd	movq	%rax,%rdx
0000000100002200	leaq	0x0000009e(%rip),%rax
0000000100002207	leaq	(%rdx,%rax),%rax
000000010000220b	movq	%rax,%rdx
000000010000220e	movq	0xfffffdb0(%rbp),%rcx
0000000100002215	leaq	0x90(%rbp),%rsi
0000000100002219	leaq	0xfffffee8(%rbp),%rdi
0000000100002220	call	*%r8
0000000100002223	movq	0xfffffdb0(%rbp),%rax
000000010000222a	movq	(%rax),%rax
000000010000222d	movq	%rax,%rdx
0000000100002230	leaq	0x00002039(%rip),%rax
0000000100002237	leaq	(%rdx,%rax),%rax
000000010000223b	movq	(%rax),%rax
000000010000223e	leaq	0x90(%rbp),%rdi
0000000100002242	call	*%rax
0000000100002244	movq	0xfffffdb0(%rbp),%rax
000000010000224b	movq	(%rax),%rax
000000010000224e	movq	%rax,%rdx
0000000100002251	leaq	0x00002060(%rip),%rax
0000000100002258	leaq	(%rdx,%rax),%rax
000000010000225c	movq	(%rax),%rbx
000000010000225f	movq	0xfffffdb0(%rbp),%rax
0000000100002266	movq	(%rax),%rax
0000000100002269	movq	%rax,%rdx
000000010000226c	leaq	0x00001ff5(%rip),%rax
0000000100002273	leaq	(%rdx,%rax),%rax
0000000100002277	movq	(%rax),%rax
000000010000227a	call	*%rax
000000010000227c	movl	%eax,%edi
000000010000227e	call	*%rbx
0000000100002280	movq	0x00001db1(%rip),%rax
0000000100002287	movq	0xd8(%rbp),%rdx
000000010000228b	xorq	(%rax),%rdx
000000010000228e	je	0x100002295
0000000100002290	callq	0x100003096	; symbol stub for: ___stack_chk_fail
0000000100002295	addq	$0x00000240,%rsp
000000010000229c	popq	%rbx
000000010000229d	popq	%r12
000000010000229f	popq	%r13
00000001000022a1	popq	%r14
00000001000022a3	leave
00000001000022a4	ret
00000001000022a5	pushq	%rbp
00000001000022a6	movq	%rsp,%rbp
00000001000022a9	pushq	%rbx
00000001000022aa	subq	$0x28,%rsp
00000001000022ae	movq	%rdi,0xd8(%rbp)
00000001000022b2	movq	0xd8(%rbp),%rax
00000001000022b6	movq	(%rax),%rax
00000001000022b9	movq	%rax,%rdx
00000001000022bc	leaq	0x000000ae(%rip),%rax
00000001000022c3	leaq	(%rdx,%rax),%rax
00000001000022c7	movq	%rax,0xe8(%rbp)
00000001000022cb	movq	0xd8(%rbp),%rax
00000001000022cf	movq	(%rax),%rax
00000001000022d2	movq	%rax,%rdx
00000001000022d5	leaq	0x00001f7c(%rip),%rax
00000001000022dc	leaq	(%rdx,%rax),%rax
00000001000022e0	movq	(%rax),%rax
00000001000022e3	testq	%rax,%rax
00000001000022e6	jne	0x1000022f2
00000001000022e8	movq	0xe8(%rbp),%rax
00000001000022ec	movq	%rax,0xe0(%rbp)
00000001000022f0	jmp	0x100002314
00000001000022f2	movq	0xd8(%rbp),%rax
00000001000022f6	movq	(%rax),%rax
00000001000022f9	movq	%rax,%rdx
00000001000022fc	leaq	0x00001f55(%rip),%rax
0000000100002303	leaq	(%rdx,%rax),%rax
0000000100002307	movq	(%rax),%rax
000000010000230a	movq	0xe8(%rbp),%rdi
000000010000230e	call	*%rax
0000000100002310	movq	%rax,0xe0(%rbp)
0000000100002314	movq	0xd8(%rbp),%rax
0000000100002318	movq	(%rax),%rax
000000010000231b	movq	%rax,%rdx
000000010000231e	leaq	0x00001f2b(%rip),%rax
0000000100002325	leaq	(%rdx,%rax),%rax
0000000100002329	movq	(%rax),%rbx
000000010000232c	movq	0xd8(%rbp),%rax
0000000100002330	movq	(%rax),%rax
0000000100002333	movq	%rax,%rdx
0000000100002336	leaq	0x00001f0b(%rip),%rax
000000010000233d	leaq	(%rdx,%rax),%rax
0000000100002341	movq	(%rax),%rdx
0000000100002344	movl	$0x00000000,%eax
0000000100002349	call	*%rdx
000000010000234b	movq	%rax,%rdi
000000010000234e	movq	0xd8(%rbp),%rdx
0000000100002352	movq	0xe0(%rbp),%rsi
0000000100002356	movl	$0x00000000,%ecx
000000010000235b	xorpd	%xmm1,%xmm1
000000010000235f	xorpd	%xmm0,%xmm0
0000000100002363	call	*%rbx
0000000100002365	movl	$0x00000000,%eax
000000010000236a	addq	$0x28,%rsp
000000010000236e	popq	%rbx
000000010000236f	leave
0000000100002370	ret
0000000100002371	pushq	%rbp
0000000100002372	movq	%rsp,%rbp
0000000100002375	subq	$0x10,%rsp
0000000100002379	movq	%rdi,0xf8(%rbp)
000000010000237d	movq	%rsi,0xf0(%rbp)
0000000100002381	cmpq	$0x00,0xf8(%rbp)
0000000100002386	sete	%al
0000000100002389	movzbl	%al,%eax
000000010000238c	testq	%rax,%rax
000000010000238f	je	0x1000023b0
0000000100002391	leaq	0x000011af(%rip),%rcx
0000000100002398	movl	$0x0000011c,%edx
000000010000239d	leaq	0x000011ac(%rip),%rsi
00000001000023a4	leaq	0x00001188(%rip),%rdi
00000001000023ab	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000023b0	cmpq	$0x00,0xf0(%rbp)
00000001000023b5	sete	%al
00000001000023b8	movzbl	%al,%eax
00000001000023bb	testq	%rax,%rax
00000001000023be	je	0x1000023df
00000001000023c0	leaq	0x000011bd(%rip),%rcx
00000001000023c7	movl	$0x0000011d,%edx
00000001000023cc	leaq	0x0000117d(%rip),%rsi
00000001000023d3	leaq	0x00001159(%rip),%rdi
00000001000023da	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000023df	movq	0xf0(%rbp),%rax
00000001000023e3	movq	(%rax),%rax
00000001000023e6	movq	%rax,%rdx
00000001000023e9	leaq	0x00001e70(%rip),%rax
00000001000023f0	leaq	(%rdx,%rax),%rax
00000001000023f4	movq	(%rax),%rax
00000001000023f7	movq	0xf0(%rbp),%rdi
00000001000023fb	addq	$0x08,%rdi
00000001000023ff	movl	$0x00000002,%esi
0000000100002404	call	*%rax
0000000100002406	leave
0000000100002407	ret
0000000100002408	pushq	%rbp
0000000100002409	movq	%rsp,%rbp
000000010000240c	subq	$0x00000440,%rsp
0000000100002413	movq	%rdi,0xfffffbc8(%rbp)
000000010000241a	movq	0x00001c17(%rip),%rax
0000000100002421	movq	(%rax),%rdx
0000000100002424	movq	%rdx,0xf8(%rbp)
0000000100002428	xorl	%edx,%edx
000000010000242a	leaq	0x00001173(%rip),%rsi
0000000100002431	leaq	0x0000134e(%rip),%rdi
0000000100002438	movl	$0x00000000,%eax
000000010000243d	callq	0x100003114	; symbol stub for: _printf
0000000100002442	cmpq	$0x00,0xfffffbc8(%rbp)
000000010000244a	sete	%al
000000010000244d	movzbl	%al,%eax
0000000100002450	testq	%rax,%rax
0000000100002453	je	0x100002474
0000000100002455	leaq	0x00001154(%rip),%rcx
000000010000245c	movl	$0x00000014,%edx
0000000100002461	leaq	0x00001170(%rip),%rsi
0000000100002468	leaq	0x00001121(%rip),%rdi
000000010000246f	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100002474	movq	0xfffffbc8(%rbp),%rax
000000010000247b	movzbl	(%rax),%eax
000000010000247e	testb	%al,%al
0000000100002480	sete	%al
0000000100002483	movzbl	%al,%eax
0000000100002486	testq	%rax,%rax
0000000100002489	je	0x1000024aa
000000010000248b	leaq	0x0000116e(%rip),%rcx
0000000100002492	movl	$0x00000015,%edx
0000000100002497	leaq	0x0000113a(%rip),%rsi
000000010000249e	leaq	0x000010eb(%rip),%rdi
00000001000024a5	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000024aa	movl	$0x00000000,0xfffffbec(%rbp)
00000001000024b4	movl	0xfffffbec(%rbp),%esi
00000001000024ba	leaq	0x0000116f(%rip),%rdi
00000001000024c1	callq	0x1000030f6	; symbol stub for: _mach_error
00000001000024c6	movq	$0x00000000,0xfffffbe0(%rbp)
00000001000024d1	cmpl	$0x00,0xfffffbec(%rbp)
00000001000024d8	jne	0x100002521
00000001000024da	movq	0xfffffbc8(%rbp),%rdi
00000001000024e1	callq	0x100003132	; symbol stub for: _strlen
00000001000024e6	movq	%rax,%rdx
00000001000024e9	movq	0xfffffbc8(%rbp),%rsi
00000001000024f0	movq	0x00001b51(%rip),%rax
00000001000024f7	movq	(%rax),%rdi
00000001000024fa	movl	$0x00000001,%ecx
00000001000024ff	callq	0x10000306c	; symbol stub for: _CFURLCreateFromFileSystemRepresentation
0000000100002504	movq	%rax,0xfffffbe0(%rbp)
000000010000250b	movq	0xfffffbe0(%rbp),%rax
0000000100002512	testq	%rax,%rax
0000000100002515	jne	0x100002521
0000000100002517	movl	$0xf8000003,0xfffffbec(%rbp)
0000000100002521	movl	0xfffffbec(%rbp),%esi
0000000100002527	leaq	0x00001292(%rip),%rdi
000000010000252e	callq	0x1000030f6	; symbol stub for: _mach_error
0000000100002533	movq	$0x00000000,0xfffffbd8(%rbp)
000000010000253e	cmpl	$0x00,0xfffffbec(%rbp)
0000000100002545	jne	0x1000025b0
0000000100002547	leaq	0x00001102(%rip),%rdi
000000010000254e	movl	$0x00000000,%eax
0000000100002553	callq	0x100003114	; symbol stub for: _printf
0000000100002558	movq	0xfffffbe0(%rbp),%rdi
000000010000255f	callq	0x100003060	; symbol stub for: _CFShow
0000000100002564	movl	$0x0000000a,%edi
0000000100002569	callq	0x10000311a	; symbol stub for: _putchar
000000010000256e	movq	0x00001ad3(%rip),%rax
0000000100002575	movq	(%rax),%rdi
0000000100002578	movq	0xfffffbe0(%rbp),%rsi
000000010000257f	callq	0x10000304e	; symbol stub for: _CFBundleCreate
0000000100002584	movq	%rax,0xfffffbd8(%rbp)
000000010000258b	cmpq	$0x00,0xfffffbd8(%rbp)
0000000100002593	jne	0x1000025b0
0000000100002595	movl	$0xf8000004,0xfffffbec(%rbp)
000000010000259f	leaq	0x000010c7(%rip),%rdi
00000001000025a6	movl	$0x00000000,%eax
00000001000025ab	callq	0x100003114	; symbol stub for: _printf
00000001000025b0	movl	0xfffffbec(%rbp),%esi
00000001000025b6	leaq	0x0000121f(%rip),%rdi
00000001000025bd	callq	0x1000030f6	; symbol stub for: _mach_error
00000001000025c2	movq	$0x00000000,0xfffffbd0(%rbp)
00000001000025cd	cmpl	$0x00,0xfffffbec(%rbp)
00000001000025d4	jne	0x100002631
00000001000025d6	cmpq	$0x00,0xfffffbd8(%rbp)
00000001000025de	sete	%al
00000001000025e1	movzbl	%al,%eax
00000001000025e4	testq	%rax,%rax
00000001000025e7	je	0x100002608
00000001000025e9	leaq	0x00001208(%rip),%rcx
00000001000025f0	movl	$0x00000038,%edx
00000001000025f5	leaq	0x00000fdc(%rip),%rsi
00000001000025fc	leaq	0x00000f8d(%rip),%rdi
0000000100002603	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100002608	movq	0xfffffbd8(%rbp),%rdi
000000010000260f	callq	0x100003048	; symbol stub for: _CFBundleCopyExecutableURL
0000000100002614	movq	%rax,0xfffffbd0(%rbp)
000000010000261b	movq	0xfffffbd0(%rbp),%rax
0000000100002622	testq	%rax,%rax
0000000100002625	jne	0x100002631
0000000100002627	movl	$0xf8000005,0xfffffbec(%rbp)
0000000100002631	movl	0xfffffbec(%rbp),%esi
0000000100002637	leaq	0x0000103c(%rip),%rdi
000000010000263e	callq	0x1000030f6	; symbol stub for: _mach_error
0000000100002643	cmpl	$0x00,0xfffffbec(%rbp)
000000010000264a	jne	0x1000026a9
000000010000264c	cmpq	$0x00,0xfffffbd0(%rbp)
0000000100002654	sete	%al
0000000100002657	movzbl	%al,%eax
000000010000265a	testq	%rax,%rax
000000010000265d	je	0x10000267e
000000010000265f	leaq	0x00001030(%rip),%rcx
0000000100002666	movl	$0x00000042,%edx
000000010000266b	leaq	0x00000f66(%rip),%rsi
0000000100002672	leaq	0x00000f17(%rip),%rdi
0000000100002679	callq	0x10000308a	; symbol stub for: ___assert_rtn
000000010000267e	leaq	0xfffffbf0(%rbp),%rdx
0000000100002685	movq	0xfffffbd0(%rbp),%rdi
000000010000268c	movl	$0x00000400,%ecx
0000000100002691	movl	$0x00000001,%esi
0000000100002696	callq	0x10000307e	; symbol stub for: _CFURLGetFileSystemRepresentation
000000010000269b	testb	%al,%al
000000010000269d	jne	0x1000026a9
000000010000269f	movl	$0xf8000006,0xfffffbec(%rbp)
00000001000026a9	movl	0xfffffbec(%rbp),%esi
00000001000026af	leaq	0x00000ff4(%rip),%rdi
00000001000026b6	callq	0x1000030f6	; symbol stub for: _mach_error
00000001000026bb	cmpl	$0x00,0xfffffbec(%rbp)
00000001000026c2	jne	0x10000270c
00000001000026c4	leaq	0xfffffbf0(%rbp),%rax
00000001000026cb	movzbl	(%rax),%eax
00000001000026ce	testb	%al,%al
00000001000026d0	sete	%al
00000001000026d3	movzbl	%al,%eax
00000001000026d6	testq	%rax,%rax
00000001000026d9	je	0x1000026fa
00000001000026db	leaq	0x00000fe6(%rip),%rcx
00000001000026e2	movl	$0x00000050,%edx
00000001000026e7	leaq	0x00000eea(%rip),%rsi
00000001000026ee	leaq	0x00000e9b(%rip),%rdi
00000001000026f5	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000026fa	leaq	0xfffffbf0(%rbp),%rdi
0000000100002701	callq	0x100002767
0000000100002706	movl	%eax,0xfffffbec(%rbp)
000000010000270c	cmpq	$0x00,0xfffffbd0(%rbp)
0000000100002714	je	0x100002722
0000000100002716	movq	0xfffffbd0(%rbp),%rdi
000000010000271d	callq	0x10000305a	; symbol stub for: _CFRelease
0000000100002722	cmpq	$0x00,0xfffffbe0(%rbp)
000000010000272a	je	0x100002738
000000010000272c	movq	0xfffffbe0(%rbp),%rdi
0000000100002733	callq	0x10000305a	; symbol stub for: _CFRelease
0000000100002738	movl	0xfffffbec(%rbp),%esi
000000010000273e	leaq	0x00000fb4(%rip),%rdi
0000000100002745	callq	0x1000030f6	; symbol stub for: _mach_error
000000010000274a	movl	0xfffffbec(%rbp),%eax
0000000100002750	movq	0x000018e1(%rip),%rdx
0000000100002757	movq	0xf8(%rbp),%rcx
000000010000275b	xorq	(%rdx),%rcx
000000010000275e	je	0x100002765
0000000100002760	callq	0x100003096	; symbol stub for: ___stack_chk_fail
0000000100002765	leave
0000000100002766	ret
0000000100002767	pushq	%rbp
0000000100002768	movq	%rsp,%rbp
000000010000276b	subq	$0x20,%rsp
000000010000276f	movq	%rdi,0xe8(%rbp)
0000000100002773	cmpq	$0x00,0xe8(%rbp)
0000000100002778	sete	%al
000000010000277b	movzbl	%al,%eax
000000010000277e	testq	%rax,%rax
0000000100002781	je	0x1000027a2
0000000100002783	leaq	0x00000fa6(%rip),%rcx
000000010000278a	movl	$0x00000065,%edx
000000010000278f	leaq	0x00000e42(%rip),%rsi
0000000100002796	leaq	0x00000f78(%rip),%rdi
000000010000279d	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000027a2	movq	0xe8(%rbp),%rdi
00000001000027a6	movl	$0x00000002,%esi
00000001000027ab	callq	0x1000030d2	; symbol stub for: _dlopen
00000001000027b0	movq	%rax,0xf8(%rbp)
00000001000027b4	cmpq	$0x00,0xf8(%rbp)
00000001000027b9	jne	0x1000027c9
00000001000027bb	callq	0x1000030cc	; symbol stub for: _dlerror
00000001000027c0	movl	$0xf8000007,0xe4(%rbp)
00000001000027c7	jmp	0x1000027d0
00000001000027c9	movl	$0x00000000,0xe4(%rbp)
00000001000027d0	movl	0xe4(%rbp),%eax
00000001000027d3	leave
00000001000027d4	ret
00000001000027d5	pushq	%rbp
00000001000027d6	movq	%rsp,%rbp
00000001000027d9	subq	$0x40,%rsp
00000001000027dd	movq	%rdi,0xd8(%rbp)
00000001000027e1	movq	%rsi,0xd0(%rbp)
00000001000027e5	leaq	0x00000f91(%rip),%rsi
00000001000027ec	leaq	0x00000f93(%rip),%rdi
00000001000027f3	movl	$0x00000000,%eax
00000001000027f8	callq	0x100003114	; symbol stub for: _printf
00000001000027fd	cmpq	$0x00,0xd8(%rbp)
0000000100002802	sete	%al
0000000100002805	movzbl	%al,%eax
0000000100002808	testq	%rax,%rax
000000010000280b	je	0x10000282c
000000010000280d	leaq	0x00000d9c(%rip),%rcx
0000000100002814	movl	$0x00000011,%edx
0000000100002819	leaq	0x00000f70(%rip),%rsi
0000000100002820	leaq	0x00000f39(%rip),%rdi
0000000100002827	callq	0x10000308a	; symbol stub for: ___assert_rtn
000000010000282c	movq	0xd8(%rbp),%rax
0000000100002830	movzbl	(%rax),%eax
0000000100002833	testb	%al,%al
0000000100002835	sete	%al
0000000100002838	movzbl	%al,%eax
000000010000283b	testq	%rax,%rax
000000010000283e	je	0x10000285f
0000000100002840	leaq	0x00000db9(%rip),%rcx
0000000100002847	movl	$0x00000012,%edx
000000010000284c	leaq	0x00000f3d(%rip),%rsi
0000000100002853	leaq	0x00000f06(%rip),%rdi
000000010000285a	callq	0x10000308a	; symbol stub for: ___assert_rtn
000000010000285f	movl	$0x00000000,0xfc(%rbp)
0000000100002866	movq	$0x00000000,0xf0(%rbp)
000000010000286e	cmpl	$0x00,0xfc(%rbp)
0000000100002872	jne	0x1000028b1
0000000100002874	movq	0xd8(%rbp),%rdi
0000000100002878	callq	0x100003132	; symbol stub for: _strlen
000000010000287d	movq	%rax,%rdx
0000000100002880	movq	0xd8(%rbp),%rsi
0000000100002884	movq	0x000017bd(%rip),%rax
000000010000288b	movq	(%rax),%rdi
000000010000288e	movl	$0x00000001,%ecx
0000000100002893	callq	0x10000306c	; symbol stub for: _CFURLCreateFromFileSystemRepresentation
0000000100002898	movq	%rax,0xf0(%rbp)
000000010000289c	movq	0xf0(%rbp),%rax
00000001000028a0	testq	%rax,%rax
00000001000028a3	jne	0x1000028b1
00000001000028a5	movl	$0x00000001,0xcc(%rbp)
00000001000028ac	jmp	0x100002a82
00000001000028b1	cmpl	$0x00,0xfc(%rbp)
00000001000028b5	je	0x1000028c2
00000001000028b7	movl	0xfc(%rbp),%eax
00000001000028ba	movl	%eax,0xcc(%rbp)
00000001000028bd	jmp	0x100002a82
00000001000028c2	movl	0xfc(%rbp),%esi
00000001000028c5	leaq	0x00000ef4(%rip),%rdi
00000001000028cc	movl	$0x00000000,%eax
00000001000028d1	callq	0x1000030f6	; symbol stub for: _mach_error
00000001000028d6	movq	$0x00000000,0xe8(%rbp)
00000001000028de	cmpl	$0x00,0xfc(%rbp)
00000001000028e2	jne	0x10000290e
00000001000028e4	movq	0x0000175d(%rip),%rax
00000001000028eb	movq	(%rax),%rdi
00000001000028ee	movq	0xf0(%rbp),%rsi
00000001000028f2	callq	0x10000304e	; symbol stub for: _CFBundleCreate
00000001000028f7	movq	%rax,0xe8(%rbp)
00000001000028fb	cmpq	$0x00,0xe8(%rbp)
0000000100002900	jne	0x10000290e
0000000100002902	movl	$0x00000001,0xcc(%rbp)
0000000100002909	jmp	0x100002a82
000000010000290e	movl	0xfc(%rbp),%esi
0000000100002911	leaq	0x00000ec4(%rip),%rdi
0000000100002918	movl	$0x00000000,%eax
000000010000291d	callq	0x1000030f6	; symbol stub for: _mach_error
0000000100002922	movq	$0x00000000,0xe0(%rbp)
000000010000292a	cmpl	$0x00,0xfc(%rbp)
000000010000292e	jne	0x100002981
0000000100002930	cmpq	$0x00,0xe8(%rbp)
0000000100002935	sete	%al
0000000100002938	movzbl	%al,%eax
000000010000293b	testq	%rax,%rax
000000010000293e	je	0x10000295f
0000000100002940	leaq	0x00000eb1(%rip),%rcx
0000000100002947	movl	$0x00000032,%edx
000000010000294c	leaq	0x00000e3d(%rip),%rsi
0000000100002953	leaq	0x00000e06(%rip),%rdi
000000010000295a	callq	0x10000308a	; symbol stub for: ___assert_rtn
000000010000295f	movq	0xe8(%rbp),%rdi
0000000100002963	callq	0x100003048	; symbol stub for: _CFBundleCopyExecutableURL
0000000100002968	movq	%rax,0xe0(%rbp)
000000010000296c	movq	0xe0(%rbp),%rax
0000000100002970	testq	%rax,%rax
0000000100002973	jne	0x100002981
0000000100002975	movl	$0x00000001,0xcc(%rbp)
000000010000297c	jmp	0x100002a82
0000000100002981	movl	0xfc(%rbp),%esi
0000000100002984	leaq	0x00000cef(%rip),%rdi
000000010000298b	movl	$0x00000000,%eax
0000000100002990	callq	0x1000030f6	; symbol stub for: _mach_error
0000000100002995	cmpl	$0x00,0xfc(%rbp)
0000000100002999	jne	0x1000029fa
000000010000299b	cmpq	$0x00,0xe0(%rbp)
00000001000029a0	sete	%al
00000001000029a3	movzbl	%al,%eax
00000001000029a6	testq	%rax,%rax
00000001000029a9	je	0x1000029ca
00000001000029ab	leaq	0x00000ce4(%rip),%rcx
00000001000029b2	movl	$0x0000003c,%edx
00000001000029b7	leaq	0x00000dd2(%rip),%rsi
00000001000029be	leaq	0x00000d9b(%rip),%rdi
00000001000029c5	callq	0x10000308a	; symbol stub for: ___assert_rtn
00000001000029ca	movq	0xe0(%rbp),%rdi
00000001000029ce	callq	0x100003060	; symbol stub for: _CFShow
00000001000029d3	movq	0xd0(%rbp),%rdx
00000001000029d7	movq	0xe0(%rbp),%rdi
00000001000029db	movl	$0x00000400,%ecx
00000001000029e0	movl	$0x00000001,%esi
00000001000029e5	callq	0x10000307e	; symbol stub for: _CFURLGetFileSystemRepresentation
00000001000029ea	testb	%al,%al
00000001000029ec	jne	0x1000029fa
00000001000029ee	movl	$0x00000001,0xcc(%rbp)
00000001000029f5	jmp	0x100002a82
00000001000029fa	movl	0xfc(%rbp),%esi
00000001000029fd	leaq	0x00000ca6(%rip),%rdi
0000000100002a04	movl	$0x00000000,%eax
0000000100002a09	callq	0x1000030f6	; symbol stub for: _mach_error
0000000100002a0e	cmpl	$0x00,0xfc(%rbp)
0000000100002a12	jne	0x100002a47
0000000100002a14	movq	0xd0(%rbp),%rax
0000000100002a18	movzbl	(%rax),%eax
0000000100002a1b	testb	%al,%al
0000000100002a1d	sete	%al
0000000100002a20	movzbl	%al,%eax
0000000100002a23	testq	%rax,%rax
0000000100002a26	je	0x100002a47
0000000100002a28	leaq	0x00000c99(%rip),%rcx
0000000100002a2f	movl	$0x0000004c,%edx
0000000100002a34	leaq	0x00000d55(%rip),%rsi
0000000100002a3b	leaq	0x00000d1e(%rip),%rdi
0000000100002a42	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100002a47	cmpq	$0x00,0xe0(%rbp)
0000000100002a4c	je	0x100002a57
0000000100002a4e	movq	0xe0(%rbp),%rdi
0000000100002a52	callq	0x10000305a	; symbol stub for: _CFRelease
0000000100002a57	cmpq	$0x00,0xf0(%rbp)
0000000100002a5c	je	0x100002a67
0000000100002a5e	movq	0xf0(%rbp),%rdi
0000000100002a62	callq	0x10000305a	; symbol stub for: _CFRelease
0000000100002a67	movl	0xfc(%rbp),%esi
0000000100002a6a	leaq	0x00000c88(%rip),%rdi
0000000100002a71	movl	$0x00000000,%eax
0000000100002a76	callq	0x1000030f6	; symbol stub for: _mach_error
0000000100002a7b	movl	$0x00000000,0xcc(%rbp)
0000000100002a82	movl	0xcc(%rbp),%eax
0000000100002a85	leave
0000000100002a86	ret
0000000100002a87	pushq	%rbp
0000000100002a88	movq	%rsp,%rbp
0000000100002a8b	subq	$0x00000480,%rsp
0000000100002a92	movq	%rdi,0xfffffb98(%rbp)
0000000100002a99	movq	%rsi,0xfffffb90(%rbp)
0000000100002aa0	movq	%rdx,0xfffffb88(%rbp)
0000000100002aa7	movl	%ecx,0xfffffb84(%rbp)
0000000100002aad	movq	0x00001584(%rip),%rax
0000000100002ab4	movq	(%rax),%rdx
0000000100002ab7	movq	%rdx,0xf8(%rbp)
0000000100002abb	xorl	%edx,%edx
0000000100002abd	cmpq	$0x00,0xfffffb98(%rbp)
0000000100002ac5	sete	%al
0000000100002ac8	movzbl	%al,%eax
0000000100002acb	testq	%rax,%rax
0000000100002ace	je	0x100002aef
0000000100002ad0	leaq	0x00000d49(%rip),%rcx
0000000100002ad7	movl	$0x0000005f,%edx
0000000100002adc	leaq	0x00000cad(%rip),%rsi
0000000100002ae3	leaq	0x00000d1b(%rip),%rdi
0000000100002aea	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100002aef	cmpq	$0x00,0xfffffb90(%rbp)
0000000100002af7	sete	%al
0000000100002afa	movzbl	%al,%eax
0000000100002afd	testq	%rax,%rax
0000000100002b00	je	0x100002b21
0000000100002b02	leaq	0x00000aa7(%rip),%rcx
0000000100002b09	movl	$0x00000060,%edx
0000000100002b0e	leaq	0x00000c7b(%rip),%rsi
0000000100002b15	leaq	0x00000ce9(%rip),%rdi
0000000100002b1c	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100002b21	cmpl	$0x00,0xfffffb84(%rbp)
0000000100002b28	setle	%al
0000000100002b2b	movzbl	%al,%eax
0000000100002b2e	testq	%rax,%rax
0000000100002b31	je	0x100002b52
0000000100002b33	leaq	0x00000d09(%rip),%rcx
0000000100002b3a	movl	$0x00000061,%edx
0000000100002b3f	leaq	0x00000c4a(%rip),%rsi
0000000100002b46	leaq	0x00000cb8(%rip),%rdi
0000000100002b4d	callq	0x10000308a	; symbol stub for: ___assert_rtn
0000000100002b52	movl	$0x00000000,0xfffffbec(%rbp)
0000000100002b5c	movq	$0x00000000,0xfffffbe0(%rbp)
0000000100002b67	cmpl	$0x00,0xfffffbec(%rbp)
0000000100002b6e	jne	0x100002c73
0000000100002b74	cmpq	$0x00,0xfffffb88(%rbp)
0000000100002b7c	je	0x100002c28
0000000100002b82	movq	0x000014bf(%rip),%rax
0000000100002b89	movq	(%rax),%rdi
0000000100002b8c	movq	0xfffffb88(%rbp),%rsi
0000000100002b93	movl	$0x08000100,%edx
0000000100002b98	callq	0x100003066	; symbol stub for: _CFStringCreateWithCString
0000000100002b9d	movq	%rax,0xfffffbd8(%rbp)
0000000100002ba4	cmpq	$0x00,0xfffffbd8(%rbp)
0000000100002bac	je	0x100002c28
0000000100002bae	movq	0x00001493(%rip),%rax
0000000100002bb5	movq	(%rax),%rdi
0000000100002bb8	movq	0xfffffbd8(%rbp),%rsi
0000000100002bbf	movl	$0x00000001,%ecx
0000000100002bc4	movl	$0x00000000,%edx
0000000100002bc9	callq	0x100003072	; symbol stub for: _CFURLCreateWithFileSystemPath
0000000100002bce	movq	%rax,0xfffffbd0(%rbp)
0000000100002bd5	cmpq	$0x00,0xfffffbd0(%rbp)
0000000100002bdd	je	0x100002c1c
0000000100002bdf	leaq	0x00001602(%rip),%rsi
0000000100002be6	movq	0x0000145b(%rip),%rax
0000000100002bed	movq	(%rax),%rdi
0000000100002bf0	movq	0xfffffbd0(%rbp),%rax
0000000100002bf7	movq	%rax,%r8
0000000100002bfa	movl	$0x00000001,%ecx
0000000100002bff	movl	$0x00000000,%edx
0000000100002c04	callq	0x100003078	; symbol stub for: _CFURLCreateWithFileSystemPathRelativeToBase
0000000100002c09	movq	%rax,0xfffffbe0(%rbp)
0000000100002c10	movq	0xfffffbd0(%rbp),%rdi
0000000100002c17	callq	0x10000305a	; symbol stub for: _CFRelease
0000000100002c1c	movq	0xfffffbd8(%rbp),%rdi
0000000100002c23	callq	0x10000305a	; symbol stub for: _CFRelease
0000000100002c28	cmpq	$0x00,0xfffffbe0(%rbp)
0000000100002c30	jne	0x100002c3e
0000000100002c32	movl	$0xf8000002,0xfffffbec(%rbp)
0000000100002c3c	jmp	0x100002c73
0000000100002c3e	leaq	0xfffffbf0(%rbp),%rdx
0000000100002c45	movq	0xfffffbe0(%rbp),%rdi
0000000100002c4c	movl	$0x00000400,%ecx
0000000100002c51	movl	$0x00000001,%esi
0000000100002c56	callq	0x10000307e	; symbol stub for: _CFURLGetFileSystemRepresentation
0000000100002c5b	leaq	0xfffffbf0(%rbp),%rsi
0000000100002c62	leaq	0x00000c06(%rip),%rdi
0000000100002c69	movl	$0x00000000,%eax
0000000100002c6e	callq	0x100003114	; symbol stub for: _printf
0000000100002c73	movq	$0x00000000,0xfffffbc8(%rbp)
0000000100002c7e	cmpl	$0x00,0xfffffbec(%rbp)
0000000100002c85	jne	0x100002cb8
0000000100002c87	movq	0x000013ba(%rip),%rax
0000000100002c8e	movq	(%rax),%rdi
0000000100002c91	movq	0xfffffbe0(%rbp),%rsi
0000000100002c98	callq	0x10000304e	; symbol stub for: _CFBundleCreate
0000000100002c9d	movq	%rax,0xfffffbc8(%rbp)
0000000100002ca4	cmpq	$0x00,0xfffffbc8(%rbp)
0000000100002cac	jne	0x100002cb8
0000000100002cae	movl	$0xf8000003,0xfffffbec(%rbp)
0000000100002cb8	movq	$0x00000000,0xfffffbc0(%rbp)
0000000100002cc3	cmpl	$0x00,0xfffffbec(%rbp)
0000000100002cca	jne	0x100002cfa
0000000100002ccc	leaq	0x00001535(%rip),%rsi
0000000100002cd3	movq	0xfffffbc8(%rbp),%rdi
0000000100002cda	callq	0x100003054	; symbol stub for: _CFBundleGetFunctionPointerForName
0000000100002cdf	movq	%rax,0xfffffbc0(%rbp)
0000000100002ce6	cmpq	$0x00,0xfffffbc0(%rbp)
0000000100002cee	jne	0x100002cfa
0000000100002cf0	movl	$0xf8000004,0xfffffbec(%rbp)
0000000100002cfa	movq	$0x00000000,0xfffffbb8(%rbp)
0000000100002d05	cmpl	$0x00,0xfffffbec(%rbp)
0000000100002d0c	jne	0x100002daa
0000000100002d12	leaq	0xfffffbf0(%rbp),%rsi
0000000100002d19	movq	0xfffffb90(%rbp),%rdi
0000000100002d20	callq	0x2000027d5
0000000100002d25	movl	%eax,0xfffffbe8(%rbp)
0000000100002d2b	cmpl	$0x00,0xfffffbe8(%rbp)
0000000100002d32	je	0x100002d51
0000000100002d34	leaq	0x00000b55(%rip),%rdi
0000000100002d3b	callq	0x100003120	; symbol stub for: _puts
0000000100002d40	movl	0xfffffbe8(%rbp),%ecx
0000000100002d46	movl	%ecx,0xfffffb80(%rbp)
0000000100002d4c	jmp	0x100002e2e
0000000100002d51	leaq	0xfffffbf0(%rbp),%rdi
0000000100002d58	callq	0x100003132	; symbol stub for: _strlen
0000000100002d5d	incq	%rax
0000000100002d60	movq	%rax,0xfffffba8(%rbp)
0000000100002d67	movq	0xfffffba8(%rbp),%rax
0000000100002d6e	addq	$0x08,%rax
0000000100002d72	movq	%rax,0xfffffbb0(%rbp)
0000000100002d79	movq	0xfffffbb0(%rbp),%rdi
0000000100002d80	callq	0x1000030fc	; symbol stub for: _malloc
0000000100002d85	movq	%rax,0xfffffbb8(%rbp)
0000000100002d8c	movq	0xfffffbb8(%rbp),%rsi
0000000100002d93	addq	$0x08,%rsi
0000000100002d97	movq	0xfffffba8(%rbp),%rdx
0000000100002d9e	leaq	0xfffffbf0(%rbp),%rdi
0000000100002da5	callq	0x1000030ba	; symbol stub for: _bcopy
0000000100002daa	cmpl	$0x00,0xfffffbec(%rbp)
0000000100002db1	jne	0x100002df6
0000000100002db3	movq	0xfffffbc0(%rbp),%rdi
0000000100002dba	movl	0xfffffb84(%rbp),%ecx
0000000100002dc0	movq	0xfffffbb0(%rbp),%rdx
0000000100002dc7	movq	0xfffffbb8(%rbp),%rsi
0000000100002dce	movl	$0x00000000,%r8d
0000000100002dd4	callq	0x2000010a2
0000000100002dd9	movl	%eax,0xfffffbec(%rbp)
0000000100002ddf	movl	0xfffffbec(%rbp),%esi
0000000100002de5	leaq	0x00000ac7(%rip),%rdi
0000000100002dec	movl	$0x00000000,%eax
0000000100002df1	callq	0x100003114	; symbol stub for: _printf
0000000100002df6	cmpq	$0x00,0xfffffbb8(%rbp)
0000000100002dfe	je	0x100002e0c
0000000100002e00	movq	0xfffffbb8(%rbp),%rdi
0000000100002e07	callq	0x1000030e4	; symbol stub for: _free
0000000100002e0c	cmpq	$0x00,0xfffffbe0(%rbp)
0000000100002e14	je	0x100002e22
0000000100002e16	movq	0xfffffbe0(%rbp),%rdi
0000000100002e1d	callq	0x10000305a	; symbol stub for: _CFRelease
0000000100002e22	movl	0xfffffbec(%rbp),%eax
0000000100002e28	movl	%eax,0xfffffb80(%rbp)
0000000100002e2e	movl	0xfffffb80(%rbp),%eax
0000000100002e34	movq	0x000011fd(%rip),%rdx
0000000100002e3b	movq	0xf8(%rbp),%rcx
0000000100002e3f	xorq	(%rdx),%rcx
0000000100002e42	je	0x100002e49
0000000100002e44	callq	0x100003096	; symbol stub for: ___stack_chk_fail
0000000100002e49	leave
0000000100002e4a	ret
0000000100002e4b	pushq	%rbp
0000000100002e4c	movq	%rsp,%rbp
0000000100002e4f	subq	$0x000000d0,%rsp
0000000100002e56	movl	%edi,0xffffff4c(%rbp)
0000000100002e5c	movq	%rsi,0xffffff40(%rbp)
0000000100002e63	cmpl	$0x03,0xffffff4c(%rbp)
0000000100002e6a	je	0x100002e7b
0000000100002e6c	movl	$0x00000001,0xffffff3c(%rbp)
0000000100002e76	jmp	0x100003040
0000000100002e7b	movq	0xffffff40(%rbp),%rax
0000000100002e82	movq	(%rax),%rax
0000000100002e85	movq	%rax,0xf0(%rbp)
0000000100002e89	movq	0xffffff40(%rbp),%rax
0000000100002e90	addq	$0x08,%rax
0000000100002e94	movq	(%rax),%rax
0000000100002e97	movq	%rax,0xe8(%rbp)
0000000100002e9b	movq	0xffffff40(%rbp),%rax
0000000100002ea2	addq	$0x10,%rax
0000000100002ea6	movq	(%rax),%rdi
0000000100002ea9	callq	0x1000030b4	; symbol stub for: _atoi
0000000100002eae	movl	%eax,0xf8(%rbp)
0000000100002eb1	leaq	0xffffff50(%rbp),%rsi
0000000100002eb8	movq	0xe8(%rbp),%rdi
0000000100002ebc	callq	0x10000312c	; symbol stub for: _stat
0000000100002ec1	testl	%eax,%eax
0000000100002ec3	jns	0x100002ee9
0000000100002ec5	movq	0xe8(%rbp),%rsi
0000000100002ec9	leaq	0x00000a00(%rip),%rdi
0000000100002ed0	movl	$0x00000000,%eax
0000000100002ed5	callq	0x100003114	; symbol stub for: _printf
0000000100002eda	movl	$0x00000001,0xffffff3c(%rbp)
0000000100002ee4	jmp	0x100003040
0000000100002ee9	movl	$0x00000401,%edi
0000000100002eee	callq	0x1000030fc	; symbol stub for: _malloc
0000000100002ef3	movq	%rax,0xe0(%rbp)
0000000100002ef7	movl	$0x00000401,%edi
0000000100002efc	callq	0x1000030fc	; symbol stub for: _malloc
0000000100002f01	movq	%rax,0xd8(%rbp)
0000000100002f05	movq	0xe0(%rbp),%rsi
0000000100002f09	movq	0xf0(%rbp),%rdi
0000000100002f0d	callq	0x100003126	; symbol stub for: _realpath$DARWIN_EXTSN
0000000100002f12	movq	%rax,0xe0(%rbp)
0000000100002f16	movq	0xd8(%rbp),%rsi
0000000100002f1a	movq	0xe8(%rbp),%rdi
0000000100002f1e	callq	0x100003126	; symbol stub for: _realpath$DARWIN_EXTSN
0000000100002f23	movq	%rax,0xd8(%rbp)
0000000100002f27	cmpq	$0x00,0xe0(%rbp)
0000000100002f2c	je	0x100002f35
0000000100002f2e	cmpq	$0x00,0xd8(%rbp)
0000000100002f33	jne	0x100002f55
0000000100002f35	leaq	0x000009a4(%rip),%rdi
0000000100002f3c	movl	$0x00000000,%eax
0000000100002f41	callq	0x100003114	; symbol stub for: _printf
0000000100002f46	movl	$0x00000001,0xffffff3c(%rbp)
0000000100002f50	jmp	0x100003040
0000000100002f55	movq	0xe0(%rbp),%rdi
0000000100002f59	movl	$0x0000002f,%esi
0000000100002f5e	callq	0x10000313e	; symbol stub for: _strrchr
0000000100002f63	movq	%rax,0xd0(%rbp)
0000000100002f67	movq	0xd8(%rbp),%rdi
0000000100002f6b	movl	$0x0000002f,%esi
0000000100002f70	callq	0x10000313e	; symbol stub for: _strrchr
0000000100002f75	movq	%rax,0xc8(%rbp)
0000000100002f79	cmpq	$0x00,0xd0(%rbp)
0000000100002f7e	je	0x100002f87
0000000100002f80	cmpq	$0x00,0xc8(%rbp)
0000000100002f85	jne	0x100002fa7
0000000100002f87	leaq	0x00000961(%rip),%rdi
0000000100002f8e	movl	$0x00000000,%eax
0000000100002f93	callq	0x100003114	; symbol stub for: _printf
0000000100002f98	movl	$0x00000001,0xffffff3c(%rbp)
0000000100002fa2	jmp	0x100003040
0000000100002fa7	movq	0xd0(%rbp),%rdx
0000000100002fab	movq	0xe0(%rbp),%rax
0000000100002faf	movq	%rdx,%rcx
0000000100002fb2	subq	%rax,%rcx
0000000100002fb5	movq	%rcx,%rax
0000000100002fb8	movq	%rax,%rdx
0000000100002fbb	movq	0xd8(%rbp),%rsi
0000000100002fbf	movq	0xe0(%rbp),%rdi
0000000100002fc3	callq	0x100003138	; symbol stub for: _strncmp
0000000100002fc8	testl	%eax,%eax
0000000100002fca	je	0x100002ff1
0000000100002fcc	movq	0xf0(%rbp),%rdx
0000000100002fd0	movq	0xe8(%rbp),%rsi
0000000100002fd4	leaq	0x00000925(%rip),%rdi
0000000100002fdb	movl	$0x00000000,%eax
0000000100002fe0	callq	0x100003114	; symbol stub for: _printf
0000000100002fe5	movl	$0x00000001,0xffffff3c(%rbp)
0000000100002fef	jmp	0x100003040
0000000100002ff1	movq	0xd0(%rbp),%rax
0000000100002ff5	movb	$0x00,(%rax)
0000000100002ff8	movl	0xf8(%rbp),%ecx
0000000100002ffb	movq	0xe0(%rbp),%rdx
0000000100002fff	movq	0xd8(%rbp),%rsi
0000000100003003	movq	0xf0(%rbp),%rdi
0000000100003007	callq	0x200002a87
000000010000300c	movl	%eax,0xfc(%rbp)
000000010000300f	cmpl	$0x00,0xfc(%rbp)
0000000100003013	je	0x100003037
0000000100003015	movl	0xfc(%rbp),%eax
0000000100003018	movl	0xf8(%rbp),%ecx
000000010000301b	movq	0xe0(%rbp),%rdx
000000010000301f	movq	0xd8(%rbp),%rsi
0000000100003023	movl	%eax,%r8d
0000000100003026	leaq	0x00000904(%rip),%rdi
000000010000302d	movl	$0x00000000,%eax
0000000100003032	callq	0x100003114	; symbol stub for: _printf
0000000100003037	movl	0xfc(%rbp),%eax
000000010000303a	movl	%eax,0xffffff3c(%rbp)
0000000100003040	movl	0xffffff3c(%rbp),%eax
0000000100003046	leave
0000000100003047	ret
