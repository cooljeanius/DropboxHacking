/Users/ericgallager/Library Inspector Output/Dropbox/DropboxPlugin.plugin/Contents/MacOS/DropboxPlugin (architecture ppc):
(__TEXT,__text) section
dyld_stub_binding_helper:
00000ce0	mfspr	r0,lr
00000ce4	bcl	20,31,0xce8
00000ce8	mfspr	r12,lr
00000cec	mtspr	lr,r0
00000cf0	or	r0,r12,r12
00000cf4	addis	r12,r12,0x1
00000cf8	lwz	r12,0x2318(r12)
00000cfc	mtspr	ctr,r12
00000d00	or	r12,r0,r0
00000d04	addis	r12,r12,0x1
00000d08	lwz	r12,0x2b88(r12)
00000d0c	bctr
__dyld_func_lookup:
00000d10	mfspr	r0,lr
00000d14	bcl	20,31,0xd18
00000d18	mfspr	r11,lr
00000d1c	mtspr	lr,r0
00000d20	addis	r11,r11,0x1
00000d24	lwz	r11,0x22ec(r11)
00000d28	mtspr	ctr,r11
00000d2c	bctr
_reconnect:
00000d30	mfspr	r0,lr
00000d34	stmw	r30,0xfff8(r1)
00000d38	stw	r0,0x8(r1)
00000d3c	stwu	r1,0xfb80(r1)
00000d40	or	r30,r1,r1
00000d44	bcl	20,31,0xd48
00000d48	mfspr	r31,lr
00000d4c	addi	r0,r30,0x40
00000d50	or	r3,r0,r0
00000d54	li	r4,0x10
00000d58	bl	0x10e40	; symbol stub for: _bzero
00000d5c	addis	r2,r31,0x1
00000d60	addi	r2,r2,0x2bc8
00000d64	lwz	r0,__mh_bundle_header(r2)
00000d68	cmpwi	cr7,r0,__mh_bundle_header
00000d6c	blt	cr7,0xd94
00000d70	addis	r2,r31,0x1
00000d74	addi	r2,r2,0x2bc8
00000d78	lwz	r0,__mh_bundle_header(r2)
00000d7c	or	r3,r0,r0
00000d80	bl	0x10f20	; symbol stub for: _close
00000d84	addis	r2,r31,0x1
00000d88	addi	r2,r2,0x2bc8
00000d8c	li	r0,0xffff
00000d90	stw	r0,__mh_bundle_header(r2)
00000d94	li	r3,0x2
00000d98	li	r4,0x1
00000d9c	li	r5,__mh_bundle_header
00000da0	bl	0x11480	; symbol stub for: _socket
00000da4	or	r0,r3,r3
00000da8	addis	r2,r31,0x1
00000dac	addi	r2,r2,0x2bc8
00000db0	stw	r0,__mh_bundle_header(r2)
00000db4	addis	r2,r31,0x1
00000db8	addi	r2,r2,0x2bc8
00000dbc	lwz	r0,__mh_bundle_header(r2)
00000dc0	cmpwi	cr7,r0,__mh_bundle_header
00000dc4	blt	cr7,0x1084
00000dc8	li	r0,0x2
00000dcc	stb	r0,0x41(r30)
00000dd0	bl	0x11100	; symbol stub for: _getuid
00000dd4	or	r2,r3,r3
00000dd8	lis	r0,0x1062
00000ddc	ori	r0,r0,0x4dd3
00000de0	mulhwu	r0,r2,r0
00000de4	rlwinm	r0,r0,26,6,31
00000de8	stw	r0,0x46c(r30)
00000dec	lwz	r9,0x46c(r30)
00000df0	mulli	r0,r9,0x3e8
00000df4	subf	r2,r0,r2
00000df8	stw	r2,0x46c(r30)
00000dfc	lwz	r0,0x46c(r30)
00000e00	rlwinm	r2,r0,0,16,31
00000e04	addi	r0,r2,0x643f
00000e08	rlwinm	r0,r0,0,16,31
00000e0c	sth	r0,0x42(r30)
00000e10	addis	r2,r31,0x1
00000e14	addi	r3,r2,0xa40
00000e18	bl	0x11140	; symbol stub for: _inet_addr
00000e1c	or	r0,r3,r3
00000e20	stw	r0,0x44(r30)
00000e24	addis	r2,r31,0x1
00000e28	addi	r2,r2,0x2bc8
00000e2c	lwz	r0,__mh_bundle_header(r2)
00000e30	or	r3,r0,r0
00000e34	li	r4,0x3
00000e38	li	r5,__mh_bundle_header
00000e3c	bl	0x10fa0	; symbol stub for: _fcntl
00000e40	or	r0,r3,r3
00000e44	stw	r0,0x3c(r30)
00000e48	lwz	r0,0x3c(r30)
00000e4c	cmpwi	cr7,r0,__mh_bundle_header
00000e50	blt	cr7,0x1084
00000e54	addis	r2,r31,0x1
00000e58	addi	r2,r2,0x2bc8
00000e5c	lwz	r2,__mh_bundle_header(r2)
00000e60	lwz	r0,0x3c(r30)
00000e64	ori	r0,r0,0x4
00000e68	or	r3,r2,r2
00000e6c	li	r4,0x4
00000e70	or	r5,r0,r0
00000e74	bl	0x10fa0	; symbol stub for: _fcntl
00000e78	or	r0,r3,r3
00000e7c	cmpwi	cr7,r0,__mh_bundle_header
00000e80	blt	cr7,0x1084
00000e84	addis	r2,r31,0x1
00000e88	addi	r2,r2,0x2bc8
00000e8c	lwz	r0,__mh_bundle_header(r2)
00000e90	addi	r2,r30,0x40
00000e94	or	r3,r0,r0
00000e98	or	r4,r2,r2
00000e9c	li	r5,0x10
00000ea0	bl	0x10f40	; symbol stub for: _connect
00000ea4	or	r0,r3,r3
00000ea8	cmpwi	cr7,r0,__mh_bundle_header
00000eac	bge	cr7,0xfd0
00000eb0	bl	0x10d60	; symbol stub for: ___error
00000eb4	or	r2,r3,r3
00000eb8	lwz	r0,__mh_bundle_header(r2)
00000ebc	cmpwi	cr7,r0,0x24
00000ec0	bne	cr7,0x1084
00000ec4	addis	r2,r31,0x1
00000ec8	addi	r2,r2,0x958
00000ecc	lwz	r0,__mh_bundle_header(r2)
00000ed0	lwz	r2,0x4(r2)
00000ed4	stw	r0,0x50(r30)
00000ed8	stw	r2,0x54(r30)
00000edc	addi	r0,r30,0x64
00000ee0	or	r3,r0,r0
00000ee4	li	r4,0x80
00000ee8	bl	0x10e40	; symbol stub for: _bzero
00000eec	addis	r2,r31,0x1
00000ef0	addi	r2,r2,0x2bc8
00000ef4	lwz	r0,__mh_bundle_header(r2)
00000ef8	stw	r0,0x38(r30)
00000efc	lwz	r0,0x38(r30)
00000f00	rlwinm	r0,r0,27,5,31
00000f04	or	r11,r0,r0
00000f08	rlwinm	r2,r0,2,0,29
00000f0c	addi	r0,r30,0x38
00000f10	add	r2,r2,r0
00000f14	addi	r2,r2,0x2c
00000f18	lwz	r9,__mh_bundle_header(r2)
00000f1c	lwz	r0,0x38(r30)
00000f20	rlwinm	r2,r0,0,27,31
00000f24	li	r0,0x1
00000f28	slw	r0,r0,r2
00000f2c	or	r9,r9,r0
00000f30	rlwinm	r2,r11,2,0,29
00000f34	addi	r0,r30,0x38
00000f38	add	r2,r2,r0
00000f3c	addi	r2,r2,0x2c
00000f40	stw	r9,__mh_bundle_header(r2)
00000f44	addis	r2,r31,0x1
00000f48	addi	r2,r2,0x2bc8
00000f4c	lwz	r2,__mh_bundle_header(r2)
00000f50	addi	r0,r2,0x1
00000f54	addi	r2,r30,0x64
00000f58	addi	r9,r30,0x50
00000f5c	or	r3,r0,r0
00000f60	li	r4,__mh_bundle_header
00000f64	or	r5,r2,r2
00000f68	li	r6,__mh_bundle_header
00000f6c	or	r7,r9,r9
00000f70	bl	0x11420	; symbol stub for: _select
00000f74	or	r0,r3,r3
00000f78	cmpwi	cr7,r0,0x1
00000f7c	bne	cr7,0x1084
00000f80	li	r0,0x4
00000f84	stw	r0,0x5c(r30)
00000f88	addis	r2,r31,0x1
00000f8c	addi	r2,r2,0x2bc8
00000f90	lwz	r0,__mh_bundle_header(r2)
00000f94	addi	r2,r30,0x58
00000f98	addi	r9,r30,0x5c
00000f9c	or	r3,r0,r0
00000fa0	li	r4,__mh_bundle_header
00000fa4	ori	r4,r4,0xffff
00000fa8	li	r5,0x1007
00000fac	or	r6,r2,r2
00000fb0	or	r7,r9,r9
00000fb4	bl	0x110c0	; symbol stub for: _getsockopt
00000fb8	or	r0,r3,r3
00000fbc	cmpwi	cr7,r0,__mh_bundle_header
00000fc0	blt	cr7,0x1084
00000fc4	lwz	r0,0x58(r30)
00000fc8	cmpwi	cr7,r0,__mh_bundle_header
00000fcc	bne	cr7,0x1084
00000fd0	addis	r2,r31,0x1
00000fd4	addi	r2,r2,0x2bc8
00000fd8	lwz	r0,__mh_bundle_header(r2)
00000fdc	or	r3,r0,r0
00000fe0	li	r4,0x4
00000fe4	lwz	r5,0x3c(r30)
00000fe8	bl	0x10fa0	; symbol stub for: _fcntl
00000fec	or	r0,r3,r3
00000ff0	cmpwi	cr7,r0,__mh_bundle_header
00000ff4	blt	cr7,0x1084
00000ff8	li	r0,0x1
00000ffc	stw	r0,0x60(r30)
00001000	addis	r2,r31,0x1
00001004	addi	r2,r2,0x2bc8
00001008	lwz	r0,__mh_bundle_header(r2)
0000100c	addi	r2,r30,0x60
00001010	or	r3,r0,r0
00001014	li	r4,__mh_bundle_header
00001018	ori	r4,r4,0xffff
0000101c	li	r5,0x1022
00001020	or	r6,r2,r2
00001024	li	r7,0x4
00001028	bl	0x11440	; symbol stub for: _setsockopt
0000102c	or	r0,r3,r3
00001030	cmpwi	cr7,r0,__mh_bundle_header
00001034	blt	cr7,0x1084
00001038	addis	r2,r31,0x1
0000103c	addi	r0,r2,0xa4c
00001040	li	r3,__mh_bundle_header
00001044	or	r4,r0,r0
00001048	li	r5,__mh_bundle_header
0000104c	bl	_sendRequest
00001050	or	r0,r3,r3
00001054	cmpwi	cr7,r0,__mh_bundle_header
00001058	beq	cr7,0x1084
0000105c	addi	r0,r30,0x64
00001060	or	r3,r0,r0
00001064	li	r4,0x400
00001068	bl	_getResponse
0000106c	or	r0,r3,r3
00001070	cmpwi	cr7,r0,__mh_bundle_header
00001074	blt	cr7,0x1084
00001078	li	r0,0x1
0000107c	stw	r0,0x468(r30)
00001080	b	0x10c4
00001084	addis	r2,r31,0x1
00001088	addi	r2,r2,0x2bc8
0000108c	lwz	r0,__mh_bundle_header(r2)
00001090	cmpwi	cr7,r0,__mh_bundle_header
00001094	blt	cr7,0x10bc
00001098	addis	r2,r31,0x1
0000109c	addi	r2,r2,0x2bc8
000010a0	lwz	r0,__mh_bundle_header(r2)
000010a4	or	r3,r0,r0
000010a8	bl	0x10f20	; symbol stub for: _close
000010ac	addis	r2,r31,0x1
000010b0	addi	r2,r2,0x2bc8
000010b4	li	r0,0xffff
000010b8	stw	r0,__mh_bundle_header(r2)
000010bc	li	r0,__mh_bundle_header
000010c0	stw	r0,0x468(r30)
000010c4	lwz	r0,0x468(r30)
000010c8	or	r3,r0,r0
000010cc	lwz	r1,__mh_bundle_header(r1)
000010d0	lwz	r0,0x8(r1)
000010d4	mtspr	lr,r0
000010d8	lmw	r30,0xfff8(r1)
000010dc	blr
_sendall:
000010e0	mfspr	r0,lr
000010e4	stmw	r30,0xfff8(r1)
000010e8	stw	r0,0x8(r1)
000010ec	stwu	r1,0xffa0(r1)
000010f0	or	r30,r1,r1
000010f4	stw	r3,0x78(r30)
000010f8	stw	r4,0x7c(r30)
000010fc	stw	r5,0x80(r30)
00001100	lwz	r0,0x7c(r30)
00001104	stw	r0,0x40(r30)
00001108	lwz	r0,0x80(r30)
0000110c	rlwinm	r0,r0,3,0,28
00001110	or	r2,r0,r0
00001114	lwz	r0,0x7c(r30)
00001118	add	r0,r2,r0
0000111c	stw	r0,0x3c(r30)
00001120	b	0x121c
00001124	lwz	r2,0x3c(r30)
00001128	lwz	r0,0x40(r30)
0000112c	subf	r0,r0,r2
00001130	srawi	r0,r0,3
00001134	lwz	r3,0x78(r30)
00001138	lwz	r4,0x40(r30)
0000113c	or	r5,r0,r0
00001140	bl	0x11680	; symbol stub for: _writev
00001144	or	r0,r3,r3
00001148	stw	r0,0x38(r30)
0000114c	lwz	r0,0x38(r30)
00001150	cmpwi	cr7,r0,__mh_bundle_header
00001154	bge	cr7,0x1184
00001158	bl	0x10d60	; symbol stub for: ___error
0000115c	or	r2,r3,r3
00001160	lwz	r0,__mh_bundle_header(r2)
00001164	cmpwi	cr7,r0,0x4
00001168	bne	cr7,0x1178
0000116c	li	r0,__mh_bundle_header
00001170	stw	r0,0x38(r30)
00001174	b	0x1210
00001178	li	r0,__mh_bundle_header
0000117c	stw	r0,0x48(r30)
00001180	b	0x1234
00001184	lwz	r0,0x38(r30)
00001188	cmpwi	cr7,r0,__mh_bundle_header
0000118c	bne	cr7,0x1210
00001190	li	r0,__mh_bundle_header
00001194	stw	r0,0x48(r30)
00001198	b	0x1234
0000119c	lwz	r9,0x38(r30)
000011a0	lwz	r2,0x40(r30)
000011a4	lwz	r0,0x4(r2)
000011a8	cmplw	cr7,r9,r0
000011ac	blt	cr7,0x11d4
000011b0	lwz	r9,0x38(r30)
000011b4	lwz	r2,0x40(r30)
000011b8	lwz	r0,0x4(r2)
000011bc	subf	r0,r0,r9
000011c0	stw	r0,0x38(r30)
000011c4	lwz	r2,0x40(r30)
000011c8	addi	r0,r2,0x8
000011cc	stw	r0,0x40(r30)
000011d0	b	0x1210
000011d4	lwz	r2,0x40(r30)
000011d8	lwz	r0,__mh_bundle_header(r2)
000011dc	or	r2,r0,r0
000011e0	lwz	r0,0x38(r30)
000011e4	add	r0,r2,r0
000011e8	lwz	r2,0x40(r30)
000011ec	stw	r0,__mh_bundle_header(r2)
000011f0	lwz	r2,0x40(r30)
000011f4	lwz	r2,0x4(r2)
000011f8	lwz	r0,0x38(r30)
000011fc	subf	r0,r0,r2
00001200	lwz	r2,0x40(r30)
00001204	stw	r0,0x4(r2)
00001208	li	r0,__mh_bundle_header
0000120c	stw	r0,0x38(r30)
00001210	lwz	r0,0x38(r30)
00001214	cmpwi	cr7,r0,__mh_bundle_header
00001218	bne	cr7,0x119c
0000121c	lwz	r0,0x40(r30)
00001220	lwz	r2,0x3c(r30)
00001224	cmplw	cr7,r0,r2
00001228	blt	cr7,0x1124
0000122c	li	r0,0x1
00001230	stw	r0,0x48(r30)
00001234	lwz	r0,0x48(r30)
00001238	or	r3,r0,r0
0000123c	lwz	r1,__mh_bundle_header(r1)
00001240	lwz	r0,0x8(r1)
00001244	mtspr	lr,r0
00001248	lmw	r30,0xfff8(r1)
0000124c	blr
_subtract_timevals:
00001250	stmw	r30,0xfff8(r1)
00001254	stwu	r1,0xffd0(r1)
00001258	or	r30,r1,r1
0000125c	stw	r3,0x48(r30)
00001260	stw	r4,0x4c(r30)
00001264	lwz	r2,0x48(r30)
00001268	lwz	r9,0x4(r2)
0000126c	lwz	r2,0x4c(r30)
00001270	lwz	r0,0x4(r2)
00001274	cmpw	cr7,r9,r0
00001278	bge	cr7,0x12ac
0000127c	lwz	r2,0x48(r30)
00001280	lwz	r2,__mh_bundle_header(r2)
00001284	addi	r0,r2,0xffff
00001288	lwz	r2,0x48(r30)
0000128c	stw	r0,__mh_bundle_header(r2)
00001290	lwz	r2,0x48(r30)
00001294	lwz	r0,0x4(r2)
00001298	or	r2,r0,r0
0000129c	addis	r2,r2,0xf
000012a0	addi	r0,r2,0x4240
000012a4	lwz	r2,0x48(r30)
000012a8	stw	r0,0x4(r2)
000012ac	lwz	r2,0x48(r30)
000012b0	lwz	r9,0x4(r2)
000012b4	lwz	r2,0x4c(r30)
000012b8	lwz	r0,0x4(r2)
000012bc	subf	r0,r0,r9
000012c0	lwz	r2,0x48(r30)
000012c4	stw	r0,0x4(r2)
000012c8	lwz	r2,0x48(r30)
000012cc	lwz	r9,__mh_bundle_header(r2)
000012d0	lwz	r2,0x4c(r30)
000012d4	lwz	r0,__mh_bundle_header(r2)
000012d8	subf	r0,r0,r9
000012dc	lwz	r2,0x48(r30)
000012e0	stw	r0,__mh_bundle_header(r2)
000012e4	lwz	r1,__mh_bundle_header(r1)
000012e8	lmw	r30,0xfff8(r1)
000012ec	blr
_sendRequest:
000012f0	mfspr	r0,lr
000012f4	stmw	r30,0xfff8(r1)
000012f8	stw	r0,0x8(r1)
000012fc	stwu	r1,0xff80(r1)
00001300	or	r30,r1,r1
00001304	bcl	20,31,0x1308
00001308	mfspr	r31,lr
0000130c	stw	r3,0x98(r30)
00001310	stw	r4,0x9c(r30)
00001314	stw	r5,0xa0(r30)
00001318	lwz	r0,0xa0(r30)
0000131c	cmpwi	cr7,r0,__mh_bundle_header
00001320	bge	cr7,0x1340
00001324	addis	r2,r31,0x1
00001328	addi	r3,r2,0x490
0000132c	lwz	r4,0xa0(r30)
00001330	bl	_dbtrace
00001334	li	r0,__mh_bundle_header
00001338	stw	r0,0x68(r30)
0000133c	b	0x144c
00001340	addis	r2,r31,0x1
00001344	addi	r2,r2,0x2608
00001348	lwz	r0,__mh_bundle_header(r2)
0000134c	cmpwi	cr7,r0,__mh_bundle_header
00001350	bge	cr7,0x137c
00001354	addis	r2,r31,0x1
00001358	addi	r2,r2,0x2608
0000135c	lwz	r0,__mh_bundle_header(r2)
00001360	addis	r2,r31,0x1
00001364	addi	r3,r2,0x4a0
00001368	or	r4,r0,r0
0000136c	bl	_dbtrace
00001370	li	r0,__mh_bundle_header
00001374	stw	r0,0x68(r30)
00001378	b	0x144c
0000137c	lis	r0,0x304
00001380	ori	r0,r0,0x83a0
00001384	stw	r0,0x3c(r30)
00001388	addis	r2,r31,0x1
0000138c	lwz	r2,0x1d08(r2)
00001390	lwz	r2,__mh_bundle_header(r2)
00001394	addi	r0,r2,0x1
00001398	addis	r2,r31,0x1
0000139c	lwz	r2,0x1d08(r2)
000013a0	stw	r0,__mh_bundle_header(r2)
000013a4	addis	r2,r31,0x1
000013a8	lwz	r2,0x1d08(r2)
000013ac	lwz	r0,__mh_bundle_header(r2)
000013b0	stw	r0,0x40(r30)
000013b4	lwz	r0,0x98(r30)
000013b8	stw	r0,0x44(r30)
000013bc	addi	r0,r30,0x3c
000013c0	stw	r0,0x50(r30)
000013c4	lwz	r0,0xa0(r30)
000013c8	cmpwi	cr7,r0,__mh_bundle_header
000013cc	beq	cr7,0x140c
000013d0	li	r0,0x12
000013d4	stw	r0,0x54(r30)
000013d8	lwz	r2,0xa0(r30)
000013dc	addi	r0,r2,0x1
000013e0	stw	r0,0x48(r30)
000013e4	li	r0,0xfeff
000013e8	sth	r0,0x4c(r30)
000013ec	lwz	r0,0x9c(r30)
000013f0	stw	r0,0x58(r30)
000013f4	lwz	r0,0xa0(r30)
000013f8	rlwinm	r0,r0,1,0,30
000013fc	stw	r0,0x5c(r30)
00001400	li	r0,0x2
00001404	stw	r0,0x38(r30)
00001408	b	0x1424
0000140c	li	r0,0x10
00001410	stw	r0,0x54(r30)
00001414	li	r0,__mh_bundle_header
00001418	stw	r0,0x48(r30)
0000141c	li	r0,0x1
00001420	stw	r0,0x38(r30)
00001424	addis	r2,r31,0x1
00001428	addi	r2,r2,0x2608
0000142c	lwz	r0,__mh_bundle_header(r2)
00001430	addi	r2,r30,0x50
00001434	or	r3,r0,r0
00001438	or	r4,r2,r2
0000143c	lwz	r5,0x38(r30)
00001440	bl	_sendall
00001444	or	r0,r3,r3
00001448	stw	r0,0x68(r30)
0000144c	lwz	r0,0x68(r30)
00001450	or	r3,r0,r0
00001454	lwz	r1,__mh_bundle_header(r1)
00001458	lwz	r0,0x8(r1)
0000145c	mtspr	lr,r0
00001460	lmw	r30,0xfff8(r1)
00001464	blr
_recvall:
00001468	mfspr	r0,lr
0000146c	stmw	r30,0xfff8(r1)
00001470	stw	r0,0x8(r1)
00001474	stwu	r1,0xbf00(r1)
00001478	or	r30,r1,r1
0000147c	bcl	20,31,0x1480
00001480	mfspr	r31,lr
00001484	stw	r3,0x4118(r30)
00001488	stw	r4,0x411c(r30)
0000148c	stw	r5,0x4120(r30)
00001490	stw	r6,0x4124(r30)
00001494	stw	r7,0x4128(r30)
00001498	lwz	r0,0x411c(r30)
0000149c	stw	r0,0x44(r30)
000014a0	lwz	r0,0x4120(r30)
000014a4	stw	r0,0x40(r30)
000014a8	b	0x1728
000014ac	addi	r0,r30,0x58
000014b0	or	r3,r0,r0
000014b4	li	r4,0x80
000014b8	bl	0x10e40	; symbol stub for: _bzero
000014bc	addis	r2,r31,0x1
000014c0	addi	r2,r2,0x2490
000014c4	lwz	r0,__mh_bundle_header(r2)
000014c8	stw	r0,0x38(r30)
000014cc	lwz	r0,0x38(r30)
000014d0	rlwinm	r0,r0,27,5,31
000014d4	or	r11,r0,r0
000014d8	rlwinm	r2,r0,2,0,29
000014dc	addi	r0,r30,0x38
000014e0	add	r2,r2,r0
000014e4	addi	r2,r2,0x20
000014e8	lwz	r9,__mh_bundle_header(r2)
000014ec	lwz	r0,0x38(r30)
000014f0	rlwinm	r2,r0,0,27,31
000014f4	li	r0,0x1
000014f8	slw	r0,r0,r2
000014fc	or	r9,r9,r0
00001500	rlwinm	r2,r11,2,0,29
00001504	addi	r0,r30,0x38
00001508	add	r2,r2,r0
0000150c	addi	r2,r2,0x20
00001510	stw	r9,__mh_bundle_header(r2)
00001514	addi	r0,r30,0x48
00001518	or	r3,r0,r0
0000151c	li	r4,__mh_bundle_header
00001520	bl	0x110e0	; symbol stub for: _gettimeofday
00001524	addis	r2,r31,0x1
00001528	addi	r2,r2,0x2490
0000152c	lwz	r2,__mh_bundle_header(r2)
00001530	addi	r0,r2,0x1
00001534	addi	r2,r30,0x58
00001538	or	r3,r0,r0
0000153c	or	r4,r2,r2
00001540	li	r5,__mh_bundle_header
00001544	li	r6,__mh_bundle_header
00001548	lwz	r7,0x4128(r30)
0000154c	bl	0x11420	; symbol stub for: _select
00001550	or	r0,r3,r3
00001554	stw	r0,0x3c(r30)
00001558	lwz	r0,0x3c(r30)
0000155c	cmpwi	cr7,r0,__mh_bundle_header
00001560	bge	cr7,0x15c4
00001564	bl	0x10d60	; symbol stub for: ___error
00001568	or	r2,r3,r3
0000156c	lwz	r0,__mh_bundle_header(r2)
00001570	cmpwi	cr7,r0,0x4
00001574	beq	cr7,0x15c4
00001578	bl	0x10d60	; symbol stub for: ___error
0000157c	or	r2,r3,r3
00001580	lwz	r0,__mh_bundle_header(r2)
00001584	or	r3,r0,r0
00001588	bl	0x11520	; symbol stub for: _strerror
0000158c	or	r0,r3,r3
00001590	lwz	r2,0x4128(r30)
00001594	lwz	r9,__mh_bundle_header(r2)
00001598	lwz	r2,0x4128(r30)
0000159c	lwz	r11,0x4(r2)
000015a0	addis	r2,r31,0x1
000015a4	addi	r3,r2,0x33c
000015a8	or	r4,r0,r0
000015ac	or	r5,r9,r9
000015b0	or	r6,r11,r11
000015b4	bl	_dbtrace
000015b8	li	r0,__mh_bundle_header
000015bc	stw	r0,0x40e0(r30)
000015c0	b	0x1798
000015c4	addi	r0,r30,0x50
000015c8	or	r3,r0,r0
000015cc	li	r4,__mh_bundle_header
000015d0	bl	0x110e0	; symbol stub for: _gettimeofday
000015d4	addi	r0,r30,0x50
000015d8	addi	r2,r30,0x48
000015dc	or	r3,r0,r0
000015e0	or	r4,r2,r2
000015e4	bl	_subtract_timevals
000015e8	addi	r0,r30,0x50
000015ec	lwz	r3,0x4128(r30)
000015f0	or	r4,r0,r0
000015f4	bl	_subtract_timevals
000015f8	lwz	r0,0x3c(r30)
000015fc	cmpwi	cr7,r0,__mh_bundle_header
00001600	ble	cr7,0x1728
00001604	lwz	r0,0x411c(r30)
00001608	cmpwi	cr7,r0,__mh_bundle_header
0000160c	bne	cr7,0x169c
00001610	addis	r2,r31,0x1
00001614	addi	r2,r2,0x2490
00001618	lwz	r2,__mh_bundle_header(r2)
0000161c	stw	r2,0x40dc(r30)
00001620	lwz	r0,0x40(r30)
00001624	stw	r0,0x40d8(r30)
00001628	lwz	r0,0x40d8(r30)
0000162c	cmplwi	cr7,r0,0x4000
00001630	ble	cr7,0x163c
00001634	li	r0,0x4000
00001638	stw	r0,0x40d8(r30)
0000163c	addi	r0,r30,0xd8
00001640	lwz	r3,0x40dc(r30)
00001644	or	r4,r0,r0
00001648	lwz	r5,0x40d8(r30)
0000164c	li	r6,__mh_bundle_header
00001650	bl	0x113e0	; symbol stub for: _recv
00001654	or	r0,r3,r3
00001658	stw	r0,0x3c(r30)
0000165c	lwz	r0,0x3c(r30)
00001660	cmpwi	cr7,r0,__mh_bundle_header
00001664	bgt	cr7,0x1718
00001668	bl	0x10d60	; symbol stub for: ___error
0000166c	or	r2,r3,r3
00001670	lwz	r0,__mh_bundle_header(r2)
00001674	or	r3,r0,r0
00001678	bl	0x11520	; symbol stub for: _strerror
0000167c	or	r0,r3,r3
00001680	addis	r2,r31,0x1
00001684	addi	r3,r2,0x358
00001688	or	r4,r0,r0
0000168c	bl	_dbtrace
00001690	li	r0,__mh_bundle_header
00001694	stw	r0,0x40e0(r30)
00001698	b	0x1798
0000169c	addis	r2,r31,0x1
000016a0	addi	r2,r2,0x2490
000016a4	lwz	r0,__mh_bundle_header(r2)
000016a8	or	r3,r0,r0
000016ac	lwz	r4,0x44(r30)
000016b0	lwz	r5,0x40(r30)
000016b4	li	r6,__mh_bundle_header
000016b8	bl	0x113e0	; symbol stub for: _recv
000016bc	or	r0,r3,r3
000016c0	stw	r0,0x3c(r30)
000016c4	lwz	r0,0x3c(r30)
000016c8	cmpwi	cr7,r0,__mh_bundle_header
000016cc	bgt	cr7,0x1704
000016d0	bl	0x10d60	; symbol stub for: ___error
000016d4	or	r2,r3,r3
000016d8	lwz	r0,__mh_bundle_header(r2)
000016dc	or	r3,r0,r0
000016e0	bl	0x11520	; symbol stub for: _strerror
000016e4	or	r0,r3,r3
000016e8	addis	r2,r31,0x1
000016ec	addi	r3,r2,0x36c
000016f0	or	r4,r0,r0
000016f4	bl	_dbtrace
000016f8	li	r0,__mh_bundle_header
000016fc	stw	r0,0x40e0(r30)
00001700	b	0x1798
00001704	lwz	r0,0x3c(r30)
00001708	or	r2,r0,r0
0000170c	lwz	r0,0x44(r30)
00001710	add	r0,r0,r2
00001714	stw	r0,0x44(r30)
00001718	lwz	r0,0x3c(r30)
0000171c	lwz	r2,0x40(r30)
00001720	subf	r0,r0,r2
00001724	stw	r0,0x40(r30)
00001728	lwz	r2,0x4128(r30)
0000172c	lwz	r0,__mh_bundle_header(r2)
00001730	cmpwi	cr7,r0,__mh_bundle_header
00001734	blt	cr7,0x1754
00001738	lwz	r2,0x4128(r30)
0000173c	lwz	r0,0x4(r2)
00001740	cmpwi	cr7,r0,__mh_bundle_header
00001744	blt	cr7,0x1754
00001748	lwz	r0,0x40(r30)
0000174c	cmpwi	cr7,r0,__mh_bundle_header
00001750	bne	cr7,0x14ac
00001754	lwz	r0,0x40(r30)
00001758	cmpwi	cr7,r0,__mh_bundle_header
0000175c	beq	cr7,0x1784
00001760	lwz	r2,0x4128(r30)
00001764	lwz	r9,__mh_bundle_header(r2)
00001768	lwz	r2,0x4128(r30)
0000176c	lwz	r0,0x4(r2)
00001770	addis	r2,r31,0x1
00001774	addi	r3,r2,0x380
00001778	or	r4,r9,r9
0000177c	or	r5,r0,r0
00001780	bl	_dbtrace
00001784	lwz	r0,0x40(r30)
00001788	cmpwi	cr7,r0,__mh_bundle_header
0000178c	mfcr	r0
00001790	rlwinm	r0,r0,31,31,31
00001794	stw	r0,0x40e0(r30)
00001798	lwz	r0,0x40e0(r30)
0000179c	or	r3,r0,r0
000017a0	lwz	r1,__mh_bundle_header(r1)
000017a4	lwz	r0,0x8(r1)
000017a8	mtspr	lr,r0
000017ac	lmw	r30,0xfff8(r1)
000017b0	blr
_getResponse:
000017b4	mfspr	r0,lr
000017b8	stmw	r30,0xfff8(r1)
000017bc	stw	r0,0x8(r1)
000017c0	stwu	r1,0xff80(r1)
000017c4	or	r30,r1,r1
000017c8	bcl	20,31,0x17cc
000017cc	mfspr	r31,lr
000017d0	stw	r3,0x98(r30)
000017d4	stw	r4,0x9c(r30)
000017d8	addis	r2,r31,0x1
000017dc	addi	r2,r2,0xfedc
000017e0	lwz	r0,__mh_bundle_header(r2)
000017e4	lwz	r2,0x4(r2)
000017e8	stw	r0,0x40(r30)
000017ec	stw	r2,0x44(r30)
000017f0	addis	r2,r31,0x1
000017f4	addi	r2,r2,0x2144
000017f8	lwz	r0,__mh_bundle_header(r2)
000017fc	cmpwi	cr7,r0,__mh_bundle_header
00001800	bge	cr7,0x182c
00001804	addis	r2,r31,0x1
00001808	addi	r2,r2,0x2144
0000180c	lwz	r0,__mh_bundle_header(r2)
00001810	addis	r2,r31,0x1
00001814	addi	r3,r2,0xffdc
00001818	or	r4,r0,r0
0000181c	bl	_dbtrace
00001820	li	r0,__mh_bundle_header
00001824	stw	r0,0x5c(r30)
00001828	b	0x1990
0000182c	addis	r2,r31,0x1
00001830	addi	r2,r2,0x2144
00001834	lwz	r0,__mh_bundle_header(r2)
00001838	addi	r2,r30,0x48
0000183c	addi	r9,r30,0x40
00001840	or	r3,r0,r0
00001844	or	r4,r2,r2
00001848	li	r5,0xc
0000184c	li	r6,__mh_bundle_header
00001850	or	r7,r9,r9
00001854	bl	_recvall
00001858	or	r0,r3,r3
0000185c	cmpwi	cr7,r0,__mh_bundle_header
00001860	bne	cr7,0x1870
00001864	li	r0,0xffff
00001868	stw	r0,0x5c(r30)
0000186c	b	0x1990
00001870	lwz	r0,0x4c(r30)
00001874	or	r9,r0,r0
00001878	addis	r2,r31,0x1
0000187c	lwz	r2,0x1844(r2)
00001880	lwz	r0,__mh_bundle_header(r2)
00001884	cmpw	cr7,r9,r0
00001888	bne	cr7,0x182c
0000188c	lwz	r0,0x50(r30)
00001890	stw	r0,0x3c(r30)
00001894	lwz	r2,0x9c(r30)
00001898	stw	r2,0x60(r30)
0000189c	lwz	r0,0x3c(r30)
000018a0	stw	r0,0x58(r30)
000018a4	lwz	r2,0x58(r30)
000018a8	lwz	r0,0x60(r30)
000018ac	cmplw	cr7,r2,r0
000018b0	ble	cr7,0x18bc
000018b4	lwz	r2,0x60(r30)
000018b8	stw	r2,0x58(r30)
000018bc	lwz	r0,0x58(r30)
000018c0	stw	r0,0x38(r30)
000018c4	lwz	r0,0x38(r30)
000018c8	cmpwi	cr7,r0,__mh_bundle_header
000018cc	beq	cr7,0x1988
000018d0	addis	r2,r31,0x1
000018d4	addi	r2,r2,0x2144
000018d8	lwz	r0,__mh_bundle_header(r2)
000018dc	lwz	r2,0x38(r30)
000018e0	addi	r9,r30,0x40
000018e4	or	r3,r0,r0
000018e8	lwz	r4,0x98(r30)
000018ec	or	r5,r2,r2
000018f0	li	r6,__mh_bundle_header
000018f4	or	r7,r9,r9
000018f8	bl	_recvall
000018fc	or	r0,r3,r3
00001900	cmpwi	cr7,r0,__mh_bundle_header
00001904	bne	cr7,0x1914
00001908	li	r0,0xffff
0000190c	stw	r0,0x5c(r30)
00001910	b	0x1990
00001914	lwz	r0,0x3c(r30)
00001918	lwz	r2,0x9c(r30)
0000191c	cmplw	cr7,r0,r2
00001920	ble	cr7,0x1988
00001924	addis	r2,r31,0x1
00001928	addi	r2,r2,0x2144
0000192c	lwz	r9,__mh_bundle_header(r2)
00001930	lwz	r2,0x3c(r30)
00001934	lwz	r0,0x9c(r30)
00001938	subf	r0,r0,r2
0000193c	addi	r2,r30,0x40
00001940	or	r3,r9,r9
00001944	li	r4,__mh_bundle_header
00001948	or	r5,r0,r0
0000194c	li	r6,__mh_bundle_header
00001950	or	r7,r2,r2
00001954	bl	_recvall
00001958	or	r0,r3,r3
0000195c	cmpwi	cr7,r0,__mh_bundle_header
00001960	bne	cr7,0x1988
00001964	addis	r2,r31,0x1
00001968	addi	r2,r2,0x2144
0000196c	lwz	r0,__mh_bundle_header(r2)
00001970	or	r3,r0,r0
00001974	bl	0x10f20	; symbol stub for: _close
00001978	addis	r2,r31,0x1
0000197c	addi	r2,r2,0x2144
00001980	li	r0,0xffff
00001984	stw	r0,__mh_bundle_header(r2)
00001988	lwz	r0,0x38(r30)
0000198c	stw	r0,0x5c(r30)
00001990	lwz	r0,0x5c(r30)
00001994	or	r3,r0,r0
00001998	lwz	r1,__mh_bundle_header(r1)
0000199c	lwz	r0,0x8(r1)
000019a0	mtspr	lr,r0
000019a4	lmw	r30,0xfff8(r1)
000019a8	blr
_dropboxRequest:
000019ac	mfspr	r0,lr
000019b0	stmw	r30,0xfff8(r1)
000019b4	stw	r0,0x8(r1)
000019b8	stwu	r1,0xff90(r1)
000019bc	or	r30,r1,r1
000019c0	bcl	20,31,0x19c4
000019c4	mfspr	r31,lr
000019c8	stw	r3,0x88(r30)
000019cc	stw	r4,0x8c(r30)
000019d0	stw	r5,0x90(r30)
000019d4	stw	r6,0x94(r30)
000019d8	stw	r7,0x98(r30)
000019dc	li	r0,0xffff
000019e0	stw	r0,0x40(r30)
000019e4	addis	r2,r31,0x1
000019e8	lwz	r3,0x1650(r2)
000019ec	bl	0x11380	; symbol stub for: _pthread_mutex_lock
000019f0	or	r0,r3,r3
000019f4	cmpwi	cr7,r0,__mh_bundle_header
000019f8	bge	cr7,0x1a08
000019fc	li	r0,0xffff
00001a00	stw	r0,0x58(r30)
00001a04	b	0x1bd0
00001a08	addi	r0,r30,0x44
00001a0c	or	r3,r0,r0
00001a10	li	r4,__mh_bundle_header
00001a14	bl	0x110e0	; symbol stub for: _gettimeofday
00001a18	addi	r0,r30,0x44
00001a1c	or	r3,r0,r0
00001a20	addis	r2,r31,0x1
00001a24	lwz	r4,0x1644(r2)
00001a28	bl	_subtract_timevals
00001a2c	lwz	r0,0x44(r30)
00001a30	cmpwi	cr7,r0,__mh_bundle_header
00001a34	blt	cr7,0x1a44
00001a38	lwz	r0,0x48(r30)
00001a3c	cmpwi	cr7,r0,__mh_bundle_header
00001a40	bge	cr7,0x1a5c
00001a44	addis	r2,r31,0x1
00001a48	lwz	r3,0x1650(r2)
00001a4c	bl	0x113a0	; symbol stub for: _pthread_mutex_unlock
00001a50	li	r0,0xffff
00001a54	stw	r0,0x58(r30)
00001a58	b	0x1bd0
00001a5c	addis	r2,r31,0x1
00001a60	addi	r2,r2,0x1f4c
00001a64	lwz	r0,__mh_bundle_header(r2)
00001a68	cmpwi	cr7,r0,__mh_bundle_header
00001a6c	bge	cr7,0x1a80
00001a70	bl	_reconnect
00001a74	or	r0,r3,r3
00001a78	cmpwi	cr7,r0,__mh_bundle_header
00001a7c	beq	cr7,0x1b1c
00001a80	li	r0,0x2
00001a84	stw	r0,0x3c(r30)
00001a88	lwz	r3,0x88(r30)
00001a8c	lwz	r4,0x8c(r30)
00001a90	lwz	r5,0x90(r30)
00001a94	bl	_sendRequest
00001a98	or	r0,r3,r3
00001a9c	stb	r0,0x38(r30)
00001aa0	lwz	r0,0x94(r30)
00001aa4	cmpwi	cr7,r0,__mh_bundle_header
00001aa8	beq	cr7,0x1acc
00001aac	lwz	r3,0x94(r30)
00001ab0	lwz	r4,0x98(r30)
00001ab4	bl	_getResponse
00001ab8	or	r0,r3,r3
00001abc	stw	r0,0x40(r30)
00001ac0	lwz	r0,0x40(r30)
00001ac4	cmpwi	cr7,r0,__mh_bundle_header
00001ac8	bge	cr7,0x1b1c
00001acc	lwz	r2,0x3c(r30)
00001ad0	addi	r0,r2,0xffff
00001ad4	stw	r0,0x3c(r30)
00001ad8	lwz	r0,0x3c(r30)
00001adc	cmpwi	cr7,r0,__mh_bundle_header
00001ae0	beq	cr7,0x1af8
00001ae4	bl	_reconnect
00001ae8	or	r0,r3,r3
00001aec	cmpwi	cr7,r0,__mh_bundle_header
00001af0	beq	cr7,0x1b1c
00001af4	b	0x1a88
00001af8	addis	r2,r31,0x1
00001afc	addi	r2,r2,0x1f4c
00001b00	lwz	r0,__mh_bundle_header(r2)
00001b04	or	r3,r0,r0
00001b08	bl	0x10f20	; symbol stub for: _close
00001b0c	addis	r2,r31,0x1
00001b10	addi	r2,r2,0x1f4c
00001b14	li	r0,0xffff
00001b18	stw	r0,__mh_bundle_header(r2)
00001b1c	lwz	r0,0x40(r30)
00001b20	cmpwi	cr7,r0,__mh_bundle_header
00001b24	bge	cr7,0x1bbc
00001b28	addis	r2,r31,0x1
00001b2c	lwz	r3,0x1644(r2)
00001b30	li	r4,__mh_bundle_header
00001b34	bl	0x110e0	; symbol stub for: _gettimeofday
00001b38	addis	r2,r31,0x1
00001b3c	lwz	r2,0x1644(r2)
00001b40	lwz	r0,0x4(r2)
00001b44	or	r2,r0,r0
00001b48	addis	r2,r2,0x2
00001b4c	addi	r0,r2,0x86a0
00001b50	addis	r2,r31,0x1
00001b54	lwz	r2,0x1644(r2)
00001b58	stw	r0,0x4(r2)
00001b5c	addis	r2,r31,0x1
00001b60	lwz	r2,0x1644(r2)
00001b64	lwz	r0,0x4(r2)
00001b68	or	r2,r0,r0
00001b6c	lis	r0,0xf
00001b70	ori	r0,r0,0x423f
00001b74	cmplw	cr7,r2,r0
00001b78	ble	cr7,0x1bbc
00001b7c	addis	r2,r31,0x1
00001b80	lwz	r2,0x1644(r2)
00001b84	lwz	r2,__mh_bundle_header(r2)
00001b88	addi	r0,r2,0x1
00001b8c	addis	r2,r31,0x1
00001b90	lwz	r2,0x1644(r2)
00001b94	stw	r0,__mh_bundle_header(r2)
00001b98	addis	r2,r31,0x1
00001b9c	lwz	r2,0x1644(r2)
00001ba0	lwz	r0,0x4(r2)
00001ba4	or	r2,r0,r0
00001ba8	addis	r2,r2,0xfff1
00001bac	addi	r0,r2,0xbdc0
00001bb0	addis	r2,r31,0x1
00001bb4	lwz	r2,0x1644(r2)
00001bb8	stw	r0,0x4(r2)
00001bbc	addis	r2,r31,0x1
00001bc0	lwz	r3,0x1650(r2)
00001bc4	bl	0x113a0	; symbol stub for: _pthread_mutex_unlock
00001bc8	lwz	r0,0x40(r30)
00001bcc	stw	r0,0x58(r30)
00001bd0	lwz	r0,0x58(r30)
00001bd4	or	r3,r0,r0
00001bd8	lwz	r1,__mh_bundle_header(r1)
00001bdc	lwz	r0,0x8(r1)
00001be0	mtspr	lr,r0
00001be4	lmw	r30,0xfff8(r1)
00001be8	blr
_DropboxCommunication:
00001bec	mfspr	r0,lr
00001bf0	stmw	r30,0xfff8(r1)
00001bf4	stw	r0,0x8(r1)
00001bf8	stwu	r1,0xffa0(r1)
00001bfc	or	r30,r1,r1
00001c00	bcl	20,31,0x1c04
00001c04	mfspr	r31,lr
00001c08	li	r0,__mh_bundle_header
00001c0c	stw	r0,0x38(r30)
00001c10	addis	r2,r31,0x1
00001c14	lwz	r3,0x1410(r2)
00001c18	li	r4,__mh_bundle_header
00001c1c	bl	0x11360	; symbol stub for: _pthread_mutex_init
00001c20	or	r0,r3,r3
00001c24	stw	r0,0x38(r30)
00001c28	lwz	r0,0x38(r30)
00001c2c	cmpwi	cr7,r0,__mh_bundle_header
00001c30	beq	cr7,0x1c60
00001c34	addis	r2,r31,0x1
00001c38	lwz	r2,0x1408(r2)
00001c3c	addi	r0,r2,0xb0
00001c40	or	r3,r0,r0
00001c44	addis	r2,r31,0x1
00001c48	addi	r4,r2,0xfc14
00001c4c	lwz	r5,0x38(r30)
00001c50	bl	0x11000	; symbol stub for: _fprintf$LDBL128
00001c54	lwz	r0,0x38(r30)
00001c58	stw	r0,0x48(r30)
00001c5c	b	0x1c7c
00001c60	addis	r2,r31,0x1
00001c64	addi	r2,r2,0x1d0c
00001c68	li	r0,0xffff
00001c6c	stw	r0,__mh_bundle_header(r2)
00001c70	bl	_reconnect
00001c74	li	r0,__mh_bundle_header
00001c78	stw	r0,0x48(r30)
00001c7c	lwz	r0,0x48(r30)
00001c80	or	r3,r0,r0
00001c84	lwz	r1,__mh_bundle_header(r1)
00001c88	lwz	r0,0x8(r1)
00001c8c	mtspr	lr,r0
00001c90	lmw	r30,0xfff8(r1)
00001c94	blr
_DebugAE:
00001c98	mfspr	r0,lr
00001c9c	stmw	r30,0xfff8(r1)
00001ca0	stw	r0,0x8(r1)
00001ca4	stwu	r1,0xffa0(r1)
00001ca8	or	r30,r1,r1
00001cac	bcl	20,31,0x1cb0
00001cb0	mfspr	r31,lr
00001cb4	stw	r3,0x78(r30)
00001cb8	addi	r0,r30,0x3c
00001cbc	lwz	r3,0x78(r30)
00001cc0	or	r4,r0,r0
00001cc4	bl	0xfa80	; symbol stub for: _AEPrintDescToHandle
00001cc8	addis	r2,r31,0x1
00001ccc	addi	r0,r2,0x1760
00001cd0	lwz	r2,0x3c(r30)
00001cd4	lwz	r2,__mh_bundle_header(r2)
00001cd8	li	r3,__mh_bundle_header
00001cdc	li	r4,__mh_bundle_header
00001ce0	or	r5,r0,r0
00001ce4	or	r6,r2,r2
00001ce8	bl	0x10020	; symbol stub for: _CFStringCreateWithFormat
00001cec	or	r0,r3,r3
00001cf0	stw	r0,0x38(r30)
00001cf4	lwz	r3,0x38(r30)
00001cf8	bl	0xff80	; symbol stub for: _CFShow
00001cfc	lwz	r0,0x38(r30)
00001d00	cmpwi	cr7,r0,__mh_bundle_header
00001d04	beq	cr7,0x1d10
00001d08	lwz	r3,0x38(r30)
00001d0c	bl	0xff40	; symbol stub for: _CFRelease
00001d10	lwz	r0,0x3c(r30)
00001d14	or	r3,r0,r0
00001d18	bl	0x104e0	; symbol stub for: _DisposeHandle
00001d1c	lwz	r1,__mh_bundle_header(r1)
00001d20	lwz	r0,0x8(r1)
00001d24	mtspr	lr,r0
00001d28	lmw	r30,0xfff8(r1)
00001d2c	blr
_BuildPath:
00001d30	mfspr	r0,lr
00001d34	stmw	r30,0xfff8(r1)
00001d38	stw	r0,0x8(r1)
00001d3c	stwu	r1,0xfd10(r1)
00001d40	or	r30,r1,r1
00001d44	bcl	20,31,0x1d48
00001d48	mfspr	r31,lr
00001d4c	stw	r3,0x308(r30)
00001d50	li	r0,__mh_bundle_header
00001d54	stw	r0,0x5c(r30)
00001d58	addi	r0,r30,0x64
00001d5c	addi	r2,r30,0x68
00001d60	lwz	r3,0x308(r30)
00001d64	lis	r4,0x6672
00001d68	ori	r4,r4,0x6f6d
00001d6c	or	r5,r0,r0
00001d70	or	r6,r2,r2
00001d74	bl	0xfb20	; symbol stub for: _AESizeOfParam
00001d78	or	r0,r3,r3
00001d7c	sth	r0,0x60(r30)
00001d80	lhz	r0,0x60(r30)
00001d84	rlwinm	r0,r0,0,16,31
00001d88	neg	r0,r0
00001d8c	rlwinm	r0,r0,1,31,31
00001d90	cmpwi	cr7,r0,__mh_bundle_header
00001d94	beq	cr7,0x1dd0
00001d98	lis	r3,0x3f2a
00001d9c	ori	r3,r3,0x3f2a
00001da0	li	r4,__mh_bundle_header
00001da4	addis	r2,r31,0x1
00001da8	addi	r5,r2,0xfb08
00001dac	addis	r2,r31,0x1
00001db0	addi	r6,r2,0xfb2c
00001db4	li	r7,__mh_bundle_header
00001db8	addis	r2,r31,0x1
00001dbc	addi	r8,r2,0xfb44
00001dc0	li	r9,0x30
00001dc4	li	r10,__mh_bundle_header
00001dc8	bl	0x10480	; symbol stub for: _DebugAssert
00001dcc	b	0x23e8
00001dd0	lwz	r0,0x64(r30)
00001dd4	lis	r2,0x6e75
00001dd8	ori	r2,r2,0x6c6c
00001ddc	cmpw	cr7,r0,r2
00001de0	bne	cr7,0x21c0
00001de4	addi	r0,r30,0x64
00001de8	addi	r2,r30,0x78
00001dec	addi	r9,r30,0x68
00001df0	lwz	r3,0x308(r30)
00001df4	lis	r4,0x7761
00001df8	ori	r4,r4,0x6e74
00001dfc	lis	r5,0x7479
00001e00	ori	r5,r5,0x7065
00001e04	or	r6,r0,r0
00001e08	or	r7,r2,r2
00001e0c	li	r8,0x4
00001e10	bl	0xfa60	; symbol stub for: _AEGetParamPtr
00001e14	or	r0,r3,r3
00001e18	sth	r0,0x60(r30)
00001e1c	lhz	r0,0x60(r30)
00001e20	rlwinm	r0,r0,0,16,31
00001e24	neg	r0,r0
00001e28	rlwinm	r0,r0,1,31,31
00001e2c	cmpwi	cr7,r0,__mh_bundle_header
00001e30	beq	cr7,0x1e6c
00001e34	lis	r3,0x3f2a
00001e38	ori	r3,r3,0x3f2a
00001e3c	li	r4,__mh_bundle_header
00001e40	addis	r2,r31,0x1
00001e44	addi	r5,r2,0xfb08
00001e48	addis	r2,r31,0x1
00001e4c	addi	r6,r2,0xfb2c
00001e50	li	r7,__mh_bundle_header
00001e54	addis	r2,r31,0x1
00001e58	addi	r8,r2,0xfb44
00001e5c	li	r9,0x44
00001e60	li	r10,__mh_bundle_header
00001e64	bl	0x10480	; symbol stub for: _DebugAssert
00001e68	b	0x23e8
00001e6c	lwz	r0,0x78(r30)
00001e70	lis	r2,0x7072
00001e74	ori	r2,r2,0x6f70
00001e78	cmpw	cr7,r0,r2
00001e7c	bne	cr7,0x1f3c
00001e80	addi	r0,r30,0x64
00001e84	addi	r2,r30,0x74
00001e88	addi	r9,r30,0x68
00001e8c	lwz	r3,0x308(r30)
00001e90	lis	r4,0x7365
00001e94	ori	r4,r4,0x6c64
00001e98	lis	r5,0x7479
00001e9c	ori	r5,r5,0x7065
00001ea0	or	r6,r0,r0
00001ea4	or	r7,r2,r2
00001ea8	li	r8,0x4
00001eac	bl	0xfa60	; symbol stub for: _AEGetParamPtr
00001eb0	or	r0,r3,r3
00001eb4	sth	r0,0x60(r30)
00001eb8	lhz	r0,0x60(r30)
00001ebc	rlwinm	r0,r0,0,16,31
00001ec0	neg	r0,r0
00001ec4	rlwinm	r0,r0,1,31,31
00001ec8	cmpwi	cr7,r0,__mh_bundle_header
00001ecc	beq	cr7,0x1f08
00001ed0	lis	r3,0x3f2a
00001ed4	ori	r3,r3,0x3f2a
00001ed8	li	r4,__mh_bundle_header
00001edc	addis	r2,r31,0x1
00001ee0	addi	r5,r2,0xfb08
00001ee4	addis	r2,r31,0x1
00001ee8	addi	r6,r2,0xfb2c
00001eec	li	r7,__mh_bundle_header
00001ef0	addis	r2,r31,0x1
00001ef4	addi	r8,r2,0xfb44
00001ef8	li	r9,0x55
00001efc	li	r10,__mh_bundle_header
00001f00	bl	0x10480	; symbol stub for: _DebugAssert
00001f04	b	0x23e8
00001f08	lwz	r0,0x74(r30)
00001f0c	lis	r2,0x7364
00001f10	ori	r2,r2,0x736b
00001f14	cmpw	cr7,r0,r2
00001f18	bne	cr7,0x23e8
00001f1c	li	r3,0x1
00001f20	bl	0x111c0	; symbol stub for: _malloc
00001f24	or	r0,r3,r3
00001f28	stw	r0,0x5c(r30)
00001f2c	lwz	r2,0x5c(r30)
00001f30	li	r0,__mh_bundle_header
00001f34	stb	r0,__mh_bundle_header(r2)
00001f38	b	0x23e8
00001f3c	lwz	r0,0x78(r30)
00001f40	lis	r2,0x6364
00001f44	ori	r2,r2,0x6973
00001f48	cmpw	cr7,r0,r2
00001f4c	beq	cr7,0x1f64
00001f50	lwz	r0,0x78(r30)
00001f54	lis	r2,0x636f
00001f58	ori	r2,r2,0x626a
00001f5c	cmpw	cr7,r0,r2
00001f60	bne	cr7,0x23e8
00001f64	addi	r0,r30,0x6c
00001f68	lwz	r3,0x308(r30)
00001f6c	lis	r4,0x7365
00001f70	ori	r4,r4,0x6c64
00001f74	lis	r5,0x7574
00001f78	ori	r5,r5,0x7874
00001f7c	or	r6,r0,r0
00001f80	bl	0xfa40	; symbol stub for: _AEGetParamDesc
00001f84	or	r0,r3,r3
00001f88	sth	r0,0x60(r30)
00001f8c	lhz	r0,0x60(r30)
00001f90	rlwinm	r0,r0,0,16,31
00001f94	neg	r0,r0
00001f98	rlwinm	r0,r0,1,31,31
00001f9c	cmpwi	cr7,r0,__mh_bundle_header
00001fa0	beq	cr7,0x1fdc
00001fa4	lis	r3,0x3f2a
00001fa8	ori	r3,r3,0x3f2a
00001fac	li	r4,__mh_bundle_header
00001fb0	addis	r2,r31,0x1
00001fb4	addi	r5,r2,0xfb08
00001fb8	addis	r2,r31,0x1
00001fbc	addi	r6,r2,0xfb2c
00001fc0	li	r7,__mh_bundle_header
00001fc4	addis	r2,r31,0x1
00001fc8	addi	r8,r2,0xfb44
00001fcc	li	r9,0x6d
00001fd0	li	r10,__mh_bundle_header
00001fd4	bl	0x10480	; symbol stub for: _DebugAssert
00001fd8	b	0x23e8
00001fdc	addi	r0,r30,0x6c
00001fe0	or	r3,r0,r0
00001fe4	bl	0xfa00	; symbol stub for: _AEGetDescDataSize
00001fe8	or	r0,r3,r3
00001fec	stw	r0,0x58(r30)
00001ff0	lwz	r0,0x58(r30)
00001ff4	or	r3,r0,r0
00001ff8	bl	0x111c0	; symbol stub for: _malloc
00001ffc	or	r0,r3,r3
00002000	stw	r0,0x54(r30)
00002004	addi	r0,r30,0x6c
00002008	or	r3,r0,r0
0000200c	lwz	r4,0x54(r30)
00002010	lwz	r5,0x58(r30)
00002014	bl	0xf9e0	; symbol stub for: _AEGetDescData
00002018	addi	r0,r30,0x6c
0000201c	or	r3,r0,r0
00002020	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002024	li	r0,0x1
00002028	stw	r0,0x50(r30)
0000202c	b	0x211c
00002030	addi	r0,r30,0x7c
00002034	addi	r2,r30,0xd6
00002038	addi	r9,r30,0x86
0000203c	li	r3,__mh_bundle_header
00002040	lwz	r4,0x50(r30)
00002044	or	r5,r0,r0
00002048	li	r6,__mh_bundle_header
0000204c	li	r7,__mh_bundle_header
00002050	or	r8,r2,r2
00002054	bl	0x10560	; symbol stub for: _FSGetVolumeInfo
00002058	or	r0,r3,r3
0000205c	sth	r0,0x60(r30)
00002060	lhz	r0,0x60(r30)
00002064	extsh	r0,r0
00002068	cmpwi	cr7,r0,__mh_bundle_header
0000206c	bne	cr7,0x2110
00002070	lwz	r2,0x58(r30)
00002074	lhz	r0,0xd6(r30)
00002078	rlwinm	r0,r0,0,16,31
0000207c	rlwinm	r0,r0,1,0,30
00002080	cmpw	cr7,r2,r0
00002084	bne	cr7,0x2110
00002088	li	r0,__mh_bundle_header
0000208c	stw	r0,0x4c(r30)
00002090	b	0x20e0
00002094	lwz	r0,0x4c(r30)
00002098	rlwinm	r0,r0,1,0,30
0000209c	or	r2,r0,r0
000020a0	lwz	r0,0x54(r30)
000020a4	add	r2,r2,r0
000020a8	lhz	r0,__mh_bundle_header(r2)
000020ac	rlwinm	r9,r0,0,16,31
000020b0	lwz	r0,0x4c(r30)
000020b4	rlwinm	r2,r0,1,0,30
000020b8	addi	r0,r30,0x38
000020bc	add	r2,r2,r0
000020c0	addi	r2,r2,0xa0
000020c4	lhz	r0,__mh_bundle_header(r2)
000020c8	rlwinm	r0,r0,0,16,31
000020cc	cmpw	cr7,r9,r0
000020d0	bne	cr7,0x20f8
000020d4	lwz	r2,0x4c(r30)
000020d8	addi	r0,r2,0x1
000020dc	stw	r0,0x4c(r30)
000020e0	lhz	r0,0xd6(r30)
000020e4	rlwinm	r0,r0,0,16,31
000020e8	or	r2,r0,r0
000020ec	lwz	r0,0x4c(r30)
000020f0	cmpw	cr7,r2,r0
000020f4	bgt	cr7,0x2094
000020f8	lhz	r0,0xd6(r30)
000020fc	rlwinm	r0,r0,0,16,31
00002100	or	r2,r0,r0
00002104	lwz	r0,0x4c(r30)
00002108	cmpw	cr7,r2,r0
0000210c	beq	cr7,0x2130
00002110	lwz	r2,0x50(r30)
00002114	addi	r0,r2,0x1
00002118	stw	r0,0x50(r30)
0000211c	lhz	r0,0x60(r30)
00002120	extsh	r2,r0
00002124	li	r0,0xffdd
00002128	cmpw	cr7,r2,r0
0000212c	bne	cr7,0x2030
00002130	lwz	r3,0x54(r30)
00002134	bl	0x11040	; symbol stub for: _free
00002138	lhz	r0,0x60(r30)
0000213c	extsh	r2,r0
00002140	li	r0,0xffdd
00002144	cmpw	cr7,r2,r0
00002148	beq	cr7,0x23e8
0000214c	li	r0,0x80
00002150	stw	r0,0x44(r30)
00002154	lwz	r0,0x44(r30)
00002158	rlwinm	r0,r0,1,0,30
0000215c	stw	r0,0x44(r30)
00002160	lwz	r0,0x5c(r30)
00002164	cmpwi	cr7,r0,__mh_bundle_header
00002168	beq	cr7,0x2174
0000216c	lwz	r3,0x5c(r30)
00002170	bl	0x11040	; symbol stub for: _free
00002174	lwz	r0,0x44(r30)
00002178	or	r3,r0,r0
0000217c	bl	0x111c0	; symbol stub for: _malloc
00002180	or	r0,r3,r3
00002184	stw	r0,0x5c(r30)
00002188	lwz	r2,0x5c(r30)
0000218c	lwz	r9,0x44(r30)
00002190	addi	r0,r30,0x86
00002194	or	r3,r0,r0
00002198	or	r4,r2,r2
0000219c	or	r5,r9,r9
000021a0	bl	0x10580	; symbol stub for: _FSRefMakePath
000021a4	or	r0,r3,r3
000021a8	stw	r0,0x48(r30)
000021ac	lwz	r2,0x48(r30)
000021b0	li	r0,0xf7c2
000021b4	cmpw	cr7,r2,r0
000021b8	beq	cr7,0x2154
000021bc	b	0x23e8
000021c0	lwz	r0,0x64(r30)
000021c4	lis	r2,0x6f62
000021c8	ori	r2,r2,0x6a20
000021cc	cmpw	cr7,r0,r2
000021d0	bne	cr7,0x23e8
000021d4	addi	r0,r30,0x7e
000021d8	lwz	r3,0x308(r30)
000021dc	lis	r4,0x6672
000021e0	ori	r4,r4,0x6f6d
000021e4	lis	r5,0x6f62
000021e8	ori	r5,r5,0x6a20
000021ec	or	r6,r0,r0
000021f0	bl	0xfa40	; symbol stub for: _AEGetParamDesc
000021f4	or	r0,r3,r3
000021f8	sth	r0,0x60(r30)
000021fc	lhz	r0,0x60(r30)
00002200	rlwinm	r0,r0,0,16,31
00002204	neg	r0,r0
00002208	rlwinm	r0,r0,1,31,31
0000220c	cmpwi	cr7,r0,__mh_bundle_header
00002210	beq	cr7,0x224c
00002214	lis	r3,0x3f2a
00002218	ori	r3,r3,0x3f2a
0000221c	li	r4,__mh_bundle_header
00002220	addis	r2,r31,0x1
00002224	addi	r5,r2,0xfb08
00002228	addis	r2,r31,0x1
0000222c	addi	r6,r2,0xfb2c
00002230	li	r7,__mh_bundle_header
00002234	addis	r2,r31,0x1
00002238	addi	r8,r2,0xfb44
0000223c	li	r9,0xad
00002240	li	r10,__mh_bundle_header
00002244	bl	0x10480	; symbol stub for: _DebugAssert
00002248	b	0x23e8
0000224c	addi	r0,r30,0x7e
00002250	or	r3,r0,r0
00002254	bl	_BuildPath
00002258	or	r0,r3,r3
0000225c	stw	r0,0x40(r30)
00002260	addi	r0,r30,0x7e
00002264	or	r3,r0,r0
00002268	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
0000226c	lwz	r0,0x40(r30)
00002270	cmpwi	cr7,r0,__mh_bundle_header
00002274	beq	cr7,0x23e8
00002278	addi	r0,r30,0x6c
0000227c	lwz	r3,0x308(r30)
00002280	lis	r4,0x7365
00002284	ori	r4,r4,0x6c64
00002288	lis	r5,0x7574
0000228c	ori	r5,r5,0x6638
00002290	or	r6,r0,r0
00002294	bl	0xfa40	; symbol stub for: _AEGetParamDesc
00002298	or	r0,r3,r3
0000229c	sth	r0,0x60(r30)
000022a0	lhz	r0,0x60(r30)
000022a4	rlwinm	r0,r0,0,16,31
000022a8	neg	r0,r0
000022ac	rlwinm	r0,r0,1,31,31
000022b0	cmpwi	cr7,r0,__mh_bundle_header
000022b4	beq	cr7,0x22f0
000022b8	lis	r3,0x3f2a
000022bc	ori	r3,r3,0x3f2a
000022c0	li	r4,__mh_bundle_header
000022c4	addis	r2,r31,0x1
000022c8	addi	r5,r2,0xfb08
000022cc	addis	r2,r31,0x1
000022d0	addi	r6,r2,0xfb98
000022d4	li	r7,__mh_bundle_header
000022d8	addis	r2,r31,0x1
000022dc	addi	r8,r2,0xfb44
000022e0	li	r9,0xbd
000022e4	li	r10,__mh_bundle_header
000022e8	bl	0x10480	; symbol stub for: _DebugAssert
000022ec	b	0x23e0
000022f0	addi	r0,r30,0x6c
000022f4	or	r3,r0,r0
000022f8	bl	0xfa00	; symbol stub for: _AEGetDescDataSize
000022fc	or	r0,r3,r3
00002300	stw	r0,0x3c(r30)
00002304	lwz	r3,0x40(r30)
00002308	bl	0x11540	; symbol stub for: _strlen
0000230c	or	r0,r3,r3
00002310	stw	r0,0x38(r30)
00002314	lwz	r2,0x3c(r30)
00002318	lwz	r0,0x38(r30)
0000231c	add	r2,r2,r0
00002320	addi	r0,r2,0x2
00002324	or	r3,r0,r0
00002328	bl	0x111c0	; symbol stub for: _malloc
0000232c	or	r0,r3,r3
00002330	stw	r0,0x5c(r30)
00002334	lwz	r3,0x5c(r30)
00002338	lwz	r4,0x40(r30)
0000233c	lwz	r5,0x38(r30)
00002340	bl	0x11200	; symbol stub for: _memcpy
00002344	lwz	r2,0x38(r30)
00002348	lwz	r0,0x5c(r30)
0000234c	add	r0,r2,r0
00002350	or	r3,r0,r0
00002354	addis	r2,r31,0x1
00002358	addi	r4,r2,0xfbb4
0000235c	li	r5,0x1
00002360	bl	0x11200	; symbol stub for: _memcpy
00002364	lwz	r2,0x38(r30)
00002368	lwz	r0,0x5c(r30)
0000236c	add	r2,r2,r0
00002370	addi	r2,r2,0x1
00002374	addi	r0,r30,0x6c
00002378	or	r3,r0,r0
0000237c	or	r4,r2,r2
00002380	lwz	r5,0x3c(r30)
00002384	bl	0xf9e0	; symbol stub for: _AEGetDescData
00002388	or	r0,r3,r3
0000238c	sth	r0,0x60(r30)
00002390	lhz	r0,0x60(r30)
00002394	extsh	r0,r0
00002398	cmpwi	cr7,r0,__mh_bundle_header
0000239c	bne	cr7,0x23c4
000023a0	lwz	r2,0x5c(r30)
000023a4	addi	r9,r2,0x1
000023a8	lwz	r2,0x3c(r30)
000023ac	lwz	r0,0x38(r30)
000023b0	add	r0,r2,r0
000023b4	add	r2,r9,r0
000023b8	li	r0,__mh_bundle_header
000023bc	stb	r0,__mh_bundle_header(r2)
000023c0	b	0x23d4
000023c4	lwz	r3,0x5c(r30)
000023c8	bl	0x11040	; symbol stub for: _free
000023cc	li	r0,__mh_bundle_header
000023d0	stw	r0,0x5c(r30)
000023d4	addi	r0,r30,0x6c
000023d8	or	r3,r0,r0
000023dc	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
000023e0	lwz	r3,0x40(r30)
000023e4	bl	0x11040	; symbol stub for: _free
000023e8	lwz	r0,0x5c(r30)
000023ec	or	r3,r0,r0
000023f0	lwz	r1,__mh_bundle_header(r1)
000023f4	lwz	r0,0x8(r1)
000023f8	mtspr	lr,r0
000023fc	lmw	r30,0xfff8(r1)
00002400	blr
_GetFinderContext:
00002404	mfspr	r0,lr
00002408	stmw	r29,0xfff4(r1)
0000240c	stw	r0,0x8(r1)
00002410	stwu	r1,0xff20(r1)
00002414	or	r30,r1,r1
00002418	bcl	20,31,0x241c
0000241c	mfspr	r31,lr
00002420	stw	r3,0xf8(r30)
00002424	stw	r4,0xfc(r30)
00002428	li	r0,__mh_bundle_header
0000242c	stw	r0,0x44(r30)
00002430	lwz	r0,0xfc(r30)
00002434	cmpwi	cr7,r0,__mh_bundle_header
00002438	beq	cr7,0x2454
0000243c	lwz	r0,0xfc(r30)
00002440	cmpwi	cr7,r0,0x1
00002444	beq	cr7,0x2454
00002448	li	r0,0x1
0000244c	stw	r0,0xc8(r30)
00002450	b	0x245c
00002454	li	r0,__mh_bundle_header
00002458	stw	r0,0xc8(r30)
0000245c	lwz	r0,0xc8(r30)
00002460	cmpwi	cr7,r0,__mh_bundle_header
00002464	beq	cr7,0x24a0
00002468	lis	r3,0x3f2a
0000246c	ori	r3,r3,0x3f2a
00002470	li	r4,__mh_bundle_header
00002474	addis	r2,r31,0x1
00002478	addi	r5,r2,0xf4e4
0000247c	addis	r2,r31,0x1
00002480	addi	r6,r2,0xf528
00002484	li	r7,__mh_bundle_header
00002488	addis	r2,r31,0x1
0000248c	addi	r8,r2,0xf470
00002490	li	r9,0xe1
00002494	li	r10,__mh_bundle_header
00002498	bl	0x10480	; symbol stub for: _DebugAssert
0000249c	b	0x2e04
000024a0	addis	r2,r31,0x1
000024a4	addi	r2,r2,0xf294
000024a8	lwz	r0,__mh_bundle_header(r2)
000024ac	lwz	r2,0x4(r2)
000024b0	stw	r0,0x50(r30)
000024b4	stw	r2,0x54(r30)
000024b8	addi	r0,r30,0x50
000024bc	addi	r2,r30,0x48
000024c0	lis	r3,0x7073
000024c4	ori	r3,r3,0x6e20
000024c8	or	r4,r0,r0
000024cc	li	r5,0x8
000024d0	or	r6,r2,r2
000024d4	bl	0xf980	; symbol stub for: _AECreateDesc
000024d8	or	r0,r3,r3
000024dc	sth	r0,0x40(r30)
000024e0	lhz	r0,0x40(r30)
000024e4	rlwinm	r0,r0,0,16,31
000024e8	neg	r0,r0
000024ec	rlwinm	r0,r0,1,31,31
000024f0	cmpwi	cr7,r0,__mh_bundle_header
000024f4	beq	cr7,0x2530
000024f8	lis	r3,0x3f2a
000024fc	ori	r3,r3,0x3f2a
00002500	li	r4,__mh_bundle_header
00002504	addis	r2,r31,0x1
00002508	addi	r5,r2,0xf434
0000250c	addis	r2,r31,0x1
00002510	addi	r6,r2,0xf528
00002514	li	r7,__mh_bundle_header
00002518	addis	r2,r31,0x1
0000251c	addi	r8,r2,0xf470
00002520	li	r9,0xf3
00002524	li	r10,__mh_bundle_header
00002528	bl	0x10480	; symbol stub for: _DebugAssert
0000252c	b	0x2e04
00002530	lwz	r0,0xfc(r30)
00002534	cmpwi	cr7,r0,0x1
00002538	bne	cr7,0x254c
0000253c	lis	r0,0x6676
00002540	ori	r0,r0,0x7467
00002544	stw	r0,0x60(r30)
00002548	b	0x2558
0000254c	lis	r0,0x7365
00002550	ori	r0,r0,0x6c65
00002554	stw	r0,0x60(r30)
00002558	lis	r0,0x6675
0000255c	ori	r0,r0,0x726c
00002560	stw	r0,0x64(r30)
00002564	addi	r0,r30,0x48
00002568	addi	r2,r30,0x58
0000256c	lis	r3,0x636f
00002570	ori	r3,r3,0x7265
00002574	lis	r4,0x6765
00002578	ori	r4,r4,0x7464
0000257c	or	r5,r0,r0
00002580	li	r6,0xffff
00002584	li	r7,__mh_bundle_header
00002588	or	r8,r2,r2
0000258c	bl	0xf960	; symbol stub for: _AECreateAppleEvent
00002590	or	r0,r3,r3
00002594	sth	r0,0x40(r30)
00002598	lhz	r0,0x40(r30)
0000259c	rlwinm	r0,r0,0,16,31
000025a0	neg	r0,r0
000025a4	rlwinm	r0,r0,1,31,31
000025a8	cmpwi	cr7,r0,__mh_bundle_header
000025ac	beq	cr7,0x25e8
000025b0	lis	r3,0x3f2a
000025b4	ori	r3,r3,0x3f2a
000025b8	li	r4,__mh_bundle_header
000025bc	addis	r2,r31,0x1
000025c0	addi	r5,r2,0xf434
000025c4	addis	r2,r31,0x1
000025c8	addi	r6,r2,0xf544
000025cc	li	r7,__mh_bundle_header
000025d0	addis	r2,r31,0x1
000025d4	addi	r8,r2,0xf470
000025d8	li	r9,0x10c
000025dc	li	r10,__mh_bundle_header
000025e0	bl	0x10480	; symbol stub for: _DebugAssert
000025e4	b	0x2df8
000025e8	lwz	r0,0xfc(r30)
000025ec	cmpwi	cr7,r0,0x1
000025f0	bne	cr7,0x2770
000025f4	li	r0,0x1
000025f8	stw	r0,0xb4(r30)
000025fc	addi	r0,r30,0xb4
00002600	addi	r2,r30,0x70
00002604	lis	r3,0x6c6f
00002608	ori	r3,r3,0x6e67
0000260c	or	r4,r0,r0
00002610	li	r5,0x4
00002614	or	r6,r2,r2
00002618	bl	0xf980	; symbol stub for: _AECreateDesc
0000261c	or	r0,r3,r3
00002620	sth	r0,0x40(r30)
00002624	lhz	r0,0x40(r30)
00002628	rlwinm	r0,r0,0,16,31
0000262c	neg	r0,r0
00002630	rlwinm	r0,r0,1,31,31
00002634	cmpwi	cr7,r0,__mh_bundle_header
00002638	beq	cr7,0x2674
0000263c	lis	r3,0x3f2a
00002640	ori	r3,r3,0x3f2a
00002644	li	r4,__mh_bundle_header
00002648	addis	r2,r31,0x1
0000264c	addi	r5,r2,0xf434
00002650	addis	r2,r31,0x1
00002654	addi	r6,r2,0xf560
00002658	li	r7,__mh_bundle_header
0000265c	addis	r2,r31,0x1
00002660	addi	r8,r2,0xf470
00002664	li	r9,0x11f
00002668	li	r10,__mh_bundle_header
0000266c	bl	0x10480	; symbol stub for: _DebugAssert
00002670	b	0x2dec
00002674	addi	r0,r30,0x78
00002678	lis	r3,0x6e75
0000267c	ori	r3,r3,0x6c6c
00002680	li	r4,__mh_bundle_header
00002684	li	r5,__mh_bundle_header
00002688	or	r6,r0,r0
0000268c	bl	0xf980	; symbol stub for: _AECreateDesc
00002690	or	r0,r3,r3
00002694	sth	r0,0x40(r30)
00002698	lhz	r0,0x40(r30)
0000269c	rlwinm	r0,r0,0,16,31
000026a0	neg	r0,r0
000026a4	rlwinm	r0,r0,1,31,31
000026a8	cmpwi	cr7,r0,__mh_bundle_header
000026ac	beq	cr7,0x26e8
000026b0	lis	r3,0x3f2a
000026b4	ori	r3,r3,0x3f2a
000026b8	li	r4,__mh_bundle_header
000026bc	addis	r2,r31,0x1
000026c0	addi	r5,r2,0xf434
000026c4	addis	r2,r31,0x1
000026c8	addi	r6,r2,0xf57c
000026cc	li	r7,__mh_bundle_header
000026d0	addis	r2,r31,0x1
000026d4	addi	r8,r2,0xf470
000026d8	li	r9,0x126
000026dc	li	r10,__mh_bundle_header
000026e0	bl	0x10480	; symbol stub for: _DebugAssert
000026e4	b	0x2dd4
000026e8	addi	r0,r30,0x78
000026ec	addi	r2,r30,0x70
000026f0	addi	r9,r30,0x68
000026f4	lis	r3,0x6377
000026f8	ori	r3,r3,0x696e
000026fc	or	r4,r0,r0
00002700	lis	r5,0x696e
00002704	ori	r5,r5,0x6478
00002708	or	r6,r2,r2
0000270c	li	r7,0x1
00002710	or	r8,r9,r9
00002714	bl	0x10460	; symbol stub for: _CreateObjSpecifier
00002718	or	r0,r3,r3
0000271c	sth	r0,0x40(r30)
00002720	lhz	r0,0x40(r30)
00002724	rlwinm	r0,r0,0,16,31
00002728	neg	r0,r0
0000272c	rlwinm	r0,r0,1,31,31
00002730	cmpwi	cr7,r0,__mh_bundle_header
00002734	beq	cr7,0x27e4
00002738	lis	r3,0x3f2a
0000273c	ori	r3,r3,0x3f2a
00002740	li	r4,__mh_bundle_header
00002744	addis	r2,r31,0x1
00002748	addi	r5,r2,0xf434
0000274c	addis	r2,r31,0x1
00002750	addi	r6,r2,0xf59c
00002754	li	r7,__mh_bundle_header
00002758	addis	r2,r31,0x1
0000275c	addi	r8,r2,0xf470
00002760	li	r9,0x136
00002764	li	r10,__mh_bundle_header
00002768	bl	0x10480	; symbol stub for: _DebugAssert
0000276c	b	0x2dbc
00002770	addi	r0,r30,0x68
00002774	lis	r3,0x6e75
00002778	ori	r3,r3,0x6c6c
0000277c	li	r4,__mh_bundle_header
00002780	li	r5,__mh_bundle_header
00002784	or	r6,r0,r0
00002788	bl	0xf980	; symbol stub for: _AECreateDesc
0000278c	or	r0,r3,r3
00002790	sth	r0,0x40(r30)
00002794	lhz	r0,0x40(r30)
00002798	rlwinm	r0,r0,0,16,31
0000279c	neg	r0,r0
000027a0	rlwinm	r0,r0,1,31,31
000027a4	cmpwi	cr7,r0,__mh_bundle_header
000027a8	beq	cr7,0x27e4
000027ac	lis	r3,0x3f2a
000027b0	ori	r3,r3,0x3f2a
000027b4	li	r4,__mh_bundle_header
000027b8	addis	r2,r31,0x1
000027bc	addi	r5,r2,0xf434
000027c0	addis	r2,r31,0x1
000027c4	addi	r6,r2,0xf59c
000027c8	li	r7,__mh_bundle_header
000027cc	addis	r2,r31,0x1
000027d0	addi	r8,r2,0xf470
000027d4	li	r9,0x13f
000027d8	li	r10,__mh_bundle_header
000027dc	bl	0x10480	; symbol stub for: _DebugAssert
000027e0	b	0x2dbc
000027e4	addi	r0,r30,0x60
000027e8	addi	r2,r30,0x80
000027ec	lis	r3,0x7479
000027f0	ori	r3,r3,0x7065
000027f4	or	r4,r0,r0
000027f8	li	r5,0x4
000027fc	or	r6,r2,r2
00002800	bl	0xf980	; symbol stub for: _AECreateDesc
00002804	or	r0,r3,r3
00002808	sth	r0,0x40(r30)
0000280c	lhz	r0,0x40(r30)
00002810	rlwinm	r0,r0,0,16,31
00002814	neg	r0,r0
00002818	rlwinm	r0,r0,1,31,31
0000281c	cmpwi	cr7,r0,__mh_bundle_header
00002820	beq	cr7,0x285c
00002824	lis	r3,0x3f2a
00002828	ori	r3,r3,0x3f2a
0000282c	li	r4,__mh_bundle_header
00002830	addis	r2,r31,0x1
00002834	addi	r5,r2,0xf434
00002838	addis	r2,r31,0x1
0000283c	addi	r6,r2,0xf5bc
00002840	li	r7,__mh_bundle_header
00002844	addis	r2,r31,0x1
00002848	addi	r8,r2,0xf470
0000284c	li	r9,0x14e
00002850	li	r10,__mh_bundle_header
00002854	bl	0x10480	; symbol stub for: _DebugAssert
00002858	b	0x2db0
0000285c	addi	r0,r30,0x68
00002860	addi	r2,r30,0x80
00002864	addi	r9,r30,0x88
00002868	lis	r3,0x7072
0000286c	ori	r3,r3,0x6f70
00002870	or	r4,r0,r0
00002874	lis	r5,0x7072
00002878	ori	r5,r5,0x6f70
0000287c	or	r6,r2,r2
00002880	li	r7,0x1
00002884	or	r8,r9,r9
00002888	bl	0x10460	; symbol stub for: _CreateObjSpecifier
0000288c	or	r0,r3,r3
00002890	sth	r0,0x40(r30)
00002894	lhz	r0,0x40(r30)
00002898	rlwinm	r0,r0,0,16,31
0000289c	neg	r0,r0
000028a0	rlwinm	r0,r0,1,31,31
000028a4	cmpwi	cr7,r0,__mh_bundle_header
000028a8	beq	cr7,0x28e4
000028ac	lis	r3,0x3f2a
000028b0	ori	r3,r3,0x3f2a
000028b4	li	r4,__mh_bundle_header
000028b8	addis	r2,r31,0x1
000028bc	addi	r5,r2,0xf434
000028c0	addis	r2,r31,0x1
000028c4	addi	r6,r2,0xf5d4
000028c8	li	r7,__mh_bundle_header
000028cc	addis	r2,r31,0x1
000028d0	addi	r8,r2,0xf470
000028d4	li	r9,0x15e
000028d8	li	r10,__mh_bundle_header
000028dc	bl	0x10480	; symbol stub for: _DebugAssert
000028e0	b	0x2da4
000028e4	addi	r0,r30,0x58
000028e8	addi	r2,r30,0x88
000028ec	or	r3,r0,r0
000028f0	lis	r4,0x2d2d
000028f4	ori	r4,r4,0x2d2d
000028f8	or	r5,r2,r2
000028fc	bl	0xfac0	; symbol stub for: _AEPutParamDesc
00002900	or	r0,r3,r3
00002904	sth	r0,0x40(r30)
00002908	lhz	r0,0x40(r30)
0000290c	rlwinm	r0,r0,0,16,31
00002910	neg	r0,r0
00002914	rlwinm	r0,r0,1,31,31
00002918	cmpwi	cr7,r0,__mh_bundle_header
0000291c	beq	cr7,0x2958
00002920	lis	r3,0x3f2a
00002924	ori	r3,r3,0x3f2a
00002928	li	r4,__mh_bundle_header
0000292c	addis	r2,r31,0x1
00002930	addi	r5,r2,0xf434
00002934	addis	r2,r31,0x1
00002938	addi	r6,r2,0xf5e8
0000293c	li	r7,__mh_bundle_header
00002940	addis	r2,r31,0x1
00002944	addi	r8,r2,0xf470
00002948	li	r9,0x169
0000294c	li	r10,__mh_bundle_header
00002950	bl	0x10480	; symbol stub for: _DebugAssert
00002954	b	0x2d98
00002958	addi	r0,r30,0x64
0000295c	addi	r2,r30,0x90
00002960	lis	r3,0x7479
00002964	ori	r3,r3,0x7065
00002968	or	r4,r0,r0
0000296c	li	r5,0x4
00002970	or	r6,r2,r2
00002974	bl	0xf980	; symbol stub for: _AECreateDesc
00002978	or	r0,r3,r3
0000297c	sth	r0,0x40(r30)
00002980	lhz	r0,0x40(r30)
00002984	rlwinm	r0,r0,0,16,31
00002988	neg	r0,r0
0000298c	rlwinm	r0,r0,1,31,31
00002990	cmpwi	cr7,r0,__mh_bundle_header
00002994	beq	cr7,0x29d0
00002998	lis	r3,0x3f2a
0000299c	ori	r3,r3,0x3f2a
000029a0	li	r4,__mh_bundle_header
000029a4	addis	r2,r31,0x1
000029a8	addi	r5,r2,0xf434
000029ac	addis	r2,r31,0x1
000029b0	addi	r6,r2,0xf5e8
000029b4	li	r7,__mh_bundle_header
000029b8	addis	r2,r31,0x1
000029bc	addi	r8,r2,0xf470
000029c0	li	r9,0x177
000029c4	li	r10,__mh_bundle_header
000029c8	bl	0x10480	; symbol stub for: _DebugAssert
000029cc	b	0x2d98
000029d0	addi	r0,r30,0x90
000029d4	addi	r2,r30,0x98
000029d8	or	r3,r0,r0
000029dc	lis	r4,0x6c69
000029e0	ori	r4,r4,0x7374
000029e4	or	r5,r2,r2
000029e8	bl	0xf920	; symbol stub for: _AECoerceDesc
000029ec	or	r0,r3,r3
000029f0	sth	r0,0x40(r30)
000029f4	lhz	r0,0x40(r30)
000029f8	rlwinm	r0,r0,0,16,31
000029fc	neg	r0,r0
00002a00	rlwinm	r0,r0,1,31,31
00002a04	cmpwi	cr7,r0,__mh_bundle_header
00002a08	beq	cr7,0x2a44
00002a0c	lis	r3,0x3f2a
00002a10	ori	r3,r3,0x3f2a
00002a14	li	r4,__mh_bundle_header
00002a18	addis	r2,r31,0x1
00002a1c	addi	r5,r2,0xf434
00002a20	addis	r2,r31,0x1
00002a24	addi	r6,r2,0xf608
00002a28	li	r7,__mh_bundle_header
00002a2c	addis	r2,r31,0x1
00002a30	addi	r8,r2,0xf470
00002a34	li	r9,0x184
00002a38	li	r10,__mh_bundle_header
00002a3c	bl	0x10480	; symbol stub for: _DebugAssert
00002a40	b	0x2d8c
00002a44	addi	r0,r30,0x90
00002a48	or	r3,r0,r0
00002a4c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002a50	addi	r0,r30,0x58
00002a54	addi	r2,r30,0x98
00002a58	or	r3,r0,r0
00002a5c	lis	r4,0x7274
00002a60	ori	r4,r4,0x7970
00002a64	or	r5,r2,r2
00002a68	bl	0xfac0	; symbol stub for: _AEPutParamDesc
00002a6c	or	r0,r3,r3
00002a70	sth	r0,0x40(r30)
00002a74	lhz	r0,0x40(r30)
00002a78	rlwinm	r0,r0,0,16,31
00002a7c	neg	r0,r0
00002a80	rlwinm	r0,r0,1,31,31
00002a84	cmpwi	cr7,r0,__mh_bundle_header
00002a88	beq	cr7,0x2ac4
00002a8c	lis	r3,0x3f2a
00002a90	ori	r3,r3,0x3f2a
00002a94	li	r4,__mh_bundle_header
00002a98	addis	r2,r31,0x1
00002a9c	addi	r5,r2,0xf434
00002aa0	addis	r2,r31,0x1
00002aa4	addi	r6,r2,0xf620
00002aa8	li	r7,__mh_bundle_header
00002aac	addis	r2,r31,0x1
00002ab0	addi	r8,r2,0xf470
00002ab4	li	r9,0x191
00002ab8	li	r10,__mh_bundle_header
00002abc	bl	0x10480	; symbol stub for: _DebugAssert
00002ac0	b	0x2d80
00002ac4	addi	r0,r30,0x58
00002ac8	addi	r2,r30,0xa0
00002acc	or	r3,r0,r0
00002ad0	or	r4,r2,r2
00002ad4	li	r5,0x3
00002ad8	li	r6,__mh_bundle_header
00002adc	li	r7,0xffff
00002ae0	li	r8,__mh_bundle_header
00002ae4	li	r9,__mh_bundle_header
00002ae8	bl	0xfb00	; symbol stub for: _AESend
00002aec	or	r0,r3,r3
00002af0	sth	r0,0x40(r30)
00002af4	lhz	r0,0x40(r30)
00002af8	rlwinm	r0,r0,0,16,31
00002afc	neg	r0,r0
00002b00	rlwinm	r0,r0,1,31,31
00002b04	cmpwi	cr7,r0,__mh_bundle_header
00002b08	beq	cr7,0x2b44
00002b0c	lis	r3,0x3f2a
00002b10	ori	r3,r3,0x3f2a
00002b14	li	r4,__mh_bundle_header
00002b18	addis	r2,r31,0x1
00002b1c	addi	r5,r2,0xf434
00002b20	addis	r2,r31,0x1
00002b24	addi	r6,r2,0xf620
00002b28	li	r7,__mh_bundle_header
00002b2c	addis	r2,r31,0x1
00002b30	addi	r8,r2,0xf470
00002b34	li	r9,0x1a2
00002b38	li	r10,__mh_bundle_header
00002b3c	bl	0x10480	; symbol stub for: _DebugAssert
00002b40	b	0x2d80
00002b44	addi	r0,r30,0xa0
00002b48	addi	r2,r30,0xa8
00002b4c	or	r3,r0,r0
00002b50	lis	r4,0x2d2d
00002b54	ori	r4,r4,0x2d2d
00002b58	lis	r5,0x6c69
00002b5c	ori	r5,r5,0x7374
00002b60	or	r6,r2,r2
00002b64	bl	0xfa40	; symbol stub for: _AEGetParamDesc
00002b68	or	r0,r3,r3
00002b6c	sth	r0,0x40(r30)
00002b70	lhz	r0,0x40(r30)
00002b74	rlwinm	r0,r0,0,16,31
00002b78	neg	r0,r0
00002b7c	rlwinm	r0,r0,1,31,31
00002b80	cmpwi	cr7,r0,__mh_bundle_header
00002b84	beq	cr7,0x2bc0
00002b88	lis	r3,0x3f2a
00002b8c	ori	r3,r3,0x3f2a
00002b90	li	r4,__mh_bundle_header
00002b94	addis	r2,r31,0x1
00002b98	addi	r5,r2,0xf434
00002b9c	addis	r2,r31,0x1
00002ba0	addi	r6,r2,0xf634
00002ba4	li	r7,__mh_bundle_header
00002ba8	addis	r2,r31,0x1
00002bac	addi	r8,r2,0xf470
00002bb0	li	r9,0x1ab
00002bb4	li	r10,__mh_bundle_header
00002bb8	bl	0x10480	; symbol stub for: _DebugAssert
00002bbc	b	0x2d74
00002bc0	addi	r0,r30,0xa8
00002bc4	addi	r2,r30,0xb0
00002bc8	or	r3,r0,r0
00002bcc	or	r4,r2,r2
00002bd0	bl	0xf940	; symbol stub for: _AECountItems
00002bd4	or	r0,r3,r3
00002bd8	sth	r0,0x40(r30)
00002bdc	lhz	r0,0x40(r30)
00002be0	rlwinm	r0,r0,0,16,31
00002be4	neg	r0,r0
00002be8	rlwinm	r0,r0,1,31,31
00002bec	cmpwi	cr7,r0,__mh_bundle_header
00002bf0	beq	cr7,0x2c2c
00002bf4	lis	r3,0x3f2a
00002bf8	ori	r3,r3,0x3f2a
00002bfc	li	r4,__mh_bundle_header
00002c00	addis	r2,r31,0x1
00002c04	addi	r5,r2,0xf434
00002c08	addis	r2,r31,0x1
00002c0c	addi	r6,r2,0xf634
00002c10	li	r7,__mh_bundle_header
00002c14	addis	r2,r31,0x1
00002c18	addi	r8,r2,0xf470
00002c1c	li	r9,0x1b3
00002c20	li	r10,__mh_bundle_header
00002c24	bl	0x10480	; symbol stub for: _DebugAssert
00002c28	b	0x2d74
00002c2c	lwz	r0,0xb0(r30)
00002c30	rlwinm	r0,r0,2,0,29
00002c34	or	r3,r0,r0
00002c38	bl	0x111c0	; symbol stub for: _malloc
00002c3c	or	r0,r3,r3
00002c40	stw	r0,0x44(r30)
00002c44	lwz	r0,0xb0(r30)
00002c48	lwz	r2,0xf8(r30)
00002c4c	stw	r0,__mh_bundle_header(r2)
00002c50	li	r0,__mh_bundle_header
00002c54	stw	r0,0x3c(r30)
00002c58	b	0x2d58
00002c5c	lwz	r2,0x3c(r30)
00002c60	addi	r2,r2,0x1
00002c64	addi	r0,r30,0xa8
00002c68	addi	r9,r30,0xc0
00002c6c	addi	r11,r30,0xb8
00002c70	or	r3,r0,r0
00002c74	or	r4,r2,r2
00002c78	lis	r5,0x6f62
00002c7c	ori	r5,r5,0x6a20
00002c80	or	r6,r9,r9
00002c84	or	r7,r11,r11
00002c88	bl	0xfa20	; symbol stub for: _AEGetNthDesc
00002c8c	or	r0,r3,r3
00002c90	sth	r0,0x40(r30)
00002c94	lhz	r0,0x40(r30)
00002c98	extsh	r0,r0
00002c9c	cmpwi	cr7,r0,__mh_bundle_header
00002ca0	bne	cr7,0x2d30
00002ca4	addi	r0,r30,0xb8
00002ca8	or	r3,r0,r0
00002cac	bl	_BuildPath
00002cb0	or	r0,r3,r3
00002cb4	stw	r0,0x38(r30)
00002cb8	lwz	r0,0x38(r30)
00002cbc	cmpwi	cr7,r0,__mh_bundle_header
00002cc0	beq	cr7,0x2d04
00002cc4	lwz	r0,0x3c(r30)
00002cc8	rlwinm	r0,r0,2,0,29
00002ccc	or	r2,r0,r0
00002cd0	lwz	r0,0x44(r30)
00002cd4	add	r29,r2,r0
00002cd8	addis	r2,r31,0x1
00002cdc	lwz	r2,0xbfc(r2)
00002ce0	lwz	r0,__mh_bundle_header(r2)
00002ce4	or	r3,r0,r0
00002ce8	lwz	r4,0x38(r30)
00002cec	bl	0x10000	; symbol stub for: _CFStringCreateWithFileSystemRepresentation
00002cf0	or	r0,r3,r3
00002cf4	stw	r0,__mh_bundle_header(r29)
00002cf8	lwz	r3,0x38(r30)
00002cfc	bl	0x11040	; symbol stub for: _free
00002d00	b	0x2d20
00002d04	lwz	r0,0x3c(r30)
00002d08	rlwinm	r0,r0,2,0,29
00002d0c	or	r2,r0,r0
00002d10	lwz	r0,0x44(r30)
00002d14	add	r2,r2,r0
00002d18	li	r0,__mh_bundle_header
00002d1c	stw	r0,__mh_bundle_header(r2)
00002d20	addi	r0,r30,0xb8
00002d24	or	r3,r0,r0
00002d28	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002d2c	b	0x2d4c
00002d30	lwz	r0,0x3c(r30)
00002d34	rlwinm	r0,r0,2,0,29
00002d38	or	r2,r0,r0
00002d3c	lwz	r0,0x44(r30)
00002d40	add	r2,r2,r0
00002d44	li	r0,__mh_bundle_header
00002d48	stw	r0,__mh_bundle_header(r2)
00002d4c	lwz	r2,0x3c(r30)
00002d50	addi	r0,r2,0x1
00002d54	stw	r0,0x3c(r30)
00002d58	lwz	r0,0xb0(r30)
00002d5c	lwz	r2,0x3c(r30)
00002d60	cmpw	cr7,r2,r0
00002d64	blt	cr7,0x2c5c
00002d68	addi	r0,r30,0xa8
00002d6c	or	r3,r0,r0
00002d70	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002d74	addi	r0,r30,0xa0
00002d78	or	r3,r0,r0
00002d7c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002d80	addi	r0,r30,0x98
00002d84	or	r3,r0,r0
00002d88	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002d8c	addi	r0,r30,0x90
00002d90	or	r3,r0,r0
00002d94	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002d98	addi	r0,r30,0x88
00002d9c	or	r3,r0,r0
00002da0	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002da4	addi	r0,r30,0x80
00002da8	or	r3,r0,r0
00002dac	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002db0	addi	r0,r30,0x68
00002db4	or	r3,r0,r0
00002db8	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002dbc	lwz	r0,0xfc(r30)
00002dc0	cmpwi	cr7,r0,0x1
00002dc4	bne	cr7,0x2dd4
00002dc8	addi	r0,r30,0x78
00002dcc	or	r3,r0,r0
00002dd0	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002dd4	lwz	r0,0xfc(r30)
00002dd8	cmpwi	cr7,r0,0x1
00002ddc	bne	cr7,0x2dec
00002de0	addi	r0,r30,0x70
00002de4	or	r3,r0,r0
00002de8	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002dec	addi	r0,r30,0x58
00002df0	or	r3,r0,r0
00002df4	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002df8	addi	r0,r30,0x48
00002dfc	or	r3,r0,r0
00002e00	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00002e04	lwz	r0,0x44(r30)
00002e08	or	r3,r0,r0
00002e0c	lwz	r1,__mh_bundle_header(r1)
00002e10	lwz	r0,0x8(r1)
00002e14	mtspr	lr,r0
00002e18	lmw	r29,0xfff4(r1)
00002e1c	blr
_FreeFinderContext:
00002e20	mfspr	r0,lr
00002e24	stmw	r30,0xfff8(r1)
00002e28	stw	r0,0x8(r1)
00002e2c	stwu	r1,0xffa0(r1)
00002e30	or	r30,r1,r1
00002e34	stw	r3,0x78(r30)
00002e38	stw	r4,0x7c(r30)
00002e3c	lwz	r0,0x78(r30)
00002e40	cmpwi	cr7,r0,__mh_bundle_header
00002e44	beq	cr7,0x2eb8
00002e48	li	r0,__mh_bundle_header
00002e4c	stw	r0,0x38(r30)
00002e50	b	0x2ea0
00002e54	lwz	r0,0x38(r30)
00002e58	rlwinm	r0,r0,2,0,29
00002e5c	or	r2,r0,r0
00002e60	lwz	r0,0x78(r30)
00002e64	add	r2,r2,r0
00002e68	lwz	r0,__mh_bundle_header(r2)
00002e6c	cmpwi	cr7,r0,__mh_bundle_header
00002e70	beq	cr7,0x2e94
00002e74	lwz	r0,0x38(r30)
00002e78	rlwinm	r0,r0,2,0,29
00002e7c	or	r2,r0,r0
00002e80	lwz	r0,0x78(r30)
00002e84	add	r2,r2,r0
00002e88	lwz	r0,__mh_bundle_header(r2)
00002e8c	or	r3,r0,r0
00002e90	bl	0xff40	; symbol stub for: _CFRelease
00002e94	lwz	r2,0x38(r30)
00002e98	addi	r0,r2,0x1
00002e9c	stw	r0,0x38(r30)
00002ea0	lwz	r0,0x38(r30)
00002ea4	lwz	r2,0x7c(r30)
00002ea8	cmpw	cr7,r0,r2
00002eac	blt	cr7,0x2e54
00002eb0	lwz	r3,0x78(r30)
00002eb4	bl	0x11040	; symbol stub for: _free
00002eb8	lwz	r1,__mh_bundle_header(r1)
00002ebc	lwz	r0,0x8(r1)
00002ec0	mtspr	lr,r0
00002ec4	lmw	r30,0xfff8(r1)
00002ec8	blr
_from_hex:
00002ecc	mfspr	r0,lr
00002ed0	stmw	r30,0xfff8(r1)
00002ed4	stw	r0,0x8(r1)
00002ed8	stwu	r1,0xffb0(r1)
00002edc	or	r30,r1,r1
00002ee0	or	r0,r3,r3
00002ee4	stb	r0,0x68(r30)
00002ee8	lbz	r0,0x68(r30)
00002eec	extsb	r0,r0
00002ef0	or	r3,r0,r0
00002ef4	bl	_isdigit
00002ef8	or	r0,r3,r3
00002efc	cmpwi	cr7,r0,__mh_bundle_header
00002f00	beq	cr7,0x2f20
00002f04	lbz	r0,0x68(r30)
00002f08	rlwinm	r2,r0,0,24,31
00002f0c	addi	r0,r2,0xffd0
00002f10	rlwinm	r0,r0,0,24,31
00002f14	extsb	r0,r0
00002f18	stw	r0,0x38(r30)
00002f1c	b	0x2f48
00002f20	lbz	r0,0x68(r30)
00002f24	extsb	r0,r0
00002f28	or	r3,r0,r0
00002f2c	bl	_tolower
00002f30	or	r0,r3,r3
00002f34	rlwinm	r2,r0,0,24,31
00002f38	addi	r0,r2,0xffa9
00002f3c	rlwinm	r0,r0,0,24,31
00002f40	extsb	r0,r0
00002f44	stw	r0,0x38(r30)
00002f48	lwz	r0,0x38(r30)
00002f4c	or	r3,r0,r0
00002f50	lwz	r1,__mh_bundle_header(r1)
00002f54	lwz	r0,0x8(r1)
00002f58	mtspr	lr,r0
00002f5c	lmw	r30,0xfff8(r1)
00002f60	blr
_isdigit:
00002f64	mfspr	r0,lr
00002f68	stmw	r30,0xfff8(r1)
00002f6c	stw	r0,0x8(r1)
00002f70	stwu	r1,0xffb0(r1)
00002f74	or	r30,r1,r1
00002f78	stw	r3,0x68(r30)
00002f7c	lwz	r3,0x68(r30)
00002f80	li	r4,0x400
00002f84	bl	___isctype
00002f88	or	r0,r3,r3
00002f8c	or	r3,r0,r0
00002f90	lwz	r1,__mh_bundle_header(r1)
00002f94	lwz	r0,0x8(r1)
00002f98	mtspr	lr,r0
00002f9c	lmw	r30,0xfff8(r1)
00002fa0	blr
___isctype:
00002fa4	stmw	r30,0xfff8(r1)
00002fa8	stwu	r1,0xffd0(r1)
00002fac	or	r30,r1,r1
00002fb0	mfspr	r0,lr
00002fb4	bcl	20,31,0x2fb8
00002fb8	mfspr	r10,lr
00002fbc	mtspr	lr,r0
00002fc0	stw	r3,0x48(r30)
00002fc4	stw	r4,0x4c(r30)
00002fc8	lwz	r0,0x48(r30)
00002fcc	cmpwi	cr7,r0,__mh_bundle_header
00002fd0	blt	cr7,0x3018
00002fd4	lwz	r0,0x48(r30)
00002fd8	cmpwi	cr7,r0,0xff
00002fdc	bgt	cr7,0x3018
00002fe0	lwz	r0,0x48(r30)
00002fe4	addis	r2,r10,0x1
00002fe8	lwz	r2,0x64(r2)
00002fec	rlwinm	r0,r0,2,0,29
00002ff0	add	r2,r0,r2
00002ff4	addi	r2,r2,0x34
00002ff8	lwz	r2,__mh_bundle_header(r2)
00002ffc	lwz	r0,0x4c(r30)
00003000	and	r0,r2,r0
00003004	cmpwi	cr7,r0,__mh_bundle_header
00003008	beq	cr7,0x3018
0000300c	li	r0,0x1
00003010	stw	r0,0x18(r30)
00003014	b	0x3020
00003018	li	r0,__mh_bundle_header
0000301c	stw	r0,0x18(r30)
00003020	lwz	r0,0x18(r30)
00003024	or	r3,r0,r0
00003028	lwz	r1,__mh_bundle_header(r1)
0000302c	lmw	r30,0xfff8(r1)
00003030	blr
_tolower:
00003034	mfspr	r0,lr
00003038	stmw	r30,0xfff8(r1)
0000303c	stw	r0,0x8(r1)
00003040	stwu	r1,0xffb0(r1)
00003044	or	r30,r1,r1
00003048	stw	r3,0x68(r30)
0000304c	lwz	r3,0x68(r30)
00003050	bl	0x10d80	; symbol stub for: ___tolower
00003054	or	r0,r3,r3
00003058	or	r3,r0,r0
0000305c	lwz	r1,__mh_bundle_header(r1)
00003060	lwz	r0,0x8(r1)
00003064	mtspr	lr,r0
00003068	lmw	r30,0xfff8(r1)
0000306c	blr
_GhettoURLDecode:
00003070	mfspr	r0,lr
00003074	stmw	r29,0xfff4(r1)
00003078	stw	r0,0x8(r1)
0000307c	stwu	r1,0xffa0(r1)
00003080	or	r30,r1,r1
00003084	stw	r3,0x78(r30)
00003088	stw	r4,0x7c(r30)
0000308c	stw	r5,0x80(r30)
00003090	lwz	r0,0x78(r30)
00003094	stw	r0,0x38(r30)
00003098	b	0x313c
0000309c	lwz	r2,0x7c(r30)
000030a0	lbz	r0,__mh_bundle_header(r2)
000030a4	extsb	r0,r0
000030a8	cmpwi	cr7,r0,0x25
000030ac	bne	cr7,0x3110
000030b0	lwz	r2,0x7c(r30)
000030b4	addi	r2,r2,0x1
000030b8	lbz	r0,__mh_bundle_header(r2)
000030bc	extsb	r0,r0
000030c0	or	r3,r0,r0
000030c4	bl	_from_hex
000030c8	or	r0,r3,r3
000030cc	rlwinm	r0,r0,4,0,27
000030d0	extsb	r29,r0
000030d4	lwz	r2,0x7c(r30)
000030d8	addi	r2,r2,0x2
000030dc	lbz	r0,__mh_bundle_header(r2)
000030e0	extsb	r0,r0
000030e4	or	r3,r0,r0
000030e8	bl	_from_hex
000030ec	or	r0,r3,r3
000030f0	or	r0,r29,r0
000030f4	extsb	r0,r0
000030f8	lwz	r2,0x78(r30)
000030fc	stb	r0,__mh_bundle_header(r2)
00003100	lwz	r2,0x7c(r30)
00003104	addi	r0,r2,0x3
00003108	stw	r0,0x7c(r30)
0000310c	b	0x3130
00003110	lwz	r2,0x7c(r30)
00003114	lbz	r0,__mh_bundle_header(r2)
00003118	extsb	r0,r0
0000311c	lwz	r2,0x78(r30)
00003120	stb	r0,__mh_bundle_header(r2)
00003124	lwz	r2,0x7c(r30)
00003128	addi	r0,r2,0x1
0000312c	stw	r0,0x7c(r30)
00003130	lwz	r2,0x78(r30)
00003134	addi	r0,r2,0x1
00003138	stw	r0,0x78(r30)
0000313c	lwz	r2,0x78(r30)
00003140	lwz	r0,0x38(r30)
00003144	subf	r2,r0,r2
00003148	lwz	r0,0x80(r30)
0000314c	cmpw	cr7,r2,r0
00003150	bge	cr7,0x3168
00003154	lwz	r2,0x7c(r30)
00003158	lbz	r0,__mh_bundle_header(r2)
0000315c	extsb	r0,r0
00003160	cmpwi	cr7,r0,__mh_bundle_header
00003164	bne	cr7,0x309c
00003168	lwz	r2,0x78(r30)
0000316c	lwz	r0,0x38(r30)
00003170	subf	r2,r0,r2
00003174	lwz	r0,0x80(r30)
00003178	cmpw	cr7,r2,r0
0000317c	bge	cr7,0x31a0
00003180	lwz	r2,0x78(r30)
00003184	li	r0,__mh_bundle_header
00003188	stb	r0,__mh_bundle_header(r2)
0000318c	lwz	r2,0x78(r30)
00003190	lwz	r0,0x38(r30)
00003194	subf	r2,r0,r2
00003198	stw	r2,0x48(r30)
0000319c	b	0x31a8
000031a0	li	r0,0xffff
000031a4	stw	r0,0x48(r30)
000031a8	lwz	r0,0x48(r30)
000031ac	or	r3,r0,r0
000031b0	lwz	r1,__mh_bundle_header(r1)
000031b4	lwz	r0,0x8(r1)
000031b8	mtspr	lr,r0
000031bc	lmw	r29,0xfff4(r1)
000031c0	blr
_toolbar_index_path:
000031c4	mfspr	r0,lr
000031c8	stmw	r29,0xfff4(r1)
000031cc	stw	r0,0x8(r1)
000031d0	stwu	r1,0xffa0(r1)
000031d4	or	r30,r1,r1
000031d8	bcl	20,31,0x31dc
000031dc	mfspr	r31,lr
000031e0	addis	r2,r31,0x1
000031e4	addi	r3,r2,0xe88c
000031e8	bl	0x110a0	; symbol stub for: _getenv
000031ec	or	r0,r3,r3
000031f0	stw	r0,0x44(r30)
000031f4	addis	r2,r31,0x1
000031f8	addi	r0,r2,0xe894
000031fc	stw	r0,0x40(r30)
00003200	lwz	r3,0x44(r30)
00003204	bl	0x11540	; symbol stub for: _strlen
00003208	or	r0,r3,r3
0000320c	or	r29,r0,r0
00003210	lwz	r3,0x40(r30)
00003214	bl	0x11540	; symbol stub for: _strlen
00003218	or	r0,r3,r3
0000321c	add	r2,r29,r0
00003220	addi	r0,r2,0x1
00003224	stw	r0,0x3c(r30)
00003228	lwz	r3,0x3c(r30)
0000322c	bl	0x111c0	; symbol stub for: _malloc
00003230	or	r0,r3,r3
00003234	stw	r0,0x38(r30)
00003238	lwz	r3,0x38(r30)
0000323c	lwz	r4,0x3c(r30)
00003240	addis	r2,r31,0x1
00003244	addi	r5,r2,0xe8bc
00003248	lwz	r6,0x44(r30)
0000324c	lwz	r7,0x40(r30)
00003250	bl	0x11460	; symbol stub for: _snprintf$LDBL128
00003254	lwz	r0,0x38(r30)
00003258	or	r3,r0,r0
0000325c	lwz	r1,__mh_bundle_header(r1)
00003260	lwz	r0,0x8(r1)
00003264	mtspr	lr,r0
00003268	lmw	r29,0xfff4(r1)
0000326c	blr
_get_insertion_index:
00003270	mfspr	r0,lr
00003274	stmw	r30,0xfff8(r1)
00003278	stw	r0,0x8(r1)
0000327c	stwu	r1,0xffa0(r1)
00003280	or	r30,r1,r1
00003284	bcl	20,31,0x3288
00003288	mfspr	r31,lr
0000328c	li	r0,0xffff
00003290	stw	r0,0x40(r30)
00003294	bl	_toolbar_index_path
00003298	or	r0,r3,r3
0000329c	stw	r0,0x3c(r30)
000032a0	lwz	r3,0x3c(r30)
000032a4	addis	r2,r31,0x1
000032a8	addi	r4,r2,0xe818
000032ac	bl	0x10fe0	; symbol stub for: _fopen
000032b0	or	r0,r3,r3
000032b4	stw	r0,0x38(r30)
000032b8	lwz	r0,0x38(r30)
000032bc	cmpwi	cr7,r0,__mh_bundle_header
000032c0	beq	cr7,0x32f8
000032c4	addi	r0,r30,0x44
000032c8	lwz	r3,0x38(r30)
000032cc	addis	r2,r31,0x1
000032d0	addi	r4,r2,0xe81c
000032d4	or	r5,r0,r0
000032d8	bl	0x11060	; symbol stub for: _fscanf$LDBL128
000032dc	or	r0,r3,r3
000032e0	cmpwi	cr7,r0,__mh_bundle_header
000032e4	beq	cr7,0x32f0
000032e8	lwz	r0,0x44(r30)
000032ec	stw	r0,0x40(r30)
000032f0	lwz	r3,0x38(r30)
000032f4	bl	0x10f80	; symbol stub for: _fclose
000032f8	lwz	r3,0x3c(r30)
000032fc	bl	0x11040	; symbol stub for: _free
00003300	lwz	r0,0x40(r30)
00003304	or	r3,r0,r0
00003308	lwz	r1,__mh_bundle_header(r1)
0000330c	lwz	r0,0x8(r1)
00003310	mtspr	lr,r0
00003314	lmw	r30,0xfff8(r1)
00003318	blr
_store_insertion_index:
0000331c	mfspr	r0,lr
00003320	stmw	r30,0xfff8(r1)
00003324	stw	r0,0x8(r1)
00003328	stwu	r1,0xffa0(r1)
0000332c	or	r30,r1,r1
00003330	bcl	20,31,0x3334
00003334	mfspr	r31,lr
00003338	stw	r3,0x78(r30)
0000333c	bl	_toolbar_index_path
00003340	or	r0,r3,r3
00003344	stw	r0,0x3c(r30)
00003348	lwz	r3,0x3c(r30)
0000334c	addis	r2,r31,0x1
00003350	addi	r4,r2,0xe774
00003354	bl	0x10fe0	; symbol stub for: _fopen
00003358	or	r0,r3,r3
0000335c	stw	r0,0x38(r30)
00003360	lwz	r0,0x38(r30)
00003364	cmpwi	cr7,r0,__mh_bundle_header
00003368	mfcr	r0
0000336c	rlwinm	r0,r0,31,31,31
00003370	cmpwi	cr7,r0,__mh_bundle_header
00003374	beq	cr7,0x33b0
00003378	lis	r3,0x3f2a
0000337c	ori	r3,r3,0x3f2a
00003380	li	r4,__mh_bundle_header
00003384	addis	r2,r31,0x1
00003388	addi	r5,r2,0xe778
0000338c	addis	r2,r31,0x1
00003390	addi	r6,r2,0xe7a0
00003394	li	r7,__mh_bundle_header
00003398	addis	r2,r31,0x1
0000339c	addi	r8,r2,0xe7b8
000033a0	li	r9,0x4b
000033a4	li	r10,__mh_bundle_header
000033a8	bl	0x10480	; symbol stub for: _DebugAssert
000033ac	b	0x33cc
000033b0	lwz	r3,0x38(r30)
000033b4	addis	r2,r31,0x1
000033b8	addi	r4,r2,0xe770
000033bc	lwz	r5,0x78(r30)
000033c0	bl	0x11000	; symbol stub for: _fprintf$LDBL128
000033c4	lwz	r3,0x38(r30)
000033c8	bl	0x10f80	; symbol stub for: _fclose
000033cc	lwz	r3,0x3c(r30)
000033d0	bl	0x11040	; symbol stub for: _free
000033d4	lwz	r1,__mh_bundle_header(r1)
000033d8	lwz	r0,0x8(r1)
000033dc	mtspr	lr,r0
000033e0	lmw	r30,0xfff8(r1)
000033e4	blr
_MoreMenuBypassInitialize:
000033e8	mfspr	r0,lr
000033ec	stmw	r30,0xfff8(r1)
000033f0	stw	r0,0x8(r1)
000033f4	stwu	r1,0xffa0(r1)
000033f8	or	r30,r1,r1
000033fc	bcl	20,31,0x3400
00003400	mfspr	r31,lr
00003404	addis	r2,r31,0x1
00003408	addi	r0,r2,0x30
0000340c	or	r3,r0,r0
00003410	li	r4,__mh_bundle_header
00003414	bl	_getPreferenceBool
00003418	or	r0,r3,r3
0000341c	cmpwi	cr7,r0,__mh_bundle_header
00003420	beq	cr7,0x3434
00003424	addis	r2,r31,0x1
00003428	lwz	r2,0xfc20(r2)
0000342c	li	r0,0x1
00003430	stb	r0,__mh_bundle_header(r2)
00003434	addis	r2,r31,0x1
00003438	addi	r0,r2,0x40
0000343c	or	r3,r0,r0
00003440	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
00003444	or	r0,r3,r3
00003448	stw	r0,0x3c(r30)
0000344c	lwz	r0,0x3c(r30)
00003450	cmpwi	cr7,r0,__mh_bundle_header
00003454	beq	cr7,0x3494
00003458	addis	r2,r31,0x1
0000345c	addi	r9,r2,0x50
00003460	addis	r2,r31,0x1
00003464	addi	r11,r2,0x60
00003468	addis	r2,r31,0x1
0000346c	addi	r0,r2,0x70
00003470	lwz	r3,0x3c(r30)
00003474	or	r4,r9,r9
00003478	or	r5,r11,r11
0000347c	or	r6,r0,r0
00003480	bl	0xfca0	; symbol stub for: _CFBundleCopyLocalizedString
00003484	or	r0,r3,r3
00003488	addis	r2,r31,0x1
0000348c	addi	r2,r2,0x59c
00003490	stw	r0,__mh_bundle_header(r2)
00003494	addis	r2,r31,0x1
00003498	addi	r2,r2,0x59c
0000349c	lwz	r0,__mh_bundle_header(r2)
000034a0	cmpwi	cr7,r0,__mh_bundle_header
000034a4	bne	cr7,0x34bc
000034a8	addis	r2,r31,0x1
000034ac	addi	r0,r2,0x60
000034b0	addis	r2,r31,0x1
000034b4	addi	r2,r2,0x59c
000034b8	stw	r0,__mh_bundle_header(r2)
000034bc	addis	r2,r31,0x1
000034c0	addi	r2,r2,0x59c
000034c4	lwz	r0,__mh_bundle_header(r2)
000034c8	cmpwi	cr7,r0,__mh_bundle_header
000034cc	mfcr	r0
000034d0	rlwinm	r0,r0,31,31,31
000034d4	cmpwi	cr7,r0,__mh_bundle_header
000034d8	beq	cr7,0x3514
000034dc	lis	r3,0x3f2a
000034e0	ori	r3,r3,0x3f2a
000034e4	li	r4,__mh_bundle_header
000034e8	addis	r2,r31,0x1
000034ec	addi	r5,r2,0xe788
000034f0	addis	r2,r31,0x1
000034f4	addi	r6,r2,0xe7b0
000034f8	li	r7,__mh_bundle_header
000034fc	addis	r2,r31,0x1
00003500	addi	r8,r2,0xe7c0
00003504	li	r9,0x3e
00003508	li	r10,__mh_bundle_header
0000350c	bl	0x10480	; symbol stub for: _DebugAssert
00003510	b	0x3618
00003514	addis	r2,r31,0x1
00003518	addi	r0,r2,0x5a8
0000351c	addis	r2,r31,0x1
00003520	addi	r3,r2,0xe800
00003524	li	r4,__mh_bundle_header
00003528	addis	r2,r31,__mh_bundle_header
0000352c	addi	r5,r2,0x1364
00003530	or	r6,r0,r0
00003534	bl	_mach_override
00003538	or	r0,r3,r3
0000353c	stw	r0,0x38(r30)
00003540	lwz	r0,0x38(r30)
00003544	srawi	r2,r0,31
00003548	xor	r0,r2,r0
0000354c	subf	r0,r2,r0
00003550	neg	r0,r0
00003554	rlwinm	r0,r0,1,31,31
00003558	cmpwi	cr7,r0,__mh_bundle_header
0000355c	beq	cr7,0x3598
00003560	lis	r3,0x3f2a
00003564	ori	r3,r3,0x3f2a
00003568	li	r4,__mh_bundle_header
0000356c	addis	r2,r31,0x1
00003570	addi	r5,r2,0xe820
00003574	addis	r2,r31,0x1
00003578	addi	r6,r2,0xe7b0
0000357c	li	r7,__mh_bundle_header
00003580	addis	r2,r31,0x1
00003584	addi	r8,r2,0xe7c0
00003588	li	r9,0x40
0000358c	li	r10,__mh_bundle_header
00003590	bl	0x10480	; symbol stub for: _DebugAssert
00003594	b	0x3618
00003598	addis	r2,r31,0x1
0000359c	addi	r0,r2,0x5a4
000035a0	addis	r2,r31,0x1
000035a4	addi	r3,r2,0xe850
000035a8	li	r4,__mh_bundle_header
000035ac	addis	r2,r31,__mh_bundle_header
000035b0	addi	r5,r2,0x15b8
000035b4	or	r6,r0,r0
000035b8	bl	_mach_override
000035bc	or	r0,r3,r3
000035c0	stw	r0,0x38(r30)
000035c4	lwz	r0,0x38(r30)
000035c8	srawi	r2,r0,31
000035cc	xor	r0,r2,r0
000035d0	subf	r0,r2,r0
000035d4	neg	r0,r0
000035d8	rlwinm	r0,r0,1,31,31
000035dc	cmpwi	cr7,r0,__mh_bundle_header
000035e0	beq	cr7,0x363c
000035e4	lis	r3,0x3f2a
000035e8	ori	r3,r3,0x3f2a
000035ec	li	r4,__mh_bundle_header
000035f0	addis	r2,r31,0x1
000035f4	addi	r5,r2,0xe820
000035f8	addis	r2,r31,0x1
000035fc	addi	r6,r2,0xe7b0
00003600	li	r7,__mh_bundle_header
00003604	addis	r2,r31,0x1
00003608	addi	r8,r2,0xe7c0
0000360c	li	r9,0x42
00003610	li	r10,__mh_bundle_header
00003614	bl	0x10480	; symbol stub for: _DebugAssert
00003618	addis	r2,r31,0x1
0000361c	lwz	r2,0xfc0c(r2)
00003620	addi	r0,r2,0xb0
00003624	addis	r2,r31,0x1
00003628	addi	r3,r2,0xe86c
0000362c	li	r4,0x1
00003630	li	r5,0x2a
00003634	or	r6,r0,r0
00003638	bl	0x11080	; symbol stub for: _fwrite
0000363c	lwz	r1,__mh_bundle_header(r1)
00003640	lwz	r0,0x8(r1)
00003644	mtspr	lr,r0
00003648	lmw	r30,0xfff8(r1)
0000364c	blr
_MoreMenuItemIndex:
00003650	mfspr	r0,lr
00003654	stmw	r30,0xfff8(r1)
00003658	stw	r0,0x8(r1)
0000365c	stwu	r1,0xffa0(r1)
00003660	or	r30,r1,r1
00003664	bcl	20,31,0x3668
00003668	mfspr	r31,lr
0000366c	stw	r3,0x78(r30)
00003670	li	r0,0x1
00003674	sth	r0,0x40(r30)
00003678	b	0x3758
0000367c	lhz	r0,0x40(r30)
00003680	rlwinm	r0,r0,0,16,31
00003684	addi	r2,r30,0x44
00003688	lwz	r3,0x78(r30)
0000368c	or	r4,r0,r0
00003690	or	r5,r2,r2
00003694	bl	0x10380	; symbol stub for: _CopyMenuItemTextAsCFString
00003698	or	r0,r3,r3
0000369c	stw	r0,0x3c(r30)
000036a0	lwz	r0,0x3c(r30)
000036a4	stw	r0,0x38(r30)
000036a8	lwz	r0,0x38(r30)
000036ac	srawi	r2,r0,31
000036b0	xor	r0,r2,r0
000036b4	subf	r0,r2,r0
000036b8	neg	r0,r0
000036bc	rlwinm	r0,r0,1,31,31
000036c0	cmpwi	cr7,r0,__mh_bundle_header
000036c4	beq	cr7,0x3704
000036c8	lwz	r0,0x38(r30)
000036cc	lis	r3,0x3f2a
000036d0	ori	r3,r3,0x3f2a
000036d4	li	r4,__mh_bundle_header
000036d8	addis	r2,r31,0x1
000036dc	addi	r5,r2,0xe630
000036e0	addis	r2,r31,0x1
000036e4	addi	r6,r2,0xe548
000036e8	li	r7,__mh_bundle_header
000036ec	addis	r2,r31,0x1
000036f0	addi	r8,r2,0xe558
000036f4	li	r9,0x4e
000036f8	or	r10,r0,r0
000036fc	bl	0x10480	; symbol stub for: _DebugAssert
00003700	b	0x3784
00003704	addis	r2,r31,0x1
00003708	addi	r2,r2,0x334
0000370c	lwz	r0,__mh_bundle_header(r2)
00003710	lwz	r2,0x44(r30)
00003714	or	r3,r0,r0
00003718	or	r4,r2,r2
0000371c	li	r5,__mh_bundle_header
00003720	bl	0xffa0	; symbol stub for: _CFStringCompare
00003724	or	r0,r3,r3
00003728	cmpwi	cr7,r0,__mh_bundle_header
0000372c	bne	cr7,0x3740
00003730	lhz	r0,0x40(r30)
00003734	rlwinm	r0,r0,0,16,31
00003738	stw	r0,0x48(r30)
0000373c	b	0x37b0
00003740	lwz	r0,0x44(r30)
00003744	or	r3,r0,r0
00003748	bl	0xff40	; symbol stub for: _CFRelease
0000374c	lhz	r2,0x40(r30)
00003750	addi	r0,r2,0x1
00003754	sth	r0,0x40(r30)
00003758	lwz	r3,0x78(r30)
0000375c	bl	0x10400	; symbol stub for: _CountMenuItems
00003760	or	r0,r3,r3
00003764	or	r2,r0,r0
00003768	lhz	r0,0x40(r30)
0000376c	rlwinm	r0,r0,0,16,31
00003770	cmplw	cr7,r0,r2
00003774	ble	cr7,0x367c
00003778	li	r0,__mh_bundle_header
0000377c	stw	r0,0x48(r30)
00003780	b	0x37b0
00003784	addis	r2,r31,0x1
00003788	lwz	r2,0xf9a4(r2)
0000378c	addi	r0,r2,0xb0
00003790	addis	r2,r31,0x1
00003794	addi	r3,r2,0xe650
00003798	li	r4,0x1
0000379c	li	r5,0x23
000037a0	or	r6,r0,r0
000037a4	bl	0x11080	; symbol stub for: _fwrite
000037a8	li	r0,__mh_bundle_header
000037ac	stw	r0,0x48(r30)
000037b0	lwz	r0,0x48(r30)
000037b4	or	r3,r0,r0
000037b8	lwz	r1,__mh_bundle_header(r1)
000037bc	lwz	r0,0x8(r1)
000037c0	mtspr	lr,r0
000037c4	lmw	r30,0xfff8(r1)
000037c8	blr
_DropboxMenuEventHandler:
000037cc	mfspr	r0,lr
000037d0	stmw	r30,0xfff8(r1)
000037d4	stw	r0,0x8(r1)
000037d8	stwu	r1,0xff50(r1)
000037dc	or	r30,r1,r1
000037e0	bcl	20,31,0x37e4
000037e4	mfspr	r31,lr
000037e8	stw	r3,0xc8(r30)
000037ec	stw	r4,0xcc(r30)
000037f0	stw	r5,0xd0(r30)
000037f4	lwz	r0,0xd0(r30)
000037f8	stw	r0,0x5c(r30)
000037fc	li	r0,__mh_bundle_header
00003800	stw	r0,0x58(r30)
00003804	lwz	r3,0xcc(r30)
00003808	bl	0x10660	; symbol stub for: _GetEventKind
0000380c	or	r0,r3,r3
00003810	cmpwi	cr7,r0,0x1
00003814	bne	cr7,0x3978
00003818	addi	r0,r30,0x60
0000381c	lwz	r3,0xcc(r30)
00003820	lis	r4,0x2d2d
00003824	ori	r4,r4,0x2d2d
00003828	lis	r5,0x6863
0000382c	ori	r5,r5,0x6d64
00003830	li	r6,__mh_bundle_header
00003834	li	r7,0xe
00003838	li	r8,__mh_bundle_header
0000383c	or	r9,r0,r0
00003840	bl	0x10680	; symbol stub for: _GetEventParameter
00003844	or	r0,r3,r3
00003848	stw	r0,0x58(r30)
0000384c	lwz	r0,0x58(r30)
00003850	stw	r0,0x54(r30)
00003854	lwz	r0,0x54(r30)
00003858	srawi	r2,r0,31
0000385c	xor	r0,r2,r0
00003860	subf	r0,r2,r0
00003864	neg	r0,r0
00003868	rlwinm	r0,r0,1,31,31
0000386c	cmpwi	cr7,r0,__mh_bundle_header
00003870	beq	cr7,0x38b0
00003874	lwz	r0,0x54(r30)
00003878	lis	r3,0x3f2a
0000387c	ori	r3,r3,0x3f2a
00003880	li	r4,__mh_bundle_header
00003884	addis	r2,r31,0x1
00003888	addi	r5,r2,0xe4b4
0000388c	addis	r2,r31,0x1
00003890	addi	r6,r2,0xe3cc
00003894	li	r7,__mh_bundle_header
00003898	addis	r2,r31,0x1
0000389c	addi	r8,r2,0xe3dc
000038a0	li	r9,0x63
000038a4	or	r10,r0,r0
000038a8	bl	0x10480	; symbol stub for: _DebugAssert
000038ac	b	0x3d04
000038b0	addi	r0,r30,0x70
000038b4	lwz	r3,0xcc(r30)
000038b8	lis	r4,0x6d63
000038bc	ori	r4,r4,0x7478
000038c0	lis	r5,0x6d61
000038c4	ori	r5,r5,0x676e
000038c8	li	r6,__mh_bundle_header
000038cc	li	r7,0x4
000038d0	li	r8,__mh_bundle_header
000038d4	or	r9,r0,r0
000038d8	bl	0x10680	; symbol stub for: _GetEventParameter
000038dc	or	r0,r3,r3
000038e0	stw	r0,0x58(r30)
000038e4	lwz	r0,0x58(r30)
000038e8	stw	r0,0x50(r30)
000038ec	lwz	r0,0x50(r30)
000038f0	srawi	r2,r0,31
000038f4	xor	r0,r2,r0
000038f8	subf	r0,r2,r0
000038fc	neg	r0,r0
00003900	rlwinm	r0,r0,1,31,31
00003904	cmpwi	cr7,r0,__mh_bundle_header
00003908	beq	cr7,0x3948
0000390c	lwz	r0,0x50(r30)
00003910	lis	r3,0x3f2a
00003914	ori	r3,r3,0x3f2a
00003918	li	r4,__mh_bundle_header
0000391c	addis	r2,r31,0x1
00003920	addi	r5,r2,0xe4b4
00003924	addis	r2,r31,0x1
00003928	addi	r6,r2,0xe3cc
0000392c	li	r7,__mh_bundle_header
00003930	addis	r2,r31,0x1
00003934	addi	r8,r2,0xe3dc
00003938	li	r9,0x65
0000393c	or	r10,r0,r0
00003940	bl	0x10480	; symbol stub for: _DebugAssert
00003944	b	0x3d04
00003948	addis	r2,r31,0x1
0000394c	addi	r2,r2,0x1bc
00003950	lwz	r0,__mh_bundle_header(r2)
00003954	or	r2,r0,r0
00003958	lwz	r0,0x64(r30)
0000395c	li	r3,__mh_bundle_header
00003960	or	r4,r2,r2
00003964	or	r5,r0,r0
00003968	bl	_SVNPluginHandleSelection
0000396c	or	r0,r3,r3
00003970	stw	r0,0x58(r30)
00003974	b	0x3d04
00003978	lwz	r3,0xcc(r30)
0000397c	bl	0x10660	; symbol stub for: _GetEventKind
00003980	or	r0,r3,r3
00003984	cmpwi	cr7,r0,0x9
00003988	bne	cr7,0x3d04
0000398c	lwz	r0,0x5c(r30)
00003990	cmpwi	cr7,r0,__mh_bundle_header
00003994	bne	cr7,0x3a28
00003998	addis	r2,r31,0x1
0000399c	lwz	r2,0xf828(r2)
000039a0	addi	r0,r2,0xb0
000039a4	addis	r2,r31,0x1
000039a8	addi	r3,r2,0xe4f8
000039ac	li	r4,0x1
000039b0	li	r5,0x1d
000039b4	or	r6,r0,r0
000039b8	bl	0x11080	; symbol stub for: _fwrite
000039bc	li	r0,0xffce
000039c0	stw	r0,0x58(r30)
000039c4	lwz	r0,0x58(r30)
000039c8	stw	r0,0x48(r30)
000039cc	lwz	r0,0x48(r30)
000039d0	srawi	r2,r0,31
000039d4	xor	r0,r2,r0
000039d8	subf	r0,r2,r0
000039dc	neg	r0,r0
000039e0	rlwinm	r0,r0,1,31,31
000039e4	cmpwi	cr7,r0,__mh_bundle_header
000039e8	beq	cr7,0x3a28
000039ec	lwz	r0,0x48(r30)
000039f0	lis	r3,0x3f2a
000039f4	ori	r3,r3,0x3f2a
000039f8	li	r4,__mh_bundle_header
000039fc	addis	r2,r31,0x1
00003a00	addi	r5,r2,0xe4b4
00003a04	addis	r2,r31,0x1
00003a08	addi	r6,r2,0xe3cc
00003a0c	li	r7,__mh_bundle_header
00003a10	addis	r2,r31,0x1
00003a14	addi	r8,r2,0xe3dc
00003a18	li	r9,0x6b
00003a1c	or	r10,r0,r0
00003a20	bl	0x10480	; symbol stub for: _DebugAssert
00003a24	b	0x3d04
00003a28	addi	r0,r30,0x74
00003a2c	lwz	r3,0xcc(r30)
00003a30	lis	r4,0x2d2d
00003a34	ori	r4,r4,0x2d2d
00003a38	lis	r5,0x6d65
00003a3c	ori	r5,r5,0x6e75
00003a40	li	r6,__mh_bundle_header
00003a44	li	r7,0x4
00003a48	li	r8,__mh_bundle_header
00003a4c	or	r9,r0,r0
00003a50	bl	0x10680	; symbol stub for: _GetEventParameter
00003a54	or	r0,r3,r3
00003a58	stw	r0,0x58(r30)
00003a5c	lwz	r0,0x58(r30)
00003a60	stw	r0,0x44(r30)
00003a64	lwz	r0,0x44(r30)
00003a68	srawi	r2,r0,31
00003a6c	xor	r0,r2,r0
00003a70	subf	r0,r2,r0
00003a74	neg	r0,r0
00003a78	rlwinm	r0,r0,1,31,31
00003a7c	cmpwi	cr7,r0,__mh_bundle_header
00003a80	beq	cr7,0x3ac0
00003a84	lwz	r0,0x44(r30)
00003a88	lis	r3,0x3f2a
00003a8c	ori	r3,r3,0x3f2a
00003a90	li	r4,__mh_bundle_header
00003a94	addis	r2,r31,0x1
00003a98	addi	r5,r2,0xe4b4
00003a9c	addis	r2,r31,0x1
00003aa0	addi	r6,r2,0xe3cc
00003aa4	li	r7,__mh_bundle_header
00003aa8	addis	r2,r31,0x1
00003aac	addi	r8,r2,0xe3dc
00003ab0	li	r9,0x6f
00003ab4	or	r10,r0,r0
00003ab8	bl	0x10480	; symbol stub for: _DebugAssert
00003abc	b	0x3d04
00003ac0	lwz	r0,0x74(r30)
00003ac4	or	r3,r0,r0
00003ac8	bl	0x10400	; symbol stub for: _CountMenuItems
00003acc	or	r0,r3,r3
00003ad0	sth	r0,0x4c(r30)
00003ad4	lwz	r2,0x74(r30)
00003ad8	lhz	r0,0x4c(r30)
00003adc	rlwinm	r0,r0,0,16,31
00003ae0	or	r3,r2,r2
00003ae4	li	r4,0x1
00003ae8	or	r5,r0,r0
00003aec	bl	0x104c0	; symbol stub for: _DeleteMenuItems
00003af0	or	r0,r3,r3
00003af4	stw	r0,0x58(r30)
00003af8	lwz	r0,0x58(r30)
00003afc	cmpwi	cr7,r0,__mh_bundle_header
00003b00	beq	cr7,0x3b38
00003b04	addis	r2,r31,0x1
00003b08	lwz	r2,0xf828(r2)
00003b0c	addi	r2,r2,0xb0
00003b10	lwz	r9,0x74(r30)
00003b14	lhz	r0,0x4c(r30)
00003b18	rlwinm	r0,r0,0,16,31
00003b1c	or	r3,r2,r2
00003b20	addis	r2,r31,0x1
00003b24	addi	r4,r2,0xe518
00003b28	or	r5,r9,r9
00003b2c	or	r6,r0,r0
00003b30	lwz	r7,0x58(r30)
00003b34	bl	0x11000	; symbol stub for: _fprintf$LDBL128
00003b38	lwz	r2,0x5c(r30)
00003b3c	addi	r0,r2,0x4
00003b40	addi	r2,r30,0x84
00003b44	or	r3,r0,r0
00003b48	or	r4,r2,r2
00003b4c	bl	0xf940	; symbol stub for: _AECountItems
00003b50	or	r0,r3,r3
00003b54	stw	r0,0x58(r30)
00003b58	lwz	r0,0x58(r30)
00003b5c	stw	r0,0x40(r30)
00003b60	lwz	r0,0x40(r30)
00003b64	srawi	r2,r0,31
00003b68	xor	r0,r2,r0
00003b6c	subf	r0,r2,r0
00003b70	neg	r0,r0
00003b74	rlwinm	r0,r0,1,31,31
00003b78	cmpwi	cr7,r0,__mh_bundle_header
00003b7c	beq	cr7,0x3bbc
00003b80	lwz	r0,0x40(r30)
00003b84	lis	r3,0x3f2a
00003b88	ori	r3,r3,0x3f2a
00003b8c	li	r4,__mh_bundle_header
00003b90	addis	r2,r31,0x1
00003b94	addi	r5,r2,0xe4b4
00003b98	addis	r2,r31,0x1
00003b9c	addi	r6,r2,0xe3cc
00003ba0	li	r7,__mh_bundle_header
00003ba4	addis	r2,r31,0x1
00003ba8	addi	r8,r2,0xe3dc
00003bac	li	r9,0x78
00003bb0	or	r10,r0,r0
00003bb4	bl	0x10480	; symbol stub for: _DebugAssert
00003bb8	b	0x3d04
00003bbc	lwz	r0,0x84(r30)
00003bc0	cmpwi	cr7,r0,__mh_bundle_header
00003bc4	ble	cr7,0x3d04
00003bc8	lwz	r2,0x5c(r30)
00003bcc	addi	r0,r2,0x4
00003bd0	addi	r2,r30,0x80
00003bd4	addi	r9,r30,0x78
00003bd8	or	r3,r0,r0
00003bdc	li	r4,0x1
00003be0	lis	r5,0x7265
00003be4	ori	r5,r5,0x636f
00003be8	or	r6,r2,r2
00003bec	or	r7,r9,r9
00003bf0	bl	0xfa20	; symbol stub for: _AEGetNthDesc
00003bf4	or	r0,r3,r3
00003bf8	stw	r0,0x58(r30)
00003bfc	lwz	r0,0x58(r30)
00003c00	stw	r0,0x3c(r30)
00003c04	lwz	r0,0x3c(r30)
00003c08	srawi	r2,r0,31
00003c0c	xor	r0,r2,r0
00003c10	subf	r0,r2,r0
00003c14	neg	r0,r0
00003c18	rlwinm	r0,r0,1,31,31
00003c1c	cmpwi	cr7,r0,__mh_bundle_header
00003c20	beq	cr7,0x3c60
00003c24	lwz	r0,0x3c(r30)
00003c28	lis	r3,0x3f2a
00003c2c	ori	r3,r3,0x3f2a
00003c30	li	r4,__mh_bundle_header
00003c34	addis	r2,r31,0x1
00003c38	addi	r5,r2,0xe4b4
00003c3c	addis	r2,r31,0x1
00003c40	addi	r6,r2,0xe3cc
00003c44	li	r7,__mh_bundle_header
00003c48	addis	r2,r31,0x1
00003c4c	addi	r8,r2,0xe3dc
00003c50	li	r9,0x7b
00003c54	or	r10,r0,r0
00003c58	bl	0x10480	; symbol stub for: _DebugAssert
00003c5c	b	0x3d04
00003c60	addi	r0,r30,0x78
00003c64	addi	r2,r30,0x88
00003c68	or	r3,r0,r0
00003c6c	lis	r4,0x636d
00003c70	ori	r4,r4,0x7362
00003c74	lis	r5,0x2a2a
00003c78	ori	r5,r5,0x2a2a
00003c7c	or	r6,r2,r2
00003c80	bl	0xfa40	; symbol stub for: _AEGetParamDesc
00003c84	or	r0,r3,r3
00003c88	stw	r0,0x58(r30)
00003c8c	lwz	r0,0x58(r30)
00003c90	stw	r0,0x38(r30)
00003c94	lwz	r0,0x38(r30)
00003c98	srawi	r2,r0,31
00003c9c	xor	r0,r2,r0
00003ca0	subf	r0,r2,r0
00003ca4	neg	r0,r0
00003ca8	rlwinm	r0,r0,1,31,31
00003cac	cmpwi	cr7,r0,__mh_bundle_header
00003cb0	beq	cr7,0x3cf0
00003cb4	lwz	r0,0x38(r30)
00003cb8	lis	r3,0x3f2a
00003cbc	ori	r3,r3,0x3f2a
00003cc0	li	r4,__mh_bundle_header
00003cc4	addis	r2,r31,0x1
00003cc8	addi	r5,r2,0xe4b4
00003ccc	addis	r2,r31,0x1
00003cd0	addi	r6,r2,0xe3cc
00003cd4	li	r7,__mh_bundle_header
00003cd8	addis	r2,r31,0x1
00003cdc	addi	r8,r2,0xe3dc
00003ce0	li	r9,0x7e
00003ce4	or	r10,r0,r0
00003ce8	bl	0x10480	; symbol stub for: _DebugAssert
00003cec	b	0x3d04
00003cf0	lwz	r2,0x74(r30)
00003cf4	addi	r0,r30,0x88
00003cf8	or	r3,r0,r0
00003cfc	or	r4,r2,r2
00003d00	bl	_MenuFromAEDescList
00003d04	lwz	r0,0x58(r30)
00003d08	cmpwi	cr7,r0,__mh_bundle_header
00003d0c	beq	cr7,0x3d40
00003d10	lwz	r0,0x58(r30)
00003d14	li	r2,0xd96e
00003d18	cmpw	cr7,r0,r2
00003d1c	beq	cr7,0x3d40
00003d20	addis	r2,r31,0x1
00003d24	lwz	r2,0xf828(r2)
00003d28	addi	r0,r2,0xb0
00003d2c	or	r3,r0,r0
00003d30	addis	r2,r31,0x1
00003d34	addi	r4,r2,0xe54c
00003d38	lwz	r5,0x58(r30)
00003d3c	bl	0x11000	; symbol stub for: _fprintf$LDBL128
00003d40	lwz	r3,0xc8(r30)
00003d44	lwz	r4,0xcc(r30)
00003d48	bl	0x10300	; symbol stub for: _CallNextEventHandler
00003d4c	or	r0,r3,r3
00003d50	stw	r0,0x58(r30)
00003d54	lwz	r0,0x58(r30)
00003d58	or	r3,r0,r0
00003d5c	lwz	r1,__mh_bundle_header(r1)
00003d60	lwz	r0,0x8(r1)
00003d64	mtspr	lr,r0
00003d68	lmw	r30,0xfff8(r1)
00003d6c	blr
_TriggerMoreMenuAndPopulateAEDescList:
00003d70	mfspr	r0,lr
00003d74	stmw	r29,0xfff4(r1)
00003d78	stw	r0,0x8(r1)
00003d7c	stwu	r1,0xff80(r1)
00003d80	or	r30,r1,r1
00003d84	bcl	20,31,0x3d88
00003d88	mfspr	r31,lr
00003d8c	stw	r3,0x98(r30)
00003d90	stw	r4,0x9c(r30)
00003d94	lwz	r0,0x98(r30)
00003d98	cmpwi	cr7,r0,__mh_bundle_header
00003d9c	beq	cr7,0x4018
00003da0	lwz	r3,0x98(r30)
00003da4	bl	_MoreMenuItemIndex
00003da8	or	r0,r3,r3
00003dac	sth	r0,0x50(r30)
00003db0	li	r0,__mh_bundle_header
00003db4	stw	r0,0x5c(r30)
00003db8	lhz	r0,0x50(r30)
00003dbc	rlwinm	r0,r0,0,16,31
00003dc0	addi	r2,r30,0x5c
00003dc4	lwz	r3,0x98(r30)
00003dc8	or	r4,r0,r0
00003dcc	or	r5,r2,r2
00003dd0	bl	0x10740	; symbol stub for: _GetMenuItemHierarchicalMenu
00003dd4	or	r0,r3,r3
00003dd8	stw	r0,0x54(r30)
00003ddc	lwz	r0,0x54(r30)
00003de0	stw	r0,0x4c(r30)
00003de4	lwz	r0,0x4c(r30)
00003de8	srawi	r2,r0,31
00003dec	xor	r0,r2,r0
00003df0	subf	r0,r2,r0
00003df4	neg	r0,r0
00003df8	rlwinm	r0,r0,1,31,31
00003dfc	cmpwi	cr7,r0,__mh_bundle_header
00003e00	beq	cr7,0x3e40
00003e04	lwz	r0,0x4c(r30)
00003e08	lis	r3,0x3f2a
00003e0c	ori	r3,r3,0x3f2a
00003e10	li	r4,__mh_bundle_header
00003e14	addis	r2,r31,0x1
00003e18	addi	r5,r2,0xdf10
00003e1c	addis	r2,r31,0x1
00003e20	addi	r6,r2,0xde28
00003e24	li	r7,__mh_bundle_header
00003e28	addis	r2,r31,0x1
00003e2c	addi	r8,r2,0xde38
00003e30	li	r9,0x93
00003e34	or	r10,r0,r0
00003e38	bl	0x10480	; symbol stub for: _DebugAssert
00003e3c	b	0x4130
00003e40	addis	r2,r31,0x1
00003e44	lwz	r2,0xf290(r2)
00003e48	lwz	r0,__mh_bundle_header(r2)
00003e4c	addis	r2,r31,0x1
00003e50	addi	r2,r2,0xd948
00003e54	lfd	f0,__mh_bundle_header(r2)
00003e58	addi	r2,r30,0x58
00003e5c	or	r3,r0,r0
00003e60	lis	r4,0x6d65
00003e64	ori	r4,r4,0x6e75
00003e68	li	r5,0x9
00003e6c	fmr	f1,f0
00003e70	li	r8,__mh_bundle_header
00003e74	or	r9,r2,r2
00003e78	bl	0x10420	; symbol stub for: _CreateEvent
00003e7c	or	r0,r3,r3
00003e80	stw	r0,0x54(r30)
00003e84	lwz	r0,0x54(r30)
00003e88	stw	r0,0x48(r30)
00003e8c	lwz	r0,0x48(r30)
00003e90	srawi	r2,r0,31
00003e94	xor	r0,r2,r0
00003e98	subf	r0,r2,r0
00003e9c	neg	r0,r0
00003ea0	rlwinm	r0,r0,1,31,31
00003ea4	cmpwi	cr7,r0,__mh_bundle_header
00003ea8	beq	cr7,0x3ee8
00003eac	lwz	r0,0x48(r30)
00003eb0	lis	r3,0x3f2a
00003eb4	ori	r3,r3,0x3f2a
00003eb8	li	r4,__mh_bundle_header
00003ebc	addis	r2,r31,0x1
00003ec0	addi	r5,r2,0xdf10
00003ec4	addis	r2,r31,0x1
00003ec8	addi	r6,r2,0xde28
00003ecc	li	r7,__mh_bundle_header
00003ed0	addis	r2,r31,0x1
00003ed4	addi	r8,r2,0xde38
00003ed8	li	r9,0x95
00003edc	or	r10,r0,r0
00003ee0	bl	0x10480	; symbol stub for: _DebugAssert
00003ee4	b	0x4130
00003ee8	lwz	r0,0x58(r30)
00003eec	addi	r2,r30,0x5c
00003ef0	or	r3,r0,r0
00003ef4	lis	r4,0x2d2d
00003ef8	ori	r4,r4,0x2d2d
00003efc	lis	r5,0x6d65
00003f00	ori	r5,r5,0x6e75
00003f04	li	r6,0x4
00003f08	or	r7,r2,r2
00003f0c	bl	0x10cc0	; symbol stub for: _SetEventParameter
00003f10	or	r0,r3,r3
00003f14	stw	r0,0x54(r30)
00003f18	lwz	r0,0x54(r30)
00003f1c	stw	r0,0x44(r30)
00003f20	lwz	r0,0x44(r30)
00003f24	srawi	r2,r0,31
00003f28	xor	r0,r2,r0
00003f2c	subf	r0,r2,r0
00003f30	neg	r0,r0
00003f34	rlwinm	r0,r0,1,31,31
00003f38	cmpwi	cr7,r0,__mh_bundle_header
00003f3c	beq	cr7,0x3f7c
00003f40	lwz	r0,0x44(r30)
00003f44	lis	r3,0x3f2a
00003f48	ori	r3,r3,0x3f2a
00003f4c	li	r4,__mh_bundle_header
00003f50	addis	r2,r31,0x1
00003f54	addi	r5,r2,0xdf10
00003f58	addis	r2,r31,0x1
00003f5c	addi	r6,r2,0xde28
00003f60	li	r7,__mh_bundle_header
00003f64	addis	r2,r31,0x1
00003f68	addi	r8,r2,0xde38
00003f6c	li	r9,0x97
00003f70	or	r10,r0,r0
00003f74	bl	0x10480	; symbol stub for: _DebugAssert
00003f78	b	0x4130
00003f7c	lwz	r29,0x58(r30)
00003f80	lwz	r0,0x5c(r30)
00003f84	or	r3,r0,r0
00003f88	bl	0x106e0	; symbol stub for: _GetMenuEventTarget
00003f8c	or	r0,r3,r3
00003f90	or	r3,r29,r29
00003f94	or	r4,r0,r0
00003f98	bl	0x10ca0	; symbol stub for: _SendEventToEventTarget
00003f9c	or	r0,r3,r3
00003fa0	stw	r0,0x54(r30)
00003fa4	lwz	r2,0x54(r30)
00003fa8	li	r0,0xd96e
00003fac	cmpw	cr7,r2,r0
00003fb0	beq	cr7,0x4018
00003fb4	lwz	r0,0x54(r30)
00003fb8	stw	r0,0x40(r30)
00003fbc	lwz	r0,0x40(r30)
00003fc0	srawi	r2,r0,31
00003fc4	xor	r0,r2,r0
00003fc8	subf	r0,r2,r0
00003fcc	neg	r0,r0
00003fd0	rlwinm	r0,r0,1,31,31
00003fd4	cmpwi	cr7,r0,__mh_bundle_header
00003fd8	beq	cr7,0x4018
00003fdc	lwz	r0,0x40(r30)
00003fe0	lis	r3,0x3f2a
00003fe4	ori	r3,r3,0x3f2a
00003fe8	li	r4,__mh_bundle_header
00003fec	addis	r2,r31,0x1
00003ff0	addi	r5,r2,0xdf10
00003ff4	addis	r2,r31,0x1
00003ff8	addi	r6,r2,0xde28
00003ffc	li	r7,__mh_bundle_header
00004000	addis	r2,r31,0x1
00004004	addi	r8,r2,0xde38
00004008	li	r9,0x9a
0000400c	or	r10,r0,r0
00004010	bl	0x10480	; symbol stub for: _DebugAssert
00004014	b	0x4130
00004018	addis	r2,r31,0x1
0000401c	addi	r2,r2,0xfc18
00004020	lwz	r0,__mh_bundle_header(r2)
00004024	cmpwi	cr7,r0,__mh_bundle_header
00004028	beq	cr7,0x4130
0000402c	li	r3,__mh_bundle_header
00004030	li	r4,__mh_bundle_header
00004034	li	r5,__mh_bundle_header
00004038	lwz	r6,0x9c(r30)
0000403c	bl	0xf9a0	; symbol stub for: _AECreateList
00004040	or	r0,r3,r3
00004044	stw	r0,0x54(r30)
00004048	lwz	r0,0x54(r30)
0000404c	stw	r0,0x3c(r30)
00004050	lwz	r0,0x3c(r30)
00004054	srawi	r2,r0,31
00004058	xor	r0,r2,r0
0000405c	subf	r0,r2,r0
00004060	neg	r0,r0
00004064	rlwinm	r0,r0,1,31,31
00004068	cmpwi	cr7,r0,__mh_bundle_header
0000406c	beq	cr7,0x40ac
00004070	lwz	r0,0x3c(r30)
00004074	lis	r3,0x3f2a
00004078	ori	r3,r3,0x3f2a
0000407c	li	r4,__mh_bundle_header
00004080	addis	r2,r31,0x1
00004084	addi	r5,r2,0xdf10
00004088	addis	r2,r31,0x1
0000408c	addi	r6,r2,0xde28
00004090	li	r7,__mh_bundle_header
00004094	addis	r2,r31,0x1
00004098	addi	r8,r2,0xde38
0000409c	li	r9,0x9f
000040a0	or	r10,r0,r0
000040a4	bl	0x10480	; symbol stub for: _DebugAssert
000040a8	b	0x4130
000040ac	addis	r2,r31,0x1
000040b0	addi	r2,r2,0xfc18
000040b4	lwz	r0,__mh_bundle_header(r2)
000040b8	li	r3,__mh_bundle_header
000040bc	or	r4,r0,r0
000040c0	lwz	r5,0x9c(r30)
000040c4	bl	_SVNPluginExamineContext
000040c8	or	r0,r3,r3
000040cc	stw	r0,0x54(r30)
000040d0	lwz	r0,0x54(r30)
000040d4	stw	r0,0x38(r30)
000040d8	lwz	r0,0x38(r30)
000040dc	srawi	r2,r0,31
000040e0	xor	r0,r2,r0
000040e4	subf	r0,r2,r0
000040e8	neg	r0,r0
000040ec	rlwinm	r0,r0,1,31,31
000040f0	cmpwi	cr7,r0,__mh_bundle_header
000040f4	beq	cr7,0x4130
000040f8	lwz	r0,0x38(r30)
000040fc	lis	r3,0x3f2a
00004100	ori	r3,r3,0x3f2a
00004104	li	r4,__mh_bundle_header
00004108	addis	r2,r31,0x1
0000410c	addi	r5,r2,0xdf10
00004110	addis	r2,r31,0x1
00004114	addi	r6,r2,0xde28
00004118	li	r7,__mh_bundle_header
0000411c	addis	r2,r31,0x1
00004120	addi	r8,r2,0xde38
00004124	li	r9,0xa1
00004128	or	r10,r0,r0
0000412c	bl	0x10480	; symbol stub for: _DebugAssert
00004130	lwz	r0,0x54(r30)
00004134	cmpwi	cr7,r0,__mh_bundle_header
00004138	beq	cr7,0x4160
0000413c	addis	r2,r31,0x1
00004140	lwz	r2,0xf284(r2)
00004144	addi	r0,r2,0xb0
00004148	addis	r2,r31,0x1
0000414c	addi	r3,r2,0xdfe4
00004150	li	r4,0x1
00004154	li	r5,0x2c
00004158	or	r6,r0,r0
0000415c	bl	0x11080	; symbol stub for: _fwrite
00004160	lwz	r0,0x54(r30)
00004164	or	r3,r0,r0
00004168	lwz	r1,__mh_bundle_header(r1)
0000416c	lwz	r0,0x8(r1)
00004170	mtspr	lr,r0
00004174	lmw	r29,0xfff4(r1)
00004178	blr
_MainMenuEventHandler:
0000417c	mfspr	r0,lr
00004180	stmw	r30,0xfff8(r1)
00004184	stw	r0,0x8(r1)
00004188	stwu	r1,0xff40(r1)
0000418c	or	r30,r1,r1
00004190	bcl	20,31,0x4194
00004194	mfspr	r31,lr
00004198	stw	r3,0xd8(r30)
0000419c	stw	r4,0xdc(r30)
000041a0	stw	r5,0xe0(r30)
000041a4	li	r0,__mh_bundle_header
000041a8	stw	r0,0x68(r30)
000041ac	lwz	r0,0xe0(r30)
000041b0	stw	r0,0x64(r30)
000041b4	lwz	r3,0xdc(r30)
000041b8	bl	0x10660	; symbol stub for: _GetEventKind
000041bc	or	r0,r3,r3
000041c0	cmpwi	cr7,r0,0x9
000041c4	bne	cr7,0x4704
000041c8	addi	r0,r30,0x78
000041cc	lwz	r3,0xdc(r30)
000041d0	lis	r4,0x2d2d
000041d4	ori	r4,r4,0x2d2d
000041d8	lis	r5,0x6d65
000041dc	ori	r5,r5,0x6e75
000041e0	li	r6,__mh_bundle_header
000041e4	li	r7,0x4
000041e8	li	r8,__mh_bundle_header
000041ec	or	r9,r0,r0
000041f0	bl	0x10680	; symbol stub for: _GetEventParameter
000041f4	or	r0,r3,r3
000041f8	stw	r0,0x68(r30)
000041fc	lwz	r0,0x68(r30)
00004200	stw	r0,0x5c(r30)
00004204	lwz	r0,0x5c(r30)
00004208	srawi	r2,r0,31
0000420c	xor	r0,r2,r0
00004210	subf	r0,r2,r0
00004214	neg	r0,r0
00004218	rlwinm	r0,r0,1,31,31
0000421c	cmpwi	cr7,r0,__mh_bundle_header
00004220	beq	cr7,0x4260
00004224	lwz	r0,0x5c(r30)
00004228	lis	r3,0x3f2a
0000422c	ori	r3,r3,0x3f2a
00004230	li	r4,__mh_bundle_header
00004234	addis	r2,r31,0x1
00004238	addi	r5,r2,0xdb04
0000423c	addis	r2,r31,0x1
00004240	addi	r6,r2,0xda1c
00004244	li	r7,__mh_bundle_header
00004248	addis	r2,r31,0x1
0000424c	addi	r8,r2,0xda2c
00004250	li	r9,0xb3
00004254	or	r10,r0,r0
00004258	bl	0x10480	; symbol stub for: _DebugAssert
0000425c	b	0x4704
00004260	lwz	r0,0x78(r30)
00004264	addi	r2,r30,0x7c
00004268	or	r3,r0,r0
0000426c	or	r4,r2,r2
00004270	bl	_TriggerMoreMenuAndPopulateAEDescList
00004274	addi	r0,r30,0x7c
00004278	addi	r2,r30,0x84
0000427c	or	r3,r0,r0
00004280	or	r4,r2,r2
00004284	bl	0xf940	; symbol stub for: _AECountItems
00004288	or	r0,r3,r3
0000428c	stw	r0,0x68(r30)
00004290	lwz	r0,0x68(r30)
00004294	stw	r0,0x58(r30)
00004298	lwz	r0,0x58(r30)
0000429c	srawi	r2,r0,31
000042a0	xor	r0,r2,r0
000042a4	subf	r0,r2,r0
000042a8	neg	r0,r0
000042ac	rlwinm	r0,r0,1,31,31
000042b0	cmpwi	cr7,r0,__mh_bundle_header
000042b4	beq	cr7,0x42f4
000042b8	lwz	r0,0x58(r30)
000042bc	lis	r3,0x3f2a
000042c0	ori	r3,r3,0x3f2a
000042c4	li	r4,__mh_bundle_header
000042c8	addis	r2,r31,0x1
000042cc	addi	r5,r2,0xdb04
000042d0	addis	r2,r31,0x1
000042d4	addi	r6,r2,0xda1c
000042d8	li	r7,__mh_bundle_header
000042dc	addis	r2,r31,0x1
000042e0	addi	r8,r2,0xda2c
000042e4	li	r9,0xb9
000042e8	or	r10,r0,r0
000042ec	bl	0x10480	; symbol stub for: _DebugAssert
000042f0	b	0x4704
000042f4	lwz	r0,0x84(r30)
000042f8	cmpwi	cr7,r0,__mh_bundle_header
000042fc	ble	cr7,0x4704
00004300	addis	r2,r31,__mh_bundle_header
00004304	addi	r0,r2,0xf638
00004308	stw	r0,0x50(r30)
0000430c	addis	r2,r31,0x1
00004310	addi	r2,r2,0xd524
00004314	lwz	r0,__mh_bundle_header(r2)
00004318	lwz	r9,0x4(r2)
0000431c	lwz	r11,0x8(r2)
00004320	lwz	r2,0xc(r2)
00004324	stw	r0,0x8e(r30)
00004328	stw	r9,0x92(r30)
0000432c	stw	r11,0x96(r30)
00004330	stw	r2,0x9a(r30)
00004334	lwz	r0,0x78(r30)
00004338	or	r3,r0,r0
0000433c	bl	_MoreMenuItemIndex
00004340	or	r0,r3,r3
00004344	sth	r0,0x4c(r30)
00004348	addi	r0,r30,0x88
0000434c	li	r3,0xb00b
00004350	li	r4,__mh_bundle_header
00004354	or	r5,r0,r0
00004358	bl	0x10440	; symbol stub for: _CreateNewMenu
0000435c	or	r0,r3,r3
00004360	stw	r0,0x68(r30)
00004364	lwz	r0,0x68(r30)
00004368	stw	r0,0x48(r30)
0000436c	lwz	r0,0x48(r30)
00004370	srawi	r2,r0,31
00004374	xor	r0,r2,r0
00004378	subf	r0,r2,r0
0000437c	neg	r0,r0
00004380	rlwinm	r0,r0,1,31,31
00004384	cmpwi	cr7,r0,__mh_bundle_header
00004388	beq	cr7,0x43c8
0000438c	lwz	r0,0x48(r30)
00004390	lis	r3,0x3f2a
00004394	ori	r3,r3,0x3f2a
00004398	li	r4,__mh_bundle_header
0000439c	addis	r2,r31,0x1
000043a0	addi	r5,r2,0xdb04
000043a4	addis	r2,r31,0x1
000043a8	addi	r6,r2,0xda1c
000043ac	li	r7,__mh_bundle_header
000043b0	addis	r2,r31,0x1
000043b4	addi	r8,r2,0xda2c
000043b8	li	r9,0xc3
000043bc	or	r10,r0,r0
000043c0	bl	0x10480	; symbol stub for: _DebugAssert
000043c4	b	0x4704
000043c8	li	r3,0xc
000043cc	bl	0x111c0	; symbol stub for: _malloc
000043d0	or	r0,r3,r3
000043d4	stw	r0,0x54(r30)
000043d8	lwz	r2,0x78(r30)
000043dc	li	r0,__mh_bundle_header
000043e0	stw	r0,0x6c(r30)
000043e4	li	r0,__mh_bundle_header
000043e8	stw	r0,0x70(r30)
000043ec	li	r0,__mh_bundle_header
000043f0	stw	r0,0x74(r30)
000043f4	stw	r2,0x6c(r30)
000043f8	lwz	r0,0x7c(r30)
000043fc	lwz	r2,0x80(r30)
00004400	stw	r0,0x70(r30)
00004404	stw	r2,0x74(r30)
00004408	lwz	r2,0x54(r30)
0000440c	lwz	r0,0x6c(r30)
00004410	lwz	r9,0x70(r30)
00004414	lwz	r11,0x74(r30)
00004418	stw	r0,__mh_bundle_header(r2)
0000441c	stw	r9,0x4(r2)
00004420	stw	r11,0x8(r2)
00004424	lwz	r0,0x88(r30)
00004428	or	r3,r0,r0
0000442c	bl	0x106e0	; symbol stub for: _GetMenuEventTarget
00004430	or	r0,r3,r3
00004434	addi	r2,r30,0x8e
00004438	or	r3,r0,r0
0000443c	lwz	r4,0x50(r30)
00004440	li	r5,0x2
00004444	or	r6,r2,r2
00004448	lwz	r7,0x54(r30)
0000444c	li	r8,__mh_bundle_header
00004450	bl	0x10aa0	; symbol stub for: _InstallEventHandler
00004454	or	r0,r3,r3
00004458	stw	r0,0x68(r30)
0000445c	lwz	r0,0x68(r30)
00004460	stw	r0,0x44(r30)
00004464	lwz	r0,0x44(r30)
00004468	srawi	r2,r0,31
0000446c	xor	r0,r2,r0
00004470	subf	r0,r2,r0
00004474	neg	r0,r0
00004478	rlwinm	r0,r0,1,31,31
0000447c	cmpwi	cr7,r0,__mh_bundle_header
00004480	beq	cr7,0x44c0
00004484	lwz	r0,0x44(r30)
00004488	lis	r3,0x3f2a
0000448c	ori	r3,r3,0x3f2a
00004490	li	r4,__mh_bundle_header
00004494	addis	r2,r31,0x1
00004498	addi	r5,r2,0xdb04
0000449c	addis	r2,r31,0x1
000044a0	addi	r6,r2,0xda1c
000044a4	li	r7,__mh_bundle_header
000044a8	addis	r2,r31,0x1
000044ac	addi	r8,r2,0xda2c
000044b0	li	r9,0xc8
000044b4	or	r10,r0,r0
000044b8	bl	0x10480	; symbol stub for: _DebugAssert
000044bc	b	0x4704
000044c0	addis	r2,r31,0x1
000044c4	addi	r2,r2,0xf780
000044c8	lwz	r2,__mh_bundle_header(r2)
000044cc	stw	r2,0xa8(r30)
000044d0	lwz	r0,0xa8(r30)
000044d4	cmpwi	cr7,r0,0x70
000044d8	beq	cr7,0x44ec
000044dc	lwz	r2,0xa8(r30)
000044e0	cmpwi	cr7,r2,0xb4
000044e4	beq	cr7,0x4528
000044e8	b	0x4570
000044ec	lwz	r9,0x78(r30)
000044f0	addis	r2,r31,0x1
000044f4	addi	r2,r2,0xf268
000044f8	lwz	r0,__mh_bundle_header(r2)
000044fc	or	r3,r9,r9
00004500	or	r4,r0,r0
00004504	li	r5,__mh_bundle_header
00004508	li	r6,__mh_bundle_header
0000450c	li	r7,__mh_bundle_header
00004510	bl	0x10a80	; symbol stub for: _InsertMenuItemTextWithCFString
00004514	or	r0,r3,r3
00004518	stw	r0,0x68(r30)
0000451c	li	r0,0x1
00004520	sth	r0,0x8c(r30)
00004524	b	0x45a4
00004528	lwz	r11,0x78(r30)
0000452c	addis	r2,r31,0x1
00004530	addi	r2,r2,0xf268
00004534	lwz	r9,__mh_bundle_header(r2)
00004538	lhz	r2,0x4c(r30)
0000453c	addi	r0,r2,0xffff
00004540	rlwinm	r0,r0,0,16,31
00004544	or	r3,r11,r11
00004548	or	r4,r9,r9
0000454c	or	r5,r0,r0
00004550	li	r6,__mh_bundle_header
00004554	li	r7,__mh_bundle_header
00004558	bl	0x10a80	; symbol stub for: _InsertMenuItemTextWithCFString
0000455c	or	r0,r3,r3
00004560	stw	r0,0x68(r30)
00004564	lhz	r0,0x4c(r30)
00004568	sth	r0,0x8c(r30)
0000456c	b	0x45a4
00004570	lwz	r9,0x78(r30)
00004574	addis	r2,r31,0x1
00004578	addi	r2,r2,0xf268
0000457c	lwz	r0,__mh_bundle_header(r2)
00004580	addi	r2,r30,0x8c
00004584	or	r3,r9,r9
00004588	or	r4,r0,r0
0000458c	li	r5,__mh_bundle_header
00004590	li	r6,__mh_bundle_header
00004594	or	r7,r2,r2
00004598	bl	0xfb60	; symbol stub for: _AppendMenuItemTextWithCFString
0000459c	or	r0,r3,r3
000045a0	stw	r0,0x68(r30)
000045a4	lwz	r0,0x68(r30)
000045a8	stw	r0,0x40(r30)
000045ac	lwz	r0,0x40(r30)
000045b0	srawi	r2,r0,31
000045b4	xor	r0,r2,r0
000045b8	subf	r0,r2,r0
000045bc	neg	r0,r0
000045c0	rlwinm	r0,r0,1,31,31
000045c4	cmpwi	cr7,r0,__mh_bundle_header
000045c8	beq	cr7,0x4608
000045cc	lwz	r0,0x40(r30)
000045d0	lis	r3,0x3f2a
000045d4	ori	r3,r3,0x3f2a
000045d8	li	r4,__mh_bundle_header
000045dc	addis	r2,r31,0x1
000045e0	addi	r5,r2,0xdb04
000045e4	addis	r2,r31,0x1
000045e8	addi	r6,r2,0xda1c
000045ec	li	r7,__mh_bundle_header
000045f0	addis	r2,r31,0x1
000045f4	addi	r8,r2,0xda2c
000045f8	li	r9,0xd6
000045fc	or	r10,r0,r0
00004600	bl	0x10480	; symbol stub for: _DebugAssert
00004604	b	0x4704
00004608	addis	r2,r31,0x1
0000460c	addi	r2,r2,0xf804
00004610	lwz	r0,__mh_bundle_header(r2)
00004614	cmpwi	cr7,r0,__mh_bundle_header
00004618	beq	cr7,0x467c
0000461c	lwz	r9,0x78(r30)
00004620	lhz	r0,0x8c(r30)
00004624	rlwinm	r11,r0,0,16,31
00004628	addis	r2,r31,0x1
0000462c	addi	r2,r2,0xf804
00004630	lwz	r0,__mh_bundle_header(r2)
00004634	or	r3,r9,r9
00004638	or	r4,r11,r11
0000463c	li	r5,0x6
00004640	or	r6,r0,r0
00004644	bl	0x10d20	; symbol stub for: _SetMenuItemIconHandle
00004648	or	r0,r3,r3
0000464c	stw	r0,0x3c(r30)
00004650	lwz	r0,0x3c(r30)
00004654	cmpwi	cr7,r0,__mh_bundle_header
00004658	beq	cr7,0x467c
0000465c	addis	r2,r31,0x1
00004660	lwz	r2,0xee78(r2)
00004664	addi	r0,r2,0xb0
00004668	or	r3,r0,r0
0000466c	addis	r2,r31,0x1
00004670	addi	r4,r2,0xdc08
00004674	lwz	r5,0x3c(r30)
00004678	bl	0x11000	; symbol stub for: _fprintf$LDBL128
0000467c	lwz	r9,0x78(r30)
00004680	lhz	r0,0x8c(r30)
00004684	rlwinm	r0,r0,0,16,31
00004688	lwz	r2,0x88(r30)
0000468c	or	r3,r9,r9
00004690	or	r4,r0,r0
00004694	or	r5,r2,r2
00004698	bl	0x10d00	; symbol stub for: _SetMenuItemHierarchicalMenu
0000469c	or	r0,r3,r3
000046a0	stw	r0,0x68(r30)
000046a4	lwz	r0,0x68(r30)
000046a8	stw	r0,0x38(r30)
000046ac	lwz	r0,0x38(r30)
000046b0	srawi	r2,r0,31
000046b4	xor	r0,r2,r0
000046b8	subf	r0,r2,r0
000046bc	neg	r0,r0
000046c0	rlwinm	r0,r0,1,31,31
000046c4	cmpwi	cr7,r0,__mh_bundle_header
000046c8	beq	cr7,0x4704
000046cc	lwz	r0,0x38(r30)
000046d0	lis	r3,0x3f2a
000046d4	ori	r3,r3,0x3f2a
000046d8	li	r4,__mh_bundle_header
000046dc	addis	r2,r31,0x1
000046e0	addi	r5,r2,0xdb04
000046e4	addis	r2,r31,0x1
000046e8	addi	r6,r2,0xda1c
000046ec	li	r7,__mh_bundle_header
000046f0	addis	r2,r31,0x1
000046f4	addi	r8,r2,0xda2c
000046f8	li	r9,0xde
000046fc	or	r10,r0,r0
00004700	bl	0x10480	; symbol stub for: _DebugAssert
00004704	lwz	r0,0x68(r30)
00004708	cmpwi	cr7,r0,__mh_bundle_header
0000470c	beq	cr7,0x4734
00004710	addis	r2,r31,0x1
00004714	lwz	r2,0xee78(r2)
00004718	addi	r0,r2,0xb0
0000471c	addis	r2,r31,0x1
00004720	addi	r3,r2,0xdc30
00004724	li	r4,0x1
00004728	li	r5,0x23
0000472c	or	r6,r0,r0
00004730	bl	0x11080	; symbol stub for: _fwrite
00004734	lwz	r3,0xd8(r30)
00004738	lwz	r4,0xdc(r30)
0000473c	bl	0x10300	; symbol stub for: _CallNextEventHandler
00004740	or	r0,r3,r3
00004744	stw	r0,0x60(r30)
00004748	lwz	r0,0x60(r30)
0000474c	or	r3,r0,r0
00004750	lwz	r1,__mh_bundle_header(r1)
00004754	lwz	r0,0x8(r1)
00004758	mtspr	lr,r0
0000475c	lmw	r30,0xfff8(r1)
00004760	blr
_DropboxSetMenuItemTextWithCFString:
00004764	mfspr	r0,lr
00004768	stmw	r30,0xfff8(r1)
0000476c	stw	r0,0x8(r1)
00004770	stwu	r1,0xff80(r1)
00004774	or	r30,r1,r1
00004778	bcl	20,31,0x477c
0000477c	mfspr	r31,lr
00004780	stw	r3,0x98(r30)
00004784	or	r0,r4,r4
00004788	stw	r5,0xa0(r30)
0000478c	sth	r0,0x9c(r30)
00004790	li	r0,__mh_bundle_header
00004794	stw	r0,0x4c(r30)
00004798	addi	r0,r30,0x50
0000479c	lwz	r3,0x98(r30)
000047a0	or	r4,r0,r0
000047a4	bl	0x103a0	; symbol stub for: _CopyMenuTitleAsCFString
000047a8	or	r0,r3,r3
000047ac	stw	r0,0x4c(r30)
000047b0	lwz	r0,0x4c(r30)
000047b4	stw	r0,0x44(r30)
000047b8	lwz	r0,0x44(r30)
000047bc	srawi	r2,r0,31
000047c0	xor	r0,r2,r0
000047c4	subf	r0,r2,r0
000047c8	neg	r0,r0
000047cc	rlwinm	r0,r0,1,31,31
000047d0	cmpwi	cr7,r0,__mh_bundle_header
000047d4	beq	cr7,0x4814
000047d8	lwz	r0,0x44(r30)
000047dc	lis	r3,0x3f2a
000047e0	ori	r3,r3,0x3f2a
000047e4	li	r4,__mh_bundle_header
000047e8	addis	r2,r31,0x1
000047ec	addi	r5,r2,0xd51c
000047f0	addis	r2,r31,0x1
000047f4	addi	r6,r2,0xd434
000047f8	li	r7,__mh_bundle_header
000047fc	addis	r2,r31,0x1
00004800	addi	r8,r2,0xd444
00004804	li	r9,0xef
00004808	or	r10,r0,r0
0000480c	bl	0x10480	; symbol stub for: _DebugAssert
00004810	b	0x493c
00004814	lwz	r9,0x50(r30)
00004818	addis	r2,r31,0x1
0000481c	addi	r0,r2,0xed04
00004820	or	r3,r9,r9
00004824	or	r4,r0,r0
00004828	li	r5,__mh_bundle_header
0000482c	bl	0xffa0	; symbol stub for: _CFStringCompare
00004830	or	r0,r3,r3
00004834	cmpwi	cr7,r0,__mh_bundle_header
00004838	bne	cr7,0x493c
0000483c	addis	r2,r31,0x1
00004840	addi	r2,r2,0xf220
00004844	lwz	r0,__mh_bundle_header(r2)
00004848	or	r3,r0,r0
0000484c	lwz	r4,0xa0(r30)
00004850	li	r5,__mh_bundle_header
00004854	bl	0xffa0	; symbol stub for: _CFStringCompare
00004858	or	r0,r3,r3
0000485c	cmpwi	cr7,r0,__mh_bundle_header
00004860	bne	cr7,0x493c
00004864	li	r3,__mh_bundle_header
00004868	bl	0x111c0	; symbol stub for: _malloc
0000486c	or	r0,r3,r3
00004870	stw	r0,0x40(r30)
00004874	addis	r2,r31,0x1
00004878	addi	r2,r2,0xcf4c
0000487c	lwz	r0,__mh_bundle_header(r2)
00004880	lwz	r2,0x4(r2)
00004884	stw	r0,0x54(r30)
00004888	stw	r2,0x58(r30)
0000488c	addis	r2,r31,__mh_bundle_header
00004890	addi	r0,r2,0xfa00
00004894	stw	r0,0x3c(r30)
00004898	lwz	r3,0x98(r30)
0000489c	bl	0x106e0	; symbol stub for: _GetMenuEventTarget
000048a0	or	r0,r3,r3
000048a4	addi	r2,r30,0x54
000048a8	or	r3,r0,r0
000048ac	lwz	r4,0x3c(r30)
000048b0	li	r5,0x1
000048b4	or	r6,r2,r2
000048b8	lwz	r7,0x40(r30)
000048bc	li	r8,__mh_bundle_header
000048c0	bl	0x10aa0	; symbol stub for: _InstallEventHandler
000048c4	or	r0,r3,r3
000048c8	stw	r0,0x4c(r30)
000048cc	addis	r2,r31,0x1
000048d0	lwz	r2,0xe8a8(r2)
000048d4	li	r0,__mh_bundle_header
000048d8	stw	r0,__mh_bundle_header(r2)
000048dc	lwz	r0,0x4c(r30)
000048e0	stw	r0,0x38(r30)
000048e4	lwz	r0,0x38(r30)
000048e8	srawi	r2,r0,31
000048ec	xor	r0,r2,r0
000048f0	subf	r0,r2,r0
000048f4	neg	r0,r0
000048f8	rlwinm	r0,r0,1,31,31
000048fc	cmpwi	cr7,r0,__mh_bundle_header
00004900	beq	cr7,0x493c
00004904	lwz	r0,0x38(r30)
00004908	lis	r3,0x3f2a
0000490c	ori	r3,r3,0x3f2a
00004910	li	r4,__mh_bundle_header
00004914	addis	r2,r31,0x1
00004918	addi	r5,r2,0xd51c
0000491c	addis	r2,r31,0x1
00004920	addi	r6,r2,0xd434
00004924	li	r7,__mh_bundle_header
00004928	addis	r2,r31,0x1
0000492c	addi	r8,r2,0xd444
00004930	li	r9,0xf8
00004934	or	r10,r0,r0
00004938	bl	0x10480	; symbol stub for: _DebugAssert
0000493c	lwz	r0,0x4c(r30)
00004940	cmpwi	cr7,r0,__mh_bundle_header
00004944	beq	cr7,0x4968
00004948	addis	r2,r31,0x1
0000494c	lwz	r2,0xe890(r2)
00004950	addi	r0,r2,0xb0
00004954	or	r3,r0,r0
00004958	addis	r2,r31,0x1
0000495c	addi	r4,r2,0xd678
00004960	lwz	r5,0x4c(r30)
00004964	bl	0x11000	; symbol stub for: _fprintf$LDBL128
00004968	addis	r2,r31,0x1
0000496c	addi	r2,r2,0xf22c
00004970	lwz	r2,__mh_bundle_header(r2)
00004974	lhz	r0,0x9c(r30)
00004978	rlwinm	r0,r0,0,16,31
0000497c	lwz	r3,0x98(r30)
00004980	or	r4,r0,r0
00004984	lwz	r5,0xa0(r30)
00004988	or	r12,r2,r2
0000498c	mtspr	ctr,r12
00004990	bctrl
00004994	or	r0,r3,r3
00004998	stw	r0,0x48(r30)
0000499c	lwz	r0,0x48(r30)
000049a0	or	r3,r0,r0
000049a4	lwz	r1,__mh_bundle_header(r1)
000049a8	lwz	r0,0x8(r1)
000049ac	mtspr	lr,r0
000049b0	lmw	r30,0xfff8(r1)
000049b4	blr
_DropboxContextualMenuInsertItems:
000049b8	mfspr	r0,lr
000049bc	stmw	r30,0xfff8(r1)
000049c0	stw	r0,0x8(r1)
000049c4	stwu	r1,0xffb0(r1)
000049c8	or	r30,r1,r1
000049cc	bcl	20,31,0x49d0
000049d0	mfspr	r31,lr
000049d4	stw	r3,0x68(r30)
000049d8	or	r0,r4,r4
000049dc	stw	r5,0x70(r30)
000049e0	stw	r6,0x74(r30)
000049e4	stw	r7,0x78(r30)
000049e8	stw	r8,0x7c(r30)
000049ec	sth	r0,0x6c(r30)
000049f0	addis	r2,r31,0x1
000049f4	addi	r2,r2,0xefd0
000049f8	lwz	r0,0x70(r30)
000049fc	stw	r0,__mh_bundle_header(r2)
00004a00	addis	r2,r31,0x1
00004a04	addi	r2,r2,0xefd4
00004a08	lwz	r2,__mh_bundle_header(r2)
00004a0c	lhz	r0,0x6c(r30)
00004a10	rlwinm	r0,r0,0,16,31
00004a14	lwz	r3,0x68(r30)
00004a18	or	r4,r0,r0
00004a1c	lwz	r5,0x70(r30)
00004a20	lwz	r6,0x74(r30)
00004a24	lwz	r7,0x78(r30)
00004a28	lwz	r8,0x7c(r30)
00004a2c	or	r12,r2,r2
00004a30	mtspr	ctr,r12
00004a34	bctrl
00004a38	or	r0,r3,r3
00004a3c	or	r3,r0,r0
00004a40	lwz	r1,__mh_bundle_header(r1)
00004a44	lwz	r0,0x8(r1)
00004a48	mtspr	lr,r0
00004a4c	lmw	r30,0xfff8(r1)
00004a50	blr
_MenuFromAEDescList:
00004a54	mfspr	r0,lr
00004a58	stmw	r30,0xfff8(r1)
00004a5c	stw	r0,0x8(r1)
00004a60	stwu	r1,0xff30(r1)
00004a64	or	r30,r1,r1
00004a68	bcl	20,31,0x4a6c
00004a6c	mfspr	r31,lr
00004a70	stw	r3,0xe8(r30)
00004a74	stw	r4,0xec(r30)
00004a78	li	r0,__mh_bundle_header
00004a7c	stw	r0,0x74(r30)
00004a80	addi	r0,r30,0x78
00004a84	lwz	r3,0xe8(r30)
00004a88	or	r4,r0,r0
00004a8c	bl	0xf940	; symbol stub for: _AECountItems
00004a90	or	r0,r3,r3
00004a94	stw	r0,0x74(r30)
00004a98	lwz	r0,0x74(r30)
00004a9c	stw	r0,0x70(r30)
00004aa0	lwz	r0,0x70(r30)
00004aa4	srawi	r2,r0,31
00004aa8	xor	r0,r2,r0
00004aac	subf	r0,r2,r0
00004ab0	neg	r0,r0
00004ab4	rlwinm	r0,r0,1,31,31
00004ab8	cmpwi	cr7,r0,__mh_bundle_header
00004abc	beq	cr7,0x4afc
00004ac0	lwz	r0,0x70(r30)
00004ac4	lis	r3,0x3f2a
00004ac8	ori	r3,r3,0x3f2a
00004acc	li	r4,__mh_bundle_header
00004ad0	addis	r2,r31,0x1
00004ad4	addi	r5,r2,0xd22c
00004ad8	addis	r2,r31,0x1
00004adc	addi	r6,r2,0xd144
00004ae0	li	r7,__mh_bundle_header
00004ae4	addis	r2,r31,0x1
00004ae8	addi	r8,r2,0xd154
00004aec	li	r9,0x110
00004af0	or	r10,r0,r0
00004af4	bl	0x10480	; symbol stub for: _DebugAssert
00004af8	b	0x5140
00004afc	li	r0,0x1
00004b00	stw	r0,0x6c(r30)
00004b04	b	0x5130
00004b08	addi	r0,r30,0x84
00004b0c	addi	r2,r30,0x7c
00004b10	lwz	r3,0xe8(r30)
00004b14	lwz	r4,0x6c(r30)
00004b18	lis	r5,0x7265
00004b1c	ori	r5,r5,0x636f
00004b20	or	r6,r0,r0
00004b24	or	r7,r2,r2
00004b28	bl	0xfa20	; symbol stub for: _AEGetNthDesc
00004b2c	or	r0,r3,r3
00004b30	stw	r0,0x74(r30)
00004b34	lwz	r0,0x74(r30)
00004b38	stw	r0,0x5c(r30)
00004b3c	lwz	r0,0x5c(r30)
00004b40	srawi	r2,r0,31
00004b44	xor	r0,r2,r0
00004b48	subf	r0,r2,r0
00004b4c	neg	r0,r0
00004b50	rlwinm	r0,r0,1,31,31
00004b54	cmpwi	cr7,r0,__mh_bundle_header
00004b58	beq	cr7,0x4b98
00004b5c	lwz	r0,0x5c(r30)
00004b60	lis	r3,0x3f2a
00004b64	ori	r3,r3,0x3f2a
00004b68	li	r4,__mh_bundle_header
00004b6c	addis	r2,r31,0x1
00004b70	addi	r5,r2,0xd22c
00004b74	addis	r2,r31,0x1
00004b78	addi	r6,r2,0xd144
00004b7c	li	r7,__mh_bundle_header
00004b80	addis	r2,r31,0x1
00004b84	addi	r8,r2,0xd154
00004b88	li	r9,0x119
00004b8c	or	r10,r0,r0
00004b90	bl	0x10480	; symbol stub for: _DebugAssert
00004b94	b	0x5140
00004b98	addi	r0,r30,0x7c
00004b9c	addi	r2,r30,0x94
00004ba0	or	r3,r0,r0
00004ba4	lis	r4,0x706e
00004ba8	ori	r4,r4,0x616d
00004bac	lis	r5,0x7574
00004bb0	ori	r5,r5,0x7874
00004bb4	or	r6,r2,r2
00004bb8	bl	0xfa40	; symbol stub for: _AEGetParamDesc
00004bbc	or	r0,r3,r3
00004bc0	stw	r0,0x74(r30)
00004bc4	lwz	r0,0x74(r30)
00004bc8	stw	r0,0x58(r30)
00004bcc	lwz	r0,0x58(r30)
00004bd0	srawi	r2,r0,31
00004bd4	xor	r0,r2,r0
00004bd8	subf	r0,r2,r0
00004bdc	neg	r0,r0
00004be0	rlwinm	r0,r0,1,31,31
00004be4	cmpwi	cr7,r0,__mh_bundle_header
00004be8	beq	cr7,0x4c28
00004bec	lwz	r0,0x58(r30)
00004bf0	lis	r3,0x3f2a
00004bf4	ori	r3,r3,0x3f2a
00004bf8	li	r4,__mh_bundle_header
00004bfc	addis	r2,r31,0x1
00004c00	addi	r5,r2,0xd22c
00004c04	addis	r2,r31,0x1
00004c08	addi	r6,r2,0xd144
00004c0c	li	r7,__mh_bundle_header
00004c10	addis	r2,r31,0x1
00004c14	addi	r8,r2,0xd154
00004c18	li	r9,0x11c
00004c1c	or	r10,r0,r0
00004c20	bl	0x10480	; symbol stub for: _DebugAssert
00004c24	b	0x5140
00004c28	addi	r0,r30,0x94
00004c2c	or	r3,r0,r0
00004c30	bl	0xfa00	; symbol stub for: _AEGetDescDataSize
00004c34	or	r0,r3,r3
00004c38	stw	r0,0x68(r30)
00004c3c	lwz	r0,0x68(r30)
00004c40	or	r3,r0,r0
00004c44	bl	0x111c0	; symbol stub for: _malloc
00004c48	or	r0,r3,r3
00004c4c	stw	r0,0x64(r30)
00004c50	addi	r0,r30,0x94
00004c54	or	r3,r0,r0
00004c58	lwz	r4,0x64(r30)
00004c5c	lwz	r5,0x68(r30)
00004c60	bl	0xf9e0	; symbol stub for: _AEGetDescData
00004c64	or	r0,r3,r3
00004c68	stw	r0,0x74(r30)
00004c6c	lwz	r0,0x74(r30)
00004c70	stw	r0,0x54(r30)
00004c74	lwz	r0,0x54(r30)
00004c78	srawi	r2,r0,31
00004c7c	xor	r0,r2,r0
00004c80	subf	r0,r2,r0
00004c84	neg	r0,r0
00004c88	rlwinm	r0,r0,1,31,31
00004c8c	cmpwi	cr7,r0,__mh_bundle_header
00004c90	beq	cr7,0x4cd0
00004c94	lwz	r0,0x54(r30)
00004c98	lis	r3,0x3f2a
00004c9c	ori	r3,r3,0x3f2a
00004ca0	li	r4,__mh_bundle_header
00004ca4	addis	r2,r31,0x1
00004ca8	addi	r5,r2,0xd22c
00004cac	addis	r2,r31,0x1
00004cb0	addi	r6,r2,0xd144
00004cb4	li	r7,__mh_bundle_header
00004cb8	addis	r2,r31,0x1
00004cbc	addi	r8,r2,0xd154
00004cc0	li	r9,0x120
00004cc4	or	r10,r0,r0
00004cc8	bl	0x10480	; symbol stub for: _DebugAssert
00004ccc	b	0x5140
00004cd0	addis	r2,r31,0x1
00004cd4	lwz	r2,0xe5ac(r2)
00004cd8	lwz	r2,__mh_bundle_header(r2)
00004cdc	lwz	r0,0x68(r30)
00004ce0	rlwinm	r0,r0,31,1,31
00004ce4	or	r3,r2,r2
00004ce8	lwz	r4,0x64(r30)
00004cec	or	r5,r0,r0
00004cf0	bl	0xffe0	; symbol stub for: _CFStringCreateWithCharacters
00004cf4	or	r0,r3,r3
00004cf8	stw	r0,0x60(r30)
00004cfc	lwz	r0,0x60(r30)
00004d00	cmpwi	cr7,r0,__mh_bundle_header
00004d04	beq	cr7,0x5140
00004d08	addi	r0,r30,0x9c
00004d0c	lwz	r3,0xec(r30)
00004d10	lwz	r4,0x60(r30)
00004d14	li	r5,__mh_bundle_header
00004d18	li	r6,__mh_bundle_header
00004d1c	or	r7,r0,r0
00004d20	bl	0xfb60	; symbol stub for: _AppendMenuItemTextWithCFString
00004d24	or	r0,r3,r3
00004d28	stw	r0,0x74(r30)
00004d2c	lwz	r0,0x74(r30)
00004d30	stw	r0,0x50(r30)
00004d34	lwz	r0,0x50(r30)
00004d38	srawi	r2,r0,31
00004d3c	xor	r0,r2,r0
00004d40	subf	r0,r2,r0
00004d44	neg	r0,r0
00004d48	rlwinm	r0,r0,1,31,31
00004d4c	cmpwi	cr7,r0,__mh_bundle_header
00004d50	beq	cr7,0x4d90
00004d54	lwz	r0,0x50(r30)
00004d58	lis	r3,0x3f2a
00004d5c	ori	r3,r3,0x3f2a
00004d60	li	r4,__mh_bundle_header
00004d64	addis	r2,r31,0x1
00004d68	addi	r5,r2,0xd22c
00004d6c	addis	r2,r31,0x1
00004d70	addi	r6,r2,0xd144
00004d74	li	r7,__mh_bundle_header
00004d78	addis	r2,r31,0x1
00004d7c	addi	r8,r2,0xd154
00004d80	li	r9,0x126
00004d84	or	r10,r0,r0
00004d88	bl	0x10480	; symbol stub for: _DebugAssert
00004d8c	b	0x5140
00004d90	addi	r0,r30,0x7c
00004d94	addi	r2,r30,0x9e
00004d98	or	r3,r0,r0
00004d9c	lis	r4,0x636d
00004da0	ori	r4,r4,0x7362
00004da4	lis	r5,0x2a2a
00004da8	ori	r5,r5,0x2a2a
00004dac	or	r6,r2,r2
00004db0	bl	0xfa40	; symbol stub for: _AEGetParamDesc
00004db4	or	r0,r3,r3
00004db8	stw	r0,0x74(r30)
00004dbc	lwz	r0,0x74(r30)
00004dc0	cmpwi	cr7,r0,__mh_bundle_header
00004dc4	bne	cr7,0x4f50
00004dc8	addi	r0,r30,0xa8
00004dcc	li	r3,__mh_bundle_header
00004dd0	li	r4,__mh_bundle_header
00004dd4	or	r5,r0,r0
00004dd8	bl	0x10440	; symbol stub for: _CreateNewMenu
00004ddc	or	r0,r3,r3
00004de0	stw	r0,0x74(r30)
00004de4	lwz	r0,0x74(r30)
00004de8	stw	r0,0x4c(r30)
00004dec	lwz	r0,0x4c(r30)
00004df0	srawi	r2,r0,31
00004df4	xor	r0,r2,r0
00004df8	subf	r0,r2,r0
00004dfc	neg	r0,r0
00004e00	rlwinm	r0,r0,1,31,31
00004e04	cmpwi	cr7,r0,__mh_bundle_header
00004e08	beq	cr7,0x4e48
00004e0c	lwz	r0,0x4c(r30)
00004e10	lis	r3,0x3f2a
00004e14	ori	r3,r3,0x3f2a
00004e18	li	r4,__mh_bundle_header
00004e1c	addis	r2,r31,0x1
00004e20	addi	r5,r2,0xd22c
00004e24	addis	r2,r31,0x1
00004e28	addi	r6,r2,0xd144
00004e2c	li	r7,__mh_bundle_header
00004e30	addis	r2,r31,0x1
00004e34	addi	r8,r2,0xd154
00004e38	li	r9,0x12d
00004e3c	or	r10,r0,r0
00004e40	bl	0x10480	; symbol stub for: _DebugAssert
00004e44	b	0x5140
00004e48	lwz	r2,0xa8(r30)
00004e4c	addi	r0,r30,0x9e
00004e50	or	r3,r0,r0
00004e54	or	r4,r2,r2
00004e58	bl	_MenuFromAEDescList
00004e5c	or	r0,r3,r3
00004e60	stw	r0,0x74(r30)
00004e64	lwz	r0,0x74(r30)
00004e68	stw	r0,0x48(r30)
00004e6c	lwz	r0,0x48(r30)
00004e70	srawi	r2,r0,31
00004e74	xor	r0,r2,r0
00004e78	subf	r0,r2,r0
00004e7c	neg	r0,r0
00004e80	rlwinm	r0,r0,1,31,31
00004e84	cmpwi	cr7,r0,__mh_bundle_header
00004e88	beq	cr7,0x4ec8
00004e8c	lwz	r0,0x48(r30)
00004e90	lis	r3,0x3f2a
00004e94	ori	r3,r3,0x3f2a
00004e98	li	r4,__mh_bundle_header
00004e9c	addis	r2,r31,0x1
00004ea0	addi	r5,r2,0xd22c
00004ea4	addis	r2,r31,0x1
00004ea8	addi	r6,r2,0xd144
00004eac	li	r7,__mh_bundle_header
00004eb0	addis	r2,r31,0x1
00004eb4	addi	r8,r2,0xd154
00004eb8	li	r9,0x130
00004ebc	or	r10,r0,r0
00004ec0	bl	0x10480	; symbol stub for: _DebugAssert
00004ec4	b	0x5140
00004ec8	lhz	r0,0x9c(r30)
00004ecc	rlwinm	r0,r0,0,16,31
00004ed0	lwz	r2,0xa8(r30)
00004ed4	lwz	r3,0xec(r30)
00004ed8	or	r4,r0,r0
00004edc	or	r5,r2,r2
00004ee0	bl	0x10d00	; symbol stub for: _SetMenuItemHierarchicalMenu
00004ee4	or	r0,r3,r3
00004ee8	stw	r0,0x74(r30)
00004eec	lwz	r0,0x74(r30)
00004ef0	stw	r0,0x44(r30)
00004ef4	lwz	r0,0x44(r30)
00004ef8	srawi	r2,r0,31
00004efc	xor	r0,r2,r0
00004f00	subf	r0,r2,r0
00004f04	neg	r0,r0
00004f08	rlwinm	r0,r0,1,31,31
00004f0c	cmpwi	cr7,r0,__mh_bundle_header
00004f10	beq	cr7,0x5124
00004f14	lwz	r0,0x44(r30)
00004f18	lis	r3,0x3f2a
00004f1c	ori	r3,r3,0x3f2a
00004f20	li	r4,__mh_bundle_header
00004f24	addis	r2,r31,0x1
00004f28	addi	r5,r2,0xd22c
00004f2c	addis	r2,r31,0x1
00004f30	addi	r6,r2,0xd144
00004f34	li	r7,__mh_bundle_header
00004f38	addis	r2,r31,0x1
00004f3c	addi	r8,r2,0xd154
00004f40	li	r9,0x133
00004f44	or	r10,r0,r0
00004f48	bl	0x10480	; symbol stub for: _DebugAssert
00004f4c	b	0x5140
00004f50	addi	r0,r30,0x7c
00004f54	addi	r2,r30,0x88
00004f58	or	r3,r0,r0
00004f5c	lis	r4,0x636d
00004f60	ori	r4,r4,0x6364
00004f64	lis	r5,0x6c6f
00004f68	ori	r5,r5,0x6e67
00004f6c	or	r6,r2,r2
00004f70	bl	0xfa40	; symbol stub for: _AEGetParamDesc
00004f74	or	r0,r3,r3
00004f78	stw	r0,0x74(r30)
00004f7c	lwz	r0,0x74(r30)
00004f80	stw	r0,0x40(r30)
00004f84	lwz	r0,0x40(r30)
00004f88	srawi	r2,r0,31
00004f8c	xor	r0,r2,r0
00004f90	subf	r0,r2,r0
00004f94	neg	r0,r0
00004f98	rlwinm	r0,r0,1,31,31
00004f9c	cmpwi	cr7,r0,__mh_bundle_header
00004fa0	beq	cr7,0x4fe0
00004fa4	lwz	r0,0x40(r30)
00004fa8	lis	r3,0x3f2a
00004fac	ori	r3,r3,0x3f2a
00004fb0	li	r4,__mh_bundle_header
00004fb4	addis	r2,r31,0x1
00004fb8	addi	r5,r2,0xd22c
00004fbc	addis	r2,r31,0x1
00004fc0	addi	r6,r2,0xd144
00004fc4	li	r7,__mh_bundle_header
00004fc8	addis	r2,r31,0x1
00004fcc	addi	r8,r2,0xd154
00004fd0	li	r9,0x136
00004fd4	or	r10,r0,r0
00004fd8	bl	0x10480	; symbol stub for: _DebugAssert
00004fdc	b	0x5140
00004fe0	lwz	r0,0x88(r30)
00004fe4	lis	r2,0x6e75
00004fe8	ori	r2,r2,0x6c6c
00004fec	cmpw	cr7,r0,r2
00004ff0	beq	cr7,0x5100
00004ff4	addi	r0,r30,0x88
00004ff8	addi	r2,r30,0x90
00004ffc	or	r3,r0,r0
00005000	or	r4,r2,r2
00005004	li	r5,0x4
00005008	bl	0xf9e0	; symbol stub for: _AEGetDescData
0000500c	or	r0,r3,r3
00005010	stw	r0,0x74(r30)
00005014	lwz	r0,0x74(r30)
00005018	stw	r0,0x3c(r30)
0000501c	lwz	r0,0x3c(r30)
00005020	srawi	r2,r0,31
00005024	xor	r0,r2,r0
00005028	subf	r0,r2,r0
0000502c	neg	r0,r0
00005030	rlwinm	r0,r0,1,31,31
00005034	cmpwi	cr7,r0,__mh_bundle_header
00005038	beq	cr7,0x5078
0000503c	lwz	r0,0x3c(r30)
00005040	lis	r3,0x3f2a
00005044	ori	r3,r3,0x3f2a
00005048	li	r4,__mh_bundle_header
0000504c	addis	r2,r31,0x1
00005050	addi	r5,r2,0xd22c
00005054	addis	r2,r31,0x1
00005058	addi	r6,r2,0xd144
0000505c	li	r7,__mh_bundle_header
00005060	addis	r2,r31,0x1
00005064	addi	r8,r2,0xd154
00005068	li	r9,0x139
0000506c	or	r10,r0,r0
00005070	bl	0x10480	; symbol stub for: _DebugAssert
00005074	b	0x5140
00005078	lhz	r0,0x9c(r30)
0000507c	rlwinm	r2,r0,0,16,31
00005080	lwz	r0,0x90(r30)
00005084	lwz	r3,0xec(r30)
00005088	or	r4,r2,r2
0000508c	or	r5,r0,r0
00005090	bl	0x10ce0	; symbol stub for: _SetMenuItemCommandID
00005094	or	r0,r3,r3
00005098	stw	r0,0x74(r30)
0000509c	lwz	r0,0x74(r30)
000050a0	stw	r0,0x38(r30)
000050a4	lwz	r0,0x38(r30)
000050a8	srawi	r2,r0,31
000050ac	xor	r0,r2,r0
000050b0	subf	r0,r2,r0
000050b4	neg	r0,r0
000050b8	rlwinm	r0,r0,1,31,31
000050bc	cmpwi	cr7,r0,__mh_bundle_header
000050c0	beq	cr7,0x5124
000050c4	lwz	r0,0x38(r30)
000050c8	lis	r3,0x3f2a
000050cc	ori	r3,r3,0x3f2a
000050d0	li	r4,__mh_bundle_header
000050d4	addis	r2,r31,0x1
000050d8	addi	r5,r2,0xd22c
000050dc	addis	r2,r31,0x1
000050e0	addi	r6,r2,0xd144
000050e4	li	r7,__mh_bundle_header
000050e8	addis	r2,r31,0x1
000050ec	addi	r8,r2,0xd154
000050f0	li	r9,0x13b
000050f4	or	r10,r0,r0
000050f8	bl	0x10480	; symbol stub for: _DebugAssert
000050fc	b	0x5140
00005100	addis	r2,r31,0x1
00005104	lwz	r2,0xe5a0(r2)
00005108	addi	r0,r2,0xb0
0000510c	addis	r2,r31,0x1
00005110	addi	r3,r2,0xd3b8
00005114	li	r4,0x1
00005118	li	r5,0x36
0000511c	or	r6,r0,r0
00005120	bl	0x11080	; symbol stub for: _fwrite
00005124	lwz	r2,0x6c(r30)
00005128	addi	r0,r2,0x1
0000512c	stw	r0,0x6c(r30)
00005130	lwz	r0,0x78(r30)
00005134	lwz	r2,0x6c(r30)
00005138	cmpw	cr7,r2,r0
0000513c	ble	cr7,0x4b08
00005140	lwz	r0,0x74(r30)
00005144	cmpwi	cr7,r0,__mh_bundle_header
00005148	beq	cr7,0x5170
0000514c	addis	r2,r31,0x1
00005150	lwz	r2,0xe5a0(r2)
00005154	addi	r0,r2,0xb0
00005158	addis	r2,r31,0x1
0000515c	addi	r3,r2,0xd3f0
00005160	li	r4,0x1
00005164	li	r5,0x29
00005168	or	r6,r0,r0
0000516c	bl	0x11080	; symbol stub for: _fwrite
00005170	li	r0,__mh_bundle_header
00005174	or	r3,r0,r0
00005178	lwz	r1,__mh_bundle_header(r1)
0000517c	lwz	r0,0x8(r1)
00005180	mtspr	lr,r0
00005184	lmw	r30,0xfff8(r1)
00005188	blr
_IconRefRetain:
0000518c	mfspr	r0,lr
00005190	stmw	r30,0xfff8(r1)
00005194	stw	r0,0x8(r1)
00005198	stwu	r1,0xffb0(r1)
0000519c	or	r30,r1,r1
000051a0	stw	r3,0x68(r30)
000051a4	stw	r4,0x6c(r30)
000051a8	lwz	r3,0x6c(r30)
000051ac	bl	0xfb40	; symbol stub for: _AcquireIconRef
000051b0	lwz	r0,0x6c(r30)
000051b4	or	r3,r0,r0
000051b8	lwz	r1,__mh_bundle_header(r1)
000051bc	lwz	r0,0x8(r1)
000051c0	mtspr	lr,r0
000051c4	lmw	r30,0xfff8(r1)
000051c8	blr
_IconRefRelease:
000051cc	mfspr	r0,lr
000051d0	stmw	r30,0xfff8(r1)
000051d4	stw	r0,0x8(r1)
000051d8	stwu	r1,0xffb0(r1)
000051dc	or	r30,r1,r1
000051e0	stw	r3,0x68(r30)
000051e4	stw	r4,0x6c(r30)
000051e8	lwz	r3,0x6c(r30)
000051ec	bl	0x10c40	; symbol stub for: _ReleaseIconRef
000051f0	lwz	r1,__mh_bundle_header(r1)
000051f4	lwz	r0,0x8(r1)
000051f8	mtspr	lr,r0
000051fc	lmw	r30,0xfff8(r1)
00005200	blr
_IconRefEqual:
00005204	stmw	r30,0xfff8(r1)
00005208	stwu	r1,0xffd0(r1)
0000520c	or	r30,r1,r1
00005210	stw	r3,0x48(r30)
00005214	stw	r4,0x4c(r30)
00005218	lwz	r2,0x48(r30)
0000521c	lwz	r0,0x4c(r30)
00005220	cmpw	cr7,r2,r0
00005224	mfcr	r0
00005228	rlwinm	r0,r0,31,31,31
0000522c	or	r3,r0,r0
00005230	lwz	r1,__mh_bundle_header(r1)
00005234	lmw	r30,0xfff8(r1)
00005238	blr
_QuickLookBadgingInitialize:
0000523c	mfspr	r0,lr
00005240	stmw	r30,0xfff8(r1)
00005244	stw	r0,0x8(r1)
00005248	stwu	r1,0xffa0(r1)
0000524c	or	r30,r1,r1
00005250	bcl	20,31,0x5254
00005254	mfspr	r31,lr
00005258	li	r0,__mh_bundle_header
0000525c	stw	r0,0x3c(r30)
00005260	addis	r2,r31,0x1
00005264	addi	r3,r2,0xe768
00005268	li	r4,__mh_bundle_header
0000526c	bl	0x11360	; symbol stub for: _pthread_mutex_init
00005270	or	r0,r3,r3
00005274	stw	r0,0x38(r30)
00005278	lwz	r0,0x38(r30)
0000527c	srawi	r2,r0,31
00005280	xor	r0,r2,r0
00005284	subf	r0,r2,r0
00005288	neg	r0,r0
0000528c	rlwinm	r0,r0,1,31,31
00005290	cmpwi	cr7,r0,__mh_bundle_header
00005294	beq	cr7,0x52d4
00005298	lwz	r0,0x38(r30)
0000529c	lis	r3,0x3f2a
000052a0	ori	r3,r3,0x3f2a
000052a4	li	r4,__mh_bundle_header
000052a8	addis	r2,r31,0x1
000052ac	addi	r5,r2,0xcc34
000052b0	addis	r2,r31,0x1
000052b4	addi	r6,r2,0xcc88
000052b8	li	r7,__mh_bundle_header
000052bc	addis	r2,r31,0x1
000052c0	addi	r8,r2,0xcc9c
000052c4	li	r9,0x3e
000052c8	or	r10,r0,r0
000052cc	bl	0x10480	; symbol stub for: _DebugAssert
000052d0	b	0x5598
000052d4	addis	r2,r31,0x1
000052d8	lwz	r2,0xddc4(r2)
000052dc	lwz	r0,__mh_bundle_header(r2)
000052e0	or	r3,r0,r0
000052e4	li	r4,__mh_bundle_header
000052e8	li	r5,__mh_bundle_header
000052ec	li	r6,__mh_bundle_header
000052f0	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
000052f4	or	r0,r3,r3
000052f8	addis	r2,r31,0x1
000052fc	addi	r2,r2,0xe760
00005300	stw	r0,__mh_bundle_header(r2)
00005304	addis	r2,r31,0x1
00005308	lwz	r2,0xddc4(r2)
0000530c	lwz	r0,__mh_bundle_header(r2)
00005310	or	r3,r0,r0
00005314	li	r4,__mh_bundle_header
00005318	addis	r2,r31,0x1
0000531c	addi	r5,r2,0xe620
00005320	addis	r2,r31,0x1
00005324	lwz	r6,0xdddc(r2)
00005328	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
0000532c	or	r0,r3,r3
00005330	addis	r2,r31,0x1
00005334	addi	r2,r2,0xe764
00005338	stw	r0,__mh_bundle_header(r2)
0000533c	addis	r2,r31,0x1
00005340	addi	r2,r2,0xe760
00005344	lwz	r0,__mh_bundle_header(r2)
00005348	cmpwi	cr7,r0,__mh_bundle_header
0000534c	beq	cr7,0x5364
00005350	addis	r2,r31,0x1
00005354	addi	r2,r2,0xe764
00005358	lwz	r0,__mh_bundle_header(r2)
0000535c	cmpwi	cr7,r0,__mh_bundle_header
00005360	bne	cr7,0x5370
00005364	li	r0,0x1
00005368	stw	r0,0x48(r30)
0000536c	b	0x5378
00005370	li	r2,__mh_bundle_header
00005374	stw	r2,0x48(r30)
00005378	lwz	r0,0x48(r30)
0000537c	cmpwi	cr7,r0,__mh_bundle_header
00005380	beq	cr7,0x53bc
00005384	lis	r3,0x3f2a
00005388	ori	r3,r3,0x3f2a
0000538c	li	r4,__mh_bundle_header
00005390	addis	r2,r31,0x1
00005394	addi	r5,r2,0xccdc
00005398	addis	r2,r31,0x1
0000539c	addi	r6,r2,0xcc88
000053a0	li	r7,__mh_bundle_header
000053a4	addis	r2,r31,0x1
000053a8	addi	r8,r2,0xcc9c
000053ac	li	r9,0x41
000053b0	li	r10,__mh_bundle_header
000053b4	bl	0x10480	; symbol stub for: _DebugAssert
000053b8	b	0x5598
000053bc	addi	r0,r30,0x40
000053c0	addis	r2,r31,0x1
000053c4	addi	r3,r2,0xcd28
000053c8	or	r4,r0,r0
000053cc	li	r5,__mh_bundle_header
000053d0	bl	0x10da0	; symbol stub for: __dyld_lookup_and_bind
000053d4	lwz	r0,0x40(r30)
000053d8	cmpwi	cr7,r0,__mh_bundle_header
000053dc	mfcr	r0
000053e0	rlwinm	r0,r0,31,31,31
000053e4	cmpwi	cr7,r0,__mh_bundle_header
000053e8	beq	cr7,0x5424
000053ec	lis	r3,0x3f2a
000053f0	ori	r3,r3,0x3f2a
000053f4	li	r4,__mh_bundle_header
000053f8	addis	r2,r31,0x1
000053fc	addi	r5,r2,0xcd40
00005400	addis	r2,r31,0x1
00005404	addi	r6,r2,0xcc88
00005408	li	r7,__mh_bundle_header
0000540c	addis	r2,r31,0x1
00005410	addi	r8,r2,0xcc9c
00005414	li	r9,0x44
00005418	li	r10,__mh_bundle_header
0000541c	bl	0x10480	; symbol stub for: _DebugAssert
00005420	b	0x5598
00005424	addi	r0,r30,0x44
00005428	addis	r2,r31,0x1
0000542c	addi	r3,r2,0xcd70
00005430	or	r4,r0,r0
00005434	li	r5,__mh_bundle_header
00005438	bl	0x10da0	; symbol stub for: __dyld_lookup_and_bind
0000543c	lwz	r0,0x44(r30)
00005440	cmpwi	cr7,r0,__mh_bundle_header
00005444	mfcr	r0
00005448	rlwinm	r0,r0,31,31,31
0000544c	cmpwi	cr7,r0,__mh_bundle_header
00005450	beq	cr7,0x548c
00005454	lis	r3,0x3f2a
00005458	ori	r3,r3,0x3f2a
0000545c	li	r4,__mh_bundle_header
00005460	addis	r2,r31,0x1
00005464	addi	r5,r2,0xcd84
00005468	addis	r2,r31,0x1
0000546c	addi	r6,r2,0xcc88
00005470	li	r7,__mh_bundle_header
00005474	addis	r2,r31,0x1
00005478	addi	r8,r2,0xcc9c
0000547c	li	r9,0x46
00005480	li	r10,__mh_bundle_header
00005484	bl	0x10480	; symbol stub for: _DebugAssert
00005488	b	0x5598
0000548c	lwz	r0,0x40(r30)
00005490	addis	r2,r31,0x1
00005494	addi	r9,r2,0xe758
00005498	or	r3,r0,r0
0000549c	addis	r2,r31,__mh_bundle_header
000054a0	addi	r4,r2,0x8c4
000054a4	or	r5,r9,r9
000054a8	bl	_mach_override_ptr
000054ac	or	r0,r3,r3
000054b0	stw	r0,0x3c(r30)
000054b4	lwz	r0,0x3c(r30)
000054b8	srawi	r2,r0,31
000054bc	xor	r0,r2,r0
000054c0	subf	r0,r2,r0
000054c4	neg	r0,r0
000054c8	rlwinm	r0,r0,1,31,31
000054cc	cmpwi	cr7,r0,__mh_bundle_header
000054d0	beq	cr7,0x550c
000054d4	lis	r3,0x3f2a
000054d8	ori	r3,r3,0x3f2a
000054dc	li	r4,__mh_bundle_header
000054e0	addis	r2,r31,0x1
000054e4	addi	r5,r2,0xc9cc
000054e8	addis	r2,r31,0x1
000054ec	addi	r6,r2,0xcdb4
000054f0	li	r7,__mh_bundle_header
000054f4	addis	r2,r31,0x1
000054f8	addi	r8,r2,0xcc9c
000054fc	li	r9,0x48
00005500	li	r10,__mh_bundle_header
00005504	bl	0x10480	; symbol stub for: _DebugAssert
00005508	b	0x5588
0000550c	lwz	r0,0x44(r30)
00005510	addis	r2,r31,0x1
00005514	addi	r9,r2,0xe75c
00005518	or	r3,r0,r0
0000551c	addis	r2,r31,__mh_bundle_header
00005520	addi	r4,r2,0x61c
00005524	or	r5,r9,r9
00005528	bl	_mach_override_ptr
0000552c	or	r0,r3,r3
00005530	stw	r0,0x3c(r30)
00005534	lwz	r0,0x3c(r30)
00005538	srawi	r2,r0,31
0000553c	xor	r0,r2,r0
00005540	subf	r0,r2,r0
00005544	neg	r0,r0
00005548	rlwinm	r0,r0,1,31,31
0000554c	cmpwi	cr7,r0,__mh_bundle_header
00005550	beq	cr7,0x55bc
00005554	lis	r3,0x3f2a
00005558	ori	r3,r3,0x3f2a
0000555c	li	r4,__mh_bundle_header
00005560	addis	r2,r31,0x1
00005564	addi	r5,r2,0xc9cc
00005568	addis	r2,r31,0x1
0000556c	addi	r6,r2,0xcdb4
00005570	li	r7,__mh_bundle_header
00005574	addis	r2,r31,0x1
00005578	addi	r8,r2,0xcc9c
0000557c	li	r9,0x4a
00005580	li	r10,__mh_bundle_header
00005584	bl	0x10480	; symbol stub for: _DebugAssert
00005588	addis	r2,r31,0x1
0000558c	addi	r3,r2,0xcdcc
00005590	lwz	r4,0x3c(r30)
00005594	bl	0x11180	; symbol stub for: _mach_error
00005598	addis	r2,r31,0x1
0000559c	lwz	r2,0xddb8(r2)
000055a0	addi	r0,r2,0xb0
000055a4	addis	r2,r31,0x1
000055a8	addi	r3,r2,0xcde4
000055ac	li	r4,0x1
000055b0	li	r5,0x34
000055b4	or	r6,r0,r0
000055b8	bl	0x11080	; symbol stub for: _fwrite
000055bc	lwz	r1,__mh_bundle_header(r1)
000055c0	lwz	r0,0x8(r1)
000055c4	mtspr	lr,r0
000055c8	lmw	r30,0xfff8(r1)
000055cc	blr
_CompositeCGImageWithIconRef:
000055d0	mfspr	r0,lr
000055d4	stmw	r30,0xfff8(r1)
000055d8	stw	r0,0x8(r1)
000055dc	stwu	r1,0xff50(r1)
000055e0	or	r30,r1,r1
000055e4	bcl	20,31,0x55e8
000055e8	mfspr	r31,lr
000055ec	stw	r3,0xc8(r30)
000055f0	stw	r4,0xcc(r30)
000055f4	lwz	r3,0xc8(r30)
000055f8	bl	0x102c0	; symbol stub for: _CGImageGetWidth
000055fc	or	r0,r3,r3
00005600	stw	r0,0x48(r30)
00005604	lwz	r3,0xc8(r30)
00005608	bl	0x102a0	; symbol stub for: _CGImageGetHeight
0000560c	or	r0,r3,r3
00005610	stw	r0,0x44(r30)
00005614	lwz	r0,0x48(r30)
00005618	subfic	r0,r0,0x80
0000561c	srawi	r0,r0,1
00005620	addze	r0,r0
00005624	lis	r9,0x4330
00005628	addis	r2,r31,0x1
0000562c	addi	r2,r2,0xc0f0
00005630	lfd	f13,__mh_bundle_header(r2)
00005634	xoris	r0,r0,0x8000
00005638	stw	r0,0x7c(r30)
0000563c	stw	r9,0x78(r30)
00005640	lfd	f0,0x78(r30)
00005644	fsub	f0,f0,f13
00005648	frsp	f12,f0
0000564c	lwz	r0,0x44(r30)
00005650	subfic	r0,r0,0x80
00005654	srawi	r0,r0,1
00005658	addze	r0,r0
0000565c	lis	r9,0x4330
00005660	addis	r2,r31,0x1
00005664	addi	r2,r2,0xc0f0
00005668	lfd	f13,__mh_bundle_header(r2)
0000566c	xoris	r0,r0,0x8000
00005670	stw	r0,0x84(r30)
00005674	stw	r9,0x80(r30)
00005678	lfd	f0,0x80(r30)
0000567c	fsub	f0,f0,f13
00005680	frsp	f11,f0
00005684	lwz	r0,0x48(r30)
00005688	lis	r9,0x4330
0000568c	addis	r2,r31,0x1
00005690	addi	r2,r2,0xc0f0
00005694	lfd	f13,__mh_bundle_header(r2)
00005698	xoris	r0,r0,0x8000
0000569c	stw	r0,0x8c(r30)
000056a0	stw	r9,0x88(r30)
000056a4	lfd	f0,0x88(r30)
000056a8	fsub	f0,f0,f13
000056ac	frsp	f10,f0
000056b0	lwz	r0,0x44(r30)
000056b4	lis	r9,0x4330
000056b8	addis	r2,r31,0x1
000056bc	addi	r2,r2,0xc0f0
000056c0	lfd	f13,__mh_bundle_header(r2)
000056c4	xoris	r0,r0,0x8000
000056c8	stw	r0,0x94(r30)
000056cc	stw	r9,0x90(r30)
000056d0	lfd	f0,0x90(r30)
000056d4	fsub	f0,f0,f13
000056d8	frsp	f0,f0
000056dc	addi	r0,r30,0x4c
000056e0	or	r3,r0,r0
000056e4	fmr	f1,f12
000056e8	fmr	f2,f11
000056ec	fmr	f3,f10
000056f0	fmr	f4,f0
000056f4	bl	_CGRectMake
000056f8	li	r3,0x80
000056fc	li	r4,0x80
00005700	bl	_MyCreateBitmapContext
00005704	or	r0,r3,r3
00005708	stw	r0,0x40(r30)
0000570c	addis	r2,r31,0x1
00005710	addi	r2,r2,0xe3c8
00005714	lwz	r0,__mh_bundle_header(r2)
00005718	lwz	r3,0x40(r30)
0000571c	lwz	r4,0x4c(r30)
00005720	lwz	r5,0x50(r30)
00005724	lwz	r6,0x54(r30)
00005728	lwz	r7,0x58(r30)
0000572c	lwz	r8,0xc8(r30)
00005730	or	r12,r0,r0
00005734	mtspr	ctr,r12
00005738	bctrl
0000573c	lwz	r0,0xcc(r30)
00005740	cmpwi	cr7,r0,__mh_bundle_header
00005744	beq	cr7,0x57a8
00005748	addi	r0,r30,0x5c
0000574c	addis	r2,r31,0x1
00005750	addi	r2,r2,0xc0f8
00005754	lfs	f13,__mh_bundle_header(r2)
00005758	addis	r2,r31,0x1
0000575c	addi	r2,r2,0xc0f8
00005760	lfs	f0,__mh_bundle_header(r2)
00005764	or	r3,r0,r0
00005768	addis	r2,r31,0x1
0000576c	lfs	f1,0xc0fc(r2)
00005770	addis	r2,r31,0x1
00005774	lfs	f2,0xc0fc(r2)
00005778	fmr	f3,f13
0000577c	fmr	f4,f0
00005780	bl	_CGRectMake
00005784	addi	r0,r30,0x5c
00005788	lwz	r3,0x40(r30)
0000578c	or	r4,r0,r0
00005790	li	r5,0xb
00005794	li	r6,__mh_bundle_header
00005798	li	r7,__mh_bundle_header
0000579c	li	r8,__mh_bundle_header
000057a0	lwz	r9,0xcc(r30)
000057a4	bl	0x10b80	; symbol stub for: _PlotIconRefInContext
000057a8	lwz	r3,0x40(r30)
000057ac	bl	0x101a0	; symbol stub for: _CGBitmapContextCreateImage
000057b0	or	r0,r3,r3
000057b4	stw	r0,0x3c(r30)
000057b8	lwz	r3,0x40(r30)
000057bc	bl	0x101c0	; symbol stub for: _CGBitmapContextGetData
000057c0	or	r0,r3,r3
000057c4	stw	r0,0x38(r30)
000057c8	lwz	r0,0x38(r30)
000057cc	cmpwi	cr7,r0,__mh_bundle_header
000057d0	beq	cr7,0x57dc
000057d4	lwz	r3,0x38(r30)
000057d8	bl	0x11040	; symbol stub for: _free
000057dc	lwz	r3,0x40(r30)
000057e0	bl	0x10220	; symbol stub for: _CGContextRelease
000057e4	lwz	r0,0x3c(r30)
000057e8	or	r3,r0,r0
000057ec	lwz	r1,__mh_bundle_header(r1)
000057f0	lwz	r0,0x8(r1)
000057f4	mtspr	lr,r0
000057f8	lmw	r30,0xfff8(r1)
000057fc	blr
_CGRectMake:
00005800	stmw	r30,0xfff8(r1)
00005804	stwu	r1,0xffc0(r1)
00005808	or	r30,r1,r1
0000580c	or	r2,r3,r3
00005810	stfs	f1,0x5c(r30)
00005814	stfs	f2,0x60(r30)
00005818	stfs	f3,0x64(r30)
0000581c	stfs	f4,0x68(r30)
00005820	lfs	f0,0x5c(r30)
00005824	stfs	f0,0x18(r30)
00005828	lfs	f0,0x60(r30)
0000582c	stfs	f0,0x1c(r30)
00005830	lfs	f0,0x64(r30)
00005834	stfs	f0,0x20(r30)
00005838	lfs	f0,0x68(r30)
0000583c	stfs	f0,0x24(r30)
00005840	lwz	r0,0x18(r30)
00005844	lwz	r9,0x1c(r30)
00005848	lwz	r11,0x20(r30)
0000584c	lwz	r10,0x24(r30)
00005850	stw	r0,__mh_bundle_header(r2)
00005854	stw	r9,0x4(r2)
00005858	stw	r11,0x8(r2)
0000585c	stw	r10,0xc(r2)
00005860	or	r3,r2,r2
00005864	lwz	r1,__mh_bundle_header(r1)
00005868	lmw	r30,0xfff8(r1)
0000586c	blr
_DropboxCGContextDrawImage:
00005870	mfspr	r0,lr
00005874	stmw	r30,0xfff8(r1)
00005878	stw	r0,0x8(r1)
0000587c	stwu	r1,0xff40(r1)
00005880	or	r30,r1,r1
00005884	bcl	20,31,0x5888
00005888	mfspr	r31,lr
0000588c	stw	r3,0xd8(r30)
00005890	stw	r4,0xdc(r30)
00005894	stw	r5,0xe0(r30)
00005898	stw	r6,0xe4(r30)
0000589c	stw	r7,0xe8(r30)
000058a0	stw	r8,0xec(r30)
000058a4	addis	r2,r31,0x1
000058a8	addi	r3,r2,0xe134
000058ac	bl	0x11380	; symbol stub for: _pthread_mutex_lock
000058b0	or	r0,r3,r3
000058b4	stw	r0,0x4c(r30)
000058b8	lwz	r0,0x4c(r30)
000058bc	srawi	r2,r0,31
000058c0	xor	r0,r2,r0
000058c4	subf	r0,r2,r0
000058c8	neg	r0,r0
000058cc	rlwinm	r0,r0,1,31,31
000058d0	cmpwi	cr7,r0,__mh_bundle_header
000058d4	beq	cr7,0x5914
000058d8	lwz	r0,0x4c(r30)
000058dc	lis	r3,0x3f2a
000058e0	ori	r3,r3,0x3f2a
000058e4	li	r4,__mh_bundle_header
000058e8	addis	r2,r31,0x1
000058ec	addi	r5,r2,0xc7e8
000058f0	addis	r2,r31,0x1
000058f4	addi	r6,r2,0xc82c
000058f8	li	r7,__mh_bundle_header
000058fc	addis	r2,r31,0x1
00005900	addi	r8,r2,0xc668
00005904	li	r9,0x68
00005908	or	r10,r0,r0
0000590c	bl	0x10480	; symbol stub for: _DebugAssert
00005910	b	0x5ae0
00005914	addis	r2,r31,0x1
00005918	addi	r2,r2,0xe12c
0000591c	lwz	r0,__mh_bundle_header(r2)
00005920	or	r3,r0,r0
00005924	lwz	r4,0xec(r30)
00005928	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
0000592c	or	r0,r3,r3
00005930	stw	r0,0x50(r30)
00005934	addis	r2,r31,0x1
00005938	addi	r3,r2,0xe134
0000593c	bl	0x113a0	; symbol stub for: _pthread_mutex_unlock
00005940	or	r0,r3,r3
00005944	stw	r0,0x48(r30)
00005948	lwz	r0,0x48(r30)
0000594c	srawi	r2,r0,31
00005950	xor	r0,r2,r0
00005954	subf	r0,r2,r0
00005958	neg	r0,r0
0000595c	rlwinm	r0,r0,1,31,31
00005960	cmpwi	cr7,r0,__mh_bundle_header
00005964	beq	cr7,0x59a4
00005968	lwz	r0,0x48(r30)
0000596c	lis	r3,0x3f2a
00005970	ori	r3,r3,0x3f2a
00005974	li	r4,__mh_bundle_header
00005978	addis	r2,r31,0x1
0000597c	addi	r5,r2,0xc838
00005980	addis	r2,r31,0x1
00005984	addi	r6,r2,0xc82c
00005988	li	r7,__mh_bundle_header
0000598c	addis	r2,r31,0x1
00005990	addi	r8,r2,0xc668
00005994	li	r9,0x6a
00005998	or	r10,r0,r0
0000599c	bl	0x10480	; symbol stub for: _DebugAssert
000059a0	b	0x5ae0
000059a4	lwz	r0,0x50(r30)
000059a8	cmpwi	cr7,r0,__mh_bundle_header
000059ac	beq	cr7,0x5aac
000059b0	addi	r0,r30,0x54
000059b4	lwz	r3,0x50(r30)
000059b8	or	r4,r0,r0
000059bc	bl	0x10120	; symbol stub for: _CFURLGetFSRef
000059c0	addis	r2,r31,0x1
000059c4	lwz	r2,0xd7a0(r2)
000059c8	lwz	r2,__mh_bundle_header(r2)
000059cc	addi	r0,r30,0x54
000059d0	or	r3,r0,r0
000059d4	or	r12,r2,r2
000059d8	mtspr	ctr,r12
000059dc	bctrl
000059e0	or	r0,r3,r3
000059e4	stw	r0,0x44(r30)
000059e8	addis	r2,r31,0x1
000059ec	addi	r2,r2,0xe130
000059f0	lwz	r0,__mh_bundle_header(r2)
000059f4	or	r3,r0,r0
000059f8	lwz	r4,0x44(r30)
000059fc	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
00005a00	or	r0,r3,r3
00005a04	stw	r0,0x40(r30)
00005a08	lwz	r0,0x40(r30)
00005a0c	cmpwi	cr7,r0,__mh_bundle_header
00005a10	bne	cr7,0x5a54
00005a14	li	r3,__mh_bundle_header
00005a18	li	r4,__mh_bundle_header
00005a1c	addis	r2,r31,0x1
00005a20	lwz	r5,0xd7a4(r2)
00005a24	addis	r2,r31,0x1
00005a28	lwz	r6,0xd7a8(r2)
00005a2c	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
00005a30	or	r0,r3,r3
00005a34	stw	r0,0x40(r30)
00005a38	addis	r2,r31,0x1
00005a3c	addi	r2,r2,0xe130
00005a40	lwz	r0,__mh_bundle_header(r2)
00005a44	or	r3,r0,r0
00005a48	lwz	r4,0x44(r30)
00005a4c	lwz	r5,0x40(r30)
00005a50	bl	0xfd80	; symbol stub for: _CFDictionaryAddValue
00005a54	lwz	r3,0x40(r30)
00005a58	lwz	r4,0xec(r30)
00005a5c	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
00005a60	or	r0,r3,r3
00005a64	stw	r0,0x3c(r30)
00005a68	lwz	r0,0x3c(r30)
00005a6c	cmpwi	cr7,r0,__mh_bundle_header
00005a70	beq	cr7,0x5a80
00005a74	lwz	r0,0x3c(r30)
00005a78	stw	r0,0xec(r30)
00005a7c	b	0x5aac
00005a80	lwz	r3,0xec(r30)
00005a84	lwz	r4,0x44(r30)
00005a88	bl	_CompositeCGImageWithIconRef
00005a8c	or	r0,r3,r3
00005a90	stw	r0,0x38(r30)
00005a94	lwz	r3,0x40(r30)
00005a98	lwz	r4,0xec(r30)
00005a9c	lwz	r5,0x38(r30)
00005aa0	bl	0xfe40	; symbol stub for: _CFDictionarySetValue
00005aa4	lwz	r0,0x38(r30)
00005aa8	stw	r0,0xec(r30)
00005aac	addis	r2,r31,0x1
00005ab0	addi	r2,r2,0xe128
00005ab4	lwz	r0,__mh_bundle_header(r2)
00005ab8	lwz	r3,0xd8(r30)
00005abc	lwz	r4,0xdc(r30)
00005ac0	lwz	r5,0xe0(r30)
00005ac4	lwz	r6,0xe4(r30)
00005ac8	lwz	r7,0xe8(r30)
00005acc	lwz	r8,0xec(r30)
00005ad0	or	r12,r0,r0
00005ad4	mtspr	ctr,r12
00005ad8	bctrl
00005adc	b	0x5b04
00005ae0	addis	r2,r31,0x1
00005ae4	lwz	r2,0xd784(r2)
00005ae8	addi	r0,r2,0xb0
00005aec	addis	r2,r31,0x1
00005af0	addi	r3,r2,0xc880
00005af4	li	r4,0x1
00005af8	li	r5,0x1b
00005afc	or	r6,r0,r0
00005b00	bl	0x11080	; symbol stub for: _fwrite
00005b04	lwz	r1,__mh_bundle_header(r1)
00005b08	lwz	r0,0x8(r1)
00005b0c	mtspr	lr,r0
00005b10	lmw	r30,0xfff8(r1)
00005b14	blr
_DropboxQLThumbnailCopyImage:
00005b18	mfspr	r0,lr
00005b1c	stmw	r30,0xfff8(r1)
00005b20	stw	r0,0x8(r1)
00005b24	stwu	r1,0xff50(r1)
00005b28	or	r30,r1,r1
00005b2c	bcl	20,31,0x5b30
00005b30	mfspr	r31,lr
00005b34	stw	r3,0xc8(r30)
00005b38	li	r0,0x1
00005b3c	stw	r0,0x54(r30)
00005b40	addis	r2,r31,0x1
00005b44	addi	r2,r2,0xde7c
00005b48	lwz	r0,__mh_bundle_header(r2)
00005b4c	lwz	r3,0xc8(r30)
00005b50	or	r12,r0,r0
00005b54	mtspr	ctr,r12
00005b58	bctrl
00005b5c	or	r0,r3,r3
00005b60	stw	r0,0x50(r30)
00005b64	lwz	r0,0x50(r30)
00005b68	cmpwi	cr7,r0,__mh_bundle_header
00005b6c	bne	cr7,0x5b7c
00005b70	li	r0,__mh_bundle_header
00005b74	stw	r0,0x98(r30)
00005b78	b	0x5ea0
00005b7c	lwz	r3,0xc8(r30)
00005b80	bl	0x10be0	; symbol stub for: _QLThumbnailCopyOptions
00005b84	or	r0,r3,r3
00005b88	stw	r0,0x4c(r30)
00005b8c	lwz	r0,0x4c(r30)
00005b90	cmpwi	cr7,r0,__mh_bundle_header
00005b94	beq	cr7,0x5be4
00005b98	li	r0,__mh_bundle_header
00005b9c	stw	r0,0x6c(r30)
00005ba0	addi	r0,r30,0x6c
00005ba4	lwz	r3,0x4c(r30)
00005ba8	addis	r2,r31,0x1
00005bac	addi	r4,r2,0xd960
00005bb0	or	r5,r0,r0
00005bb4	bl	0xfe00	; symbol stub for: _CFDictionaryGetValueIfPresent
00005bb8	lwz	r0,0x6c(r30)
00005bbc	cmpwi	cr7,r0,__mh_bundle_header
00005bc0	beq	cr7,0x5be4
00005bc4	lwz	r0,0x6c(r30)
00005bc8	or	r3,r0,r0
00005bcc	bl	0xfc80	; symbol stub for: _CFBooleanGetValue
00005bd0	or	r0,r3,r3
00005bd4	cmpwi	cr7,r0,__mh_bundle_header
00005bd8	beq	cr7,0x5be4
00005bdc	li	r0,__mh_bundle_header
00005be0	stw	r0,0x54(r30)
00005be4	lwz	r0,0x54(r30)
00005be8	cmpwi	cr7,r0,__mh_bundle_header
00005bec	beq	cr7,0x5bfc
00005bf0	lwz	r0,0x50(r30)
00005bf4	stw	r0,0x98(r30)
00005bf8	b	0x5ea0
00005bfc	li	r0,__mh_bundle_header
00005c00	stw	r0,0x48(r30)
00005c04	lwz	r3,0x50(r30)
00005c08	bl	0x102c0	; symbol stub for: _CGImageGetWidth
00005c0c	or	r0,r3,r3
00005c10	stw	r0,0x44(r30)
00005c14	lwz	r3,0x50(r30)
00005c18	bl	0x102a0	; symbol stub for: _CGImageGetHeight
00005c1c	or	r0,r3,r3
00005c20	stw	r0,0x40(r30)
00005c24	lwz	r0,0x44(r30)
00005c28	subfic	r0,r0,0x80
00005c2c	srawi	r0,r0,1
00005c30	addze	r0,r0
00005c34	lis	r9,0x4330
00005c38	addis	r2,r31,0x1
00005c3c	addi	r2,r2,0xbba8
00005c40	lfd	f13,__mh_bundle_header(r2)
00005c44	xoris	r0,r0,0x8000
00005c48	stw	r0,0x7c(r30)
00005c4c	stw	r9,0x78(r30)
00005c50	lfd	f0,0x78(r30)
00005c54	fsub	f0,f0,f13
00005c58	frsp	f12,f0
00005c5c	lwz	r0,0x40(r30)
00005c60	subfic	r0,r0,0x80
00005c64	srawi	r0,r0,1
00005c68	addze	r0,r0
00005c6c	lis	r9,0x4330
00005c70	addis	r2,r31,0x1
00005c74	addi	r2,r2,0xbba8
00005c78	lfd	f13,__mh_bundle_header(r2)
00005c7c	xoris	r0,r0,0x8000
00005c80	stw	r0,0x84(r30)
00005c84	stw	r9,0x80(r30)
00005c88	lfd	f0,0x80(r30)
00005c8c	fsub	f0,f0,f13
00005c90	frsp	f11,f0
00005c94	lwz	r0,0x44(r30)
00005c98	lis	r9,0x4330
00005c9c	addis	r2,r31,0x1
00005ca0	addi	r2,r2,0xbba8
00005ca4	lfd	f13,__mh_bundle_header(r2)
00005ca8	xoris	r0,r0,0x8000
00005cac	stw	r0,0x8c(r30)
00005cb0	stw	r9,0x88(r30)
00005cb4	lfd	f0,0x88(r30)
00005cb8	fsub	f0,f0,f13
00005cbc	frsp	f10,f0
00005cc0	lwz	r0,0x40(r30)
00005cc4	lis	r9,0x4330
00005cc8	addis	r2,r31,0x1
00005ccc	addi	r2,r2,0xbba8
00005cd0	lfd	f13,__mh_bundle_header(r2)
00005cd4	xoris	r0,r0,0x8000
00005cd8	stw	r0,0x94(r30)
00005cdc	stw	r9,0x90(r30)
00005ce0	lfd	f0,0x90(r30)
00005ce4	fsub	f0,f0,f13
00005ce8	frsp	f0,f0
00005cec	addi	r0,r30,0x5c
00005cf0	or	r3,r0,r0
00005cf4	fmr	f1,f12
00005cf8	fmr	f2,f11
00005cfc	fmr	f3,f10
00005d00	fmr	f4,f0
00005d04	bl	_CGRectMake
00005d08	li	r3,0x80
00005d0c	li	r4,0x80
00005d10	bl	_MyCreateBitmapContext
00005d14	or	r0,r3,r3
00005d18	stw	r0,0x3c(r30)
00005d1c	addis	r2,r31,0x1
00005d20	addi	r2,r2,0xde80
00005d24	lwz	r0,__mh_bundle_header(r2)
00005d28	lwz	r3,0x3c(r30)
00005d2c	lwz	r4,0x5c(r30)
00005d30	lwz	r5,0x60(r30)
00005d34	lwz	r6,0x64(r30)
00005d38	lwz	r7,0x68(r30)
00005d3c	lwz	r8,0x50(r30)
00005d40	or	r12,r0,r0
00005d44	mtspr	ctr,r12
00005d48	bctrl
00005d4c	lwz	r3,0x50(r30)
00005d50	bl	0xff40	; symbol stub for: _CFRelease
00005d54	lwz	r3,0x3c(r30)
00005d58	bl	0x101a0	; symbol stub for: _CGBitmapContextCreateImage
00005d5c	or	r0,r3,r3
00005d60	stw	r0,0x48(r30)
00005d64	lwz	r3,0x3c(r30)
00005d68	bl	_MyReleaseBitmapContext
00005d6c	lwz	r3,0xc8(r30)
00005d70	bl	0x10bc0	; symbol stub for: _QLThumbnailCopyDocumentURL
00005d74	or	r0,r3,r3
00005d78	stw	r0,0x38(r30)
00005d7c	lwz	r0,0x38(r30)
00005d80	cmpwi	cr7,r0,__mh_bundle_header
00005d84	mfcr	r0
00005d88	rlwinm	r0,r0,31,31,31
00005d8c	cmpwi	cr7,r0,__mh_bundle_header
00005d90	beq	cr7,0x5dcc
00005d94	lis	r3,0x3f2a
00005d98	ori	r3,r3,0x3f2a
00005d9c	li	r4,__mh_bundle_header
00005da0	addis	r2,r31,0x1
00005da4	addi	r5,r2,0xc600
00005da8	addis	r2,r31,0x1
00005dac	addi	r6,r2,0xc080
00005db0	li	r7,__mh_bundle_header
00005db4	addis	r2,r31,0x1
00005db8	addi	r8,r2,0xc3c0
00005dbc	li	r9,0xa1
00005dc0	li	r10,__mh_bundle_header
00005dc4	bl	0x10480	; symbol stub for: _DebugAssert
00005dc8	b	0x5e74
00005dcc	addis	r2,r31,0x1
00005dd0	addi	r3,r2,0xde8c
00005dd4	bl	0x11380	; symbol stub for: _pthread_mutex_lock
00005dd8	or	r0,r3,r3
00005ddc	stw	r0,0x58(r30)
00005de0	addis	r2,r31,0x1
00005de4	addi	r2,r2,0xde84
00005de8	lwz	r0,__mh_bundle_header(r2)
00005dec	or	r3,r0,r0
00005df0	lwz	r4,0x48(r30)
00005df4	lwz	r5,0x38(r30)
00005df8	bl	0xfe40	; symbol stub for: _CFDictionarySetValue
00005dfc	addis	r2,r31,0x1
00005e00	addi	r3,r2,0xde8c
00005e04	bl	0x113a0	; symbol stub for: _pthread_mutex_unlock
00005e08	or	r0,r3,r3
00005e0c	stw	r0,0x58(r30)
00005e10	lwz	r0,0x58(r30)
00005e14	srawi	r2,r0,31
00005e18	xor	r0,r2,r0
00005e1c	subf	r0,r2,r0
00005e20	neg	r0,r0
00005e24	rlwinm	r0,r0,1,31,31
00005e28	cmpwi	cr7,r0,__mh_bundle_header
00005e2c	beq	cr7,0x5e68
00005e30	lis	r3,0x3f2a
00005e34	ori	r3,r3,0x3f2a
00005e38	li	r4,__mh_bundle_header
00005e3c	addis	r2,r31,0x1
00005e40	addi	r5,r2,0xc620
00005e44	addis	r2,r31,0x1
00005e48	addi	r6,r2,0xc080
00005e4c	li	r7,__mh_bundle_header
00005e50	addis	r2,r31,0x1
00005e54	addi	r8,r2,0xc3c0
00005e58	li	r9,0xa7
00005e5c	li	r10,__mh_bundle_header
00005e60	bl	0x10480	; symbol stub for: _DebugAssert
00005e64	b	0x5e74
00005e68	lwz	r0,0x48(r30)
00005e6c	stw	r0,0x98(r30)
00005e70	b	0x5ea0
00005e74	addis	r2,r31,0x1
00005e78	lwz	r2,0xd4dc(r2)
00005e7c	addi	r0,r2,0xb0
00005e80	addis	r2,r31,0x1
00005e84	addi	r3,r2,0xc640
00005e88	li	r4,0x1
00005e8c	li	r5,0x3a
00005e90	or	r6,r0,r0
00005e94	bl	0x11080	; symbol stub for: _fwrite
00005e98	li	r0,__mh_bundle_header
00005e9c	stw	r0,0x98(r30)
00005ea0	lwz	r0,0x98(r30)
00005ea4	or	r3,r0,r0
00005ea8	lwz	r1,__mh_bundle_header(r1)
00005eac	lwz	r0,0x8(r1)
00005eb0	mtspr	lr,r0
00005eb4	lmw	r30,0xfff8(r1)
00005eb8	blr
_DeallocDropboxPluginType:
00005ebc	mfspr	r0,lr
00005ec0	stmw	r30,0xfff8(r1)
00005ec4	stw	r0,0x8(r1)
00005ec8	stwu	r1,0xffa0(r1)
00005ecc	or	r30,r1,r1
00005ed0	stw	r3,0x78(r30)
00005ed4	lwz	r2,0x78(r30)
00005ed8	lwz	r0,0x4(r2)
00005edc	stw	r0,0x38(r30)
00005ee0	lwz	r2,0x78(r30)
00005ee4	addi	r0,r2,0xc
00005ee8	or	r3,r0,r0
00005eec	bl	_CMHelperDispose
00005ef0	lwz	r2,0x78(r30)
00005ef4	lwz	r0,0x28(r2)
00005ef8	cmpwi	cr7,r0,__mh_bundle_header
00005efc	beq	cr7,0x5f10
00005f00	lwz	r2,0x78(r30)
00005f04	lwz	r0,0x28(r2)
00005f08	or	r3,r0,r0
00005f0c	bl	0xff40	; symbol stub for: _CFRelease
00005f10	lwz	r3,0x78(r30)
00005f14	bl	0x11040	; symbol stub for: _free
00005f18	lwz	r0,0x38(r30)
00005f1c	cmpwi	cr7,r0,__mh_bundle_header
00005f20	beq	cr7,0x5f34
00005f24	lwz	r3,0x38(r30)
00005f28	bl	0xff00	; symbol stub for: _CFPlugInRemoveInstanceForFactory
00005f2c	lwz	r3,0x38(r30)
00005f30	bl	0xff40	; symbol stub for: _CFRelease
00005f34	lwz	r1,__mh_bundle_header(r1)
00005f38	lwz	r0,0x8(r1)
00005f3c	mtspr	lr,r0
00005f40	lmw	r30,0xfff8(r1)
00005f44	blr
_ClearVerbMap:
00005f48	mfspr	r0,lr
00005f4c	stmw	r30,0xfff8(r1)
00005f50	stw	r0,0x8(r1)
00005f54	stwu	r1,0xffa0(r1)
00005f58	or	r30,r1,r1
00005f5c	bcl	20,31,0x5f60
00005f60	mfspr	r31,lr
00005f64	b	0x5fa4
00005f68	addis	r2,r31,0x1
00005f6c	addi	r2,r2,0xda88
00005f70	lwz	r0,__mh_bundle_header(r2)
00005f74	stw	r0,0x38(r30)
00005f78	lwz	r2,0x38(r30)
00005f7c	lwz	r0,0x8(r2)
00005f80	addis	r2,r31,0x1
00005f84	addi	r2,r2,0xda88
00005f88	stw	r0,__mh_bundle_header(r2)
00005f8c	lwz	r2,0x38(r30)
00005f90	lwz	r0,0x4(r2)
00005f94	or	r3,r0,r0
00005f98	bl	0x11040	; symbol stub for: _free
00005f9c	lwz	r3,0x38(r30)
00005fa0	bl	0x11040	; symbol stub for: _free
00005fa4	addis	r2,r31,0x1
00005fa8	addi	r2,r2,0xda88
00005fac	lwz	r0,__mh_bundle_header(r2)
00005fb0	cmpwi	cr7,r0,__mh_bundle_header
00005fb4	bne	cr7,0x5f68
00005fb8	lwz	r1,__mh_bundle_header(r1)
00005fbc	lwz	r0,0x8(r1)
00005fc0	mtspr	lr,r0
00005fc4	lmw	r30,0xfff8(r1)
00005fc8	blr
_AllocDropboxPluginType:
00005fcc	mfspr	r0,lr
00005fd0	stmw	r30,0xfff8(r1)
00005fd4	stw	r0,0x8(r1)
00005fd8	stwu	r1,0xffa0(r1)
00005fdc	or	r30,r1,r1
00005fe0	bcl	20,31,0x5fe4
00005fe4	mfspr	r31,lr
00005fe8	stw	r3,0x78(r30)
00005fec	li	r3,0x2c
00005ff0	bl	0x111c0	; symbol stub for: _malloc
00005ff4	or	r0,r3,r3
00005ff8	stw	r0,0x38(r30)
00005ffc	lwz	r9,0x38(r30)
00006000	addis	r2,r31,0x1
00006004	addi	r0,r2,0xd8a8
00006008	stw	r0,__mh_bundle_header(r9)
0000600c	lwz	r3,0x78(r30)
00006010	bl	0xff60	; symbol stub for: _CFRetain
00006014	or	r0,r3,r3
00006018	lwz	r2,0x38(r30)
0000601c	stw	r0,0x4(r2)
00006020	lwz	r3,0x78(r30)
00006024	bl	0xfee0	; symbol stub for: _CFPlugInAddInstanceForFactory
00006028	addis	r2,r31,0x1
0000602c	addi	r0,r2,0xd4bc
00006030	or	r3,r0,r0
00006034	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
00006038	or	r0,r3,r3
0000603c	lwz	r2,0x38(r30)
00006040	stw	r0,0x28(r2)
00006044	lwz	r2,0x38(r30)
00006048	addi	r0,r2,0xc
0000604c	or	r3,r0,r0
00006050	addis	r2,r31,0x1
00006054	addi	r4,r2,0xc1c8
00006058	bl	_CMHelperInitialise
0000605c	addis	r2,r31,0x1
00006060	addi	r2,r2,_CreateDropboxToolbarItem
00006064	lbz	r0,__mh_bundle_header(r2)
00006068	rlwinm	r0,r0,0,24,31
0000606c	cmpwi	cr7,r0,__mh_bundle_header
00006070	bne	cr7,0x6088
00006074	bl	_DropboxCommunication
00006078	addis	r2,r31,0x1
0000607c	addi	r2,r2,_CreateDropboxToolbarItem
00006080	li	r0,0x1
00006084	stb	r0,__mh_bundle_header(r2)
00006088	addis	r2,r31,0x1
0000608c	lwz	r3,0xd054(r2)
00006090	li	r4,__mh_bundle_header
00006094	bl	_DropboxIconOverlaySetProvider
00006098	lwz	r2,0x38(r30)
0000609c	li	r0,0x1
000060a0	stw	r0,0x8(r2)
000060a4	lwz	r0,0x38(r30)
000060a8	or	r3,r0,r0
000060ac	lwz	r1,__mh_bundle_header(r1)
000060b0	lwz	r0,0x8(r1)
000060b4	mtspr	lr,r0
000060b8	lmw	r30,0xfff8(r1)
000060bc	blr
_DropboxPluginFactory:
000060c0	mfspr	r0,lr
000060c4	stmw	r30,0xfff8(r1)
000060c8	stw	r0,0x8(r1)
000060cc	stwu	r1,0xff70(r1)
000060d0	or	r30,r1,r1
000060d4	stw	r3,0xa8(r30)
000060d8	stw	r4,0xac(r30)
000060dc	bl	_ShouldLoadContextMenus
000060e0	or	r0,r3,r3
000060e4	cmpwi	cr7,r0,__mh_bundle_header
000060e8	beq	cr7,0x6200
000060ec	li	r0,0xd5
000060f0	stw	r0,0x38(r1)
000060f4	li	r0,0x80
000060f8	stw	r0,0x3c(r1)
000060fc	li	r0,0xa7
00006100	stw	r0,0x40(r1)
00006104	li	r0,__mh_bundle_header
00006108	stw	r0,0x44(r1)
0000610c	li	r0,0x30
00006110	stw	r0,0x48(r1)
00006114	li	r0,0x65
00006118	stw	r0,0x4c(r1)
0000611c	li	r0,0xb3
00006120	stw	r0,0x50(r1)
00006124	li	r0,__mh_bundle_header
00006128	stw	r0,0x54(r1)
0000612c	li	r0,0xbc
00006130	stw	r0,0x58(r1)
00006134	li	r3,__mh_bundle_header
00006138	li	r4,0x2f
0000613c	li	r5,0x65
00006140	li	r6,0x22
00006144	li	r7,0xe9
00006148	li	r8,0x3e
0000614c	li	r9,0x66
00006150	li	r10,0x11
00006154	bl	0x10160	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
00006158	or	r0,r3,r3
0000615c	lwz	r3,0xac(r30)
00006160	or	r4,r0,r0
00006164	bl	0xfe60	; symbol stub for: _CFEqual
00006168	or	r0,r3,r3
0000616c	cmpwi	cr7,r0,__mh_bundle_header
00006170	beq	cr7,0x6200
00006174	li	r0,0xe2
00006178	stw	r0,0x38(r1)
0000617c	li	r0,0x88
00006180	stw	r0,0x3c(r1)
00006184	li	r0,0x44
00006188	stw	r0,0x40(r1)
0000618c	li	r0,0x84
00006190	stw	r0,0x44(r1)
00006194	li	r0,0xc2
00006198	stw	r0,0x48(r1)
0000619c	li	r0,0x57
000061a0	stw	r0,0x4c(r1)
000061a4	li	r0,0xfc
000061a8	stw	r0,0x50(r1)
000061ac	li	r0,0x38
000061b0	stw	r0,0x54(r1)
000061b4	li	r0,0x44
000061b8	stw	r0,0x58(r1)
000061bc	li	r3,__mh_bundle_header
000061c0	li	r4,0x27
000061c4	li	r5,0x17
000061c8	li	r6,0x4b
000061cc	li	r7,0xc7
000061d0	li	r8,0x8d
000061d4	li	r9,0x26
000061d8	li	r10,0x4e
000061dc	bl	0x10160	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
000061e0	or	r0,r3,r3
000061e4	or	r3,r0,r0
000061e8	bl	_AllocDropboxPluginType
000061ec	or	r0,r3,r3
000061f0	stw	r0,0x68(r30)
000061f4	lwz	r0,0x68(r30)
000061f8	stw	r0,0x78(r30)
000061fc	b	0x6208
00006200	li	r0,__mh_bundle_header
00006204	stw	r0,0x78(r30)
00006208	lwz	r0,0x78(r30)
0000620c	or	r3,r0,r0
00006210	lwz	r1,__mh_bundle_header(r1)
00006214	lwz	r0,0x8(r1)
00006218	mtspr	lr,r0
0000621c	lmw	r30,0xfff8(r1)
00006220	blr
_SVNPluginQueryInterface:
00006224	mfspr	r0,lr
00006228	stmw	r30,0xfff8(r1)
0000622c	stw	r0,0x8(r1)
00006230	stwu	r1,0xff70(r1)
00006234	or	r30,r1,r1
00006238	bcl	20,31,0x623c
0000623c	mfspr	r31,lr
00006240	stw	r3,0xa8(r30)
00006244	stw	r4,0xac(r30)
00006248	stw	r5,0xb0(r30)
0000624c	stw	r6,0xb4(r30)
00006250	stw	r7,0xb8(r30)
00006254	stw	r8,0xbc(r30)
00006258	li	r3,__mh_bundle_header
0000625c	lwz	r4,0xac(r30)
00006260	lwz	r5,0xb0(r30)
00006264	lwz	r6,0xb4(r30)
00006268	lwz	r7,0xb8(r30)
0000626c	bl	0x10140	; symbol stub for: _CFUUIDCreateFromUUIDBytes
00006270	or	r0,r3,r3
00006274	stw	r0,0x68(r30)
00006278	li	r0,0xd5
0000627c	stw	r0,0x38(r1)
00006280	li	r0,0xbe
00006284	stw	r0,0x3c(r1)
00006288	li	r0,0xab
0000628c	stw	r0,0x40(r1)
00006290	li	r0,__mh_bundle_header
00006294	stw	r0,0x44(r1)
00006298	li	r0,0x30
0000629c	stw	r0,0x48(r1)
000062a0	li	r0,0x65
000062a4	stw	r0,0x4c(r1)
000062a8	li	r0,0xb3
000062ac	stw	r0,0x50(r1)
000062b0	li	r0,__mh_bundle_header
000062b4	stw	r0,0x54(r1)
000062b8	li	r0,0xbc
000062bc	stw	r0,0x58(r1)
000062c0	li	r3,__mh_bundle_header
000062c4	li	r4,0x32
000062c8	li	r5,0x99
000062cc	li	r6,0x7b
000062d0	li	r7,0x62
000062d4	li	r8,0x3e
000062d8	li	r9,0x66
000062dc	li	r10,0x11
000062e0	bl	0x10160	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
000062e4	or	r0,r3,r3
000062e8	lwz	r3,0x68(r30)
000062ec	or	r4,r0,r0
000062f0	bl	0xfe60	; symbol stub for: _CFEqual
000062f4	or	r0,r3,r3
000062f8	cmpwi	cr7,r0,__mh_bundle_header
000062fc	beq	cr7,0x6328
00006300	lwz	r3,0xa8(r30)
00006304	bl	_SVNPluginAddRef
00006308	lwz	r2,0xbc(r30)
0000630c	lwz	r0,0xa8(r30)
00006310	stw	r0,__mh_bundle_header(r2)
00006314	lwz	r3,0x68(r30)
00006318	bl	0xff40	; symbol stub for: _CFRelease
0000631c	li	r0,__mh_bundle_header
00006320	stw	r0,0x78(r30)
00006324	b	0x640c
00006328	addis	r2,r31,0x1
0000632c	lwz	r2,0xcdf8(r2)
00006330	lwz	r2,__mh_bundle_header(r2)
00006334	li	r0,__mh_bundle_header
00006338	stw	r0,0x38(r1)
0000633c	li	r0,0xc0
00006340	stw	r0,0x3c(r1)
00006344	li	r0,__mh_bundle_header
00006348	stw	r0,0x40(r1)
0000634c	li	r0,__mh_bundle_header
00006350	stw	r0,0x44(r1)
00006354	li	r0,__mh_bundle_header
00006358	stw	r0,0x48(r1)
0000635c	li	r0,__mh_bundle_header
00006360	stw	r0,0x4c(r1)
00006364	li	r0,__mh_bundle_header
00006368	stw	r0,0x50(r1)
0000636c	li	r0,__mh_bundle_header
00006370	stw	r0,0x54(r1)
00006374	li	r0,0x46
00006378	stw	r0,0x58(r1)
0000637c	or	r3,r2,r2
00006380	li	r4,__mh_bundle_header
00006384	li	r5,__mh_bundle_header
00006388	li	r6,__mh_bundle_header
0000638c	li	r7,__mh_bundle_header
00006390	li	r8,__mh_bundle_header
00006394	li	r9,__mh_bundle_header
00006398	li	r10,__mh_bundle_header
0000639c	bl	0x10160	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
000063a0	or	r0,r3,r3
000063a4	lwz	r3,0x68(r30)
000063a8	or	r4,r0,r0
000063ac	bl	0xfe60	; symbol stub for: _CFEqual
000063b0	or	r0,r3,r3
000063b4	cmpwi	cr7,r0,__mh_bundle_header
000063b8	beq	cr7,0x63e4
000063bc	lwz	r3,0xa8(r30)
000063c0	bl	_SVNPluginAddRef
000063c4	lwz	r2,0xbc(r30)
000063c8	lwz	r0,0xa8(r30)
000063cc	stw	r0,__mh_bundle_header(r2)
000063d0	lwz	r3,0x68(r30)
000063d4	bl	0xff40	; symbol stub for: _CFRelease
000063d8	li	r0,__mh_bundle_header
000063dc	stw	r0,0x78(r30)
000063e0	b	0x640c
000063e4	lwz	r2,0xbc(r30)
000063e8	li	r0,__mh_bundle_header
000063ec	stw	r0,__mh_bundle_header(r2)
000063f0	lwz	r3,0x68(r30)
000063f4	bl	0xff40	; symbol stub for: _CFRelease
000063f8	lis	r0,0x8000
000063fc	stw	r0,0x78(r30)
00006400	lwz	r0,0x78(r30)
00006404	ori	r0,r0,0x4
00006408	stw	r0,0x78(r30)
0000640c	lwz	r0,0x78(r30)
00006410	or	r3,r0,r0
00006414	lwz	r1,__mh_bundle_header(r1)
00006418	lwz	r0,0x8(r1)
0000641c	mtspr	lr,r0
00006420	lmw	r30,0xfff8(r1)
00006424	blr
_SVNPluginAddRef:
00006428	stmw	r30,0xfff8(r1)
0000642c	stwu	r1,0xffd0(r1)
00006430	or	r30,r1,r1
00006434	stw	r3,0x48(r30)
00006438	lwz	r9,0x48(r30)
0000643c	lwz	r2,0x48(r30)
00006440	lwz	r2,0x8(r2)
00006444	addi	r0,r2,0x1
00006448	stw	r0,0x8(r9)
0000644c	lwz	r2,0x48(r30)
00006450	lwz	r0,0x8(r2)
00006454	or	r3,r0,r0
00006458	lwz	r1,__mh_bundle_header(r1)
0000645c	lmw	r30,0xfff8(r1)
00006460	blr
_SVNPluginRelease:
00006464	mfspr	r0,lr
00006468	stmw	r30,0xfff8(r1)
0000646c	stw	r0,0x8(r1)
00006470	stwu	r1,0xffb0(r1)
00006474	or	r30,r1,r1
00006478	stw	r3,0x68(r30)
0000647c	lwz	r9,0x68(r30)
00006480	lwz	r2,0x68(r30)
00006484	lwz	r2,0x8(r2)
00006488	addi	r0,r2,0xffff
0000648c	stw	r0,0x8(r9)
00006490	lwz	r2,0x68(r30)
00006494	lwz	r0,0x8(r2)
00006498	cmpwi	cr7,r0,__mh_bundle_header
0000649c	bne	cr7,0x64b8
000064a0	lwz	r0,0x68(r30)
000064a4	or	r3,r0,r0
000064a8	bl	_DeallocDropboxPluginType
000064ac	li	r0,__mh_bundle_header
000064b0	stw	r0,0x38(r30)
000064b4	b	0x64c4
000064b8	lwz	r2,0x68(r30)
000064bc	lwz	r2,0x8(r2)
000064c0	stw	r2,0x38(r30)
000064c4	lwz	r0,0x38(r30)
000064c8	or	r3,r0,r0
000064cc	lwz	r1,__mh_bundle_header(r1)
000064d0	lwz	r0,0x8(r1)
000064d4	mtspr	lr,r0
000064d8	lmw	r30,0xfff8(r1)
000064dc	blr
_getPathStringFromFSRef:
000064e0	mfspr	r0,lr
000064e4	stmw	r30,0xfff8(r1)
000064e8	stw	r0,0x8(r1)
000064ec	stwu	r1,0xff90(r1)
000064f0	or	r30,r1,r1
000064f4	stw	r3,0x88(r30)
000064f8	stw	r4,0x8c(r30)
000064fc	stw	r5,0x90(r30)
00006500	li	r0,__mh_bundle_header
00006504	stb	r0,0x40(r30)
00006508	li	r3,__mh_bundle_header
0000650c	lwz	r4,0x88(r30)
00006510	bl	0x100e0	; symbol stub for: _CFURLCreateFromFSRef
00006514	or	r0,r3,r3
00006518	stw	r0,0x3c(r30)
0000651c	lwz	r0,0x3c(r30)
00006520	cmpwi	cr7,r0,__mh_bundle_header
00006524	beq	cr7,0x65a8
00006528	lwz	r3,0x3c(r30)
0000652c	li	r4,__mh_bundle_header
00006530	bl	0x100c0	; symbol stub for: _CFURLCopyFileSystemPath
00006534	or	r0,r3,r3
00006538	stw	r0,0x38(r30)
0000653c	lwz	r0,0x38(r30)
00006540	cmpwi	cr7,r0,__mh_bundle_header
00006544	beq	cr7,0x65a0
00006548	lwz	r3,0x38(r30)
0000654c	bl	0x100a0	; symbol stub for: _CFStringGetLength
00006550	or	r2,r3,r3
00006554	addi	r0,r30,0x44
00006558	or	r3,r0,r0
0000655c	li	r4,__mh_bundle_header
00006560	or	r5,r2,r2
00006564	bl	_CFRangeMake
00006568	lwz	r3,0x38(r30)
0000656c	lwz	r4,0x44(r30)
00006570	lwz	r5,0x48(r30)
00006574	lwz	r6,0x8c(r30)
00006578	bl	0x10060	; symbol stub for: _CFStringGetCharacters
0000657c	lwz	r3,0x38(r30)
00006580	bl	0x100a0	; symbol stub for: _CFStringGetLength
00006584	or	r0,r3,r3
00006588	lwz	r2,0x90(r30)
0000658c	stw	r0,__mh_bundle_header(r2)
00006590	lwz	r3,0x38(r30)
00006594	bl	0xff40	; symbol stub for: _CFRelease
00006598	li	r0,0x1
0000659c	stb	r0,0x40(r30)
000065a0	lwz	r3,0x3c(r30)
000065a4	bl	0xff40	; symbol stub for: _CFRelease
000065a8	lbz	r0,0x40(r30)
000065ac	rlwinm	r0,r0,0,24,31
000065b0	or	r3,r0,r0
000065b4	lwz	r1,__mh_bundle_header(r1)
000065b8	lwz	r0,0x8(r1)
000065bc	mtspr	lr,r0
000065c0	lmw	r30,0xfff8(r1)
000065c4	blr
_CFRangeMake:
000065c8	stmw	r30,0xfff8(r1)
000065cc	stwu	r1,0xffc0(r1)
000065d0	or	r30,r1,r1
000065d4	or	r9,r3,r3
000065d8	stw	r4,0x5c(r30)
000065dc	stw	r5,0x60(r30)
000065e0	lwz	r0,0x5c(r30)
000065e4	stw	r0,0x18(r30)
000065e8	lwz	r0,0x60(r30)
000065ec	stw	r0,0x1c(r30)
000065f0	lwz	r0,0x18(r30)
000065f4	lwz	r2,0x1c(r30)
000065f8	stw	r0,__mh_bundle_header(r9)
000065fc	stw	r2,0x4(r9)
00006600	or	r3,r9,r9
00006604	lwz	r1,__mh_bundle_header(r1)
00006608	lmw	r30,0xfff8(r1)
0000660c	blr
_getPathStringFromAlias:
00006610	mfspr	r0,lr
00006614	stmw	r30,0xfff8(r1)
00006618	stw	r0,0x8(r1)
0000661c	stwu	r1,0xff40(r1)
00006620	or	r30,r1,r1
00006624	bcl	20,31,0x6628
00006628	mfspr	r31,lr
0000662c	stw	r3,0xd8(r30)
00006630	stw	r4,0xdc(r30)
00006634	stw	r5,0xe0(r30)
00006638	lwz	r3,0xd8(r30)
0000663c	bl	0xfa00	; symbol stub for: _AEGetDescDataSize
00006640	or	r0,r3,r3
00006644	stw	r0,0x48(r30)
00006648	li	r0,__mh_bundle_header
0000664c	stb	r0,0x9c(r30)
00006650	li	r0,__mh_bundle_header
00006654	sth	r0,0x40(r30)
00006658	lwz	r3,0x48(r30)
0000665c	bl	0x10b40	; symbol stub for: _NewHandle
00006660	or	r0,r3,r3
00006664	stw	r0,0x44(r30)
00006668	lwz	r0,0x44(r30)
0000666c	cmpwi	cr7,r0,__mh_bundle_header
00006670	bne	cr7,0x6680
00006674	li	r0,__mh_bundle_header
00006678	stw	r0,0xa8(r30)
0000667c	b	0x67f0
00006680	lwz	r2,0x44(r30)
00006684	lwz	r0,__mh_bundle_header(r2)
00006688	lwz	r3,0xd8(r30)
0000668c	or	r4,r0,r0
00006690	lwz	r5,0x48(r30)
00006694	bl	0xf9e0	; symbol stub for: _AEGetDescData
00006698	or	r0,r3,r3
0000669c	sth	r0,0x40(r30)
000066a0	lhz	r0,0x40(r30)
000066a4	extsh	r0,r0
000066a8	stw	r0,0x3c(r30)
000066ac	lwz	r0,0x3c(r30)
000066b0	srawi	r2,r0,31
000066b4	xor	r0,r2,r0
000066b8	subf	r0,r2,r0
000066bc	neg	r0,r0
000066c0	rlwinm	r0,r0,1,31,31
000066c4	cmpwi	cr7,r0,__mh_bundle_header
000066c8	beq	cr7,0x6708
000066cc	lwz	r0,0x3c(r30)
000066d0	lis	r3,0x3f2a
000066d4	ori	r3,r3,0x3f2a
000066d8	li	r4,__mh_bundle_header
000066dc	addis	r2,r31,0x1
000066e0	addi	r5,r2,0xb670
000066e4	addis	r2,r31,0x1
000066e8	addi	r6,r2,0xbba0
000066ec	li	r7,__mh_bundle_header
000066f0	addis	r2,r31,0x1
000066f4	addi	r8,r2,0xbbbc
000066f8	li	r9,0x144
000066fc	or	r10,r0,r0
00006700	bl	0x10480	; symbol stub for: _DebugAssert
00006704	b	0x67cc
00006708	addi	r0,r30,0x4c
0000670c	addi	r2,r30,0x9c
00006710	li	r3,__mh_bundle_header
00006714	lwz	r4,0x44(r30)
00006718	or	r5,r0,r0
0000671c	or	r6,r2,r2
00006720	bl	0x105a0	; symbol stub for: _FSResolveAlias
00006724	or	r0,r3,r3
00006728	sth	r0,0x40(r30)
0000672c	lhz	r0,0x40(r30)
00006730	extsh	r0,r0
00006734	stw	r0,0x38(r30)
00006738	lwz	r0,0x38(r30)
0000673c	srawi	r2,r0,31
00006740	xor	r0,r2,r0
00006744	subf	r0,r2,r0
00006748	neg	r0,r0
0000674c	rlwinm	r0,r0,1,31,31
00006750	cmpwi	cr7,r0,__mh_bundle_header
00006754	beq	cr7,0x6794
00006758	lwz	r0,0x38(r30)
0000675c	lis	r3,0x3f2a
00006760	ori	r3,r3,0x3f2a
00006764	li	r4,__mh_bundle_header
00006768	addis	r2,r31,0x1
0000676c	addi	r5,r2,0xb670
00006770	addis	r2,r31,0x1
00006774	addi	r6,r2,0xbba0
00006778	li	r7,__mh_bundle_header
0000677c	addis	r2,r31,0x1
00006780	addi	r8,r2,0xbbbc
00006784	li	r9,0x148
00006788	or	r10,r0,r0
0000678c	bl	0x10480	; symbol stub for: _DebugAssert
00006790	b	0x67cc
00006794	addi	r0,r30,0x4c
00006798	or	r3,r0,r0
0000679c	lwz	r4,0xdc(r30)
000067a0	lwz	r5,0xe0(r30)
000067a4	bl	_getPathStringFromFSRef
000067a8	or	r0,r3,r3
000067ac	cmpwi	cr7,r0,__mh_bundle_header
000067b0	bne	cr7,0x67cc
000067b4	lwz	r0,0x44(r30)
000067b8	or	r3,r0,r0
000067bc	bl	0x104e0	; symbol stub for: _DisposeHandle
000067c0	li	r0,__mh_bundle_header
000067c4	stw	r0,0xa8(r30)
000067c8	b	0x67f0
000067cc	lwz	r0,0x44(r30)
000067d0	or	r3,r0,r0
000067d4	bl	0x104e0	; symbol stub for: _DisposeHandle
000067d8	lhz	r0,0x40(r30)
000067dc	extsh	r0,r0
000067e0	cmpwi	cr7,r0,__mh_bundle_header
000067e4	mfcr	r0
000067e8	rlwinm	r0,r0,31,31,31
000067ec	stw	r0,0xa8(r30)
000067f0	lwz	r0,0xa8(r30)
000067f4	or	r3,r0,r0
000067f8	lwz	r1,__mh_bundle_header(r1)
000067fc	lwz	r0,0x8(r1)
00006800	mtspr	lr,r0
00006804	lmw	r30,0xfff8(r1)
00006808	blr
_addCommandToMenu:
0000680c	mfspr	r0,lr
00006810	stmw	r30,0xfff8(r1)
00006814	stw	r0,0x8(r1)
00006818	stwu	r1,0xff90(r1)
0000681c	or	r30,r1,r1
00006820	bcl	20,31,0x6824
00006824	mfspr	r31,lr
00006828	stw	r3,0x88(r30)
0000682c	stw	r4,0x8c(r30)
00006830	stw	r5,0x90(r30)
00006834	stw	r6,0x94(r30)
00006838	addis	r2,r31,0x1
0000683c	addi	r2,r2,0xaec4
00006840	lwz	r0,__mh_bundle_header(r2)
00006844	lwz	r2,0x4(r2)
00006848	stw	r0,0x46(r30)
0000684c	stw	r2,0x4a(r30)
00006850	li	r0,__mh_bundle_header
00006854	sth	r0,0x44(r30)
00006858	addi	r0,r30,0x46
0000685c	li	r3,__mh_bundle_header
00006860	li	r4,__mh_bundle_header
00006864	li	r5,0x1
00006868	or	r6,r0,r0
0000686c	bl	0xf9a0	; symbol stub for: _AECreateList
00006870	or	r0,r3,r3
00006874	sth	r0,0x44(r30)
00006878	lhz	r0,0x44(r30)
0000687c	extsh	r0,r0
00006880	stw	r0,0x40(r30)
00006884	lwz	r0,0x40(r30)
00006888	srawi	r2,r0,31
0000688c	xor	r0,r2,r0
00006890	subf	r0,r2,r0
00006894	neg	r0,r0
00006898	rlwinm	r0,r0,1,31,31
0000689c	cmpwi	cr7,r0,__mh_bundle_header
000068a0	beq	cr7,0x68e0
000068a4	lwz	r0,0x40(r30)
000068a8	lis	r3,0x3f2a
000068ac	ori	r3,r3,0x3f2a
000068b0	li	r4,__mh_bundle_header
000068b4	addis	r2,r31,0x1
000068b8	addi	r5,r2,0xb474
000068bc	addis	r2,r31,0x1
000068c0	addi	r6,r2,0xb9fc
000068c4	li	r7,__mh_bundle_header
000068c8	addis	r2,r31,0x1
000068cc	addi	r8,r2,0xb9c0
000068d0	li	r9,0x15a
000068d4	or	r10,r0,r0
000068d8	bl	0x10480	; symbol stub for: _DebugAssert
000068dc	b	0x6a78
000068e0	lwz	r3,0x8c(r30)
000068e4	bl	0x11540	; symbol stub for: _strlen
000068e8	or	r0,r3,r3
000068ec	or	r2,r0,r0
000068f0	addi	r0,r30,0x46
000068f4	or	r3,r0,r0
000068f8	lis	r4,0x706e
000068fc	ori	r4,r4,0x616d
00006900	lis	r5,0x7574
00006904	ori	r5,r5,0x6638
00006908	lwz	r6,0x8c(r30)
0000690c	or	r7,r2,r2
00006910	bl	0xfae0	; symbol stub for: _AEPutParamPtr
00006914	or	r0,r3,r3
00006918	sth	r0,0x44(r30)
0000691c	lhz	r0,0x44(r30)
00006920	extsh	r0,r0
00006924	stw	r0,0x3c(r30)
00006928	lwz	r0,0x3c(r30)
0000692c	srawi	r2,r0,31
00006930	xor	r0,r2,r0
00006934	subf	r0,r2,r0
00006938	neg	r0,r0
0000693c	rlwinm	r0,r0,1,31,31
00006940	cmpwi	cr7,r0,__mh_bundle_header
00006944	beq	cr7,0x6984
00006948	lwz	r0,0x3c(r30)
0000694c	lis	r3,0x3f2a
00006950	ori	r3,r3,0x3f2a
00006954	li	r4,__mh_bundle_header
00006958	addis	r2,r31,0x1
0000695c	addi	r5,r2,0xb474
00006960	addis	r2,r31,0x1
00006964	addi	r6,r2,0xba1c
00006968	li	r7,__mh_bundle_header
0000696c	addis	r2,r31,0x1
00006970	addi	r8,r2,0xb9c0
00006974	li	r9,0x15d
00006978	or	r10,r0,r0
0000697c	bl	0x10480	; symbol stub for: _DebugAssert
00006980	b	0x6a6c
00006984	lwz	r0,0x90(r30)
00006988	li	r2,0xffff
0000698c	cmpw	cr7,r0,r2
00006990	beq	cr7,0x6a2c
00006994	addi	r0,r30,0x46
00006998	addi	r2,r30,0x90
0000699c	or	r3,r0,r0
000069a0	lis	r4,0x636d
000069a4	ori	r4,r4,0x6364
000069a8	lis	r5,0x6c6f
000069ac	ori	r5,r5,0x6e67
000069b0	or	r6,r2,r2
000069b4	li	r7,0x4
000069b8	bl	0xfae0	; symbol stub for: _AEPutParamPtr
000069bc	or	r0,r3,r3
000069c0	sth	r0,0x44(r30)
000069c4	lhz	r0,0x44(r30)
000069c8	extsh	r0,r0
000069cc	stw	r0,0x38(r30)
000069d0	lwz	r0,0x38(r30)
000069d4	srawi	r2,r0,31
000069d8	xor	r0,r2,r0
000069dc	subf	r0,r2,r0
000069e0	neg	r0,r0
000069e4	rlwinm	r0,r0,1,31,31
000069e8	cmpwi	cr7,r0,__mh_bundle_header
000069ec	beq	cr7,0x6a2c
000069f0	lwz	r0,0x38(r30)
000069f4	lis	r3,0x3f2a
000069f8	ori	r3,r3,0x3f2a
000069fc	li	r4,__mh_bundle_header
00006a00	addis	r2,r31,0x1
00006a04	addi	r5,r2,0xb474
00006a08	addis	r2,r31,0x1
00006a0c	addi	r6,r2,0xba1c
00006a10	li	r7,__mh_bundle_header
00006a14	addis	r2,r31,0x1
00006a18	addi	r8,r2,0xb9c0
00006a1c	li	r9,0x163
00006a20	or	r10,r0,r0
00006a24	bl	0x10480	; symbol stub for: _DebugAssert
00006a28	b	0x6a6c
00006a2c	lwz	r0,0x94(r30)
00006a30	cmpwi	cr7,r0,__mh_bundle_header
00006a34	beq	cr7,0x6a50
00006a38	addi	r0,r30,0x46
00006a3c	or	r3,r0,r0
00006a40	lis	r4,0x636d
00006a44	ori	r4,r4,0x7362
00006a48	lwz	r5,0x94(r30)
00006a4c	bl	0xfac0	; symbol stub for: _AEPutParamDesc
00006a50	addi	r0,r30,0x46
00006a54	lwz	r3,0x88(r30)
00006a58	li	r4,__mh_bundle_header
00006a5c	or	r5,r0,r0
00006a60	bl	0xfaa0	; symbol stub for: _AEPutDesc
00006a64	or	r0,r3,r3
00006a68	sth	r0,0x44(r30)
00006a6c	addi	r0,r30,0x46
00006a70	or	r3,r0,r0
00006a74	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00006a78	lhz	r0,0x44(r30)
00006a7c	extsh	r0,r0
00006a80	or	r3,r0,r0
00006a84	lwz	r1,__mh_bundle_header(r1)
00006a88	lwz	r0,0x8(r1)
00006a8c	mtspr	lr,r0
00006a90	lmw	r30,0xfff8(r1)
00006a94	blr
_parseMenu:
00006a98	mfspr	r0,lr
00006a9c	stmw	r30,0xfff8(r1)
00006aa0	stw	r0,0x8(r1)
00006aa4	stwu	r1,0xff80(r1)
00006aa8	or	r30,r1,r1
00006aac	bcl	20,31,0x6ab0
00006ab0	mfspr	r31,lr
00006ab4	stw	r3,0x98(r30)
00006ab8	stw	r4,0x9c(r30)
00006abc	stw	r5,0xa0(r30)
00006ac0	lwz	r0,0x98(r30)
00006ac4	stw	r0,0x58(r30)
00006ac8	li	r0,__mh_bundle_header
00006acc	stb	r0,0x48(r30)
00006ad0	li	r3,__mh_bundle_header
00006ad4	li	r4,__mh_bundle_header
00006ad8	li	r5,__mh_bundle_header
00006adc	lwz	r6,0xa0(r30)
00006ae0	bl	0xf9a0	; symbol stub for: _AECreateList
00006ae4	b	0x6d64
00006ae8	addi	r0,r30,0x58
00006aec	or	r3,r0,r0
00006af0	addis	r2,r31,0x1
00006af4	addi	r4,r2,0xb7a8
00006af8	bl	0x11580	; symbol stub for: _strsep
00006afc	or	r0,r3,r3
00006b00	stw	r0,0x54(r30)
00006b04	lwz	r0,0x58(r30)
00006b08	or	r2,r0,r0
00006b0c	lwz	r0,0x54(r30)
00006b10	subf	r0,r0,r2
00006b14	lwz	r3,0x54(r30)
00006b18	lwz	r4,0x54(r30)
00006b1c	or	r5,r0,r0
00006b20	bl	_GhettoURLDecode
00006b24	lwz	r0,0x54(r30)
00006b28	stw	r0,0x44(r30)
00006b2c	addi	r0,r30,0x58
00006b30	or	r3,r0,r0
00006b34	addis	r2,r31,0x1
00006b38	addi	r4,r2,0xb7a8
00006b3c	bl	0x11580	; symbol stub for: _strsep
00006b40	or	r0,r3,r3
00006b44	stw	r0,0x50(r30)
00006b48	addi	r0,r30,0x58
00006b4c	or	r3,r0,r0
00006b50	addis	r2,r31,0x1
00006b54	addi	r4,r2,0xb7ac
00006b58	bl	0x11580	; symbol stub for: _strsep
00006b5c	or	r0,r3,r3
00006b60	stw	r0,0x54(r30)
00006b64	lwz	r0,0x58(r30)
00006b68	cmpwi	cr7,r0,__mh_bundle_header
00006b6c	bne	cr7,0x6b84
00006b70	lwz	r3,0x54(r30)
00006b74	bl	0x11540	; symbol stub for: _strlen
00006b78	or	r0,r3,r3
00006b7c	stw	r0,0x4c(r30)
00006b80	b	0x6b98
00006b84	lwz	r0,0x58(r30)
00006b88	or	r2,r0,r0
00006b8c	lwz	r0,0x54(r30)
00006b90	subf	r0,r0,r2
00006b94	stw	r0,0x4c(r30)
00006b98	lwz	r2,0x4c(r30)
00006b9c	addi	r0,r2,0x1
00006ba0	lwz	r3,0x54(r30)
00006ba4	lwz	r4,0x54(r30)
00006ba8	or	r5,r0,r0
00006bac	bl	_GhettoURLDecode
00006bb0	lwz	r0,0x54(r30)
00006bb4	stw	r0,0x40(r30)
00006bb8	lwz	r2,0x54(r30)
00006bbc	lwz	r0,0x50(r30)
00006bc0	subf	r0,r0,r2
00006bc4	lwz	r3,0x50(r30)
00006bc8	lwz	r4,0x50(r30)
00006bcc	or	r5,r0,r0
00006bd0	bl	_GhettoURLDecode
00006bd4	or	r0,r3,r3
00006bd8	stw	r0,0x3c(r30)
00006bdc	lwz	r3,0x50(r30)
00006be0	li	r4,0x7e
00006be4	bl	0x114c0	; symbol stub for: _strchr
00006be8	or	r0,r3,r3
00006bec	cmpwi	cr7,r0,__mh_bundle_header
00006bf0	beq	cr7,0x6c5c
00006bf4	addi	r0,r30,0x5c
00006bf8	lwz	r3,0x50(r30)
00006bfc	lwz	r4,0x3c(r30)
00006c00	or	r5,r0,r0
00006c04	bl	_parseMenu
00006c08	or	r0,r3,r3
00006c0c	cmpwi	cr7,r0,__mh_bundle_header
00006c10	beq	cr7,0x6c44
00006c14	addi	r0,r30,0x5c
00006c18	lwz	r3,0xa0(r30)
00006c1c	lwz	r4,0x44(r30)
00006c20	li	r5,0xffff
00006c24	or	r6,r0,r0
00006c28	bl	_addCommandToMenu
00006c2c	li	r0,0x1
00006c30	stb	r0,0x48(r30)
00006c34	addi	r0,r30,0x5c
00006c38	or	r3,r0,r0
00006c3c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00006c40	b	0x6d64
00006c44	addi	r0,r30,0x5c
00006c48	or	r3,r0,r0
00006c4c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00006c50	li	r0,__mh_bundle_header
00006c54	stw	r0,0x6c(r30)
00006c58	b	0x6d98
00006c5c	li	r3,0xc
00006c60	bl	0x111c0	; symbol stub for: _malloc
00006c64	or	r0,r3,r3
00006c68	stw	r0,0x38(r30)
00006c6c	lwz	r0,0x38(r30)
00006c70	cmpwi	cr7,r0,__mh_bundle_header
00006c74	beq	cr7,0x6d4c
00006c78	addis	r2,r31,0x1
00006c7c	addi	r2,r2,0xcf38
00006c80	lwz	r0,__mh_bundle_header(r2)
00006c84	cmpwi	cr7,r0,__mh_bundle_header
00006c88	beq	cr7,0x6ca8
00006c8c	addis	r2,r31,0x1
00006c90	addi	r2,r2,0xcf38
00006c94	lwz	r2,__mh_bundle_header(r2)
00006c98	lwz	r2,__mh_bundle_header(r2)
00006c9c	addi	r2,r2,0x1
00006ca0	stw	r2,0x68(r30)
00006ca4	b	0x6cb0
00006ca8	li	r0,0xc9
00006cac	stw	r0,0x68(r30)
00006cb0	lwz	r2,0x38(r30)
00006cb4	lwz	r0,0x68(r30)
00006cb8	stw	r0,__mh_bundle_header(r2)
00006cbc	lwz	r3,0x40(r30)
00006cc0	bl	0x11500	; symbol stub for: _strdup
00006cc4	or	r0,r3,r3
00006cc8	lwz	r2,0x38(r30)
00006ccc	stw	r0,0x4(r2)
00006cd0	lwz	r2,0x38(r30)
00006cd4	lwz	r0,0x4(r2)
00006cd8	cmpwi	cr7,r0,__mh_bundle_header
00006cdc	bne	cr7,0x6d00
00006ce0	addis	r2,r31,0x1
00006ce4	addi	r3,r2,0xb7b0
00006ce8	bl	_dbtrace
00006cec	lwz	r3,0x38(r30)
00006cf0	bl	0x11040	; symbol stub for: _free
00006cf4	li	r0,__mh_bundle_header
00006cf8	stw	r0,0x6c(r30)
00006cfc	b	0x6d98
00006d00	addis	r2,r31,0x1
00006d04	addi	r2,r2,0xcf38
00006d08	lwz	r0,__mh_bundle_header(r2)
00006d0c	lwz	r2,0x38(r30)
00006d10	stw	r0,0x8(r2)
00006d14	addis	r2,r31,0x1
00006d18	addi	r2,r2,0xcf38
00006d1c	lwz	r0,0x38(r30)
00006d20	stw	r0,__mh_bundle_header(r2)
00006d24	lwz	r2,0x38(r30)
00006d28	lwz	r0,__mh_bundle_header(r2)
00006d2c	lwz	r3,0xa0(r30)
00006d30	lwz	r4,0x44(r30)
00006d34	or	r5,r0,r0
00006d38	li	r6,__mh_bundle_header
00006d3c	bl	_addCommandToMenu
00006d40	li	r0,0x1
00006d44	stb	r0,0x48(r30)
00006d48	b	0x6d64
00006d4c	addis	r2,r31,0x1
00006d50	addi	r3,r2,0xb7d0
00006d54	bl	_dbtrace
00006d58	li	r0,__mh_bundle_header
00006d5c	stw	r0,0x6c(r30)
00006d60	b	0x6d98
00006d64	lwz	r0,0x58(r30)
00006d68	cmpwi	cr7,r0,__mh_bundle_header
00006d6c	beq	cr7,0x6d8c
00006d70	lwz	r0,0x58(r30)
00006d74	or	r2,r0,r0
00006d78	lwz	r0,0x98(r30)
00006d7c	subf	r2,r0,r2
00006d80	lwz	r0,0x9c(r30)
00006d84	cmpw	cr7,r2,r0
00006d88	blt	cr7,0x6ae8
00006d8c	lbz	r0,0x48(r30)
00006d90	rlwinm	r0,r0,0,24,31
00006d94	stw	r0,0x6c(r30)
00006d98	lwz	r0,0x6c(r30)
00006d9c	or	r3,r0,r0
00006da0	lwz	r1,__mh_bundle_header(r1)
00006da4	lwz	r0,0x8(r1)
00006da8	mtspr	lr,r0
00006dac	lmw	r30,0xfff8(r1)
00006db0	blr
_SVNPluginExamineContextDoAE:
00006db4	mfspr	r0,lr
00006db8	stmw	r30,0xfff8(r1)
00006dbc	stw	r0,0x8(r1)
00006dc0	stwu	r1,0xf370(r1)
00006dc4	or	r30,r1,r1
00006dc8	bcl	20,31,0x6dcc
00006dcc	mfspr	r31,lr
00006dd0	stw	r3,0xca8(r30)
00006dd4	stw	r4,0xcac(r30)
00006dd8	stw	r5,0xcb0(r30)
00006ddc	lwz	r0,0xca8(r30)
00006de0	stw	r0,0x44(r30)
00006de4	lwz	r0,0x44(r30)
00006de8	cmpwi	cr7,r0,__mh_bundle_header
00006dec	beq	cr7,0x6e08
00006df0	addis	r2,r31,0x1
00006df4	addi	r2,r2,0xcb4c
00006df8	lwz	r0,__mh_bundle_header(r2)
00006dfc	xori	r0,r0,0x1
00006e00	cmpwi	cr7,r0,__mh_bundle_header
00006e04	bne	cr7,0x6e18
00006e08	bl	_ShouldLoadContextMenus
00006e0c	or	r0,r3,r3
00006e10	cmpwi	cr7,r0,__mh_bundle_header
00006e14	bne	cr7,0x6e24
00006e18	li	r0,0xffff
00006e1c	stw	r0,0xc78(r30)
00006e20	b	0x6fd0
00006e24	addi	r0,r30,0xc50
00006e28	lwz	r3,0xcac(r30)
00006e2c	or	r4,r0,r0
00006e30	bl	0xf940	; symbol stub for: _AECountItems
00006e34	or	r0,r3,r3
00006e38	sth	r0,0x3c(r30)
00006e3c	li	r0,0x1
00006e40	stw	r0,0x38(r30)
00006e44	b	0x6f18
00006e48	addi	r0,r30,0xc60
00006e4c	addi	r2,r30,0xc58
00006e50	lwz	r3,0xcac(r30)
00006e54	lwz	r4,0x38(r30)
00006e58	lis	r5,0x616c
00006e5c	ori	r5,r5,0x6973
00006e60	or	r6,r0,r0
00006e64	or	r7,r2,r2
00006e68	bl	0xfa20	; symbol stub for: _AEGetNthDesc
00006e6c	or	r0,r3,r3
00006e70	sth	r0,0x3c(r30)
00006e74	lhz	r0,0x3c(r30)
00006e78	extsh	r0,r0
00006e7c	cmpwi	cr7,r0,__mh_bundle_header
00006e80	bne	cr7,0x6f0c
00006e84	addi	r0,r30,0xc58
00006e88	addi	r2,r30,0x48
00006e8c	addi	r9,r30,0xc54
00006e90	or	r3,r0,r0
00006e94	or	r4,r2,r2
00006e98	or	r5,r9,r9
00006e9c	bl	_getPathStringFromAlias
00006ea0	or	r0,r3,r3
00006ea4	cmpwi	cr7,r0,__mh_bundle_header
00006ea8	beq	cr7,0x6f0c
00006eac	lwz	r0,0xc50(r30)
00006eb0	lwz	r2,0x38(r30)
00006eb4	cmpw	cr7,r2,r0
00006eb8	bge	cr7,0x6ee0
00006ebc	lwz	r9,0xc54(r30)
00006ec0	rlwinm	r2,r9,1,0,30
00006ec4	addi	r0,r30,0x38
00006ec8	add	r2,r2,r0
00006ecc	addi	r2,r2,0x10
00006ed0	li	r0,0x7c
00006ed4	sth	r0,__mh_bundle_header(r2)
00006ed8	addi	r0,r9,0x1
00006edc	stw	r0,0xc54(r30)
00006ee0	lwz	r2,0xc54(r30)
00006ee4	addi	r0,r30,0x48
00006ee8	addi	r9,r30,0x84c
00006eec	li	r3,0x3
00006ef0	or	r4,r0,r0
00006ef4	or	r5,r2,r2
00006ef8	or	r6,r9,r9
00006efc	li	r7,0x401
00006f00	bl	_dropboxRequest
00006f04	or	r0,r3,r3
00006f08	stw	r0,0x40(r30)
00006f0c	lwz	r2,0x38(r30)
00006f10	addi	r0,r2,0x1
00006f14	stw	r0,0x38(r30)
00006f18	lwz	r0,0xc50(r30)
00006f1c	lwz	r2,0x38(r30)
00006f20	cmpw	cr7,r2,r0
00006f24	ble	cr7,0x6e48
00006f28	lwz	r0,0x40(r30)
00006f2c	cmpwi	cr7,r0,__mh_bundle_header
00006f30	ble	cr7,0x6f98
00006f34	bl	_ClearVerbMap
00006f38	lwz	r2,0x40(r30)
00006f3c	addi	r0,r30,0x38
00006f40	add	r2,r0,r2
00006f44	li	r0,__mh_bundle_header
00006f48	stb	r0,0x814(r2)
00006f4c	addi	r0,r30,0x84c
00006f50	addi	r2,r30,0xc64
00006f54	or	r3,r0,r0
00006f58	lwz	r4,0x40(r30)
00006f5c	or	r5,r2,r2
00006f60	bl	_parseMenu
00006f64	or	r0,r3,r3
00006f68	cmpwi	cr7,r0,__mh_bundle_header
00006f6c	beq	cr7,0x6f8c
00006f70	addi	r0,r30,0xc64
00006f74	lwz	r3,0xcb0(r30)
00006f78	addis	r2,r31,0x1
00006f7c	addi	r4,r2,0xad74
00006f80	li	r5,0xffff
00006f84	or	r6,r0,r0
00006f88	bl	_addCommandToMenu
00006f8c	addi	r0,r30,0xc64
00006f90	or	r3,r0,r0
00006f94	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00006f98	lhz	r0,0x3c(r30)
00006f9c	extsh	r0,r0
00006fa0	cmpwi	cr7,r0,__mh_bundle_header
00006fa4	bne	cr7,0x6fc4
00006fa8	lwz	r0,0x44(r30)
00006fac	cmpwi	cr7,r0,__mh_bundle_header
00006fb0	beq	cr7,0x6fc4
00006fb4	lwz	r2,0x44(r30)
00006fb8	addi	r0,r2,0xc
00006fbc	or	r3,r0,r0
00006fc0	bl	_CMHelperStart
00006fc4	lhz	r0,0x3c(r30)
00006fc8	extsh	r0,r0
00006fcc	stw	r0,0xc78(r30)
00006fd0	lwz	r0,0xc78(r30)
00006fd4	or	r3,r0,r0
00006fd8	lwz	r1,__mh_bundle_header(r1)
00006fdc	lwz	r0,0x8(r1)
00006fe0	mtspr	lr,r0
00006fe4	lmw	r30,0xfff8(r1)
00006fe8	blr
_SVNPluginExamineContext:
00006fec	mfspr	r0,lr
00006ff0	stmw	r30,0xfff8(r1)
00006ff4	stw	r0,0x8(r1)
00006ff8	stwu	r1,0xffa0(r1)
00006ffc	or	r30,r1,r1
00007000	stw	r3,0x78(r30)
00007004	stw	r4,0x7c(r30)
00007008	stw	r5,0x80(r30)
0000700c	lwz	r3,0x78(r30)
00007010	lwz	r4,0x7c(r30)
00007014	lwz	r5,0x80(r30)
00007018	bl	_SVNPluginExamineContextDoAE
0000701c	or	r0,r3,r3
00007020	stw	r0,0x38(r30)
00007024	lwz	r0,0x38(r30)
00007028	or	r3,r0,r0
0000702c	lwz	r1,__mh_bundle_header(r1)
00007030	lwz	r0,0x8(r1)
00007034	mtspr	lr,r0
00007038	lmw	r30,0xfff8(r1)
0000703c	blr
_SVNPluginHandleSelectionAE:
00007040	mfspr	r0,lr
00007044	stmw	r30,0xfff8(r1)
00007048	stw	r0,0x8(r1)
0000704c	stwu	r1,0xf790(r1)
00007050	or	r30,r1,r1
00007054	bcl	20,31,0x7058
00007058	mfspr	r31,lr
0000705c	stw	r3,0x888(r30)
00007060	stw	r4,0x88c(r30)
00007064	stw	r5,0x890(r30)
00007068	li	r0,__mh_bundle_header
0000706c	sth	r0,0x44(r30)
00007070	addis	r2,r31,0x1
00007074	addi	r2,r2,0xc990
00007078	lwz	r0,__mh_bundle_header(r2)
0000707c	stw	r0,0x40(r30)
00007080	b	0x7144
00007084	lwz	r2,0x40(r30)
00007088	lwz	r2,__mh_bundle_header(r2)
0000708c	lwz	r0,0x890(r30)
00007090	cmpw	cr7,r2,r0
00007094	bne	cr7,0x7138
00007098	lwz	r2,0x40(r30)
0000709c	lwz	r0,0x4(r2)
000070a0	li	r3,__mh_bundle_header
000070a4	or	r4,r0,r0
000070a8	lis	r5,0x800
000070ac	ori	r5,r5,0x100
000070b0	bl	0xffc0	; symbol stub for: _CFStringCreateWithCString
000070b4	or	r0,r3,r3
000070b8	stw	r0,0x3c(r30)
000070bc	lwz	r0,0x3c(r30)
000070c0	cmpwi	cr7,r0,__mh_bundle_header
000070c4	beq	cr7,0x7150
000070c8	lwz	r3,0x3c(r30)
000070cc	bl	0x100a0	; symbol stub for: _CFStringGetLength
000070d0	or	r2,r3,r3
000070d4	addi	r0,r30,0x48
000070d8	or	r3,r0,r0
000070dc	li	r4,__mh_bundle_header
000070e0	or	r5,r2,r2
000070e4	bl	_CFRangeMake
000070e8	addi	r0,r30,0x50
000070ec	lwz	r3,0x3c(r30)
000070f0	lwz	r4,0x48(r30)
000070f4	lwz	r5,0x4c(r30)
000070f8	or	r6,r0,r0
000070fc	bl	0x10060	; symbol stub for: _CFStringGetCharacters
00007100	lwz	r2,0x4c(r30)
00007104	addi	r9,r30,0x50
00007108	addi	r0,r30,0x50
0000710c	li	r3,0x4
00007110	or	r4,r0,r0
00007114	or	r5,r2,r2
00007118	or	r6,r9,r9
0000711c	li	r7,0x7ff
00007120	bl	_dropboxRequest
00007124	or	r0,r3,r3
00007128	stw	r0,0x38(r30)
0000712c	lwz	r3,0x3c(r30)
00007130	bl	0xff40	; symbol stub for: _CFRelease
00007134	b	0x7150
00007138	lwz	r2,0x40(r30)
0000713c	lwz	r0,0x8(r2)
00007140	stw	r0,0x40(r30)
00007144	lwz	r0,0x40(r30)
00007148	cmpwi	cr7,r0,__mh_bundle_header
0000714c	bne	cr7,0x7084
00007150	lhz	r0,0x44(r30)
00007154	extsh	r0,r0
00007158	or	r3,r0,r0
0000715c	lwz	r1,__mh_bundle_header(r1)
00007160	lwz	r0,0x8(r1)
00007164	mtspr	lr,r0
00007168	lmw	r30,0xfff8(r1)
0000716c	blr
_DropboxIconOverlayProvider:
00007170	mfspr	r0,lr
00007174	stmw	r30,0xfff8(r1)
00007178	stw	r0,0x8(r1)
0000717c	stwu	r1,0xe830(r1)
00007180	or	r30,r1,r1
00007184	stw	r3,0x17e8(r30)
00007188	li	r0,__mh_bundle_header
0000718c	stw	r0,0x3c(r30)
00007190	addi	r0,r30,0x40
00007194	addi	r2,r30,0xfe0
00007198	lwz	r3,0x17e8(r30)
0000719c	or	r4,r0,r0
000071a0	or	r5,r2,r2
000071a4	bl	_getPathStringFromFSRef
000071a8	or	r0,r3,r3
000071ac	cmpwi	cr7,r0,__mh_bundle_header
000071b0	beq	cr7,0x7238
000071b4	lwz	r2,0xfe0(r30)
000071b8	addi	r0,r30,0x40
000071bc	addi	r9,r30,0xfe4
000071c0	li	r3,0x1
000071c4	or	r4,r0,r0
000071c8	or	r5,r2,r2
000071cc	or	r6,r9,r9
000071d0	li	r7,0x7cf
000071d4	bl	_dropboxRequest
000071d8	or	r0,r3,r3
000071dc	stw	r0,0xfe0(r30)
000071e0	lwz	r0,0xfe0(r30)
000071e4	cmpwi	cr7,r0,__mh_bundle_header
000071e8	blt	cr7,0x7238
000071ec	lwz	r2,0xfe0(r30)
000071f0	addi	r0,r30,0x38
000071f4	add	r2,r0,r2
000071f8	li	r0,__mh_bundle_header
000071fc	stb	r0,0xfac(r2)
00007200	addi	r0,r30,0xfe4
00007204	li	r3,__mh_bundle_header
00007208	or	r4,r0,r0
0000720c	lis	r5,0x800
00007210	ori	r5,r5,0x100
00007214	bl	0xffc0	; symbol stub for: _CFStringCreateWithCString
00007218	or	r0,r3,r3
0000721c	stw	r0,0x38(r30)
00007220	lwz	r3,0x38(r30)
00007224	bl	_DropboxIconOverlayIconRefFromIconFile
00007228	or	r0,r3,r3
0000722c	stw	r0,0x3c(r30)
00007230	lwz	r3,0x38(r30)
00007234	bl	0xff40	; symbol stub for: _CFRelease
00007238	lwz	r0,0x3c(r30)
0000723c	or	r3,r0,r0
00007240	lwz	r1,__mh_bundle_header(r1)
00007244	lwz	r0,0x8(r1)
00007248	mtspr	lr,r0
0000724c	lmw	r30,0xfff8(r1)
00007250	blr
_SVNPluginHandleSelection:
00007254	mfspr	r0,lr
00007258	stmw	r30,0xfff8(r1)
0000725c	stw	r0,0x8(r1)
00007260	stwu	r1,0xffb0(r1)
00007264	or	r30,r1,r1
00007268	stw	r3,0x68(r30)
0000726c	stw	r4,0x6c(r30)
00007270	stw	r5,0x70(r30)
00007274	lwz	r3,0x68(r30)
00007278	lwz	r4,0x6c(r30)
0000727c	lwz	r5,0x70(r30)
00007280	bl	_SVNPluginHandleSelectionAE
00007284	or	r0,r3,r3
00007288	or	r3,r0,r0
0000728c	lwz	r1,__mh_bundle_header(r1)
00007290	lwz	r0,0x8(r1)
00007294	mtspr	lr,r0
00007298	lmw	r30,0xfff8(r1)
0000729c	blr
_SVNPluginPostMenuCleanup:
000072a0	mfspr	r0,lr
000072a4	stmw	r30,0xfff8(r1)
000072a8	stw	r0,0x8(r1)
000072ac	stwu	r1,0xffa0(r1)
000072b0	or	r30,r1,r1
000072b4	stw	r3,0x78(r30)
000072b8	lwz	r0,0x78(r30)
000072bc	stw	r0,0x38(r30)
000072c0	lwz	r2,0x38(r30)
000072c4	addi	r0,r2,0xc
000072c8	or	r3,r0,r0
000072cc	bl	_CMHelperStop
000072d0	lwz	r1,__mh_bundle_header(r1)
000072d4	lwz	r0,0x8(r1)
000072d8	mtspr	lr,r0
000072dc	lmw	r30,0xfff8(r1)
000072e0	blr
_myrand:
000072e4	stmw	r30,0xfff8(r1)
000072e8	stwu	r1,0xffd0(r1)
000072ec	or	r30,r1,r1
000072f0	stw	r3,0x48(r30)
000072f4	lwz	r2,0x48(r30)
000072f8	lwz	r2,__mh_bundle_header(r2)
000072fc	lis	r0,0x41c6
00007300	ori	r0,r0,0x4e6d
00007304	mullw	r2,r2,r0
00007308	addi	r0,r2,0x3039
0000730c	lwz	r2,0x48(r30)
00007310	stw	r0,__mh_bundle_header(r2)
00007314	lwz	r2,0x48(r30)
00007318	lwz	r0,__mh_bundle_header(r2)
0000731c	or	r3,r0,r0
00007320	lwz	r1,__mh_bundle_header(r1)
00007324	lmw	r30,0xfff8(r1)
00007328	blr
_htole:
0000732c	stmw	r30,0xfff8(r1)
00007330	stwu	r1,0xffc0(r1)
00007334	or	r30,r1,r1
00007338	stw	r3,0x58(r30)
0000733c	lis	r0,0xcafe
00007340	ori	r0,r0,0xbabe
00007344	stw	r0,0x1c(r30)
00007348	addi	r2,r30,0x1c
0000734c	lbz	r0,__mh_bundle_header(r2)
00007350	rlwinm	r0,r0,0,24,31
00007354	cmpwi	cr7,r0,0xbe
00007358	bne	cr7,0x7368
0000735c	lwz	r0,0x58(r30)
00007360	stw	r0,0x28(r30)
00007364	b	0x73bc
00007368	li	r0,__mh_bundle_header
0000736c	stw	r0,0x18(r30)
00007370	b	0x73a8
00007374	addi	r2,r30,0x20
00007378	lwz	r0,0x18(r30)
0000737c	add	r9,r2,r0
00007380	addi	r2,r30,0x58
00007384	lwz	r0,0x18(r30)
00007388	subfic	r0,r0,0x3
0000738c	add	r2,r2,r0
00007390	lbz	r0,__mh_bundle_header(r2)
00007394	rlwinm	r0,r0,0,24,31
00007398	stb	r0,__mh_bundle_header(r9)
0000739c	lwz	r2,0x18(r30)
000073a0	addi	r0,r2,0x1
000073a4	stw	r0,0x18(r30)
000073a8	lwz	r0,0x18(r30)
000073ac	cmplwi	cr7,r0,0x3
000073b0	ble	cr7,0x7374
000073b4	lwz	r0,0x20(r30)
000073b8	stw	r0,0x28(r30)
000073bc	lwz	r0,0x28(r30)
000073c0	or	r3,r0,r0
000073c4	lwz	r1,__mh_bundle_header(r1)
000073c8	lmw	r30,0xfff8(r1)
000073cc	blr
_makeparentdirs:
000073d0	mfspr	r0,lr
000073d4	stmw	r30,0xfff8(r1)
000073d8	stw	r0,0x8(r1)
000073dc	stwu	r1,0xff40(r1)
000073e0	or	r30,r1,r1
000073e4	stw	r3,0xd8(r30)
000073e8	li	r0,__mh_bundle_header
000073ec	stw	r0,0x3c(r30)
000073f0	lwz	r0,0xd8(r30)
000073f4	stw	r0,0x38(r30)
000073f8	b	0x7444
000073fc	addi	r0,r30,0x40
00007400	lwz	r3,0x38(r30)
00007404	or	r4,r0,r0
00007408	bl	0x114a0	; symbol stub for: _stat
0000740c	or	r0,r3,r3
00007410	cmpwi	cr7,r0,__mh_bundle_header
00007414	bge	cr7,0x7444
00007418	bl	0x10d60	; symbol stub for: ___error
0000741c	or	r2,r3,r3
00007420	lwz	r0,__mh_bundle_header(r2)
00007424	cmpwi	cr7,r0,0x2
00007428	bne	cr7,0x743c
0000742c	lwz	r3,0x38(r30)
00007430	li	r4,0x1ed
00007434	bl	0x112c0	; symbol stub for: _mkdir
00007438	b	0x7444
0000743c	li	r0,0x1
00007440	stw	r0,0x3c(r30)
00007444	lwz	r3,0x38(r30)
00007448	bl	0x10f60	; symbol stub for: _dirname
0000744c	or	r0,r3,r3
00007450	stw	r0,0x38(r30)
00007454	lwz	r2,0x38(r30)
00007458	addi	r2,r2,0x1
0000745c	lbz	r0,__mh_bundle_header(r2)
00007460	extsb	r0,r0
00007464	cmpwi	cr7,r0,__mh_bundle_header
00007468	bne	cr7,0x73fc
0000746c	lwz	r0,0x3c(r30)
00007470	or	r3,r0,r0
00007474	lwz	r1,__mh_bundle_header(r1)
00007478	lwz	r0,0x8(r1)
0000747c	mtspr	lr,r0
00007480	lmw	r30,0xfff8(r1)
00007484	blr
_dbtrace_init_low:
00007488	mfspr	r0,lr
0000748c	stmw	r29,0xfff4(r1)
00007490	stw	r0,0x8(r1)
00007494	stwu	r1,0xff90(r1)
00007498	or	r30,r1,r1
0000749c	bcl	20,31,0x74a0
000074a0	mfspr	r31,lr
000074a4	stw	r3,0x88(r30)
000074a8	addis	r2,r31,0x1
000074ac	addi	r2,r2,0xbf60
000074b0	lwz	r0,__mh_bundle_header(r2)
000074b4	lwz	r9,0x4(r2)
000074b8	lwz	r11,0x8(r2)
000074bc	lwz	r2,0xc(r2)
000074c0	stw	r0,0x48(r30)
000074c4	stw	r9,0x4c(r30)
000074c8	stw	r11,0x50(r30)
000074cc	stw	r2,0x54(r30)
000074d0	addis	r2,r31,0x1
000074d4	addi	r3,r2,0xc550
000074d8	li	r4,__mh_bundle_header
000074dc	bl	0x11360	; symbol stub for: _pthread_mutex_init
000074e0	or	r0,r3,r3
000074e4	cmpwi	cr7,r0,__mh_bundle_header
000074e8	beq	cr7,0x74f8
000074ec	li	r0,0x1
000074f0	stw	r0,0x58(r30)
000074f4	b	0x7648
000074f8	lwz	r3,0x88(r30)
000074fc	bl	0x11540	; symbol stub for: _strlen
00007500	or	r0,r3,r3
00007504	stw	r0,0x40(r30)
00007508	li	r0,__mh_bundle_header
0000750c	stw	r0,0x44(r30)
00007510	b	0x7634
00007514	lwz	r0,0x44(r30)
00007518	rlwinm	r2,r0,3,0,28
0000751c	addi	r0,r30,0x38
00007520	add	r2,r2,r0
00007524	addi	r2,r2,0x10
00007528	lwz	r29,0x4(r2)
0000752c	lwz	r0,0x44(r30)
00007530	rlwinm	r2,r0,3,0,28
00007534	addi	r0,r30,0x38
00007538	add	r2,r2,r0
0000753c	addi	r2,r2,0x10
00007540	lwz	r0,__mh_bundle_header(r2)
00007544	or	r3,r0,r0
00007548	bl	0x11540	; symbol stub for: _strlen
0000754c	or	r2,r3,r3
00007550	lwz	r0,0x40(r30)
00007554	add	r2,r2,r0
00007558	addi	r0,r2,0x1
0000755c	stw	r0,0x3c(r30)
00007560	lwz	r3,0x3c(r30)
00007564	bl	0x111c0	; symbol stub for: _malloc
00007568	or	r0,r3,r3
0000756c	stw	r0,__mh_bundle_header(r29)
00007570	lwz	r0,__mh_bundle_header(r29)
00007574	cmpwi	cr7,r0,__mh_bundle_header
00007578	beq	cr7,0x75dc
0000757c	lwz	r0,0x44(r30)
00007580	rlwinm	r2,r0,3,0,28
00007584	addi	r0,r30,0x38
00007588	add	r2,r2,r0
0000758c	addi	r2,r2,0x10
00007590	lwz	r2,0x4(r2)
00007594	lwz	r9,__mh_bundle_header(r2)
00007598	lwz	r0,0x44(r30)
0000759c	rlwinm	r2,r0,3,0,28
000075a0	addi	r0,r30,0x38
000075a4	add	r2,r2,r0
000075a8	addi	r2,r2,0x10
000075ac	lwz	r0,__mh_bundle_header(r2)
000075b0	or	r3,r9,r9
000075b4	lwz	r4,0x3c(r30)
000075b8	addis	r2,r31,0x1
000075bc	addi	r5,r2,0xa5f8
000075c0	lwz	r6,0x88(r30)
000075c4	or	r7,r0,r0
000075c8	bl	0x11460	; symbol stub for: _snprintf$LDBL128
000075cc	lwz	r2,0x44(r30)
000075d0	addi	r0,r2,0x1
000075d4	stw	r0,0x44(r30)
000075d8	b	0x7634
000075dc	li	r0,__mh_bundle_header
000075e0	stw	r0,0x38(r30)
000075e4	b	0x7618
000075e8	lwz	r0,0x44(r30)
000075ec	rlwinm	r2,r0,3,0,28
000075f0	addi	r0,r30,0x38
000075f4	add	r2,r2,r0
000075f8	addi	r2,r2,0x10
000075fc	lwz	r2,0x4(r2)
00007600	lwz	r0,__mh_bundle_header(r2)
00007604	or	r3,r0,r0
00007608	bl	0x11040	; symbol stub for: _free
0000760c	lwz	r2,0x38(r30)
00007610	addi	r0,r2,0x1
00007614	stw	r0,0x38(r30)
00007618	lwz	r0,0x38(r30)
0000761c	lwz	r2,0x44(r30)
00007620	cmplw	cr7,r0,r2
00007624	blt	cr7,0x75e8
00007628	li	r0,0x1
0000762c	stw	r0,0x58(r30)
00007630	b	0x7648
00007634	lwz	r0,0x44(r30)
00007638	cmplwi	cr7,r0,0x1
0000763c	ble	cr7,0x7514
00007640	li	r0,__mh_bundle_header
00007644	stw	r0,0x58(r30)
00007648	lwz	r0,0x58(r30)
0000764c	or	r3,r0,r0
00007650	lwz	r1,__mh_bundle_header(r1)
00007654	lwz	r0,0x8(r1)
00007658	mtspr	lr,r0
0000765c	lmw	r29,0xfff4(r1)
00007660	blr
_dbtrace_init:
00007664	mfspr	r0,lr
00007668	stmw	r30,0xfff8(r1)
0000766c	stw	r0,0x8(r1)
00007670	stwu	r1,0xff80(r1)
00007674	or	r30,r1,r1
00007678	bcl	20,31,0x767c
0000767c	mfspr	r31,lr
00007680	addis	r2,r31,0x1
00007684	addi	r3,r2,0xa3ec
00007688	bl	0x110a0	; symbol stub for: _getenv
0000768c	or	r0,r3,r3
00007690	stw	r0,0x44(r30)
00007694	lwz	r0,0x44(r30)
00007698	cmpwi	cr7,r0,__mh_bundle_header
0000769c	beq	cr7,0x7760
000076a0	addis	r2,r31,0x1
000076a4	addi	r2,r2,0xac40
000076a8	lwz	r0,__mh_bundle_header(r2)
000076ac	lwz	r9,0x4(r2)
000076b0	lwz	r11,0x8(r2)
000076b4	lwz	r10,0xc(r2)
000076b8	stw	r0,0x48(r30)
000076bc	stw	r9,0x4c(r30)
000076c0	stw	r11,0x50(r30)
000076c4	stw	r10,0x54(r30)
000076c8	lwz	r0,0x10(r2)
000076cc	lhz	r9,0x14(r2)
000076d0	lbz	r2,0x16(r2)
000076d4	stw	r0,0x58(r30)
000076d8	sth	r9,0x5c(r30)
000076dc	stb	r2,0x5e(r30)
000076e0	lwz	r3,0x44(r30)
000076e4	bl	0x11540	; symbol stub for: _strlen
000076e8	or	r2,r3,r3
000076ec	addi	r0,r2,0x17
000076f0	stw	r0,0x40(r30)
000076f4	lwz	r3,0x40(r30)
000076f8	bl	0x111c0	; symbol stub for: _malloc
000076fc	or	r0,r3,r3
00007700	stw	r0,0x3c(r30)
00007704	lwz	r0,0x3c(r30)
00007708	cmpwi	cr7,r0,__mh_bundle_header
0000770c	beq	cr7,0x7754
00007710	addi	r0,r30,0x48
00007714	lwz	r3,0x3c(r30)
00007718	lwz	r4,0x40(r30)
0000771c	addis	r2,r31,0x1
00007720	addi	r5,r2,0xa41c
00007724	lwz	r6,0x44(r30)
00007728	or	r7,r0,r0
0000772c	bl	0x11460	; symbol stub for: _snprintf$LDBL128
00007730	lwz	r3,0x3c(r30)
00007734	bl	_dbtrace_init_low
00007738	or	r0,r3,r3
0000773c	stw	r0,0x38(r30)
00007740	lwz	r3,0x3c(r30)
00007744	bl	0x11040	; symbol stub for: _free
00007748	lwz	r0,0x38(r30)
0000774c	stw	r0,0x68(r30)
00007750	b	0x7768
00007754	li	r0,0xffff
00007758	stw	r0,0x68(r30)
0000775c	b	0x7768
00007760	li	r0,0xffff
00007764	stw	r0,0x68(r30)
00007768	lwz	r0,0x68(r30)
0000776c	or	r3,r0,r0
00007770	lwz	r1,__mh_bundle_header(r1)
00007774	lwz	r0,0x8(r1)
00007778	mtspr	lr,r0
0000777c	lmw	r30,0xfff8(r1)
00007780	blr
_dbtrace:
00007784	mfspr	r0,lr
00007788	stmw	r30,0xfff8(r1)
0000778c	stw	r0,0x8(r1)
00007790	stwu	r1,0xff30(r1)
00007794	or	r30,r1,r1
00007798	bcl	20,31,0x779c
0000779c	mfspr	r31,lr
000077a0	stw	r4,0xec(r30)
000077a4	stw	r5,0xf0(r30)
000077a8	stw	r6,0xf4(r30)
000077ac	stw	r7,0xf8(r30)
000077b0	stw	r8,0xfc(r30)
000077b4	stw	r9,0x100(r30)
000077b8	stw	r10,0x104(r30)
000077bc	stw	r3,0xe8(r30)
000077c0	addis	r2,r31,0x1
000077c4	addi	r3,r2,0xc254
000077c8	bl	0x11380	; symbol stub for: _pthread_mutex_lock
000077cc	or	r0,r3,r3
000077d0	cmpwi	cr7,r0,__mh_bundle_header
000077d4	bne	cr7,0x7c48
000077d8	addis	r2,r31,0x1
000077dc	addi	r2,r2,0xc284
000077e0	lwz	r0,__mh_bundle_header(r2)
000077e4	addi	r2,r30,0x58
000077e8	or	r3,r0,r0
000077ec	or	r4,r2,r2
000077f0	bl	0x114a0	; symbol stub for: _stat
000077f4	or	r0,r3,r3
000077f8	cmpwi	cr7,r0,__mh_bundle_header
000077fc	bne	cr7,0x784c
00007800	addis	r2,r31,0x1
00007804	addi	r2,r2,0xc284
00007808	lwz	r0,__mh_bundle_header(r2)
0000780c	or	r3,r0,r0
00007810	bl	0x115c0	; symbol stub for: _unlink
00007814	addis	r2,r31,0x1
00007818	addi	r2,r2,0xc284
0000781c	lwz	r0,__mh_bundle_header(r2)
00007820	cmpwi	cr7,r0,__mh_bundle_header
00007824	beq	cr7,0x784c
00007828	addis	r2,r31,0x1
0000782c	addi	r2,r2,0xc280
00007830	lwz	r0,__mh_bundle_header(r2)
00007834	or	r3,r0,r0
00007838	bl	0x10f80	; symbol stub for: _fclose
0000783c	addis	r2,r31,0x1
00007840	addi	r2,r2,0xc280
00007844	li	r0,__mh_bundle_header
00007848	stw	r0,__mh_bundle_header(r2)
0000784c	addis	r2,r31,0x1
00007850	addi	r2,r2,0xc280
00007854	lwz	r0,__mh_bundle_header(r2)
00007858	cmpwi	cr7,r0,__mh_bundle_header
0000785c	bne	cr7,0x7934
00007860	li	r3,__mh_bundle_header
00007864	bl	0x115a0	; symbol stub for: _time
00007868	or	r0,r3,r3
0000786c	stw	r0,0x40(r30)
00007870	addis	r2,r31,0x1
00007874	addi	r2,r2,0xc288
00007878	lwz	r2,__mh_bundle_header(r2)
0000787c	addi	r0,r30,0x54
00007880	or	r3,r0,r0
00007884	or	r4,r2,r2
00007888	lwz	r5,0x40(r30)
0000788c	bl	0x10e00	; symbol stub for: _asprintf$LDBL128
00007890	or	r0,r3,r3
00007894	cmpwi	cr7,r0,__mh_bundle_header
00007898	blt	cr7,0x7c3c
0000789c	lwz	r0,0x54(r30)
000078a0	or	r3,r0,r0
000078a4	bl	_makeparentdirs
000078a8	lwz	r0,0x54(r30)
000078ac	or	r3,r0,r0
000078b0	addis	r2,r31,0x1
000078b4	addi	r4,r2,0xab38
000078b8	bl	0x10fe0	; symbol stub for: _fopen
000078bc	or	r0,r3,r3
000078c0	addis	r2,r31,0x1
000078c4	addi	r2,r2,0xc280
000078c8	stw	r0,__mh_bundle_header(r2)
000078cc	lwz	r0,0x54(r30)
000078d0	or	r3,r0,r0
000078d4	bl	0x11040	; symbol stub for: _free
000078d8	addis	r2,r31,0x1
000078dc	addi	r2,r2,0xc280
000078e0	lwz	r0,__mh_bundle_header(r2)
000078e4	cmpwi	cr7,r0,__mh_bundle_header
000078e8	beq	cr7,0x7c3c
000078ec	addis	r2,r31,0x1
000078f0	addi	r2,r2,0xc290
000078f4	lwz	r0,0x40(r30)
000078f8	stw	r0,__mh_bundle_header(r2)
000078fc	addis	r2,r31,0x1
00007900	addi	r3,r2,0xc290
00007904	bl	_myrand
00007908	or	r0,r3,r3
0000790c	or	r3,r0,r0
00007910	bl	_htole
00007914	or	r0,r3,r3
00007918	addis	r2,r31,0x1
0000791c	addi	r2,r2,0xc28c
00007920	stw	r0,__mh_bundle_header(r2)
00007924	addis	r2,r31,0x1
00007928	addi	r2,r2,0xc298
0000792c	li	r0,__mh_bundle_header
00007930	stw	r0,__mh_bundle_header(r2)
00007934	addi	r0,r30,0xec
00007938	stw	r0,0x4c(r30)
0000793c	lwz	r2,0x4c(r30)
00007940	addi	r0,r30,0x50
00007944	or	r3,r0,r0
00007948	lwz	r4,0xe8(r30)
0000794c	or	r5,r2,r2
00007950	bl	0x115e0	; symbol stub for: _vasprintf$LDBL128
00007954	or	r0,r3,r3
00007958	stw	r0,0x44(r30)
0000795c	lwz	r0,0x50(r30)
00007960	stw	r0,0x48(r30)
00007964	lwz	r0,0x44(r30)
00007968	cmpwi	cr7,r0,__mh_bundle_header
0000796c	blt	cr7,0x7c34
00007970	addis	r2,r31,0x1
00007974	addi	r2,r2,0xc298
00007978	lwz	r0,__mh_bundle_header(r2)
0000797c	cmpwi	cr7,r0,__mh_bundle_header
00007980	beq	cr7,0x7b10
00007984	lwz	r9,0x44(r30)
00007988	addis	r2,r31,0x1
0000798c	addi	r2,r2,0xc298
00007990	lwz	r0,__mh_bundle_header(r2)
00007994	subfic	r0,r0,0x4
00007998	cmplw	cr7,r9,r0
0000799c	bge	cr7,0x7a10
000079a0	addis	r2,r31,0x1
000079a4	addi	r2,r2,0xc298
000079a8	lwz	r0,__mh_bundle_header(r2)
000079ac	or	r9,r0,r0
000079b0	addis	r2,r31,0x1
000079b4	addi	r0,r2,0xc294
000079b8	add	r0,r9,r0
000079bc	lwz	r2,0x50(r30)
000079c0	lwz	r9,0x44(r30)
000079c4	or	r3,r0,r0
000079c8	or	r4,r2,r2
000079cc	or	r5,r9,r9
000079d0	bl	0x11200	; symbol stub for: _memcpy
000079d4	addis	r2,r31,0x1
000079d8	addi	r2,r2,0xc298
000079dc	lwz	r2,__mh_bundle_header(r2)
000079e0	lwz	r0,0x44(r30)
000079e4	add	r0,r2,r0
000079e8	addis	r2,r31,0x1
000079ec	addi	r2,r2,0xc298
000079f0	stw	r0,__mh_bundle_header(r2)
000079f4	lwz	r2,0x50(r30)
000079f8	lwz	r0,0x44(r30)
000079fc	add	r0,r2,r0
00007a00	stw	r0,0x50(r30)
00007a04	li	r0,__mh_bundle_header
00007a08	stw	r0,0x44(r30)
00007a0c	b	0x7b10
00007a10	addis	r2,r31,0x1
00007a14	addi	r2,r2,0xc298
00007a18	lwz	r0,__mh_bundle_header(r2)
00007a1c	or	r9,r0,r0
00007a20	addis	r2,r31,0x1
00007a24	addi	r0,r2,0xc294
00007a28	add	r9,r9,r0
00007a2c	lwz	r11,0x50(r30)
00007a30	addis	r2,r31,0x1
00007a34	addi	r2,r2,0xc298
00007a38	lwz	r0,__mh_bundle_header(r2)
00007a3c	subfic	r0,r0,0x4
00007a40	or	r3,r9,r9
00007a44	or	r4,r11,r11
00007a48	or	r5,r0,r0
00007a4c	bl	0x11200	; symbol stub for: _memcpy
00007a50	addis	r2,r31,0x1
00007a54	addi	r2,r2,0xc294
00007a58	lwz	r9,__mh_bundle_header(r2)
00007a5c	addis	r2,r31,0x1
00007a60	addi	r2,r2,0xc28c
00007a64	lwz	r0,__mh_bundle_header(r2)
00007a68	xor	r0,r9,r0
00007a6c	addis	r2,r31,0x1
00007a70	addi	r2,r2,0xc294
00007a74	stw	r0,__mh_bundle_header(r2)
00007a78	addis	r2,r31,0x1
00007a7c	addi	r2,r2,0xc280
00007a80	lwz	r0,__mh_bundle_header(r2)
00007a84	addis	r2,r31,0x1
00007a88	addi	r3,r2,0xc294
00007a8c	li	r4,0x4
00007a90	li	r5,0x1
00007a94	or	r6,r0,r0
00007a98	bl	0x11080	; symbol stub for: _fwrite
00007a9c	addis	r2,r31,0x1
00007aa0	addi	r2,r2,0xc298
00007aa4	lwz	r0,__mh_bundle_header(r2)
00007aa8	subfic	r0,r0,0x4
00007aac	or	r2,r0,r0
00007ab0	lwz	r0,0x50(r30)
00007ab4	add	r0,r2,r0
00007ab8	stw	r0,0x50(r30)
00007abc	lwz	r9,0x44(r30)
00007ac0	addis	r2,r31,0x1
00007ac4	addi	r2,r2,0xc298
00007ac8	lwz	r0,__mh_bundle_header(r2)
00007acc	add	r2,r9,r0
00007ad0	addi	r0,r2,0xfffc
00007ad4	stw	r0,0x44(r30)
00007ad8	addis	r2,r31,0x1
00007adc	addi	r2,r2,0xc298
00007ae0	li	r0,__mh_bundle_header
00007ae4	stw	r0,__mh_bundle_header(r2)
00007ae8	addis	r2,r31,0x1
00007aec	addi	r3,r2,0xc290
00007af0	bl	_myrand
00007af4	or	r0,r3,r3
00007af8	or	r3,r0,r0
00007afc	bl	_htole
00007b00	or	r0,r3,r3
00007b04	addis	r2,r31,0x1
00007b08	addi	r2,r2,0xc28c
00007b0c	stw	r0,__mh_bundle_header(r2)
00007b10	lwz	r0,0x44(r30)
00007b14	cmplwi	cr7,r0,0x3
00007b18	ble	cr7,0x7bd0
00007b1c	lwz	r0,0x50(r30)
00007b20	stw	r0,0x3c(r30)
00007b24	lwz	r0,0x44(r30)
00007b28	stw	r0,0x38(r30)
00007b2c	lwz	r0,0x50(r30)
00007b30	or	r11,r0,r0
00007b34	lwz	r0,0x50(r30)
00007b38	or	r2,r0,r0
00007b3c	lwz	r9,__mh_bundle_header(r2)
00007b40	addis	r2,r31,0x1
00007b44	addi	r2,r2,0xc28c
00007b48	lwz	r0,__mh_bundle_header(r2)
00007b4c	xor	r0,r9,r0
00007b50	stw	r0,__mh_bundle_header(r11)
00007b54	lwz	r2,0x44(r30)
00007b58	addi	r0,r2,0xfffc
00007b5c	stw	r0,0x44(r30)
00007b60	lwz	r2,0x50(r30)
00007b64	addi	r0,r2,0x4
00007b68	stw	r0,0x50(r30)
00007b6c	addis	r2,r31,0x1
00007b70	addi	r3,r2,0xc290
00007b74	bl	_myrand
00007b78	or	r0,r3,r3
00007b7c	or	r3,r0,r0
00007b80	bl	_htole
00007b84	or	r0,r3,r3
00007b88	addis	r2,r31,0x1
00007b8c	addi	r2,r2,0xc28c
00007b90	stw	r0,__mh_bundle_header(r2)
00007b94	lwz	r0,0x44(r30)
00007b98	cmplwi	cr7,r0,0x3
00007b9c	bgt	cr7,0x7b2c
00007ba0	lwz	r2,0x38(r30)
00007ba4	lwz	r0,0x44(r30)
00007ba8	subf	r0,r0,r2
00007bac	or	r9,r0,r0
00007bb0	addis	r2,r31,0x1
00007bb4	addi	r2,r2,0xc280
00007bb8	lwz	r0,__mh_bundle_header(r2)
00007bbc	lwz	r3,0x3c(r30)
00007bc0	or	r4,r9,r9
00007bc4	li	r5,0x1
00007bc8	or	r6,r0,r0
00007bcc	bl	0x11080	; symbol stub for: _fwrite
00007bd0	lwz	r0,0x44(r30)
00007bd4	cmpwi	cr7,r0,__mh_bundle_header
00007bd8	beq	cr7,0x7c20
00007bdc	lwz	r0,0x50(r30)
00007be0	lwz	r9,0x44(r30)
00007be4	addis	r2,r31,0x1
00007be8	addi	r3,r2,0xc294
00007bec	or	r4,r0,r0
00007bf0	or	r5,r9,r9
00007bf4	bl	0x11200	; symbol stub for: _memcpy
00007bf8	lwz	r0,0x44(r30)
00007bfc	addis	r2,r31,0x1
00007c00	addi	r2,r2,0xc298
00007c04	stw	r0,__mh_bundle_header(r2)
00007c08	lwz	r2,0x50(r30)
00007c0c	lwz	r0,0x44(r30)
00007c10	add	r0,r2,r0
00007c14	stw	r0,0x50(r30)
00007c18	li	r0,__mh_bundle_header
00007c1c	stw	r0,0x44(r30)
00007c20	addis	r2,r31,0x1
00007c24	addi	r2,r2,0xc280
00007c28	lwz	r0,__mh_bundle_header(r2)
00007c2c	or	r3,r0,r0
00007c30	bl	0x10fc0	; symbol stub for: _fflush
00007c34	lwz	r3,0x48(r30)
00007c38	bl	0x11040	; symbol stub for: _free
00007c3c	addis	r2,r31,0x1
00007c40	addi	r3,r2,0xc254
00007c44	bl	0x113a0	; symbol stub for: _pthread_mutex_unlock
00007c48	lwz	r1,__mh_bundle_header(r1)
00007c4c	lwz	r0,0x8(r1)
00007c50	mtspr	lr,r0
00007c54	lmw	r30,0xfff8(r1)
00007c58	blr
_myMD5:
00007c5c	mfspr	r0,lr
00007c60	stmw	r30,0xfff8(r1)
00007c64	stw	r0,0x8(r1)
00007c68	stwu	r1,0xff50(r1)
00007c6c	or	r30,r1,r1
00007c70	stw	r3,0xc8(r30)
00007c74	stw	r4,0xcc(r30)
00007c78	stw	r5,0xd0(r30)
00007c7c	addi	r0,r30,0x38
00007c80	or	r3,r0,r0
00007c84	bl	0xfba0	; symbol stub for: _CC_MD5_Init
00007c88	addi	r0,r30,0x38
00007c8c	or	r3,r0,r0
00007c90	lwz	r4,0xc8(r30)
00007c94	lwz	r5,0xcc(r30)
00007c98	bl	0xfbc0	; symbol stub for: _CC_MD5_Update
00007c9c	lwz	r3,0xd0(r30)
00007ca0	addi	r0,r30,0x38
00007ca4	or	r4,r0,r0
00007ca8	bl	0xfb80	; symbol stub for: _CC_MD5_Final
00007cac	lwz	r0,0xd0(r30)
00007cb0	or	r3,r0,r0
00007cb4	lwz	r1,__mh_bundle_header(r1)
00007cb8	lwz	r0,0x8(r1)
00007cbc	mtspr	lr,r0
00007cc0	lmw	r30,0xfff8(r1)
00007cc4	blr
_DBLog:
00007cc8	mfspr	r0,lr
00007ccc	stmw	r30,0xfff8(r1)
00007cd0	stw	r0,0x8(r1)
00007cd4	stwu	r1,0xff80(r1)
00007cd8	or	r30,r1,r1
00007cdc	bcl	20,31,0x7ce0
00007ce0	mfspr	r31,lr
00007ce4	stw	r4,0x9c(r30)
00007ce8	stw	r5,0xa0(r30)
00007cec	stw	r6,0xa4(r30)
00007cf0	stw	r7,0xa8(r30)
00007cf4	stw	r8,0xac(r30)
00007cf8	stw	r9,0xb0(r30)
00007cfc	stw	r10,0xb4(r30)
00007d00	stw	r3,0x98(r30)
00007d04	addi	r0,r30,0x9c
00007d08	stw	r0,0x48(r30)
00007d0c	addis	r2,r31,0x1
00007d10	addi	r2,r2,0xc34c
00007d14	lwz	r0,__mh_bundle_header(r2)
00007d18	or	r9,r0,r0
00007d1c	addis	r2,r31,0x1
00007d20	addi	r2,r2,0xc348
00007d24	lwz	r0,__mh_bundle_header(r2)
00007d28	or	r3,r9,r9
00007d2c	or	r4,r0,r0
00007d30	bla	0xfffeff00
00007d34	or	r0,r3,r3
00007d38	or	r9,r0,r0
00007d3c	addis	r2,r31,0x1
00007d40	addi	r2,r2,0xc344
00007d44	lwz	r0,__mh_bundle_header(r2)
00007d48	lwz	r2,0x48(r30)
00007d4c	or	r3,r9,r9
00007d50	or	r4,r0,r0
00007d54	lwz	r5,0x98(r30)
00007d58	or	r6,r2,r2
00007d5c	bla	0xfffeff00
00007d60	or	r0,r3,r3
00007d64	or	r9,r0,r0
00007d68	addis	r2,r31,0x1
00007d6c	addi	r2,r2,0xc340
00007d70	lwz	r0,__mh_bundle_header(r2)
00007d74	or	r3,r9,r9
00007d78	or	r4,r0,r0
00007d7c	bla	0xfffeff00
00007d80	or	r0,r3,r3
00007d84	stw	r0,0x44(r30)
00007d88	addis	r2,r31,0x1
00007d8c	addi	r2,r2,0xbc4c
00007d90	lwz	r2,__mh_bundle_header(r2)
00007d94	li	r0,0xffff
00007d98	cmpw	cr7,r2,r0
00007d9c	bne	cr7,0x7e28
00007da0	addis	r2,r31,0x1
00007da4	addi	r3,r2,0xa5f8
00007da8	bl	0x110a0	; symbol stub for: _getenv
00007dac	or	r0,r3,r3
00007db0	stw	r0,0x38(r30)
00007db4	lwz	r0,0x38(r30)
00007db8	cmpwi	cr7,r0,__mh_bundle_header
00007dbc	beq	cr7,0x7e18
00007dc0	lwz	r3,0x38(r30)
00007dc4	bl	0x11540	; symbol stub for: _strlen
00007dc8	or	r0,r3,r3
00007dcc	addi	r2,r30,0x4c
00007dd0	lwz	r3,0x38(r30)
00007dd4	or	r4,r0,r0
00007dd8	or	r5,r2,r2
00007ddc	bl	_myMD5
00007de0	addi	r0,r30,0x4c
00007de4	or	r3,r0,r0
00007de8	addis	r2,r31,0x1
00007dec	addi	r4,r2,0xbc3c
00007df0	li	r5,0x10
00007df4	bl	0x111e0	; symbol stub for: _memcmp
00007df8	or	r0,r3,r3
00007dfc	cmpwi	cr7,r0,__mh_bundle_header
00007e00	mfcr	r0
00007e04	rlwinm	r0,r0,31,31,31
00007e08	addis	r2,r31,0x1
00007e0c	addi	r2,r2,0xbc4c
00007e10	stw	r0,__mh_bundle_header(r2)
00007e14	b	0x7e28
00007e18	addis	r2,r31,0x1
00007e1c	addi	r2,r2,0xbc4c
00007e20	li	r0,__mh_bundle_header
00007e24	stw	r0,__mh_bundle_header(r2)
00007e28	addis	r2,r31,0x1
00007e2c	addi	r2,r2,0xbc4c
00007e30	lwz	r0,__mh_bundle_header(r2)
00007e34	cmpwi	cr7,r0,__mh_bundle_header
00007e38	beq	cr7,0x7e50
00007e3c	addis	r2,r31,0x1
00007e40	addi	r0,r2,0xb7d0
00007e44	or	r3,r0,r0
00007e48	lwz	r4,0x44(r30)
00007e4c	bl	0x10b20	; symbol stub for: _NSLog
00007e50	addis	r2,r31,0x1
00007e54	addi	r2,r2,0xc350
00007e58	lwz	r0,__mh_bundle_header(r2)
00007e5c	addis	r2,r31,0x1
00007e60	addi	r2,r2,0xc33c
00007e64	lwz	r9,__mh_bundle_header(r2)
00007e68	addis	r2,r31,0x1
00007e6c	addi	r2,r2,0x99f0
00007e70	lfd	f0,__mh_bundle_header(r2)
00007e74	or	r3,r0,r0
00007e78	or	r4,r9,r9
00007e7c	fmr	f1,f0
00007e80	bla	0xfffeff00
00007e84	or	r0,r3,r3
00007e88	or	r9,r0,r0
00007e8c	addis	r2,r31,0x1
00007e90	addi	r2,r2,0xc340
00007e94	lwz	r0,__mh_bundle_header(r2)
00007e98	or	r3,r9,r9
00007e9c	or	r4,r0,r0
00007ea0	bla	0xfffeff00
00007ea4	or	r0,r3,r3
00007ea8	stw	r0,0x40(r30)
00007eac	addis	r2,r31,0x1
00007eb0	addi	r2,r2,0xc34c
00007eb4	lwz	r0,__mh_bundle_header(r2)
00007eb8	or	r11,r0,r0
00007ebc	addis	r2,r31,0x1
00007ec0	addi	r2,r2,0xc338
00007ec4	lwz	r9,__mh_bundle_header(r2)
00007ec8	addis	r2,r31,0x1
00007ecc	addi	r0,r2,0xb7e0
00007ed0	or	r3,r11,r11
00007ed4	or	r4,r9,r9
00007ed8	or	r5,r0,r0
00007edc	lwz	r6,0x40(r30)
00007ee0	lwz	r7,0x44(r30)
00007ee4	bla	0xfffeff00
00007ee8	or	r0,r3,r3
00007eec	or	r9,r0,r0
00007ef0	addis	r2,r31,0x1
00007ef4	addi	r2,r2,0xc340
00007ef8	lwz	r0,__mh_bundle_header(r2)
00007efc	or	r3,r9,r9
00007f00	or	r4,r0,r0
00007f04	bla	0xfffeff00
00007f08	or	r0,r3,r3
00007f0c	stw	r0,0x3c(r30)
00007f10	lwz	r9,0x3c(r30)
00007f14	addis	r2,r31,0x1
00007f18	addi	r2,r2,0xc334
00007f1c	lwz	r0,__mh_bundle_header(r2)
00007f20	or	r3,r9,r9
00007f24	or	r4,r0,r0
00007f28	li	r5,0x4
00007f2c	bla	0xfffeff00
00007f30	or	r0,r3,r3
00007f34	or	r3,r0,r0
00007f38	bl	_dbtrace
00007f3c	lwz	r9,0x40(r30)
00007f40	addis	r2,r31,0x1
00007f44	addi	r2,r2,_EatMenuDescriptorWithExtremePrejudice
00007f48	lwz	r0,__mh_bundle_header(r2)
00007f4c	or	r3,r9,r9
00007f50	or	r4,r0,r0
00007f54	bla	0xfffeff00
00007f58	lwz	r9,0x44(r30)
00007f5c	addis	r2,r31,0x1
00007f60	addi	r2,r2,_EatMenuDescriptorWithExtremePrejudice
00007f64	lwz	r0,__mh_bundle_header(r2)
00007f68	or	r3,r9,r9
00007f6c	or	r4,r0,r0
00007f70	bla	0xfffeff00
00007f74	lwz	r9,0x3c(r30)
00007f78	addis	r2,r31,0x1
00007f7c	addi	r2,r2,_EatMenuDescriptorWithExtremePrejudice
00007f80	lwz	r0,__mh_bundle_header(r2)
00007f84	or	r3,r9,r9
00007f88	or	r4,r0,r0
00007f8c	bla	0xfffeff00
00007f90	lwz	r1,__mh_bundle_header(r1)
00007f94	lwz	r0,0x8(r1)
00007f98	mtspr	lr,r0
00007f9c	lmw	r30,0xfff8(r1)
00007fa0	blr
_help_reverse_class:
00007fa4	mfspr	r0,lr
00007fa8	stmw	r28,0xfff0(r1)
00007fac	stw	r0,0x8(r1)
00007fb0	stwu	r1,0xe520(r1)
00007fb4	or	r30,r1,r1
00007fb8	bcl	20,31,0x7fbc
00007fbc	mfspr	r31,lr
00007fc0	stw	r3,0x1af8(r30)
00007fc4	or	r0,r4,r4
00007fc8	stb	r0,0x1afc(r30)
00007fcc	lwz	r0,0x1af8(r30)
00007fd0	cmpwi	cr7,r0,__mh_bundle_header
00007fd4	bne	cr7,0x7fec
00007fd8	addis	r2,r31,0x1
00007fdc	addi	r0,r2,0xb514
00007fe0	or	r3,r0,r0
00007fe4	bl	0x10b20	; symbol stub for: _NSLog
00007fe8	b	0x88cc
00007fec	addi	r0,r30,0xc0
00007ff0	lwz	r3,0x1af8(r30)
00007ff4	or	r4,r0,r0
00007ff8	bl	0x10e80	; symbol stub for: _class_copyIvarList
00007ffc	or	r0,r3,r3
00008000	stw	r0,0xbc(r30)
00008004	addis	r2,r31,0x1
00008008	addi	r2,r2,0xc078
0000800c	lwz	r0,__mh_bundle_header(r2)
00008010	or	r9,r0,r0
00008014	addis	r2,r31,0x1
00008018	addi	r2,r2,0xc050
0000801c	lwz	r0,__mh_bundle_header(r2)
00008020	lwz	r2,0xc0(r30)
00008024	or	r3,r9,r9
00008028	or	r4,r0,r0
0000802c	or	r5,r2,r2
00008030	bla	0xfffeff00
00008034	or	r0,r3,r3
00008038	stw	r0,0xb8(r30)
0000803c	li	r0,__mh_bundle_header
00008040	stw	r0,0x94(r30)
00008044	b	0x80d0
00008048	lwz	r0,0x94(r30)
0000804c	rlwinm	r0,r0,2,0,29
00008050	or	r2,r0,r0
00008054	lwz	r0,0xbc(r30)
00008058	add	r2,r2,r0
0000805c	lwz	r0,__mh_bundle_header(r2)
00008060	or	r3,r0,r0
00008064	bl	0x11160	; symbol stub for: _ivar_getName
00008068	or	r0,r3,r3
0000806c	stw	r0,0x90(r30)
00008070	lwz	r29,0xb8(r30)
00008074	addis	r2,r31,0x1
00008078	addi	r2,r2,0xc048
0000807c	lwz	r28,__mh_bundle_header(r2)
00008080	addis	r2,r31,0x1
00008084	addi	r2,r2,0xc070
00008088	lwz	r0,__mh_bundle_header(r2)
0000808c	or	r9,r0,r0
00008090	addis	r2,r31,0x1
00008094	addi	r2,r2,0xc04c
00008098	lwz	r0,__mh_bundle_header(r2)
0000809c	or	r3,r9,r9
000080a0	or	r4,r0,r0
000080a4	lwz	r5,0x90(r30)
000080a8	li	r6,0x4
000080ac	bla	0xfffeff00
000080b0	or	r0,r3,r3
000080b4	or	r3,r29,r29
000080b8	or	r4,r28,r28
000080bc	or	r5,r0,r0
000080c0	bla	0xfffeff00
000080c4	lwz	r2,0x94(r30)
000080c8	addi	r0,r2,0x1
000080cc	stw	r0,0x94(r30)
000080d0	lwz	r0,0x94(r30)
000080d4	lwz	r2,0xc0(r30)
000080d8	cmplw	cr7,r0,r2
000080dc	blt	cr7,0x8048
000080e0	lwz	r3,0xbc(r30)
000080e4	bl	0x11040	; symbol stub for: _free
000080e8	addi	r0,r30,0xc0
000080ec	lwz	r3,0x1af8(r30)
000080f0	or	r4,r0,r0
000080f4	bl	0x10ec0	; symbol stub for: _class_copyPropertyList
000080f8	or	r0,r3,r3
000080fc	stw	r0,0xb4(r30)
00008100	addis	r2,r31,0x1
00008104	addi	r2,r2,0xc078
00008108	lwz	r0,__mh_bundle_header(r2)
0000810c	or	r9,r0,r0
00008110	addis	r2,r31,0x1
00008114	addi	r2,r2,0xc050
00008118	lwz	r0,__mh_bundle_header(r2)
0000811c	lwz	r2,0xc0(r30)
00008120	or	r3,r9,r9
00008124	or	r4,r0,r0
00008128	or	r5,r2,r2
0000812c	bla	0xfffeff00
00008130	or	r0,r3,r3
00008134	stw	r0,0xb0(r30)
00008138	li	r0,__mh_bundle_header
0000813c	stw	r0,0x8c(r30)
00008140	b	0x81cc
00008144	lwz	r0,0x8c(r30)
00008148	rlwinm	r0,r0,2,0,29
0000814c	or	r2,r0,r0
00008150	lwz	r0,0xb4(r30)
00008154	add	r2,r2,r0
00008158	lwz	r0,__mh_bundle_header(r2)
0000815c	or	r3,r0,r0
00008160	bl	0x11340	; symbol stub for: _property_getName
00008164	or	r0,r3,r3
00008168	stw	r0,0x88(r30)
0000816c	lwz	r29,0xb0(r30)
00008170	addis	r2,r31,0x1
00008174	addi	r2,r2,0xc048
00008178	lwz	r28,__mh_bundle_header(r2)
0000817c	addis	r2,r31,0x1
00008180	addi	r2,r2,0xc070
00008184	lwz	r0,__mh_bundle_header(r2)
00008188	or	r9,r0,r0
0000818c	addis	r2,r31,0x1
00008190	addi	r2,r2,0xc04c
00008194	lwz	r0,__mh_bundle_header(r2)
00008198	or	r3,r9,r9
0000819c	or	r4,r0,r0
000081a0	lwz	r5,0x88(r30)
000081a4	li	r6,0x4
000081a8	bla	0xfffeff00
000081ac	or	r0,r3,r3
000081b0	or	r3,r29,r29
000081b4	or	r4,r28,r28
000081b8	or	r5,r0,r0
000081bc	bla	0xfffeff00
000081c0	lwz	r2,0x8c(r30)
000081c4	addi	r0,r2,0x1
000081c8	stw	r0,0x8c(r30)
000081cc	lwz	r0,0x8c(r30)
000081d0	lwz	r2,0xc0(r30)
000081d4	cmplw	cr7,r0,r2
000081d8	blt	cr7,0x8144
000081dc	lwz	r3,0xb4(r30)
000081e0	bl	0x11040	; symbol stub for: _free
000081e4	addi	r0,r30,0xc0
000081e8	lwz	r3,0x1af8(r30)
000081ec	or	r4,r0,r0
000081f0	bl	0x10ea0	; symbol stub for: _class_copyMethodList
000081f4	or	r0,r3,r3
000081f8	stw	r0,0xac(r30)
000081fc	addis	r2,r31,0x1
00008200	addi	r2,r2,0xc078
00008204	lwz	r0,__mh_bundle_header(r2)
00008208	or	r9,r0,r0
0000820c	addis	r2,r31,0x1
00008210	addi	r2,r2,0xc050
00008214	lwz	r0,__mh_bundle_header(r2)
00008218	lwz	r2,0xc0(r30)
0000821c	or	r3,r9,r9
00008220	or	r4,r0,r0
00008224	or	r5,r2,r2
00008228	bla	0xfffeff00
0000822c	or	r0,r3,r3
00008230	stw	r0,0xa8(r30)
00008234	li	r0,__mh_bundle_header
00008238	stw	r0,0x84(r30)
0000823c	b	0x84c4
00008240	lbz	r0,0x1afc(r30)
00008244	extsb	r0,r0
00008248	cmpwi	cr7,r0,__mh_bundle_header
0000824c	bne	cr7,0x82e0
00008250	lwz	r0,0x84(r30)
00008254	rlwinm	r0,r0,2,0,29
00008258	or	r2,r0,r0
0000825c	lwz	r0,0xac(r30)
00008260	add	r2,r2,r0
00008264	lwz	r0,__mh_bundle_header(r2)
00008268	or	r3,r0,r0
0000826c	bl	0x11260	; symbol stub for: _method_getName
00008270	or	r0,r3,r3
00008274	stw	r0,0x80(r30)
00008278	lwz	r3,0x80(r30)
0000827c	bl	0x11400	; symbol stub for: _sel_getName
00008280	or	r0,r3,r3
00008284	stw	r0,0x7c(r30)
00008288	lwz	r29,0xa8(r30)
0000828c	addis	r2,r31,0x1
00008290	addi	r2,r2,0xc048
00008294	lwz	r28,__mh_bundle_header(r2)
00008298	addis	r2,r31,0x1
0000829c	addi	r2,r2,0xc070
000082a0	lwz	r0,__mh_bundle_header(r2)
000082a4	or	r9,r0,r0
000082a8	addis	r2,r31,0x1
000082ac	addi	r2,r2,0xc04c
000082b0	lwz	r0,__mh_bundle_header(r2)
000082b4	or	r3,r9,r9
000082b8	or	r4,r0,r0
000082bc	lwz	r5,0x7c(r30)
000082c0	li	r6,0x4
000082c4	bla	0xfffeff00
000082c8	or	r0,r3,r3
000082cc	or	r3,r29,r29
000082d0	or	r4,r28,r28
000082d4	or	r5,r0,r0
000082d8	bla	0xfffeff00
000082dc	b	0x84b8
000082e0	addi	r0,r30,0xac4
000082e4	li	r2,0x1000
000082e8	or	r3,r0,r0
000082ec	li	r4,__mh_bundle_header
000082f0	or	r5,r2,r2
000082f4	bl	0x11220	; symbol stub for: _memset
000082f8	addi	r0,r30,0xc4
000082fc	li	r2,0x200
00008300	or	r3,r0,r0
00008304	li	r4,__mh_bundle_header
00008308	or	r5,r2,r2
0000830c	bl	0x11220	; symbol stub for: _memset
00008310	addi	r0,r30,0x2c4
00008314	li	r2,0x800
00008318	or	r3,r0,r0
0000831c	li	r4,__mh_bundle_header
00008320	or	r5,r2,r2
00008324	bl	0x11220	; symbol stub for: _memset
00008328	lwz	r0,0x84(r30)
0000832c	rlwinm	r0,r0,2,0,29
00008330	or	r2,r0,r0
00008334	lwz	r0,0xac(r30)
00008338	add	r2,r2,r0
0000833c	lwz	r0,__mh_bundle_header(r2)
00008340	or	r3,r0,r0
00008344	bl	0x11260	; symbol stub for: _method_getName
00008348	or	r0,r3,r3
0000834c	stw	r0,0x74(r30)
00008350	lwz	r3,0x74(r30)
00008354	bl	0x11400	; symbol stub for: _sel_getName
00008358	or	r0,r3,r3
0000835c	stw	r0,0x70(r30)
00008360	lwz	r0,0x84(r30)
00008364	rlwinm	r0,r0,2,0,29
00008368	or	r2,r0,r0
0000836c	lwz	r0,0xac(r30)
00008370	add	r2,r2,r0
00008374	lwz	r0,__mh_bundle_header(r2)
00008378	addi	r2,r30,0xc4
0000837c	or	r3,r0,r0
00008380	or	r4,r2,r2
00008384	li	r5,0x200
00008388	bl	0x112a0	; symbol stub for: _method_getReturnType
0000838c	lwz	r0,0x84(r30)
00008390	rlwinm	r0,r0,2,0,29
00008394	or	r2,r0,r0
00008398	lwz	r0,0xac(r30)
0000839c	add	r2,r2,r0
000083a0	lwz	r0,__mh_bundle_header(r2)
000083a4	or	r3,r0,r0
000083a8	bl	0x11280	; symbol stub for: _method_getNumberOfArguments
000083ac	or	r0,r3,r3
000083b0	stw	r0,0x78(r30)
000083b4	li	r0,__mh_bundle_header
000083b8	stw	r0,0x6c(r30)
000083bc	b	0x8424
000083c0	lwz	r0,0x84(r30)
000083c4	rlwinm	r0,r0,2,0,29
000083c8	or	r2,r0,r0
000083cc	lwz	r0,0xac(r30)
000083d0	add	r2,r2,r0
000083d4	lwz	r0,__mh_bundle_header(r2)
000083d8	lwz	r2,0x6c(r30)
000083dc	or	r3,r0,r0
000083e0	or	r4,r2,r2
000083e4	bl	0x11240	; symbol stub for: _method_copyArgumentType
000083e8	or	r0,r3,r3
000083ec	stw	r0,0x68(r30)
000083f0	lwz	r0,0x68(r30)
000083f4	cmpwi	cr7,r0,__mh_bundle_header
000083f8	beq	cr7,0x8418
000083fc	addi	r0,r30,0x2c4
00008400	or	r3,r0,r0
00008404	lwz	r4,0x68(r30)
00008408	li	r5,0x800
0000840c	bl	0x11560	; symbol stub for: _strncat
00008410	lwz	r3,0x68(r30)
00008414	bl	0x11040	; symbol stub for: _free
00008418	lwz	r2,0x6c(r30)
0000841c	addi	r0,r2,0x1
00008420	stw	r0,0x6c(r30)
00008424	lwz	r0,0x6c(r30)
00008428	lwz	r2,0x78(r30)
0000842c	cmplw	cr7,r0,r2
00008430	blt	cr7,0x83c0
00008434	addi	r0,r30,0xac4
00008438	addi	r9,r30,0xc4
0000843c	addi	r11,r30,0x2c4
00008440	or	r3,r0,r0
00008444	li	r4,0x1000
00008448	addis	r2,r31,0x1
0000844c	addi	r5,r2,0xa34c
00008450	or	r6,r9,r9
00008454	lwz	r7,0x70(r30)
00008458	or	r8,r11,r11
0000845c	bl	0x11460	; symbol stub for: _snprintf$LDBL128
00008460	lwz	r29,0xa8(r30)
00008464	addis	r2,r31,0x1
00008468	addi	r2,r2,0xc048
0000846c	lwz	r28,__mh_bundle_header(r2)
00008470	addis	r2,r31,0x1
00008474	addi	r2,r2,0xc070
00008478	lwz	r0,__mh_bundle_header(r2)
0000847c	or	r9,r0,r0
00008480	addis	r2,r31,0x1
00008484	addi	r2,r2,0xc04c
00008488	lwz	r0,__mh_bundle_header(r2)
0000848c	addi	r2,r30,0xac4
00008490	or	r3,r9,r9
00008494	or	r4,r0,r0
00008498	or	r5,r2,r2
0000849c	li	r6,0x4
000084a0	bla	0xfffeff00
000084a4	or	r0,r3,r3
000084a8	or	r3,r29,r29
000084ac	or	r4,r28,r28
000084b0	or	r5,r0,r0
000084b4	bla	0xfffeff00
000084b8	lwz	r2,0x84(r30)
000084bc	addi	r0,r2,0x1
000084c0	stw	r0,0x84(r30)
000084c4	lwz	r0,0x84(r30)
000084c8	lwz	r2,0xc0(r30)
000084cc	cmplw	cr7,r0,r2
000084d0	blt	cr7,0x8240
000084d4	lwz	r3,0xac(r30)
000084d8	bl	0x11040	; symbol stub for: _free
000084dc	lwz	r0,0x1af8(r30)
000084e0	or	r3,r0,r0
000084e4	bl	0x11300	; symbol stub for: _object_getClass
000084e8	or	r0,r3,r3
000084ec	addi	r2,r30,0xc0
000084f0	or	r3,r0,r0
000084f4	or	r4,r2,r2
000084f8	bl	0x10ea0	; symbol stub for: _class_copyMethodList
000084fc	or	r0,r3,r3
00008500	stw	r0,0xa4(r30)
00008504	addis	r2,r31,0x1
00008508	addi	r2,r2,0xc078
0000850c	lwz	r0,__mh_bundle_header(r2)
00008510	or	r9,r0,r0
00008514	addis	r2,r31,0x1
00008518	addi	r2,r2,0xc050
0000851c	lwz	r0,__mh_bundle_header(r2)
00008520	lwz	r2,0xc0(r30)
00008524	or	r3,r9,r9
00008528	or	r4,r0,r0
0000852c	or	r5,r2,r2
00008530	bla	0xfffeff00
00008534	or	r0,r3,r3
00008538	stw	r0,0xa0(r30)
0000853c	li	r0,__mh_bundle_header
00008540	stw	r0,0x64(r30)
00008544	b	0x87cc
00008548	lbz	r0,0x1afc(r30)
0000854c	extsb	r0,r0
00008550	cmpwi	cr7,r0,__mh_bundle_header
00008554	bne	cr7,0x85e8
00008558	lwz	r0,0x64(r30)
0000855c	rlwinm	r0,r0,2,0,29
00008560	or	r2,r0,r0
00008564	lwz	r0,0xa4(r30)
00008568	add	r2,r2,r0
0000856c	lwz	r0,__mh_bundle_header(r2)
00008570	or	r3,r0,r0
00008574	bl	0x11260	; symbol stub for: _method_getName
00008578	or	r0,r3,r3
0000857c	stw	r0,0x60(r30)
00008580	lwz	r3,0x60(r30)
00008584	bl	0x11400	; symbol stub for: _sel_getName
00008588	or	r0,r3,r3
0000858c	stw	r0,0x5c(r30)
00008590	lwz	r29,0xa0(r30)
00008594	addis	r2,r31,0x1
00008598	addi	r2,r2,0xc048
0000859c	lwz	r28,__mh_bundle_header(r2)
000085a0	addis	r2,r31,0x1
000085a4	addi	r2,r2,0xc070
000085a8	lwz	r0,__mh_bundle_header(r2)
000085ac	or	r9,r0,r0
000085b0	addis	r2,r31,0x1
000085b4	addi	r2,r2,0xc04c
000085b8	lwz	r0,__mh_bundle_header(r2)
000085bc	or	r3,r9,r9
000085c0	or	r4,r0,r0
000085c4	lwz	r5,0x5c(r30)
000085c8	li	r6,0x4
000085cc	bla	0xfffeff00
000085d0	or	r0,r3,r3
000085d4	or	r3,r29,r29
000085d8	or	r4,r28,r28
000085dc	or	r5,r0,r0
000085e0	bla	0xfffeff00
000085e4	b	0x87c0
000085e8	addi	r0,r30,0xac4
000085ec	li	r2,0x1000
000085f0	or	r3,r0,r0
000085f4	li	r4,__mh_bundle_header
000085f8	or	r5,r2,r2
000085fc	bl	0x11220	; symbol stub for: _memset
00008600	addi	r0,r30,0xc4
00008604	li	r2,0x200
00008608	or	r3,r0,r0
0000860c	li	r4,__mh_bundle_header
00008610	or	r5,r2,r2
00008614	bl	0x11220	; symbol stub for: _memset
00008618	addi	r0,r30,0x2c4
0000861c	li	r2,0x800
00008620	or	r3,r0,r0
00008624	li	r4,__mh_bundle_header
00008628	or	r5,r2,r2
0000862c	bl	0x11220	; symbol stub for: _memset
00008630	lwz	r0,0x64(r30)
00008634	rlwinm	r0,r0,2,0,29
00008638	or	r2,r0,r0
0000863c	lwz	r0,0xa4(r30)
00008640	add	r2,r2,r0
00008644	lwz	r0,__mh_bundle_header(r2)
00008648	or	r3,r0,r0
0000864c	bl	0x11260	; symbol stub for: _method_getName
00008650	or	r0,r3,r3
00008654	stw	r0,0x54(r30)
00008658	lwz	r3,0x54(r30)
0000865c	bl	0x11400	; symbol stub for: _sel_getName
00008660	or	r0,r3,r3
00008664	stw	r0,0x50(r30)
00008668	lwz	r0,0x64(r30)
0000866c	rlwinm	r0,r0,2,0,29
00008670	or	r2,r0,r0
00008674	lwz	r0,0xa4(r30)
00008678	add	r2,r2,r0
0000867c	lwz	r0,__mh_bundle_header(r2)
00008680	addi	r2,r30,0xc4
00008684	or	r3,r0,r0
00008688	or	r4,r2,r2
0000868c	li	r5,0x200
00008690	bl	0x112a0	; symbol stub for: _method_getReturnType
00008694	lwz	r0,0x64(r30)
00008698	rlwinm	r0,r0,2,0,29
0000869c	or	r2,r0,r0
000086a0	lwz	r0,0xa4(r30)
000086a4	add	r2,r2,r0
000086a8	lwz	r0,__mh_bundle_header(r2)
000086ac	or	r3,r0,r0
000086b0	bl	0x11280	; symbol stub for: _method_getNumberOfArguments
000086b4	or	r0,r3,r3
000086b8	stw	r0,0x58(r30)
000086bc	li	r0,__mh_bundle_header
000086c0	stw	r0,0x4c(r30)
000086c4	b	0x872c
000086c8	lwz	r0,0x64(r30)
000086cc	rlwinm	r0,r0,2,0,29
000086d0	or	r2,r0,r0
000086d4	lwz	r0,0xa4(r30)
000086d8	add	r2,r2,r0
000086dc	lwz	r0,__mh_bundle_header(r2)
000086e0	lwz	r2,0x4c(r30)
000086e4	or	r3,r0,r0
000086e8	or	r4,r2,r2
000086ec	bl	0x11240	; symbol stub for: _method_copyArgumentType
000086f0	or	r0,r3,r3
000086f4	stw	r0,0x48(r30)
000086f8	lwz	r0,0x48(r30)
000086fc	cmpwi	cr7,r0,__mh_bundle_header
00008700	beq	cr7,0x8720
00008704	addi	r0,r30,0x2c4
00008708	or	r3,r0,r0
0000870c	lwz	r4,0x48(r30)
00008710	li	r5,0x800
00008714	bl	0x11560	; symbol stub for: _strncat
00008718	lwz	r3,0x48(r30)
0000871c	bl	0x11040	; symbol stub for: _free
00008720	lwz	r2,0x4c(r30)
00008724	addi	r0,r2,0x1
00008728	stw	r0,0x4c(r30)
0000872c	lwz	r0,0x4c(r30)
00008730	lwz	r2,0x58(r30)
00008734	cmplw	cr7,r0,r2
00008738	blt	cr7,0x86c8
0000873c	addi	r0,r30,0xac4
00008740	addi	r9,r30,0xc4
00008744	addi	r11,r30,0x2c4
00008748	or	r3,r0,r0
0000874c	li	r4,0x1000
00008750	addis	r2,r31,0x1
00008754	addi	r5,r2,0xa34c
00008758	or	r6,r9,r9
0000875c	lwz	r7,0x50(r30)
00008760	or	r8,r11,r11
00008764	bl	0x11460	; symbol stub for: _snprintf$LDBL128
00008768	lwz	r29,0xa0(r30)
0000876c	addis	r2,r31,0x1
00008770	addi	r2,r2,0xc048
00008774	lwz	r28,__mh_bundle_header(r2)
00008778	addis	r2,r31,0x1
0000877c	addi	r2,r2,0xc070
00008780	lwz	r0,__mh_bundle_header(r2)
00008784	or	r9,r0,r0
00008788	addis	r2,r31,0x1
0000878c	addi	r2,r2,0xc04c
00008790	lwz	r0,__mh_bundle_header(r2)
00008794	addi	r2,r30,0xac4
00008798	or	r3,r9,r9
0000879c	or	r4,r0,r0
000087a0	or	r5,r2,r2
000087a4	li	r6,0x4
000087a8	bla	0xfffeff00
000087ac	or	r0,r3,r3
000087b0	or	r3,r29,r29
000087b4	or	r4,r28,r28
000087b8	or	r5,r0,r0
000087bc	bla	0xfffeff00
000087c0	lwz	r2,0x64(r30)
000087c4	addi	r0,r2,0x1
000087c8	stw	r0,0x64(r30)
000087cc	lwz	r0,0x64(r30)
000087d0	lwz	r2,0xc0(r30)
000087d4	cmplw	cr7,r0,r2
000087d8	blt	cr7,0x8548
000087dc	addis	r2,r31,0x1
000087e0	addi	r2,r2,0xc07c
000087e4	lwz	r0,__mh_bundle_header(r2)
000087e8	or	r9,r0,r0
000087ec	addis	r2,r31,0x1
000087f0	addi	r2,r2,0xc044
000087f4	lwz	r11,__mh_bundle_header(r2)
000087f8	lwz	r10,0xb8(r30)
000087fc	addis	r2,r31,0x1
00008800	addi	r8,r2,0xb524
00008804	addis	r2,r31,0x1
00008808	addi	r29,r2,0xb534
0000880c	addis	r2,r31,0x1
00008810	addi	r28,r2,0xb544
00008814	addis	r2,r31,0x1
00008818	addi	r2,r2,0xb554
0000881c	lwz	r0,0xa0(r30)
00008820	stw	r0,0x38(r1)
00008824	stw	r2,0x3c(r1)
00008828	li	r0,__mh_bundle_header
0000882c	stw	r0,0x40(r1)
00008830	or	r3,r9,r9
00008834	or	r4,r11,r11
00008838	or	r5,r10,r10
0000883c	or	r6,r8,r8
00008840	lwz	r7,0xb0(r30)
00008844	or	r8,r29,r29
00008848	lwz	r9,0xa8(r30)
0000884c	or	r10,r28,r28
00008850	bla	0xfffeff00
00008854	or	r0,r3,r3
00008858	stw	r0,0x9c(r30)
0000885c	addis	r2,r31,0x1
00008860	addi	r29,r2,0xb564
00008864	lwz	r3,0x1af8(r30)
00008868	bl	0x10ee0	; symbol stub for: _class_getName
0000886c	or	r0,r3,r3
00008870	or	r3,r29,r29
00008874	or	r4,r0,r0
00008878	lwz	r5,0x9c(r30)
0000887c	bl	0x10b20	; symbol stub for: _NSLog
00008880	lwz	r3,0x1af8(r30)
00008884	bl	0x10f00	; symbol stub for: _class_getSuperclass
00008888	or	r0,r3,r3
0000888c	stw	r0,0x98(r30)
00008890	lwz	r3,0x98(r30)
00008894	bl	0x10ee0	; symbol stub for: _class_getName
00008898	or	r0,r3,r3
0000889c	or	r3,r0,r0
000088a0	addis	r2,r31,0x1
000088a4	addi	r4,r2,0xa38c
000088a8	bl	0x114e0	; symbol stub for: _strcmp
000088ac	or	r0,r3,r3
000088b0	cmpwi	cr7,r0,__mh_bundle_header
000088b4	beq	cr7,0x88cc
000088b8	lbz	r0,0x1afc(r30)
000088bc	extsb	r0,r0
000088c0	lwz	r3,0x98(r30)
000088c4	or	r4,r0,r0
000088c8	bl	_help_reverse_class
000088cc	lwz	r1,__mh_bundle_header(r1)
000088d0	lwz	r0,0x8(r1)
000088d4	mtspr	lr,r0
000088d8	lmw	r28,0xfff0(r1)
000088dc	blr
_CMHelperLoadIconSuiteFromPath:
000088e0	mfspr	r0,lr
000088e4	stmw	r30,0xfff8(r1)
000088e8	stw	r0,0x8(r1)
000088ec	stwu	r1,0xff50(r1)
000088f0	or	r30,r1,r1
000088f4	stw	r3,0xc8(r30)
000088f8	li	r0,__mh_bundle_header
000088fc	stw	r0,0x90(r30)
00008900	li	r3,__mh_bundle_header
00008904	lwz	r4,0xc8(r30)
00008908	li	r5,__mh_bundle_header
0000890c	li	r6,__mh_bundle_header
00008910	bl	0x10100	; symbol stub for: _CFURLCreateWithFileSystemPath
00008914	or	r0,r3,r3
00008918	stw	r0,0x38(r30)
0000891c	lwz	r0,0x38(r30)
00008920	cmpwi	cr7,r0,__mh_bundle_header
00008924	bne	cr7,0x8934
00008928	li	r0,__mh_bundle_header
0000892c	stw	r0,0x98(r30)
00008930	b	0x89a8
00008934	addi	r0,r30,0x3c
00008938	lwz	r3,0x38(r30)
0000893c	or	r4,r0,r0
00008940	bl	0x10120	; symbol stub for: _CFURLGetFSRef
00008944	or	r0,r3,r3
00008948	cmpwi	cr7,r0,__mh_bundle_header
0000894c	beq	cr7,0x8998
00008950	addi	r0,r30,0x3c
00008954	addi	r2,r30,0x8c
00008958	or	r3,r0,r0
0000895c	or	r4,r2,r2
00008960	bl	0x10c00	; symbol stub for: _ReadIconFromFSRef
00008964	or	r0,r3,r3
00008968	cmpwi	cr7,r0,__mh_bundle_header
0000896c	bne	cr7,0x8998
00008970	lwz	r0,0x8c(r30)
00008974	addi	r2,r30,0x90
00008978	or	r3,r0,r0
0000897c	li	r4,__mh_bundle_header
00008980	ori	r4,r4,0xff00
00008984	or	r5,r2,r2
00008988	bl	0x10a60	; symbol stub for: _IconFamilyToIconSuite
0000898c	lwz	r0,0x8c(r30)
00008990	or	r3,r0,r0
00008994	bl	0x104e0	; symbol stub for: _DisposeHandle
00008998	lwz	r3,0x38(r30)
0000899c	bl	0xff40	; symbol stub for: _CFRelease
000089a0	lwz	r0,0x90(r30)
000089a4	stw	r0,0x98(r30)
000089a8	lwz	r0,0x98(r30)
000089ac	or	r3,r0,r0
000089b0	lwz	r1,__mh_bundle_header(r1)
000089b4	lwz	r0,0x8(r1)
000089b8	mtspr	lr,r0
000089bc	lmw	r30,0xfff8(r1)
000089c0	blr
_CMHelperGetIconSuiteFromPathWithCache:
000089c4	mfspr	r0,lr
000089c8	stmw	r30,0xfff8(r1)
000089cc	stw	r0,0x8(r1)
000089d0	stwu	r1,0xffa0(r1)
000089d4	or	r30,r1,r1
000089d8	stw	r3,0x78(r30)
000089dc	stw	r4,0x7c(r30)
000089e0	lwz	r2,0x78(r30)
000089e4	lwz	r0,0x18(r2)
000089e8	or	r3,r0,r0
000089ec	lwz	r4,0x7c(r30)
000089f0	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
000089f4	or	r0,r3,r3
000089f8	stw	r0,0x38(r30)
000089fc	lwz	r0,0x38(r30)
00008a00	cmpwi	cr7,r0,__mh_bundle_header
00008a04	bne	cr7,0x8a3c
00008a08	lwz	r3,0x7c(r30)
00008a0c	bl	_CMHelperLoadIconSuiteFromPath
00008a10	or	r0,r3,r3
00008a14	stw	r0,0x38(r30)
00008a18	lwz	r0,0x38(r30)
00008a1c	cmpwi	cr7,r0,__mh_bundle_header
00008a20	beq	cr7,0x8a3c
00008a24	lwz	r2,0x78(r30)
00008a28	lwz	r0,0x18(r2)
00008a2c	or	r3,r0,r0
00008a30	lwz	r4,0x7c(r30)
00008a34	lwz	r5,0x38(r30)
00008a38	bl	0xfd80	; symbol stub for: _CFDictionaryAddValue
00008a3c	lwz	r0,0x38(r30)
00008a40	or	r3,r0,r0
00008a44	lwz	r1,__mh_bundle_header(r1)
00008a48	lwz	r0,0x8(r1)
00008a4c	mtspr	lr,r0
00008a50	lmw	r30,0xfff8(r1)
00008a54	blr
_CMPutCFStringKeyPtr:
00008a58	mfspr	r0,lr
00008a5c	stmw	r30,0xfff8(r1)
00008a60	stw	r0,0x8(r1)
00008a64	stwu	r1,0xff90(r1)
00008a68	or	r30,r1,r1
00008a6c	stw	r3,0x88(r30)
00008a70	stw	r4,0x8c(r30)
00008a74	stw	r5,0x90(r30)
00008a78	li	r0,__mh_bundle_header
00008a7c	stw	r0,0x3c(r30)
00008a80	lwz	r3,0x90(r30)
00008a84	bl	0x100a0	; symbol stub for: _CFStringGetLength
00008a88	or	r2,r3,r3
00008a8c	addi	r0,r30,0x44
00008a90	or	r3,r0,r0
00008a94	li	r4,__mh_bundle_header
00008a98	or	r5,r2,r2
00008a9c	bl	_CFRangeMake
00008aa0	lwz	r3,0x90(r30)
00008aa4	bl	0x10080	; symbol stub for: _CFStringGetCharactersPtr
00008aa8	or	r0,r3,r3
00008aac	stw	r0,0x40(r30)
00008ab0	lwz	r0,0x40(r30)
00008ab4	cmpwi	cr7,r0,__mh_bundle_header
00008ab8	bne	cr7,0x8b08
00008abc	lwz	r0,0x48(r30)
00008ac0	rlwinm	r0,r0,1,0,30
00008ac4	or	r3,r0,r0
00008ac8	bl	0x10b60	; symbol stub for: _NewPtr
00008acc	or	r0,r3,r3
00008ad0	stw	r0,0x3c(r30)
00008ad4	lwz	r0,0x3c(r30)
00008ad8	stw	r0,0x40(r30)
00008adc	lwz	r0,0x3c(r30)
00008ae0	cmpwi	cr7,r0,__mh_bundle_header
00008ae4	bne	cr7,0x8af4
00008ae8	li	r0,0x1
00008aec	stw	r0,0x58(r30)
00008af0	b	0x8b54
00008af4	lwz	r3,0x90(r30)
00008af8	lwz	r4,0x44(r30)
00008afc	lwz	r5,0x48(r30)
00008b00	lwz	r6,0x3c(r30)
00008b04	bl	0x10060	; symbol stub for: _CFStringGetCharacters
00008b08	lwz	r0,0x48(r30)
00008b0c	rlwinm	r0,r0,1,0,30
00008b10	lwz	r3,0x88(r30)
00008b14	lwz	r4,0x8c(r30)
00008b18	lis	r5,0x7574
00008b1c	ori	r5,r5,0x7874
00008b20	lwz	r6,0x40(r30)
00008b24	or	r7,r0,r0
00008b28	bl	0xfae0	; symbol stub for: _AEPutParamPtr
00008b2c	or	r0,r3,r3
00008b30	stw	r0,0x38(r30)
00008b34	lwz	r0,0x3c(r30)
00008b38	cmpwi	cr7,r0,__mh_bundle_header
00008b3c	beq	cr7,0x8b4c
00008b40	lwz	r0,0x3c(r30)
00008b44	or	r3,r0,r0
00008b48	bl	0x10540	; symbol stub for: _DisposePtr
00008b4c	lwz	r0,0x38(r30)
00008b50	stw	r0,0x58(r30)
00008b54	lwz	r0,0x58(r30)
00008b58	or	r3,r0,r0
00008b5c	lwz	r1,__mh_bundle_header(r1)
00008b60	lwz	r0,0x8(r1)
00008b64	mtspr	lr,r0
00008b68	lmw	r30,0xfff8(r1)
00008b6c	blr
_CFRangeMake:
00008b70	stmw	r30,0xfff8(r1)
00008b74	stwu	r1,0xffc0(r1)
00008b78	or	r30,r1,r1
00008b7c	or	r9,r3,r3
00008b80	stw	r4,0x5c(r30)
00008b84	stw	r5,0x60(r30)
00008b88	lwz	r0,0x5c(r30)
00008b8c	stw	r0,0x18(r30)
00008b90	lwz	r0,0x60(r30)
00008b94	stw	r0,0x1c(r30)
00008b98	lwz	r0,0x18(r30)
00008b9c	lwz	r2,0x1c(r30)
00008ba0	stw	r0,__mh_bundle_header(r9)
00008ba4	stw	r2,0x4(r9)
00008ba8	or	r3,r9,r9
00008bac	lwz	r1,__mh_bundle_header(r1)
00008bb0	lmw	r30,0xfff8(r1)
00008bb4	blr
_CMHelperMenuEventHandler:
00008bb8	mfspr	r0,lr
00008bbc	stmw	r30,0xfff8(r1)
00008bc0	stw	r0,0x8(r1)
00008bc4	stwu	r1,0xfe60(r1)
00008bc8	or	r30,r1,r1
00008bcc	bcl	20,31,0x8bd0
00008bd0	mfspr	r31,lr
00008bd4	stw	r3,0x1b8(r30)
00008bd8	stw	r4,0x1bc(r30)
00008bdc	stw	r5,0x1c0(r30)
00008be0	lwz	r0,0x1c0(r30)
00008be4	stw	r0,0x5c(r30)
00008be8	addi	r0,r30,0x68
00008bec	lwz	r3,0x1bc(r30)
00008bf0	lis	r4,0x2d2d
00008bf4	ori	r4,r4,0x2d2d
00008bf8	lis	r5,0x6d65
00008bfc	ori	r5,r5,0x6e75
00008c00	li	r6,__mh_bundle_header
00008c04	li	r7,0x4
00008c08	li	r8,__mh_bundle_header
00008c0c	or	r9,r0,r0
00008c10	bl	0x10680	; symbol stub for: _GetEventParameter
00008c14	or	r0,r3,r3
00008c18	stw	r0,0x58(r30)
00008c1c	lwz	r0,0x58(r30)
00008c20	cmpwi	cr7,r0,__mh_bundle_header
00008c24	bne	cr7,0x8ed8
00008c28	lwz	r3,0x1bc(r30)
00008c2c	bl	0x10660	; symbol stub for: _GetEventKind
00008c30	or	r0,r3,r3
00008c34	cmpwi	cr7,r0,0x9
00008c38	bne	cr7,0x8ed8
00008c3c	lwz	r0,0x68(r30)
00008c40	or	r3,r0,r0
00008c44	bl	0x10400	; symbol stub for: _CountMenuItems
00008c48	or	r0,r3,r3
00008c4c	stw	r0,0x4c(r30)
00008c50	lwz	r9,0x68(r30)
00008c54	lwz	r0,0x4c(r30)
00008c58	rlwinm	r0,r0,0,16,31
00008c5c	addi	r2,r30,0x6c
00008c60	or	r3,r9,r9
00008c64	or	r4,r0,r0
00008c68	or	r5,r2,r2
00008c6c	bl	0x10720	; symbol stub for: _GetMenuItemAttributes
00008c70	lwz	r9,0x68(r30)
00008c74	lwz	r0,0x4c(r30)
00008c78	rlwinm	r0,r0,0,16,31
00008c7c	addi	r2,r30,0x79
00008c80	or	r3,r9,r9
00008c84	or	r4,r0,r0
00008c88	or	r5,r2,r2
00008c8c	bl	0x10760	; symbol stub for: _GetMenuItemText
00008c90	lwz	r0,0x6c(r30)
00008c94	rlwinm	r0,r0,0,24,24
00008c98	cmpwi	cr7,r0,__mh_bundle_header
00008c9c	beq	cr7,0x8ed8
00008ca0	addi	r0,r30,0x79
00008ca4	li	r3,__mh_bundle_header
00008ca8	or	r4,r0,r0
00008cac	li	r5,__mh_bundle_header
00008cb0	bl	0x10040	; symbol stub for: _CFStringCreateWithPascalString
00008cb4	or	r0,r3,r3
00008cb8	stw	r0,0x54(r30)
00008cbc	lwz	r2,0x5c(r30)
00008cc0	lwz	r0,0x14(r2)
00008cc4	or	r3,r0,r0
00008cc8	lwz	r4,0x54(r30)
00008ccc	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
00008cd0	or	r0,r3,r3
00008cd4	stw	r0,0x44(r30)
00008cd8	lwz	r3,0x54(r30)
00008cdc	bl	0xff40	; symbol stub for: _CFRelease
00008ce0	lwz	r0,0x44(r30)
00008ce4	cmpwi	cr7,r0,__mh_bundle_header
00008ce8	beq	cr7,0x8ed8
00008cec	lwz	r2,0x68(r30)
00008cf0	lwz	r0,0x4c(r30)
00008cf4	rlwinm	r0,r0,0,16,31
00008cf8	or	r3,r2,r2
00008cfc	or	r4,r0,r0
00008d00	bl	0x104a0	; symbol stub for: _DeleteMenuItem
00008d04	lwz	r2,0x4c(r30)
00008d08	addi	r0,r2,0xffff
00008d0c	stw	r0,0x4c(r30)
00008d10	lwz	r3,0x44(r30)
00008d14	bl	0xfc20	; symbol stub for: _CFArrayGetCount
00008d18	or	r0,r3,r3
00008d1c	stw	r0,0x48(r30)
00008d20	li	r0,0x1
00008d24	stw	r0,0x50(r30)
00008d28	b	0x8ec8
00008d2c	lwz	r0,0x50(r30)
00008d30	lwz	r2,0x48(r30)
00008d34	cmpw	cr7,r0,r2
00008d38	bgt	cr7,0x8ebc
00008d3c	lwz	r2,0x50(r30)
00008d40	addi	r0,r2,0xffff
00008d44	lwz	r3,0x44(r30)
00008d48	or	r4,r0,r0
00008d4c	bl	0xfc40	; symbol stub for: _CFArrayGetValueAtIndex
00008d50	or	r0,r3,r3
00008d54	stw	r0,0x38(r30)
00008d58	lwz	r0,0x38(r30)
00008d5c	cmpwi	cr7,r0,__mh_bundle_header
00008d60	beq	cr7,0x8ebc
00008d64	lwz	r3,0x38(r30)
00008d68	addis	r2,r31,0x1
00008d6c	addi	r4,r2,0xa960
00008d70	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
00008d74	or	r0,r3,r3
00008d78	stw	r0,0x40(r30)
00008d7c	lwz	r0,0x40(r30)
00008d80	cmpwi	cr7,r0,__mh_bundle_header
00008d84	beq	cr7,0x8dec
00008d88	li	r0,__mh_bundle_header
00008d8c	stw	r0,0x70(r30)
00008d90	addi	r0,r30,0x60
00008d94	or	r3,r0,r0
00008d98	li	r4,__mh_bundle_header
00008d9c	li	r5,0x4
00008da0	bl	_CFRangeMake
00008da4	addi	r0,r30,0x70
00008da8	lwz	r3,0x40(r30)
00008dac	lwz	r4,0x60(r30)
00008db0	lwz	r5,0x64(r30)
00008db4	or	r6,r0,r0
00008db8	bl	0xfd60	; symbol stub for: _CFDataGetBytes
00008dbc	lwz	r0,0x70(r30)
00008dc0	cmpwi	cr7,r0,__mh_bundle_header
00008dc4	beq	cr7,0x8dec
00008dc8	lwz	r2,0x68(r30)
00008dcc	lwz	r0,0x50(r30)
00008dd0	rlwinm	r0,r0,0,16,31
00008dd4	lwz	r9,0x70(r30)
00008dd8	or	r3,r2,r2
00008ddc	or	r4,r0,r0
00008de0	li	r5,0x5
00008de4	or	r6,r9,r9
00008de8	bl	0x10d20	; symbol stub for: _SetMenuItemIconHandle
00008dec	lwz	r3,0x38(r30)
00008df0	addis	r2,r31,0x1
00008df4	addi	r4,r2,0xa970
00008df8	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
00008dfc	or	r0,r3,r3
00008e00	stw	r0,0x3c(r30)
00008e04	lwz	r0,0x3c(r30)
00008e08	cmpwi	cr7,r0,__mh_bundle_header
00008e0c	beq	cr7,0x8e54
00008e10	addi	r0,r30,0x74
00008e14	lwz	r3,0x3c(r30)
00008e18	li	r4,0x3
00008e1c	or	r5,r0,r0
00008e20	bl	0xfec0	; symbol stub for: _CFNumberGetValue
00008e24	or	r0,r3,r3
00008e28	cmpwi	cr7,r0,__mh_bundle_header
00008e2c	beq	cr7,0x8e54
00008e30	lwz	r9,0x68(r30)
00008e34	lwz	r0,0x50(r30)
00008e38	rlwinm	r0,r0,0,16,31
00008e3c	lwz	r2,0x74(r30)
00008e40	or	r3,r9,r9
00008e44	or	r4,r0,r0
00008e48	or	r5,r2,r2
00008e4c	li	r6,__mh_bundle_header
00008e50	bl	0x10320	; symbol stub for: _ChangeMenuItemAttributes
00008e54	lwz	r3,0x38(r30)
00008e58	addis	r2,r31,0x1
00008e5c	addi	r4,r2,0xa980
00008e60	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
00008e64	or	r0,r3,r3
00008e68	stw	r0,0x3c(r30)
00008e6c	lwz	r0,0x3c(r30)
00008e70	cmpwi	cr7,r0,__mh_bundle_header
00008e74	beq	cr7,0x8ebc
00008e78	addi	r0,r30,0x78
00008e7c	lwz	r3,0x3c(r30)
00008e80	li	r4,0x1
00008e84	or	r5,r0,r0
00008e88	bl	0xfec0	; symbol stub for: _CFNumberGetValue
00008e8c	or	r0,r3,r3
00008e90	cmpwi	cr7,r0,__mh_bundle_header
00008e94	beq	cr7,0x8ebc
00008e98	lwz	r2,0x68(r30)
00008e9c	lwz	r0,0x50(r30)
00008ea0	rlwinm	r9,r0,0,16,31
00008ea4	lbz	r0,0x78(r30)
00008ea8	rlwinm	r0,r0,0,24,31
00008eac	or	r3,r2,r2
00008eb0	or	r4,r9,r9
00008eb4	or	r5,r0,r0
00008eb8	bl	0x10d40	; symbol stub for: _SetMenuItemModifiers
00008ebc	lwz	r2,0x50(r30)
00008ec0	addi	r0,r2,0x1
00008ec4	stw	r0,0x50(r30)
00008ec8	lwz	r0,0x50(r30)
00008ecc	lwz	r2,0x4c(r30)
00008ed0	cmpw	cr7,r0,r2
00008ed4	ble	cr7,0x8d2c
00008ed8	li	r0,0xd96e
00008edc	or	r3,r0,r0
00008ee0	lwz	r1,__mh_bundle_header(r1)
00008ee4	lwz	r0,0x8(r1)
00008ee8	mtspr	lr,r0
00008eec	lmw	r30,0xfff8(r1)
00008ef0	blr
_InstallCMHelperMenuEventHandler:
00008ef4	mfspr	r0,lr
00008ef8	stmw	r30,0xfff8(r1)
00008efc	stw	r0,0x8(r1)
00008f00	stwu	r1,0xffa0(r1)
00008f04	or	r30,r1,r1
00008f08	stw	r3,0x78(r30)
00008f0c	lwz	r2,0x78(r30)
00008f10	lwz	r0,0x4(r2)
00008f14	cmpwi	cr7,r0,__mh_bundle_header
00008f18	bne	cr7,0x8f6c
00008f1c	bl	0x105e0	; symbol stub for: _GetApplicationEventTarget
00008f20	or	r0,r3,r3
00008f24	stw	r0,0x38(r30)
00008f28	lis	r0,0x6d65
00008f2c	ori	r0,r0,0x6e75
00008f30	stw	r0,0x3c(r30)
00008f34	li	r0,0x9
00008f38	stw	r0,0x40(r30)
00008f3c	lwz	r2,0x78(r30)
00008f40	lwz	r0,0x8(r2)
00008f44	lwz	r2,0x78(r30)
00008f48	addi	r9,r2,0x4
00008f4c	addi	r2,r30,0x3c
00008f50	lwz	r3,0x38(r30)
00008f54	or	r4,r0,r0
00008f58	li	r5,0x1
00008f5c	or	r6,r2,r2
00008f60	lwz	r7,0x78(r30)
00008f64	or	r8,r9,r9
00008f68	bl	0x10aa0	; symbol stub for: _InstallEventHandler
00008f6c	lwz	r1,__mh_bundle_header(r1)
00008f70	lwz	r0,0x8(r1)
00008f74	mtspr	lr,r0
00008f78	lmw	r30,0xfff8(r1)
00008f7c	blr
_RemoveCMHelperMenuEventHandler:
00008f80	mfspr	r0,lr
00008f84	stmw	r30,0xfff8(r1)
00008f88	stw	r0,0x8(r1)
00008f8c	stwu	r1,0xffb0(r1)
00008f90	or	r30,r1,r1
00008f94	stw	r3,0x68(r30)
00008f98	lwz	r2,0x68(r30)
00008f9c	lwz	r0,0x4(r2)
00008fa0	cmpwi	cr7,r0,__mh_bundle_header
00008fa4	beq	cr7,0x8fb8
00008fa8	lwz	r2,0x68(r30)
00008fac	lwz	r0,0x4(r2)
00008fb0	or	r3,r0,r0
00008fb4	bl	0x10c60	; symbol stub for: _RemoveEventHandler
00008fb8	lwz	r2,0x68(r30)
00008fbc	li	r0,__mh_bundle_header
00008fc0	stw	r0,0x4(r2)
00008fc4	lwz	r1,__mh_bundle_header(r1)
00008fc8	lwz	r0,0x8(r1)
00008fcc	mtspr	lr,r0
00008fd0	lmw	r30,0xfff8(r1)
00008fd4	blr
_CMHelperFreeIconCallback:
00008fd8	mfspr	r0,lr
00008fdc	stmw	r30,0xfff8(r1)
00008fe0	stw	r0,0x8(r1)
00008fe4	stwu	r1,0xffb0(r1)
00008fe8	or	r30,r1,r1
00008fec	stw	r3,0x68(r30)
00008ff0	stw	r4,0x6c(r30)
00008ff4	lwz	r0,0x6c(r30)
00008ff8	or	r3,r0,r0
00008ffc	li	r4,0x1
00009000	bl	0x10500	; symbol stub for: _DisposeIconSuite
00009004	lwz	r1,__mh_bundle_header(r1)
00009008	lwz	r0,0x8(r1)
0000900c	mtspr	lr,r0
00009010	lmw	r30,0xfff8(r1)
00009014	blr
_CMHelperInitialise:
00009018	mfspr	r0,lr
0000901c	stmw	r30,0xfff8(r1)
00009020	stw	r0,0x8(r1)
00009024	stwu	r1,0xff90(r1)
00009028	or	r30,r1,r1
0000902c	bcl	20,31,0x9030
00009030	mfspr	r31,lr
00009034	stw	r3,0x88(r30)
00009038	stw	r4,0x8c(r30)
0000903c	lwz	r2,0x88(r30)
00009040	li	r0,__mh_bundle_header
00009044	stw	r0,__mh_bundle_header(r2)
00009048	lwz	r2,0x88(r30)
0000904c	li	r0,__mh_bundle_header
00009050	stw	r0,0x4(r2)
00009054	lwz	r9,0x88(r30)
00009058	addis	r2,r31,__mh_bundle_header
0000905c	addi	r0,r2,0xfb88
00009060	stw	r0,0x8(r9)
00009064	lwz	r2,0x88(r30)
00009068	li	r0,__mh_bundle_header
0000906c	stw	r0,0x10(r2)
00009070	lwz	r2,0x88(r30)
00009074	lwz	r0,0x8c(r30)
00009078	stw	r0,0xc(r2)
0000907c	li	r3,__mh_bundle_header
00009080	li	r4,__mh_bundle_header
00009084	addis	r2,r31,0x1
00009088	lwz	r5,0x9ffc(r2)
0000908c	addis	r2,r31,0x1
00009090	lwz	r6,0xa000(r2)
00009094	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
00009098	or	r0,r3,r3
0000909c	lwz	r2,0x88(r30)
000090a0	stw	r0,0x14(r2)
000090a4	li	r0,__mh_bundle_header
000090a8	stw	r0,0x38(r30)
000090ac	li	r0,__mh_bundle_header
000090b0	stw	r0,0x3c(r30)
000090b4	li	r0,__mh_bundle_header
000090b8	stw	r0,0x40(r30)
000090bc	li	r0,__mh_bundle_header
000090c0	stw	r0,0x44(r30)
000090c4	li	r0,__mh_bundle_header
000090c8	stw	r0,0x48(r30)
000090cc	addis	r2,r31,__mh_bundle_header
000090d0	addi	r0,r2,0xffa8
000090d4	stw	r0,0x40(r30)
000090d8	li	r3,__mh_bundle_header
000090dc	li	r4,__mh_bundle_header
000090e0	addis	r2,r31,0x1
000090e4	lwz	r5,0x9ffc(r2)
000090e8	addi	r0,r30,0x38
000090ec	or	r6,r0,r0
000090f0	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
000090f4	or	r0,r3,r3
000090f8	lwz	r2,0x88(r30)
000090fc	stw	r0,0x18(r2)
00009100	lwz	r1,__mh_bundle_header(r1)
00009104	lwz	r0,0x8(r1)
00009108	mtspr	lr,r0
0000910c	lmw	r30,0xfff8(r1)
00009110	blr
_CMHelperDispose:
00009114	mfspr	r0,lr
00009118	stmw	r30,0xfff8(r1)
0000911c	stw	r0,0x8(r1)
00009120	stwu	r1,0xffb0(r1)
00009124	or	r30,r1,r1
00009128	stw	r3,0x68(r30)
0000912c	lwz	r3,0x68(r30)
00009130	bl	_RemoveCMHelperMenuEventHandler
00009134	lwz	r2,0x68(r30)
00009138	lwz	r0,0x14(r2)
0000913c	or	r3,r0,r0
00009140	bl	0xff40	; symbol stub for: _CFRelease
00009144	lwz	r2,0x68(r30)
00009148	lwz	r0,0x18(r2)
0000914c	or	r3,r0,r0
00009150	bl	0xff40	; symbol stub for: _CFRelease
00009154	lwz	r1,__mh_bundle_header(r1)
00009158	lwz	r0,0x8(r1)
0000915c	mtspr	lr,r0
00009160	lmw	r30,0xfff8(r1)
00009164	blr
_CMHelperStart:
00009168	mfspr	r0,lr
0000916c	stmw	r30,0xfff8(r1)
00009170	stw	r0,0x8(r1)
00009174	stwu	r1,0xffb0(r1)
00009178	or	r30,r1,r1
0000917c	stw	r3,0x68(r30)
00009180	lwz	r2,0x68(r30)
00009184	lwz	r2,__mh_bundle_header(r2)
00009188	addi	r0,r2,0x1
0000918c	lwz	r2,0x68(r30)
00009190	stw	r0,__mh_bundle_header(r2)
00009194	lwz	r2,0x68(r30)
00009198	lwz	r0,__mh_bundle_header(r2)
0000919c	cmpwi	cr7,r0,0x1
000091a0	bne	cr7,0x91ac
000091a4	lwz	r3,0x68(r30)
000091a8	bl	_InstallCMHelperMenuEventHandler
000091ac	lwz	r1,__mh_bundle_header(r1)
000091b0	lwz	r0,0x8(r1)
000091b4	mtspr	lr,r0
000091b8	lmw	r30,0xfff8(r1)
000091bc	blr
_CMHelperStop:
000091c0	mfspr	r0,lr
000091c4	stmw	r30,0xfff8(r1)
000091c8	stw	r0,0x8(r1)
000091cc	stwu	r1,0xffb0(r1)
000091d0	or	r30,r1,r1
000091d4	stw	r3,0x68(r30)
000091d8	lwz	r2,0x68(r30)
000091dc	lwz	r2,__mh_bundle_header(r2)
000091e0	addi	r0,r2,0xffff
000091e4	lwz	r2,0x68(r30)
000091e8	stw	r0,__mh_bundle_header(r2)
000091ec	lwz	r2,0x68(r30)
000091f0	lwz	r0,__mh_bundle_header(r2)
000091f4	cmpwi	cr7,r0,__mh_bundle_header
000091f8	bgt	cr7,0x9220
000091fc	lwz	r3,0x68(r30)
00009200	bl	_RemoveCMHelperMenuEventHandler
00009204	lwz	r2,0x68(r30)
00009208	lwz	r0,0x14(r2)
0000920c	or	r3,r0,r0
00009210	bl	0xfe20	; symbol stub for: _CFDictionaryRemoveAllValues
00009214	lwz	r2,0x68(r30)
00009218	li	r0,__mh_bundle_header
0000921c	stw	r0,__mh_bundle_header(r2)
00009220	lwz	r1,__mh_bundle_header(r1)
00009224	lwz	r0,0x8(r1)
00009228	mtspr	lr,r0
0000922c	lmw	r30,0xfff8(r1)
00009230	blr
_CMHelperAddCommand:
00009234	mfspr	r0,lr
00009238	stmw	r30,0xfff8(r1)
0000923c	stw	r0,0x8(r1)
00009240	stwu	r1,0xffb0(r1)
00009244	or	r30,r1,r1
00009248	stw	r3,0x68(r30)
0000924c	stw	r4,0x6c(r30)
00009250	stw	r5,0x70(r30)
00009254	stw	r6,0x74(r30)
00009258	stw	r7,0x78(r30)
0000925c	lwz	r3,0x68(r30)
00009260	lwz	r4,0x6c(r30)
00009264	lwz	r5,0x70(r30)
00009268	lwz	r6,0x74(r30)
0000926c	lwz	r7,0x78(r30)
00009270	li	r8,__mh_bundle_header
00009274	bl	_CMHelperAddCommandWithModifiers
00009278	or	r0,r3,r3
0000927c	or	r3,r0,r0
00009280	lwz	r1,__mh_bundle_header(r1)
00009284	lwz	r0,0x8(r1)
00009288	mtspr	lr,r0
0000928c	lmw	r30,0xfff8(r1)
00009290	blr
_CMHelperAddCommandWithModifiers:
00009294	mfspr	r0,lr
00009298	stmw	r30,0xfff8(r1)
0000929c	stw	r0,0x8(r1)
000092a0	stwu	r1,0xff70(r1)
000092a4	or	r30,r1,r1
000092a8	bcl	20,31,0x92ac
000092ac	mfspr	r31,lr
000092b0	stw	r3,0xa8(r30)
000092b4	stw	r4,0xac(r30)
000092b8	stw	r5,0xb0(r30)
000092bc	stw	r6,0xb4(r30)
000092c0	stw	r7,0xb8(r30)
000092c4	or	r0,r8,r8
000092c8	stb	r0,0xbc(r30)
000092cc	li	r0,__mh_bundle_header
000092d0	stw	r0,0x50(r30)
000092d4	addis	r2,r31,0x1
000092d8	addi	r2,r2,0x8444
000092dc	lwz	r0,__mh_bundle_header(r2)
000092e0	lwz	r2,0x4(r2)
000092e4	stw	r0,0x54(r30)
000092e8	stw	r2,0x58(r30)
000092ec	lwz	r2,0xa8(r30)
000092f0	addi	r0,r2,0x4
000092f4	addi	r2,r30,0x5c
000092f8	or	r3,r0,r0
000092fc	or	r4,r2,r2
00009300	bl	0xf940	; symbol stub for: _AECountItems
00009304	b	0x931c
00009308	lwz	r2,0xa8(r30)
0000930c	lwz	r0,0x10(r2)
00009310	or	r3,r0,r0
00009314	li	r4,__mh_bundle_header
00009318	bl	0xfbe0	; symbol stub for: _CFArrayAppendValue
0000931c	lwz	r2,0xa8(r30)
00009320	lwz	r0,0x10(r2)
00009324	or	r3,r0,r0
00009328	bl	0xfc20	; symbol stub for: _CFArrayGetCount
0000932c	or	r2,r3,r3
00009330	lwz	r0,0x5c(r30)
00009334	cmpw	cr7,r2,r0
00009338	blt	cr7,0x9308
0000933c	addis	r2,r31,0x1
00009340	addi	r0,r2,0xa284
00009344	stw	r0,0x60(r30)
00009348	addis	r2,r31,0x1
0000934c	addi	r0,r2,0xa2a4
00009350	stw	r0,0x64(r30)
00009354	addis	r2,r31,0x1
00009358	addi	r0,r2,0xa294
0000935c	stw	r0,0x68(r30)
00009360	addi	r0,r30,0xb8
00009364	li	r3,__mh_bundle_header
00009368	or	r4,r0,r0
0000936c	li	r5,0x4
00009370	bl	0xfd40	; symbol stub for: _CFDataCreate
00009374	or	r0,r3,r3
00009378	stw	r0,0x6c(r30)
0000937c	addi	r0,r30,0xbc
00009380	li	r3,__mh_bundle_header
00009384	li	r4,0x1
00009388	or	r5,r0,r0
0000938c	bl	0xfea0	; symbol stub for: _CFNumberCreate
00009390	or	r0,r3,r3
00009394	stw	r0,0x70(r30)
00009398	addi	r0,r30,0xb4
0000939c	li	r3,__mh_bundle_header
000093a0	li	r4,0x3
000093a4	or	r5,r0,r0
000093a8	bl	0xfea0	; symbol stub for: _CFNumberCreate
000093ac	or	r0,r3,r3
000093b0	stw	r0,0x74(r30)
000093b4	addi	r0,r30,0x60
000093b8	addi	r2,r30,0x6c
000093bc	li	r3,__mh_bundle_header
000093c0	or	r4,r0,r0
000093c4	or	r5,r2,r2
000093c8	li	r6,0x3
000093cc	addis	r2,r31,0x1
000093d0	lwz	r7,0x9d80(r2)
000093d4	addis	r2,r31,0x1
000093d8	lwz	r8,0x9d84(r2)
000093dc	bl	0xfda0	; symbol stub for: _CFDictionaryCreate
000093e0	or	r0,r3,r3
000093e4	stw	r0,0x4c(r30)
000093e8	li	r0,__mh_bundle_header
000093ec	stw	r0,0x48(r30)
000093f0	b	0x9420
000093f4	lwz	r0,0x48(r30)
000093f8	rlwinm	r2,r0,2,0,29
000093fc	addi	r0,r30,0x38
00009400	add	r2,r2,r0
00009404	addi	r2,r2,0x34
00009408	lwz	r0,__mh_bundle_header(r2)
0000940c	or	r3,r0,r0
00009410	bl	0xff40	; symbol stub for: _CFRelease
00009414	lwz	r2,0x48(r30)
00009418	addi	r0,r2,0x1
0000941c	stw	r0,0x48(r30)
00009420	lwz	r0,0x48(r30)
00009424	cmpwi	cr7,r0,0x2
00009428	ble	cr7,0x93f4
0000942c	lwz	r2,0xa8(r30)
00009430	lwz	r0,0x10(r2)
00009434	or	r3,r0,r0
00009438	lwz	r4,0x4c(r30)
0000943c	bl	0xfbe0	; symbol stub for: _CFArrayAppendValue
00009440	addi	r0,r30,0x54
00009444	li	r3,__mh_bundle_header
00009448	li	r4,__mh_bundle_header
0000944c	li	r5,0x1
00009450	or	r6,r0,r0
00009454	bl	0xf9a0	; symbol stub for: _AECreateList
00009458	or	r0,r3,r3
0000945c	stw	r0,0x50(r30)
00009460	lwz	r0,0x50(r30)
00009464	stw	r0,0x44(r30)
00009468	lwz	r0,0x44(r30)
0000946c	srawi	r2,r0,31
00009470	xor	r0,r2,r0
00009474	subf	r0,r2,r0
00009478	neg	r0,r0
0000947c	rlwinm	r0,r0,1,31,31
00009480	cmpwi	cr7,r0,__mh_bundle_header
00009484	beq	cr7,0x94c4
00009488	lwz	r0,0x44(r30)
0000948c	lis	r3,0x3f2a
00009490	ori	r3,r3,0x3f2a
00009494	li	r4,__mh_bundle_header
00009498	addis	r2,r31,0x1
0000949c	addi	r5,r2,_CMHelperStop
000094a0	addis	r2,r31,0x1
000094a4	addi	r6,r2,0x91e0
000094a8	li	r7,__mh_bundle_header
000094ac	addis	r2,r31,0x1
000094b0	addi	r8,r2,0x91fc
000094b4	li	r9,0x14d
000094b8	or	r10,r0,r0
000094bc	bl	0x10480	; symbol stub for: _DebugAssert
000094c0	b	0x9694
000094c4	addi	r0,r30,0x54
000094c8	or	r3,r0,r0
000094cc	lis	r4,0x706e
000094d0	ori	r4,r4,0x616d
000094d4	lwz	r5,0xac(r30)
000094d8	bl	_CMPutCFStringKeyPtr
000094dc	or	r0,r3,r3
000094e0	stw	r0,0x50(r30)
000094e4	lwz	r0,0x50(r30)
000094e8	stw	r0,0x40(r30)
000094ec	lwz	r0,0x40(r30)
000094f0	srawi	r2,r0,31
000094f4	xor	r0,r2,r0
000094f8	subf	r0,r2,r0
000094fc	neg	r0,r0
00009500	rlwinm	r0,r0,1,31,31
00009504	cmpwi	cr7,r0,__mh_bundle_header
00009508	beq	cr7,0x9548
0000950c	lwz	r0,0x40(r30)
00009510	lis	r3,0x3f2a
00009514	ori	r3,r3,0x3f2a
00009518	li	r4,__mh_bundle_header
0000951c	addis	r2,r31,0x1
00009520	addi	r5,r2,_CMHelperStop
00009524	addis	r2,r31,0x1
00009528	addi	r6,r2,0x91e0
0000952c	li	r7,__mh_bundle_header
00009530	addis	r2,r31,0x1
00009534	addi	r8,r2,0x91fc
00009538	li	r9,0x151
0000953c	or	r10,r0,r0
00009540	bl	0x10480	; symbol stub for: _DebugAssert
00009544	b	0x9694
00009548	addi	r0,r30,0x54
0000954c	addi	r2,r30,0xb0
00009550	or	r3,r0,r0
00009554	lis	r4,0x636d
00009558	ori	r4,r4,0x6364
0000955c	lis	r5,0x6c6f
00009560	ori	r5,r5,0x6e67
00009564	or	r6,r2,r2
00009568	li	r7,0x4
0000956c	bl	0xfae0	; symbol stub for: _AEPutParamPtr
00009570	or	r0,r3,r3
00009574	stw	r0,0x50(r30)
00009578	lwz	r0,0x50(r30)
0000957c	stw	r0,0x3c(r30)
00009580	lwz	r0,0x3c(r30)
00009584	srawi	r2,r0,31
00009588	xor	r0,r2,r0
0000958c	subf	r0,r2,r0
00009590	neg	r0,r0
00009594	rlwinm	r0,r0,1,31,31
00009598	cmpwi	cr7,r0,__mh_bundle_header
0000959c	beq	cr7,0x95dc
000095a0	lwz	r0,0x3c(r30)
000095a4	lis	r3,0x3f2a
000095a8	ori	r3,r3,0x3f2a
000095ac	li	r4,__mh_bundle_header
000095b0	addis	r2,r31,0x1
000095b4	addi	r5,r2,_CMHelperStop
000095b8	addis	r2,r31,0x1
000095bc	addi	r6,r2,0x91e0
000095c0	li	r7,__mh_bundle_header
000095c4	addis	r2,r31,0x1
000095c8	addi	r8,r2,0x91fc
000095cc	li	r9,0x155
000095d0	or	r10,r0,r0
000095d4	bl	0x10480	; symbol stub for: _DebugAssert
000095d8	b	0x9694
000095dc	addi	r0,r30,0x54
000095e0	addi	r2,r30,0xb4
000095e4	or	r3,r0,r0
000095e8	lis	r4,0x636d
000095ec	ori	r4,r4,0x6174
000095f0	lis	r5,0x6c6f
000095f4	ori	r5,r5,0x6e67
000095f8	or	r6,r2,r2
000095fc	li	r7,0x4
00009600	bl	0xfae0	; symbol stub for: _AEPutParamPtr
00009604	or	r0,r3,r3
00009608	stw	r0,0x50(r30)
0000960c	lwz	r0,0x50(r30)
00009610	stw	r0,0x38(r30)
00009614	lwz	r0,0x38(r30)
00009618	srawi	r2,r0,31
0000961c	xor	r0,r2,r0
00009620	subf	r0,r2,r0
00009624	neg	r0,r0
00009628	rlwinm	r0,r0,1,31,31
0000962c	cmpwi	cr7,r0,__mh_bundle_header
00009630	beq	cr7,0x9670
00009634	lwz	r0,0x38(r30)
00009638	lis	r3,0x3f2a
0000963c	ori	r3,r3,0x3f2a
00009640	li	r4,__mh_bundle_header
00009644	addis	r2,r31,0x1
00009648	addi	r5,r2,_CMHelperStop
0000964c	addis	r2,r31,0x1
00009650	addi	r6,r2,0x91e0
00009654	li	r7,__mh_bundle_header
00009658	addis	r2,r31,0x1
0000965c	addi	r8,r2,0x91fc
00009660	li	r9,0x158
00009664	or	r10,r0,r0
00009668	bl	0x10480	; symbol stub for: _DebugAssert
0000966c	b	0x9694
00009670	lwz	r2,0xa8(r30)
00009674	addi	r0,r2,0x4
00009678	addi	r2,r30,0x54
0000967c	or	r3,r0,r0
00009680	li	r4,__mh_bundle_header
00009684	or	r5,r2,r2
00009688	bl	0xfaa0	; symbol stub for: _AEPutDesc
0000968c	or	r0,r3,r3
00009690	stw	r0,0x50(r30)
00009694	addi	r0,r30,0x54
00009698	or	r3,r0,r0
0000969c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
000096a0	lwz	r0,0x50(r30)
000096a4	or	r3,r0,r0
000096a8	lwz	r1,__mh_bundle_header(r1)
000096ac	lwz	r0,0x8(r1)
000096b0	mtspr	lr,r0
000096b4	lmw	r30,0xfff8(r1)
000096b8	blr
_CMHelperCreateSubmenu:
000096bc	mfspr	r0,lr
000096c0	stmw	r30,0xfff8(r1)
000096c4	stw	r0,0x8(r1)
000096c8	stwu	r1,0xffa0(r1)
000096cc	or	r30,r1,r1
000096d0	bcl	20,31,0x96d4
000096d4	mfspr	r31,lr
000096d8	stw	r3,0x78(r30)
000096dc	stw	r4,0x7c(r30)
000096e0	lwz	r2,0x7c(r30)
000096e4	lwz	r0,0x78(r30)
000096e8	stw	r0,__mh_bundle_header(r2)
000096ec	lwz	r2,0x7c(r30)
000096f0	addi	r0,r2,0x4
000096f4	li	r3,__mh_bundle_header
000096f8	li	r4,__mh_bundle_header
000096fc	li	r5,__mh_bundle_header
00009700	or	r6,r0,r0
00009704	bl	0xf9a0	; symbol stub for: _AECreateList
00009708	or	r0,r3,r3
0000970c	stw	r0,0x38(r30)
00009710	lwz	r0,0x38(r30)
00009714	cmpwi	cr7,r0,__mh_bundle_header
00009718	beq	cr7,0x9728
0000971c	lwz	r0,0x38(r30)
00009720	stw	r0,0x48(r30)
00009724	b	0x97a0
00009728	lwz	r2,0x78(r30)
0000972c	lwz	r2,0x10(r2)
00009730	addi	r0,r2,0x1
00009734	lwz	r2,0x78(r30)
00009738	stw	r0,0x10(r2)
0000973c	addis	r2,r31,0x1
00009740	addi	r9,r2,0x9e8c
00009744	lwz	r2,0x78(r30)
00009748	lwz	r11,0xc(r2)
0000974c	lwz	r2,0x78(r30)
00009750	lwz	r0,0x10(r2)
00009754	li	r3,__mh_bundle_header
00009758	li	r4,__mh_bundle_header
0000975c	or	r5,r9,r9
00009760	or	r6,r11,r11
00009764	or	r7,r0,r0
00009768	bl	0x10020	; symbol stub for: _CFStringCreateWithFormat
0000976c	or	r0,r3,r3
00009770	lwz	r2,0x7c(r30)
00009774	stw	r0,0xc(r2)
00009778	li	r3,__mh_bundle_header
0000977c	li	r4,__mh_bundle_header
00009780	addis	r2,r31,0x1
00009784	lwz	r5,0x9968(r2)
00009788	bl	0xfc00	; symbol stub for: _CFArrayCreateMutable
0000978c	or	r0,r3,r3
00009790	lwz	r2,0x7c(r30)
00009794	stw	r0,0x10(r2)
00009798	li	r0,__mh_bundle_header
0000979c	stw	r0,0x48(r30)
000097a0	lwz	r0,0x48(r30)
000097a4	or	r3,r0,r0
000097a8	lwz	r1,__mh_bundle_header(r1)
000097ac	lwz	r0,0x8(r1)
000097b0	mtspr	lr,r0
000097b4	lmw	r30,0xfff8(r1)
000097b8	blr
_CMHelperDisposeSubmenu:
000097bc	mfspr	r0,lr
000097c0	stmw	r30,0xfff8(r1)
000097c4	stw	r0,0x8(r1)
000097c8	stwu	r1,0xffb0(r1)
000097cc	or	r30,r1,r1
000097d0	stw	r3,0x68(r30)
000097d4	lwz	r2,0x68(r30)
000097d8	addi	r0,r2,0x4
000097dc	or	r3,r0,r0
000097e0	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
000097e4	lwz	r2,0x68(r30)
000097e8	lwz	r0,0x10(r2)
000097ec	or	r3,r0,r0
000097f0	bl	0xff40	; symbol stub for: _CFRelease
000097f4	lwz	r2,0x68(r30)
000097f8	lwz	r0,0xc(r2)
000097fc	or	r3,r0,r0
00009800	bl	0xff40	; symbol stub for: _CFRelease
00009804	li	r0,__mh_bundle_header
00009808	or	r3,r0,r0
0000980c	lwz	r1,__mh_bundle_header(r1)
00009810	lwz	r0,0x8(r1)
00009814	mtspr	lr,r0
00009818	lmw	r30,0xfff8(r1)
0000981c	blr
_CMHelperInsertSubmenu:
00009820	mfspr	r0,lr
00009824	stmw	r30,0xfff8(r1)
00009828	stw	r0,0x8(r1)
0000982c	stwu	r1,0xff90(r1)
00009830	or	r30,r1,r1
00009834	bcl	20,31,0x9838
00009838	mfspr	r31,lr
0000983c	stw	r3,0x88(r30)
00009840	stw	r4,0x8c(r30)
00009844	stw	r5,0x90(r30)
00009848	addis	r2,r31,__mh_bundle_header
0000984c	addi	r2,r2,0x7ec0
00009850	lwz	r0,__mh_bundle_header(r2)
00009854	lwz	r2,0x4(r2)
00009858	stw	r0,0x44(r30)
0000985c	stw	r2,0x48(r30)
00009860	addis	r2,r31,0x1
00009864	lwz	r2,0x97d4(r2)
00009868	addi	r0,r2,0xb0
0000986c	addis	r2,r31,0x1
00009870	addi	r3,r2,0x8cbc
00009874	li	r4,0x1
00009878	li	r5,0x17
0000987c	or	r6,r0,r0
00009880	bl	0x11080	; symbol stub for: _fwrite
00009884	lwz	r3,0x90(r30)
00009888	bl	0xff80	; symbol stub for: _CFShow
0000988c	lwz	r2,0x88(r30)
00009890	lwz	r2,__mh_bundle_header(r2)
00009894	lwz	r9,0x14(r2)
00009898	lwz	r2,0x88(r30)
0000989c	lwz	r11,0xc(r2)
000098a0	lwz	r2,0x88(r30)
000098a4	lwz	r0,0x10(r2)
000098a8	or	r3,r9,r9
000098ac	or	r4,r11,r11
000098b0	or	r5,r0,r0
000098b4	bl	0xfd80	; symbol stub for: _CFDictionaryAddValue
000098b8	addi	r0,r30,0x44
000098bc	li	r3,__mh_bundle_header
000098c0	li	r4,__mh_bundle_header
000098c4	li	r5,0x1
000098c8	or	r6,r0,r0
000098cc	bl	0xf9a0	; symbol stub for: _AECreateList
000098d0	or	r0,r3,r3
000098d4	stw	r0,0x40(r30)
000098d8	lwz	r0,0x40(r30)
000098dc	stw	r0,0x3c(r30)
000098e0	lwz	r0,0x3c(r30)
000098e4	srawi	r2,r0,31
000098e8	xor	r0,r2,r0
000098ec	subf	r0,r2,r0
000098f0	neg	r0,r0
000098f4	rlwinm	r0,r0,1,31,31
000098f8	cmpwi	cr7,r0,__mh_bundle_header
000098fc	beq	cr7,0x993c
00009900	lwz	r0,0x3c(r30)
00009904	lis	r3,0x3f2a
00009908	ori	r3,r3,0x3f2a
0000990c	li	r4,__mh_bundle_header
00009910	addis	r2,r31,0x1
00009914	addi	r5,r2,0x8460
00009918	addis	r2,r31,0x1
0000991c	addi	r6,r2,0x8cd4
00009920	li	r7,__mh_bundle_header
00009924	addis	r2,r31,0x1
00009928	addi	r8,r2,0x8c70
0000992c	li	r9,0x18e
00009930	or	r10,r0,r0
00009934	bl	0x10480	; symbol stub for: _DebugAssert
00009938	b	0x9a84
0000993c	lwz	r2,0x88(r30)
00009940	lwz	r2,0xc(r2)
00009944	addi	r0,r30,0x44
00009948	or	r3,r0,r0
0000994c	lis	r4,0x706e
00009950	ori	r4,r4,0x616d
00009954	or	r5,r2,r2
00009958	bl	_CMPutCFStringKeyPtr
0000995c	li	r0,0x80
00009960	stw	r0,0x4c(r30)
00009964	addi	r0,r30,0x44
00009968	addi	r2,r30,0x4c
0000996c	or	r3,r0,r0
00009970	lis	r4,0x636d
00009974	ori	r4,r4,0x6174
00009978	lis	r5,0x6c6f
0000997c	ori	r5,r5,0x6e67
00009980	or	r6,r2,r2
00009984	li	r7,0x4
00009988	bl	0xfae0	; symbol stub for: _AEPutParamPtr
0000998c	lwz	r2,0x88(r30)
00009990	addi	r0,r2,0x4
00009994	addi	r2,r30,0x44
00009998	or	r3,r0,r0
0000999c	li	r4,__mh_bundle_header
000099a0	or	r5,r2,r2
000099a4	bl	0xfaa0	; symbol stub for: _AEPutDesc
000099a8	addi	r0,r30,0x44
000099ac	or	r3,r0,r0
000099b0	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
000099b4	addi	r0,r30,0x44
000099b8	li	r3,__mh_bundle_header
000099bc	li	r4,__mh_bundle_header
000099c0	li	r5,0x1
000099c4	or	r6,r0,r0
000099c8	bl	0xf9a0	; symbol stub for: _AECreateList
000099cc	or	r0,r3,r3
000099d0	stw	r0,0x40(r30)
000099d4	lwz	r0,0x40(r30)
000099d8	stw	r0,0x38(r30)
000099dc	lwz	r0,0x38(r30)
000099e0	srawi	r2,r0,31
000099e4	xor	r0,r2,r0
000099e8	subf	r0,r2,r0
000099ec	neg	r0,r0
000099f0	rlwinm	r0,r0,1,31,31
000099f4	cmpwi	cr7,r0,__mh_bundle_header
000099f8	beq	cr7,0x9a38
000099fc	lwz	r0,0x38(r30)
00009a00	lis	r3,0x3f2a
00009a04	ori	r3,r3,0x3f2a
00009a08	li	r4,__mh_bundle_header
00009a0c	addis	r2,r31,0x1
00009a10	addi	r5,r2,0x8460
00009a14	addis	r2,r31,0x1
00009a18	addi	r6,r2,0x8cd4
00009a1c	li	r7,__mh_bundle_header
00009a20	addis	r2,r31,0x1
00009a24	addi	r8,r2,0x8c70
00009a28	li	r9,0x196
00009a2c	or	r10,r0,r0
00009a30	bl	0x10480	; symbol stub for: _DebugAssert
00009a34	b	0x9a84
00009a38	addi	r0,r30,0x44
00009a3c	or	r3,r0,r0
00009a40	lis	r4,0x706e
00009a44	ori	r4,r4,0x616d
00009a48	lwz	r5,0x90(r30)
00009a4c	bl	_CMPutCFStringKeyPtr
00009a50	lwz	r2,0x88(r30)
00009a54	addi	r2,r2,0x4
00009a58	addi	r0,r30,0x44
00009a5c	or	r3,r0,r0
00009a60	lis	r4,0x636d
00009a64	ori	r4,r4,0x7362
00009a68	or	r5,r2,r2
00009a6c	bl	0xfac0	; symbol stub for: _AEPutParamDesc
00009a70	addi	r0,r30,0x44
00009a74	lwz	r3,0x8c(r30)
00009a78	li	r4,__mh_bundle_header
00009a7c	or	r5,r0,r0
00009a80	bl	0xfaa0	; symbol stub for: _AEPutDesc
00009a84	addi	r0,r30,0x44
00009a88	or	r3,r0,r0
00009a8c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00009a90	lwz	r0,0x40(r30)
00009a94	or	r3,r0,r0
00009a98	lwz	r1,__mh_bundle_header(r1)
00009a9c	lwz	r0,0x8(r1)
00009aa0	mtspr	lr,r0
00009aa4	lmw	r30,0xfff8(r1)
00009aa8	blr
_CMHelperAECreateMenu:
00009aac	mfspr	r0,lr
00009ab0	stmw	r30,0xfff8(r1)
00009ab4	stw	r0,0x8(r1)
00009ab8	stwu	r1,0xffb0(r1)
00009abc	or	r30,r1,r1
00009ac0	stw	r3,0x68(r30)
00009ac4	li	r3,__mh_bundle_header
00009ac8	li	r4,__mh_bundle_header
00009acc	li	r5,__mh_bundle_header
00009ad0	lwz	r6,0x68(r30)
00009ad4	bl	0xf9a0	; symbol stub for: _AECreateList
00009ad8	or	r0,r3,r3
00009adc	or	r3,r0,r0
00009ae0	lwz	r1,__mh_bundle_header(r1)
00009ae4	lwz	r0,0x8(r1)
00009ae8	mtspr	lr,r0
00009aec	lmw	r30,0xfff8(r1)
00009af0	blr
_CMHelperAECreateSubmenuCommand:
00009af4	mfspr	r0,lr
00009af8	stmw	r30,0xfff8(r1)
00009afc	stw	r0,0x8(r1)
00009b00	stwu	r1,0xffa0(r1)
00009b04	or	r30,r1,r1
00009b08	stw	r3,0x78(r30)
00009b0c	stw	r4,0x7c(r30)
00009b10	stw	r5,0x80(r30)
00009b14	li	r3,__mh_bundle_header
00009b18	li	r4,__mh_bundle_header
00009b1c	li	r5,0x1
00009b20	lwz	r6,0x78(r30)
00009b24	bl	0xf9a0	; symbol stub for: _AECreateList
00009b28	or	r0,r3,r3
00009b2c	stw	r0,0x38(r30)
00009b30	lwz	r0,0x38(r30)
00009b34	cmpwi	cr7,r0,__mh_bundle_header
00009b38	beq	cr7,0x9b48
00009b3c	lwz	r0,0x38(r30)
00009b40	stw	r0,0x48(r30)
00009b44	b	0x9ba0
00009b48	lwz	r3,0x78(r30)
00009b4c	lis	r4,0x706e
00009b50	ori	r4,r4,0x616d
00009b54	lwz	r5,0x7c(r30)
00009b58	bl	_CMPutCFStringKeyPtr
00009b5c	or	r0,r3,r3
00009b60	stw	r0,0x38(r30)
00009b64	lwz	r0,0x38(r30)
00009b68	cmpwi	cr7,r0,__mh_bundle_header
00009b6c	bne	cr7,0x9b84
00009b70	lwz	r3,0x78(r30)
00009b74	lis	r4,0x636d
00009b78	ori	r4,r4,0x7362
00009b7c	lwz	r5,0x80(r30)
00009b80	bl	0xfac0	; symbol stub for: _AEPutParamDesc
00009b84	lwz	r0,0x38(r30)
00009b88	cmpwi	cr7,r0,__mh_bundle_header
00009b8c	beq	cr7,0x9b98
00009b90	lwz	r3,0x78(r30)
00009b94	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00009b98	lwz	r0,0x38(r30)
00009b9c	stw	r0,0x48(r30)
00009ba0	lwz	r0,0x48(r30)
00009ba4	or	r3,r0,r0
00009ba8	lwz	r1,__mh_bundle_header(r1)
00009bac	lwz	r0,0x8(r1)
00009bb0	mtspr	lr,r0
00009bb4	lmw	r30,0xfff8(r1)
00009bb8	blr
_CMHelperAEAddSubmenuCommand:
00009bbc	mfspr	r0,lr
00009bc0	stmw	r30,0xfff8(r1)
00009bc4	stw	r0,0x8(r1)
00009bc8	stwu	r1,0xffa0(r1)
00009bcc	or	r30,r1,r1
00009bd0	stw	r3,0x78(r30)
00009bd4	stw	r4,0x7c(r30)
00009bd8	stw	r5,0x80(r30)
00009bdc	addi	r0,r30,0x3c
00009be0	or	r3,r0,r0
00009be4	lwz	r4,0x7c(r30)
00009be8	lwz	r5,0x80(r30)
00009bec	bl	_CMHelperAECreateSubmenuCommand
00009bf0	or	r0,r3,r3
00009bf4	stw	r0,0x38(r30)
00009bf8	lwz	r0,0x38(r30)
00009bfc	cmpwi	cr7,r0,__mh_bundle_header
00009c00	beq	cr7,0x9c10
00009c04	lwz	r0,0x38(r30)
00009c08	stw	r0,0x48(r30)
00009c0c	b	0x9c40
00009c10	addi	r0,r30,0x3c
00009c14	lwz	r3,0x78(r30)
00009c18	li	r4,__mh_bundle_header
00009c1c	or	r5,r0,r0
00009c20	bl	0xfaa0	; symbol stub for: _AEPutDesc
00009c24	or	r0,r3,r3
00009c28	stw	r0,0x38(r30)
00009c2c	addi	r0,r30,0x3c
00009c30	or	r3,r0,r0
00009c34	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00009c38	lwz	r0,0x38(r30)
00009c3c	stw	r0,0x48(r30)
00009c40	lwz	r0,0x48(r30)
00009c44	or	r3,r0,r0
00009c48	lwz	r1,__mh_bundle_header(r1)
00009c4c	lwz	r0,0x8(r1)
00009c50	mtspr	lr,r0
00009c54	lmw	r30,0xfff8(r1)
00009c58	blr
_CMHelperAECreateCommandWithModifiers:
00009c5c	mfspr	r0,lr
00009c60	stmw	r30,0xfff8(r1)
00009c64	stw	r0,0x8(r1)
00009c68	stwu	r1,0xffa0(r1)
00009c6c	or	r30,r1,r1
00009c70	stw	r3,0x78(r30)
00009c74	stw	r4,0x7c(r30)
00009c78	stw	r5,0x80(r30)
00009c7c	stw	r6,0x84(r30)
00009c80	stw	r7,0x88(r30)
00009c84	or	r0,r8,r8
00009c88	stb	r0,0x8c(r30)
00009c8c	lbz	r0,0x8c(r30)
00009c90	rlwinm	r0,r0,0,24,31
00009c94	sth	r0,0x3c(r30)
00009c98	li	r3,__mh_bundle_header
00009c9c	li	r4,__mh_bundle_header
00009ca0	li	r5,0x1
00009ca4	lwz	r6,0x78(r30)
00009ca8	bl	0xf9a0	; symbol stub for: _AECreateList
00009cac	or	r0,r3,r3
00009cb0	stw	r0,0x38(r30)
00009cb4	lwz	r0,0x38(r30)
00009cb8	cmpwi	cr7,r0,__mh_bundle_header
00009cbc	beq	cr7,0x9ccc
00009cc0	lwz	r0,0x38(r30)
00009cc4	stw	r0,0x48(r30)
00009cc8	b	0x9de0
00009ccc	lwz	r3,0x78(r30)
00009cd0	lis	r4,0x706e
00009cd4	ori	r4,r4,0x616d
00009cd8	lwz	r5,0x7c(r30)
00009cdc	bl	_CMPutCFStringKeyPtr
00009ce0	or	r0,r3,r3
00009ce4	stw	r0,0x38(r30)
00009ce8	lwz	r0,0x38(r30)
00009cec	cmpwi	cr7,r0,__mh_bundle_header
00009cf0	bne	cr7,0x9d20
00009cf4	addi	r0,r30,0x80
00009cf8	lwz	r3,0x78(r30)
00009cfc	lis	r4,0x636d
00009d00	ori	r4,r4,0x6364
00009d04	lis	r5,0x6c6f
00009d08	ori	r5,r5,0x6e67
00009d0c	or	r6,r0,r0
00009d10	li	r7,0x4
00009d14	bl	0xfae0	; symbol stub for: _AEPutParamPtr
00009d18	or	r0,r3,r3
00009d1c	stw	r0,0x38(r30)
00009d20	lwz	r0,0x38(r30)
00009d24	cmpwi	cr7,r0,__mh_bundle_header
00009d28	bne	cr7,0x9d58
00009d2c	addi	r0,r30,0x84
00009d30	lwz	r3,0x78(r30)
00009d34	lis	r4,0x636d
00009d38	ori	r4,r4,0x6174
00009d3c	lis	r5,0x6c6f
00009d40	ori	r5,r5,0x6e67
00009d44	or	r6,r0,r0
00009d48	li	r7,0x4
00009d4c	bl	0xfae0	; symbol stub for: _AEPutParamPtr
00009d50	or	r0,r3,r3
00009d54	stw	r0,0x38(r30)
00009d58	lwz	r0,0x38(r30)
00009d5c	cmpwi	cr7,r0,__mh_bundle_header
00009d60	bne	cr7,0x9d90
00009d64	addi	r0,r30,0x3c
00009d68	lwz	r3,0x78(r30)
00009d6c	lis	r4,0x434d
00009d70	ori	r4,r4,0x6d64
00009d74	lis	r5,0x7368
00009d78	ori	r5,r5,0x6f72
00009d7c	or	r6,r0,r0
00009d80	li	r7,0x2
00009d84	bl	0xfae0	; symbol stub for: _AEPutParamPtr
00009d88	or	r0,r3,r3
00009d8c	stw	r0,0x38(r30)
00009d90	lwz	r0,0x38(r30)
00009d94	cmpwi	cr7,r0,__mh_bundle_header
00009d98	bne	cr7,0x9dc4
00009d9c	lwz	r0,0x88(r30)
00009da0	cmpwi	cr7,r0,__mh_bundle_header
00009da4	beq	cr7,0x9dc4
00009da8	lwz	r3,0x78(r30)
00009dac	lis	r4,0x434d
00009db0	ori	r4,r4,0x6963
00009db4	lwz	r5,0x88(r30)
00009db8	bl	_CMPutCFStringKeyPtr
00009dbc	or	r0,r3,r3
00009dc0	stw	r0,0x38(r30)
00009dc4	lwz	r0,0x38(r30)
00009dc8	cmpwi	cr7,r0,__mh_bundle_header
00009dcc	beq	cr7,0x9dd8
00009dd0	lwz	r3,0x78(r30)
00009dd4	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00009dd8	lwz	r0,0x38(r30)
00009ddc	stw	r0,0x48(r30)
00009de0	lwz	r0,0x48(r30)
00009de4	or	r3,r0,r0
00009de8	lwz	r1,__mh_bundle_header(r1)
00009dec	lwz	r0,0x8(r1)
00009df0	mtspr	lr,r0
00009df4	lmw	r30,0xfff8(r1)
00009df8	blr
_CMHelperAECreateCommand:
00009dfc	mfspr	r0,lr
00009e00	stmw	r30,0xfff8(r1)
00009e04	stw	r0,0x8(r1)
00009e08	stwu	r1,0xffb0(r1)
00009e0c	or	r30,r1,r1
00009e10	stw	r3,0x68(r30)
00009e14	stw	r4,0x6c(r30)
00009e18	stw	r5,0x70(r30)
00009e1c	stw	r6,0x74(r30)
00009e20	stw	r7,0x78(r30)
00009e24	lwz	r3,0x68(r30)
00009e28	lwz	r4,0x6c(r30)
00009e2c	lwz	r5,0x70(r30)
00009e30	lwz	r6,0x74(r30)
00009e34	lwz	r7,0x78(r30)
00009e38	li	r8,__mh_bundle_header
00009e3c	bl	_CMHelperAECreateCommandWithModifiers
00009e40	or	r0,r3,r3
00009e44	or	r3,r0,r0
00009e48	lwz	r1,__mh_bundle_header(r1)
00009e4c	lwz	r0,0x8(r1)
00009e50	mtspr	lr,r0
00009e54	lmw	r30,0xfff8(r1)
00009e58	blr
_CMHelperAEAddCommandWithModifiers:
00009e5c	mfspr	r0,lr
00009e60	stmw	r30,0xfff8(r1)
00009e64	stw	r0,0x8(r1)
00009e68	stwu	r1,0xffa0(r1)
00009e6c	or	r30,r1,r1
00009e70	stw	r3,0x78(r30)
00009e74	stw	r4,0x7c(r30)
00009e78	stw	r5,0x80(r30)
00009e7c	stw	r6,0x84(r30)
00009e80	stw	r7,0x88(r30)
00009e84	or	r0,r8,r8
00009e88	stb	r0,0x8c(r30)
00009e8c	addi	r2,r30,0x3c
00009e90	lbz	r0,0x8c(r30)
00009e94	rlwinm	r0,r0,0,24,31
00009e98	or	r3,r2,r2
00009e9c	lwz	r4,0x7c(r30)
00009ea0	lwz	r5,0x80(r30)
00009ea4	lwz	r6,0x84(r30)
00009ea8	lwz	r7,0x88(r30)
00009eac	or	r8,r0,r0
00009eb0	bl	_CMHelperAECreateCommandWithModifiers
00009eb4	or	r0,r3,r3
00009eb8	stw	r0,0x38(r30)
00009ebc	lwz	r0,0x38(r30)
00009ec0	cmpwi	cr7,r0,__mh_bundle_header
00009ec4	beq	cr7,0x9ed4
00009ec8	lwz	r0,0x38(r30)
00009ecc	stw	r0,0x48(r30)
00009ed0	b	0x9f04
00009ed4	addi	r0,r30,0x3c
00009ed8	lwz	r3,0x78(r30)
00009edc	li	r4,__mh_bundle_header
00009ee0	or	r5,r0,r0
00009ee4	bl	0xfaa0	; symbol stub for: _AEPutDesc
00009ee8	or	r0,r3,r3
00009eec	stw	r0,0x38(r30)
00009ef0	addi	r0,r30,0x3c
00009ef4	or	r3,r0,r0
00009ef8	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
00009efc	lwz	r0,0x38(r30)
00009f00	stw	r0,0x48(r30)
00009f04	lwz	r0,0x48(r30)
00009f08	or	r3,r0,r0
00009f0c	lwz	r1,__mh_bundle_header(r1)
00009f10	lwz	r0,0x8(r1)
00009f14	mtspr	lr,r0
00009f18	lmw	r30,0xfff8(r1)
00009f1c	blr
_CMHelperAEAddCommand:
00009f20	mfspr	r0,lr
00009f24	stmw	r30,0xfff8(r1)
00009f28	stw	r0,0x8(r1)
00009f2c	stwu	r1,0xffb0(r1)
00009f30	or	r30,r1,r1
00009f34	stw	r3,0x68(r30)
00009f38	stw	r4,0x6c(r30)
00009f3c	stw	r5,0x70(r30)
00009f40	stw	r6,0x74(r30)
00009f44	stw	r7,0x78(r30)
00009f48	lwz	r3,0x68(r30)
00009f4c	lwz	r4,0x6c(r30)
00009f50	lwz	r5,0x70(r30)
00009f54	lwz	r6,0x74(r30)
00009f58	lwz	r7,0x78(r30)
00009f5c	li	r8,__mh_bundle_header
00009f60	bl	_CMHelperAEAddCommandWithModifiers
00009f64	or	r0,r3,r3
00009f68	or	r3,r0,r0
00009f6c	lwz	r1,__mh_bundle_header(r1)
00009f70	lwz	r0,0x8(r1)
00009f74	mtspr	lr,r0
00009f78	lmw	r30,0xfff8(r1)
00009f7c	blr
_CMHelperImportAEInternal:
00009f80	mfspr	r0,lr
00009f84	stmw	r30,0xfff8(r1)
00009f88	stw	r0,0x8(r1)
00009f8c	stwu	r1,0xfb40(r1)
00009f90	or	r30,r1,r1
00009f94	bcl	20,31,0x9f98
00009f98	mfspr	r31,lr
00009f9c	stw	r3,0x4d8(r30)
00009fa0	stw	r4,0x4dc(r30)
00009fa4	stw	r5,0x4e0(r30)
00009fa8	addi	r0,r30,0x4c
00009fac	lwz	r3,0x4e0(r30)
00009fb0	or	r4,r0,r0
00009fb4	bl	0xf940	; symbol stub for: _AECountItems
00009fb8	or	r0,r3,r3
00009fbc	stw	r0,0x48(r30)
00009fc0	lwz	r0,0x48(r30)
00009fc4	cmpwi	cr7,r0,__mh_bundle_header
00009fc8	beq	cr7,0x9fd8
00009fcc	lwz	r0,0x48(r30)
00009fd0	stw	r0,0x4a8(r30)
00009fd4	b	0xa408
00009fd8	li	r0,0x1
00009fdc	stw	r0,0x44(r30)
00009fe0	b	0xa3f0
00009fe4	addi	r0,r30,0x58
00009fe8	addi	r2,r30,0x50
00009fec	lwz	r3,0x4e0(r30)
00009ff0	lwz	r4,0x44(r30)
00009ff4	lis	r5,0x2a2a
00009ff8	ori	r5,r5,0x2a2a
00009ffc	or	r6,r0,r0
0000a000	or	r7,r2,r2
0000a004	bl	0xfa20	; symbol stub for: _AEGetNthDesc
0000a008	or	r0,r3,r3
0000a00c	stw	r0,0x48(r30)
0000a010	lwz	r0,0x48(r30)
0000a014	cmpwi	cr7,r0,__mh_bundle_header
0000a018	bne	cr7,0xa400
0000a01c	addi	r0,r30,0x50
0000a020	addi	r2,r30,0x84
0000a024	or	r3,r0,r0
0000a028	lis	r4,0x636d
0000a02c	ori	r4,r4,0x7362
0000a030	lis	r5,0x6c69
0000a034	ori	r5,r5,0x7374
0000a038	or	r6,r2,r2
0000a03c	bl	0xfa40	; symbol stub for: _AEGetParamDesc
0000a040	or	r0,r3,r3
0000a044	stw	r0,0x48(r30)
0000a048	lwz	r0,0x48(r30)
0000a04c	cmpwi	cr7,r0,__mh_bundle_header
0000a050	bne	cr7,0xa1a0
0000a054	addi	r0,r30,0x8c
0000a058	lwz	r3,0x4d8(r30)
0000a05c	or	r4,r0,r0
0000a060	bl	_CMHelperCreateSubmenu
0000a064	addi	r0,r30,0x8c
0000a068	addi	r2,r30,0x84
0000a06c	lwz	r3,0x4d8(r30)
0000a070	or	r4,r0,r0
0000a074	or	r5,r2,r2
0000a078	bl	_CMHelperImportAEInternal
0000a07c	or	r0,r3,r3
0000a080	stw	r0,0x48(r30)
0000a084	lwz	r0,0x48(r30)
0000a088	cmpwi	cr7,r0,__mh_bundle_header
0000a08c	bne	cr7,0xa17c
0000a090	lwz	r2,0x4d8(r30)
0000a094	lwz	r0,0x14(r2)
0000a098	lwz	r2,0x98(r30)
0000a09c	lwz	r9,0x9c(r30)
0000a0a0	or	r3,r0,r0
0000a0a4	or	r4,r2,r2
0000a0a8	or	r5,r9,r9
0000a0ac	bl	0xfd80	; symbol stub for: _CFDictionaryAddValue
0000a0b0	addi	r0,r30,0xa0
0000a0b4	li	r3,__mh_bundle_header
0000a0b8	li	r4,__mh_bundle_header
0000a0bc	li	r5,0x1
0000a0c0	or	r6,r0,r0
0000a0c4	bl	0xf9a0	; symbol stub for: _AECreateList
0000a0c8	or	r0,r3,r3
0000a0cc	stw	r0,0x48(r30)
0000a0d0	lwz	r0,0x48(r30)
0000a0d4	cmpwi	cr7,r0,__mh_bundle_header
0000a0d8	bne	cr7,0xa14c
0000a0dc	lwz	r2,0x98(r30)
0000a0e0	addi	r0,r30,0xa0
0000a0e4	or	r3,r0,r0
0000a0e8	lis	r4,0x706e
0000a0ec	ori	r4,r4,0x616d
0000a0f0	or	r5,r2,r2
0000a0f4	bl	_CMPutCFStringKeyPtr
0000a0f8	li	r0,0x80
0000a0fc	stw	r0,0x64(r30)
0000a100	addi	r0,r30,0xa0
0000a104	addi	r2,r30,0x64
0000a108	or	r3,r0,r0
0000a10c	lis	r4,0x636d
0000a110	ori	r4,r4,0x6174
0000a114	lis	r5,0x6c6f
0000a118	ori	r5,r5,0x6e67
0000a11c	or	r6,r2,r2
0000a120	li	r7,0x4
0000a124	bl	0xfae0	; symbol stub for: _AEPutParamPtr
0000a128	addi	r0,r30,0x84
0000a12c	addi	r2,r30,0xa0
0000a130	or	r3,r0,r0
0000a134	li	r4,__mh_bundle_header
0000a138	or	r5,r2,r2
0000a13c	bl	0xfaa0	; symbol stub for: _AEPutDesc
0000a140	addi	r0,r30,0xa0
0000a144	or	r3,r0,r0
0000a148	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
0000a14c	addi	r0,r30,0x50
0000a150	addi	r2,r30,0x84
0000a154	or	r3,r0,r0
0000a158	lis	r4,0x636d
0000a15c	ori	r4,r4,0x7362
0000a160	or	r5,r2,r2
0000a164	bl	0xfac0	; symbol stub for: _AEPutParamDesc
0000a168	addi	r0,r30,0x50
0000a16c	lwz	r3,0x4e0(r30)
0000a170	lwz	r4,0x44(r30)
0000a174	or	r5,r0,r0
0000a178	bl	0xfaa0	; symbol stub for: _AEPutDesc
0000a17c	addi	r0,r30,0x8c
0000a180	or	r3,r0,r0
0000a184	bl	_CMHelperDisposeSubmenu
0000a188	addi	r0,r30,0x84
0000a18c	or	r3,r0,r0
0000a190	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
0000a194	lwz	r0,0x48(r30)
0000a198	cmpwi	cr7,r0,__mh_bundle_header
0000a19c	bne	cr7,0xa400
0000a1a0	addi	r0,r30,0x50
0000a1a4	addi	r2,r30,0xa8
0000a1a8	addi	r9,r30,0x5c
0000a1ac	or	r3,r0,r0
0000a1b0	lis	r4,0x434d
0000a1b4	ori	r4,r4,0x6963
0000a1b8	lis	r5,0x7574
0000a1bc	ori	r5,r5,0x7874
0000a1c0	li	r6,__mh_bundle_header
0000a1c4	or	r7,r2,r2
0000a1c8	li	r8,0x400
0000a1cc	bl	0xfa60	; symbol stub for: _AEGetParamPtr
0000a1d0	or	r0,r3,r3
0000a1d4	stw	r0,0x48(r30)
0000a1d8	lwz	r0,0x48(r30)
0000a1dc	cmpwi	cr7,r0,__mh_bundle_header
0000a1e0	beq	cr7,0xa1f0
0000a1e4	li	r0,__mh_bundle_header
0000a1e8	stw	r0,0x60(r30)
0000a1ec	b	0xa234
0000a1f0	lwz	r0,0x5c(r30)
0000a1f4	rlwinm	r0,r0,31,1,31
0000a1f8	or	r2,r0,r0
0000a1fc	addi	r0,r30,0xa8
0000a200	li	r3,__mh_bundle_header
0000a204	or	r4,r0,r0
0000a208	or	r5,r2,r2
0000a20c	bl	0xffe0	; symbol stub for: _CFStringCreateWithCharacters
0000a210	or	r0,r3,r3
0000a214	stw	r0,0x3c(r30)
0000a218	lwz	r3,0x4d8(r30)
0000a21c	lwz	r4,0x3c(r30)
0000a220	bl	_CMHelperGetIconSuiteFromPathWithCache
0000a224	or	r0,r3,r3
0000a228	stw	r0,0x60(r30)
0000a22c	lwz	r3,0x3c(r30)
0000a230	bl	0xff40	; symbol stub for: _CFRelease
0000a234	addi	r0,r30,0x50
0000a238	addi	r2,r30,0x68
0000a23c	or	r3,r0,r0
0000a240	lis	r4,0x434d
0000a244	ori	r4,r4,0x6d64
0000a248	lis	r5,0x7368
0000a24c	ori	r5,r5,0x6f72
0000a250	li	r6,__mh_bundle_header
0000a254	or	r7,r2,r2
0000a258	li	r8,0x2
0000a25c	li	r9,__mh_bundle_header
0000a260	bl	0xfa60	; symbol stub for: _AEGetParamPtr
0000a264	or	r0,r3,r3
0000a268	stw	r0,0x48(r30)
0000a26c	lwz	r0,0x48(r30)
0000a270	cmpwi	cr7,r0,__mh_bundle_header
0000a274	beq	cr7,0xa280
0000a278	li	r0,__mh_bundle_header
0000a27c	sth	r0,0x68(r30)
0000a280	addi	r0,r30,0x50
0000a284	addi	r2,r30,0x64
0000a288	or	r3,r0,r0
0000a28c	lis	r4,0x636d
0000a290	ori	r4,r4,0x6174
0000a294	lis	r5,0x6c6f
0000a298	ori	r5,r5,0x6e67
0000a29c	li	r6,__mh_bundle_header
0000a2a0	or	r7,r2,r2
0000a2a4	li	r8,0x4
0000a2a8	li	r9,__mh_bundle_header
0000a2ac	bl	0xfa60	; symbol stub for: _AEGetParamPtr
0000a2b0	or	r0,r3,r3
0000a2b4	stw	r0,0x48(r30)
0000a2b8	lwz	r0,0x48(r30)
0000a2bc	cmpwi	cr7,r0,__mh_bundle_header
0000a2c0	beq	cr7,0xa2cc
0000a2c4	li	r0,__mh_bundle_header
0000a2c8	stw	r0,0x64(r30)
0000a2cc	addis	r2,r31,0x1
0000a2d0	addi	r0,r2,0x9598
0000a2d4	stw	r0,0x6c(r30)
0000a2d8	addis	r2,r31,0x1
0000a2dc	addi	r0,r2,0x95b8
0000a2e0	stw	r0,0x70(r30)
0000a2e4	addis	r2,r31,0x1
0000a2e8	addi	r0,r2,0x95a8
0000a2ec	stw	r0,0x74(r30)
0000a2f0	addi	r0,r30,0x60
0000a2f4	li	r3,__mh_bundle_header
0000a2f8	or	r4,r0,r0
0000a2fc	li	r5,0x4
0000a300	bl	0xfd40	; symbol stub for: _CFDataCreate
0000a304	or	r0,r3,r3
0000a308	stw	r0,0x78(r30)
0000a30c	addi	r0,r30,0x68
0000a310	li	r3,__mh_bundle_header
0000a314	li	r4,0x1
0000a318	or	r5,r0,r0
0000a31c	bl	0xfea0	; symbol stub for: _CFNumberCreate
0000a320	or	r0,r3,r3
0000a324	stw	r0,0x7c(r30)
0000a328	addi	r0,r30,0x64
0000a32c	li	r3,__mh_bundle_header
0000a330	li	r4,0x3
0000a334	or	r5,r0,r0
0000a338	bl	0xfea0	; symbol stub for: _CFNumberCreate
0000a33c	or	r0,r3,r3
0000a340	stw	r0,0x80(r30)
0000a344	addi	r0,r30,0x6c
0000a348	addi	r2,r30,0x78
0000a34c	li	r3,__mh_bundle_header
0000a350	or	r4,r0,r0
0000a354	or	r5,r2,r2
0000a358	li	r6,0x3
0000a35c	addis	r2,r31,0x1
0000a360	lwz	r7,0x9094(r2)
0000a364	addis	r2,r31,0x1
0000a368	lwz	r8,0x9098(r2)
0000a36c	bl	0xfda0	; symbol stub for: _CFDictionaryCreate
0000a370	or	r0,r3,r3
0000a374	stw	r0,0x38(r30)
0000a378	li	r0,__mh_bundle_header
0000a37c	stw	r0,0x40(r30)
0000a380	b	0xa3b0
0000a384	lwz	r0,0x40(r30)
0000a388	rlwinm	r2,r0,2,0,29
0000a38c	addi	r0,r30,0x38
0000a390	add	r2,r2,r0
0000a394	addi	r2,r2,0x40
0000a398	lwz	r0,__mh_bundle_header(r2)
0000a39c	or	r3,r0,r0
0000a3a0	bl	0xff40	; symbol stub for: _CFRelease
0000a3a4	lwz	r2,0x40(r30)
0000a3a8	addi	r0,r2,0x1
0000a3ac	stw	r0,0x40(r30)
0000a3b0	lwz	r0,0x40(r30)
0000a3b4	cmpwi	cr7,r0,0x2
0000a3b8	ble	cr7,0xa384
0000a3bc	lwz	r2,0x4dc(r30)
0000a3c0	lwz	r0,0x10(r2)
0000a3c4	or	r3,r0,r0
0000a3c8	lwz	r4,0x38(r30)
0000a3cc	bl	0xfbe0	; symbol stub for: _CFArrayAppendValue
0000a3d0	addi	r0,r30,0x50
0000a3d4	or	r3,r0,r0
0000a3d8	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
0000a3dc	li	r0,__mh_bundle_header
0000a3e0	stw	r0,0x48(r30)
0000a3e4	lwz	r2,0x44(r30)
0000a3e8	addi	r0,r2,0x1
0000a3ec	stw	r0,0x44(r30)
0000a3f0	lwz	r0,0x4c(r30)
0000a3f4	lwz	r2,0x44(r30)
0000a3f8	cmpw	cr7,r2,r0
0000a3fc	ble	cr7,0x9fe4
0000a400	lwz	r0,0x48(r30)
0000a404	stw	r0,0x4a8(r30)
0000a408	lwz	r0,0x4a8(r30)
0000a40c	or	r3,r0,r0
0000a410	lwz	r1,__mh_bundle_header(r1)
0000a414	lwz	r0,0x8(r1)
0000a418	mtspr	lr,r0
0000a41c	lmw	r30,0xfff8(r1)
0000a420	blr
_CMHelperImportAE:
0000a424	mfspr	r0,lr
0000a428	stmw	r30,0xfff8(r1)
0000a42c	stw	r0,0x8(r1)
0000a430	stwu	r1,0xff90(r1)
0000a434	or	r30,r1,r1
0000a438	stw	r3,0x88(r30)
0000a43c	stw	r4,0x8c(r30)
0000a440	addi	r0,r30,0x3c
0000a444	lwz	r3,0x88(r30)
0000a448	or	r4,r0,r0
0000a44c	bl	_CMHelperCreateSubmenu
0000a450	addi	r0,r30,0x3c
0000a454	lwz	r3,0x88(r30)
0000a458	or	r4,r0,r0
0000a45c	lwz	r5,0x8c(r30)
0000a460	bl	_CMHelperImportAEInternal
0000a464	or	r0,r3,r3
0000a468	stw	r0,0x38(r30)
0000a46c	addi	r0,r30,0x3c
0000a470	or	r3,r0,r0
0000a474	bl	_CMHelperDisposeSubmenu
0000a478	lwz	r0,0x38(r30)
0000a47c	or	r3,r0,r0
0000a480	lwz	r1,__mh_bundle_header(r1)
0000a484	lwz	r0,0x8(r1)
0000a488	mtspr	lr,r0
0000a48c	lmw	r30,0xfff8(r1)
0000a490	blr
_CMHelperDumpAEInternal:
0000a494	mfspr	r0,lr
0000a498	stmw	r30,0xfff8(r1)
0000a49c	stw	r0,0x8(r1)
0000a4a0	stwu	r1,0xfb90(r1)
0000a4a4	or	r30,r1,r1
0000a4a8	bcl	20,31,0xa4ac
0000a4ac	mfspr	r31,lr
0000a4b0	stw	r3,0x488(r30)
0000a4b4	stw	r4,0x48c(r30)
0000a4b8	addi	r0,r30,0x44
0000a4bc	lwz	r3,0x488(r30)
0000a4c0	or	r4,r0,r0
0000a4c4	bl	0xf940	; symbol stub for: _AECountItems
0000a4c8	or	r0,r3,r3
0000a4cc	stw	r0,0x40(r30)
0000a4d0	lwz	r0,0x40(r30)
0000a4d4	cmpwi	cr7,r0,__mh_bundle_header
0000a4d8	beq	cr7,0xa4e8
0000a4dc	lwz	r0,0x40(r30)
0000a4e0	stw	r0,0x458(r30)
0000a4e4	b	0xa6cc
0000a4e8	li	r0,0x1
0000a4ec	stw	r0,0x3c(r30)
0000a4f0	b	0xa6b4
0000a4f4	addi	r0,r30,0x50
0000a4f8	addi	r2,r30,0x48
0000a4fc	lwz	r3,0x488(r30)
0000a500	lwz	r4,0x3c(r30)
0000a504	lis	r5,0x2a2a
0000a508	ori	r5,r5,0x2a2a
0000a50c	or	r6,r0,r0
0000a510	or	r7,r2,r2
0000a514	bl	0xfa20	; symbol stub for: _AEGetNthDesc
0000a518	or	r0,r3,r3
0000a51c	stw	r0,0x40(r30)
0000a520	lwz	r0,0x40(r30)
0000a524	cmpwi	cr7,r0,__mh_bundle_header
0000a528	bne	cr7,0xa6c4
0000a52c	addi	r0,r30,0x48
0000a530	addi	r2,r30,0x64
0000a534	addi	r9,r30,0x60
0000a538	or	r3,r0,r0
0000a53c	lis	r4,0x706e
0000a540	ori	r4,r4,0x616d
0000a544	lis	r5,0x5445
0000a548	ori	r5,r5,0x5854
0000a54c	li	r6,__mh_bundle_header
0000a550	or	r7,r2,r2
0000a554	li	r8,0x3e6
0000a558	bl	0xfa60	; symbol stub for: _AEGetParamPtr
0000a55c	or	r0,r3,r3
0000a560	stw	r0,0x40(r30)
0000a564	lwz	r0,0x40(r30)
0000a568	cmpwi	cr7,r0,__mh_bundle_header
0000a56c	bne	cr7,0xa5cc
0000a570	lwz	r2,0x60(r30)
0000a574	addi	r0,r30,0x38
0000a578	add	r2,r0,r2
0000a57c	li	r0,__mh_bundle_header
0000a580	stb	r0,0x2c(r2)
0000a584	li	r0,__mh_bundle_header
0000a588	stw	r0,0x38(r30)
0000a58c	b	0xa5a8
0000a590	addis	r2,r31,0x1
0000a594	addi	r3,r2,0x8068
0000a598	bl	0x11320	; symbol stub for: _printf$LDBL128
0000a59c	lwz	r2,0x38(r30)
0000a5a0	addi	r0,r2,0x1
0000a5a4	stw	r0,0x38(r30)
0000a5a8	lwz	r0,0x38(r30)
0000a5ac	lwz	r2,0x48c(r30)
0000a5b0	cmpw	cr7,r0,r2
0000a5b4	blt	cr7,0xa590
0000a5b8	addi	r0,r30,0x64
0000a5bc	addis	r2,r31,0x1
0000a5c0	addi	r3,r2,0x806c
0000a5c4	or	r4,r0,r0
0000a5c8	bl	0x11320	; symbol stub for: _printf$LDBL128
0000a5cc	addi	r0,r30,0x48
0000a5d0	addi	r2,r30,0x58
0000a5d4	or	r3,r0,r0
0000a5d8	lis	r4,0x636d
0000a5dc	ori	r4,r4,0x7362
0000a5e0	lis	r5,0x6c69
0000a5e4	ori	r5,r5,0x7374
0000a5e8	or	r6,r2,r2
0000a5ec	bl	0xfa40	; symbol stub for: _AEGetParamDesc
0000a5f0	or	r0,r3,r3
0000a5f4	stw	r0,0x40(r30)
0000a5f8	lwz	r0,0x40(r30)
0000a5fc	cmpwi	cr7,r0,__mh_bundle_header
0000a600	bne	cr7,0xa634
0000a604	li	r3,0xa
0000a608	bl	0x113c0	; symbol stub for: _putchar
0000a60c	lwz	r2,0x48c(r30)
0000a610	addi	r2,r2,0x1
0000a614	addi	r0,r30,0x58
0000a618	or	r3,r0,r0
0000a61c	or	r4,r2,r2
0000a620	bl	_CMHelperDumpAEInternal
0000a624	addi	r0,r30,0x58
0000a628	or	r3,r0,r0
0000a62c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
0000a630	b	0xa68c
0000a634	addi	r0,r30,0x48
0000a638	addi	r2,r30,0x54
0000a63c	or	r3,r0,r0
0000a640	lis	r4,0x636d
0000a644	ori	r4,r4,0x6364
0000a648	lis	r5,0x6c6f
0000a64c	ori	r5,r5,0x6e67
0000a650	li	r6,__mh_bundle_header
0000a654	or	r7,r2,r2
0000a658	li	r8,0x4
0000a65c	li	r9,__mh_bundle_header
0000a660	bl	0xfa60	; symbol stub for: _AEGetParamPtr
0000a664	or	r0,r3,r3
0000a668	stw	r0,0x40(r30)
0000a66c	lwz	r0,0x40(r30)
0000a670	cmpwi	cr7,r0,__mh_bundle_header
0000a674	bne	cr7,0xa68c
0000a678	lwz	r0,0x54(r30)
0000a67c	addis	r2,r31,0x1
0000a680	addi	r3,r2,0x8074
0000a684	or	r4,r0,r0
0000a688	bl	0x11320	; symbol stub for: _printf$LDBL128
0000a68c	li	r3,0xa
0000a690	bl	0x113c0	; symbol stub for: _putchar
0000a694	addi	r0,r30,0x48
0000a698	or	r3,r0,r0
0000a69c	bl	0xf9c0	; symbol stub for: _AEDisposeDesc
0000a6a0	li	r0,__mh_bundle_header
0000a6a4	stw	r0,0x40(r30)
0000a6a8	lwz	r2,0x3c(r30)
0000a6ac	addi	r0,r2,0x1
0000a6b0	stw	r0,0x3c(r30)
0000a6b4	lwz	r0,0x44(r30)
0000a6b8	lwz	r2,0x3c(r30)
0000a6bc	cmpw	cr7,r2,r0
0000a6c0	ble	cr7,0xa4f4
0000a6c4	lwz	r0,0x40(r30)
0000a6c8	stw	r0,0x458(r30)
0000a6cc	lwz	r0,0x458(r30)
0000a6d0	or	r3,r0,r0
0000a6d4	lwz	r1,__mh_bundle_header(r1)
0000a6d8	lwz	r0,0x8(r1)
0000a6dc	mtspr	lr,r0
0000a6e0	lmw	r30,0xfff8(r1)
0000a6e4	blr
_CMHelperDumpAE:
0000a6e8	mfspr	r0,lr
0000a6ec	stmw	r30,0xfff8(r1)
0000a6f0	stw	r0,0x8(r1)
0000a6f4	stwu	r1,0xffb0(r1)
0000a6f8	or	r30,r1,r1
0000a6fc	stw	r3,0x68(r30)
0000a700	lwz	r3,0x68(r30)
0000a704	li	r4,__mh_bundle_header
0000a708	bl	_CMHelperDumpAEInternal
0000a70c	or	r0,r3,r3
0000a710	or	r3,r0,r0
0000a714	lwz	r1,__mh_bundle_header(r1)
0000a718	lwz	r0,0x8(r1)
0000a71c	mtspr	lr,r0
0000a720	lmw	r30,0xfff8(r1)
0000a724	blr
_mach_override:
0000a728	mfspr	r0,lr
0000a72c	stmw	r30,0xfff8(r1)
0000a730	stw	r0,0x8(r1)
0000a734	stwu	r1,0xffa0(r1)
0000a738	or	r30,r1,r1
0000a73c	bcl	20,31,0xa740
0000a740	mfspr	r31,lr
0000a744	stw	r3,0x78(r30)
0000a748	stw	r4,0x7c(r30)
0000a74c	stw	r5,0x80(r30)
0000a750	stw	r6,0x84(r30)
0000a754	lwz	r0,0x78(r30)
0000a758	cmpwi	cr7,r0,__mh_bundle_header
0000a75c	mfcr	r0
0000a760	rlwinm	r0,r0,31,31,31
0000a764	cmpwi	cr7,r0,__mh_bundle_header
0000a768	beq	cr7,0xa78c
0000a76c	addis	r2,r31,__mh_bundle_header
0000a770	addi	r3,r2,0x7de4
0000a774	addis	r2,r31,__mh_bundle_header
0000a778	addi	r4,r2,0x7e04
0000a77c	li	r5,0x88
0000a780	addis	r2,r31,__mh_bundle_header
0000a784	addi	r6,r2,0x7e40
0000a788	bl	___eprintf
0000a78c	lwz	r2,0x78(r30)
0000a790	lbz	r0,__mh_bundle_header(r2)
0000a794	extsb	r0,r0
0000a798	cmpwi	cr7,r0,__mh_bundle_header
0000a79c	mfcr	r0
0000a7a0	rlwinm	r0,r0,31,31,31
0000a7a4	cmpwi	cr7,r0,__mh_bundle_header
0000a7a8	beq	cr7,0xa7cc
0000a7ac	addis	r2,r31,__mh_bundle_header
0000a7b0	addi	r3,r2,0x7de4
0000a7b4	addis	r2,r31,__mh_bundle_header
0000a7b8	addi	r4,r2,0x7e04
0000a7bc	li	r5,0x89
0000a7c0	addis	r2,r31,__mh_bundle_header
0000a7c4	addi	r6,r2,0x7e5c
0000a7c8	bl	___eprintf
0000a7cc	lwz	r0,0x80(r30)
0000a7d0	cmpwi	cr7,r0,__mh_bundle_header
0000a7d4	mfcr	r0
0000a7d8	rlwinm	r0,r0,31,31,31
0000a7dc	cmpwi	cr7,r0,__mh_bundle_header
0000a7e0	beq	cr7,0xa804
0000a7e4	addis	r2,r31,__mh_bundle_header
0000a7e8	addi	r3,r2,0x7de4
0000a7ec	addis	r2,r31,__mh_bundle_header
0000a7f0	addi	r4,r2,0x7e04
0000a7f4	li	r5,0x8a
0000a7f8	addis	r2,r31,__mh_bundle_header
0000a7fc	addi	r6,r2,0x7e84
0000a800	bl	___eprintf
0000a804	lwz	r0,0x7c(r30)
0000a808	cmpwi	cr7,r0,__mh_bundle_header
0000a80c	beq	cr7,0xa82c
0000a810	addi	r0,r30,0x38
0000a814	lwz	r3,0x78(r30)
0000a818	lwz	r4,0x7c(r30)
0000a81c	or	r5,r0,r0
0000a820	li	r6,__mh_bundle_header
0000a824	bl	0x10dc0	; symbol stub for: __dyld_lookup_and_bind_with_hint
0000a828	b	0xa840
0000a82c	addi	r0,r30,0x38
0000a830	lwz	r3,0x78(r30)
0000a834	or	r4,r0,r0
0000a838	li	r5,__mh_bundle_header
0000a83c	bl	0x10da0	; symbol stub for: __dyld_lookup_and_bind
0000a840	lwz	r0,0x38(r30)
0000a844	or	r3,r0,r0
0000a848	lwz	r4,0x80(r30)
0000a84c	lwz	r5,0x84(r30)
0000a850	bl	_mach_override_ptr
0000a854	or	r0,r3,r3
0000a858	or	r3,r0,r0
0000a85c	lwz	r1,__mh_bundle_header(r1)
0000a860	lwz	r0,0x8(r1)
0000a864	mtspr	lr,r0
0000a868	lmw	r30,0xfff8(r1)
0000a86c	blr
_mach_override_ptr:
0000a870	mfspr	r0,lr
0000a874	stmw	r30,0xfff8(r1)
0000a878	stw	r0,0x8(r1)
0000a87c	stwu	r1,0xff90(r1)
0000a880	or	r30,r1,r1
0000a884	bcl	20,31,0xa888
0000a888	mfspr	r31,lr
0000a88c	stw	r3,0x88(r30)
0000a890	stw	r4,0x8c(r30)
0000a894	stw	r5,0x90(r30)
0000a898	lwz	r0,0x88(r30)
0000a89c	cmpwi	cr7,r0,__mh_bundle_header
0000a8a0	mfcr	r0
0000a8a4	rlwinm	r0,r0,31,31,31
0000a8a8	cmpwi	cr7,r0,__mh_bundle_header
0000a8ac	beq	cr7,0xa8d0
0000a8b0	addis	r2,r31,__mh_bundle_header
0000a8b4	addi	r3,r2,0x7c9c
0000a8b8	addis	r2,r31,__mh_bundle_header
0000a8bc	addi	r4,r2,0x7cbc
0000a8c0	li	r5,0xa4
0000a8c4	addis	r2,r31,__mh_bundle_header
0000a8c8	addi	r6,r2,0x7d54
0000a8cc	bl	___eprintf
0000a8d0	lwz	r0,0x8c(r30)
0000a8d4	cmpwi	cr7,r0,__mh_bundle_header
0000a8d8	mfcr	r0
0000a8dc	rlwinm	r0,r0,31,31,31
0000a8e0	cmpwi	cr7,r0,__mh_bundle_header
0000a8e4	beq	cr7,0xa908
0000a8e8	addis	r2,r31,__mh_bundle_header
0000a8ec	addi	r3,r2,0x7c9c
0000a8f0	addis	r2,r31,__mh_bundle_header
0000a8f4	addi	r4,r2,0x7cbc
0000a8f8	li	r5,0xa5
0000a8fc	addis	r2,r31,__mh_bundle_header
0000a900	addi	r6,r2,0x7d3c
0000a904	bl	___eprintf
0000a908	lwz	r0,0x88(r30)
0000a90c	stw	r0,0x4c(r30)
0000a910	li	r0,__mh_bundle_header
0000a914	stw	r0,0x48(r30)
0000a918	lwz	r2,0x4c(r30)
0000a91c	lwz	r0,__mh_bundle_header(r2)
0000a920	stw	r0,0x44(r30)
0000a924	lwz	r0,0x48(r30)
0000a928	cmpwi	cr7,r0,__mh_bundle_header
0000a92c	bne	cr7,0xa954
0000a930	lwz	r0,0x44(r30)
0000a934	rlwinm	r2,r0,0,11,5
0000a938	lis	r0,0x7c09
0000a93c	ori	r0,r0,0x3a6
0000a940	cmpw	cr7,r2,r0
0000a944	bne	cr7,0xa954
0000a948	lis	r0,0xf800
0000a94c	ori	r0,r0,0x1
0000a950	stw	r0,0x48(r30)
0000a954	lwz	r0,0x48(r30)
0000a958	cmpwi	cr7,r0,__mh_bundle_header
0000a95c	bne	cr7,0xa9cc
0000a960	addis	r2,r31,0x1
0000a964	lwz	r2,0x87b8(r2)
0000a968	lwz	r2,__mh_bundle_header(r2)
0000a96c	lwz	r0,0x4c(r30)
0000a970	or	r3,r2,r2
0000a974	or	r4,r0,r0
0000a978	li	r5,0x4
0000a97c	li	r6,__mh_bundle_header
0000a980	li	r7,0x17
0000a984	bl	0x11660	; symbol stub for: _vm_protect
0000a988	or	r0,r3,r3
0000a98c	stw	r0,0x48(r30)
0000a990	lwz	r0,0x48(r30)
0000a994	cmpwi	cr7,r0,__mh_bundle_header
0000a998	beq	cr7,0xa9cc
0000a99c	addis	r2,r31,0x1
0000a9a0	lwz	r2,0x87b8(r2)
0000a9a4	lwz	r2,__mh_bundle_header(r2)
0000a9a8	lwz	r0,0x4c(r30)
0000a9ac	or	r3,r2,r2
0000a9b0	or	r4,r0,r0
0000a9b4	li	r5,0x4
0000a9b8	li	r6,__mh_bundle_header
0000a9bc	li	r7,0x13
0000a9c0	bl	0x11660	; symbol stub for: _vm_protect
0000a9c4	or	r0,r3,r3
0000a9c8	stw	r0,0x48(r30)
0000a9cc	li	r0,__mh_bundle_header
0000a9d0	stw	r0,0x50(r30)
0000a9d4	lwz	r0,0x48(r30)
0000a9d8	cmpwi	cr7,r0,__mh_bundle_header
0000a9dc	bne	cr7,0xa9f8
0000a9e0	addi	r0,r30,0x50
0000a9e4	or	r3,r0,r0
0000a9e8	li	r4,0x1
0000a9ec	bl	_allocateBranchIsland
0000a9f0	or	r0,r3,r3
0000a9f4	stw	r0,0x48(r30)
0000a9f8	lwz	r0,0x48(r30)
0000a9fc	cmpwi	cr7,r0,__mh_bundle_header
0000aa00	bne	cr7,0xaa20
0000aa04	lwz	r0,0x50(r30)
0000aa08	or	r3,r0,r0
0000aa0c	lwz	r4,0x8c(r30)
0000aa10	li	r5,__mh_bundle_header
0000aa14	bl	_setBranchIslandTarget
0000aa18	or	r0,r3,r3
0000aa1c	stw	r0,0x48(r30)
0000aa20	li	r0,__mh_bundle_header
0000aa24	stw	r0,0x40(r30)
0000aa28	lwz	r0,0x48(r30)
0000aa2c	cmpwi	cr7,r0,__mh_bundle_header
0000aa30	bne	cr7,0xaa50
0000aa34	lwz	r0,0x50(r30)
0000aa38	rlwinm	r0,r0,0,6,31
0000aa3c	stw	r0,0x3c(r30)
0000aa40	lwz	r0,0x3c(r30)
0000aa44	oris	r0,r0,0x4800
0000aa48	ori	r0,r0,0x2
0000aa4c	stw	r0,0x40(r30)
0000aa50	li	r0,__mh_bundle_header
0000aa54	stw	r0,0x54(r30)
0000aa58	lwz	r0,0x48(r30)
0000aa5c	cmpwi	cr7,r0,__mh_bundle_header
0000aa60	bne	cr7,0xaaa0
0000aa64	lwz	r0,0x90(r30)
0000aa68	cmpwi	cr7,r0,__mh_bundle_header
0000aa6c	beq	cr7,0xaaa0
0000aa70	addi	r0,r30,0x54
0000aa74	or	r3,r0,r0
0000aa78	li	r4,__mh_bundle_header
0000aa7c	bl	_allocateBranchIsland
0000aa80	or	r0,r3,r3
0000aa84	stw	r0,0x48(r30)
0000aa88	lwz	r0,0x48(r30)
0000aa8c	cmpwi	cr7,r0,__mh_bundle_header
0000aa90	bne	cr7,0xaaa0
0000aa94	lwz	r0,0x54(r30)
0000aa98	lwz	r2,0x90(r30)
0000aa9c	stw	r0,__mh_bundle_header(r2)
0000aaa0	lwz	r0,0x48(r30)
0000aaa4	cmpwi	cr7,r0,__mh_bundle_header
0000aaa8	bne	cr7,0xab68
0000aaac	li	r0,__mh_bundle_header
0000aab0	stw	r0,0x38(r30)
0000aab4	lwz	r0,0x54(r30)
0000aab8	cmpwi	cr7,r0,__mh_bundle_header
0000aabc	beq	cr7,0xaae4
0000aac0	lwz	r9,0x54(r30)
0000aac4	lwz	r2,0x4c(r30)
0000aac8	addi	r0,r2,0x4
0000aacc	or	r3,r9,r9
0000aad0	or	r4,r0,r0
0000aad4	lwz	r5,0x44(r30)
0000aad8	bl	_setBranchIslandTarget
0000aadc	or	r0,r3,r3
0000aae0	stw	r0,0x48(r30)
0000aae4	lwz	r0,0x48(r30)
0000aae8	cmpwi	cr7,r0,__mh_bundle_header
0000aaec	bne	cr7,0xab50
0000aaf0	lwz	r0,0x44(r30)
0000aaf4	lwz	r2,0x40(r30)
0000aaf8	lwz	r9,0x4c(r30)
0000aafc	or	r3,r0,r0
0000ab00	or	r4,r2,r2
0000ab04	or	r5,r9,r9
0000ab08	bl	0x10340	; symbol stub for: _CompareAndSwap
0000ab0c	or	r0,r3,r3
0000ab10	stw	r0,0x38(r30)
0000ab14	lwz	r0,0x38(r30)
0000ab18	cmpwi	cr7,r0,__mh_bundle_header
0000ab1c	bne	cr7,0xab50
0000ab20	lwz	r2,0x4c(r30)
0000ab24	lwz	r0,__mh_bundle_header(r2)
0000ab28	stw	r0,0x44(r30)
0000ab2c	lwz	r0,0x44(r30)
0000ab30	rlwinm	r2,r0,0,11,5
0000ab34	lis	r0,0x7c09
0000ab38	ori	r0,r0,0x3a6
0000ab3c	cmpw	cr7,r2,r0
0000ab40	bne	cr7,0xab50
0000ab44	lis	r0,0xf800
0000ab48	ori	r0,r0,0x1
0000ab4c	stw	r0,0x48(r30)
0000ab50	lwz	r0,0x48(r30)
0000ab54	cmpwi	cr7,r0,__mh_bundle_header
0000ab58	bne	cr7,0xab68
0000ab5c	lwz	r0,0x38(r30)
0000ab60	cmpwi	cr7,r0,__mh_bundle_header
0000ab64	beq	cr7,0xaab4
0000ab68	lwz	r0,0x48(r30)
0000ab6c	cmpwi	cr7,r0,__mh_bundle_header
0000ab70	beq	cr7,0xaba4
0000ab74	lwz	r0,0x54(r30)
0000ab78	cmpwi	cr7,r0,__mh_bundle_header
0000ab7c	beq	cr7,0xab8c
0000ab80	lwz	r0,0x54(r30)
0000ab84	or	r3,r0,r0
0000ab88	bl	_freeBranchIsland
0000ab8c	lwz	r0,0x50(r30)
0000ab90	cmpwi	cr7,r0,__mh_bundle_header
0000ab94	beq	cr7,0xaba4
0000ab98	lwz	r0,0x50(r30)
0000ab9c	or	r3,r0,r0
0000aba0	bl	_freeBranchIsland
0000aba4	lwz	r0,0x48(r30)
0000aba8	or	r3,r0,r0
0000abac	lwz	r1,__mh_bundle_header(r1)
0000abb0	lwz	r0,0x8(r1)
0000abb4	mtspr	lr,r0
0000abb8	lmw	r30,0xfff8(r1)
0000abbc	blr
_allocateBranchIsland:
0000abc0	mfspr	r0,lr
0000abc4	stmw	r30,0xfff8(r1)
0000abc8	stw	r0,0x8(r1)
0000abcc	stwu	r1,0xff90(r1)
0000abd0	or	r30,r1,r1
0000abd4	bcl	20,31,0xabd8
0000abd8	mfspr	r31,lr
0000abdc	stw	r3,0x88(r30)
0000abe0	stw	r4,0x8c(r30)
0000abe4	lwz	r0,0x88(r30)
0000abe8	cmpwi	cr7,r0,__mh_bundle_header
0000abec	mfcr	r0
0000abf0	rlwinm	r0,r0,31,31,31
0000abf4	cmpwi	cr7,r0,__mh_bundle_header
0000abf8	beq	cr7,0xac1c
0000abfc	addis	r2,r31,__mh_bundle_header
0000ac00	addi	r3,r2,0x794c
0000ac04	addis	r2,r31,__mh_bundle_header
0000ac08	addi	r4,r2,0x796c
0000ac0c	li	r5,0x142
0000ac10	addis	r2,r31,__mh_bundle_header
0000ac14	addi	r6,r2,0x7a1c
0000ac18	bl	___eprintf
0000ac1c	li	r0,__mh_bundle_header
0000ac20	stw	r0,0x4c(r30)
0000ac24	lwz	r0,0x8c(r30)
0000ac28	cmpwi	cr7,r0,__mh_bundle_header
0000ac2c	beq	cr7,0xad9c
0000ac30	bl	0x111a0	; symbol stub for: _mach_host_self
0000ac34	or	r0,r3,r3
0000ac38	addi	r2,r30,0x50
0000ac3c	or	r3,r0,r0
0000ac40	or	r4,r2,r2
0000ac44	bl	0x11120	; symbol stub for: _host_page_size
0000ac48	or	r0,r3,r3
0000ac4c	stw	r0,0x4c(r30)
0000ac50	lwz	r0,0x4c(r30)
0000ac54	cmpwi	cr7,r0,__mh_bundle_header
0000ac58	bne	cr7,0xadd0
0000ac5c	lwz	r0,0x50(r30)
0000ac60	cmplwi	cr7,r0,0x1f
0000ac64	crnor	30,29,29
0000ac68	mfcr	r0
0000ac6c	rlwinm	r0,r0,31,31,31
0000ac70	cmpwi	cr7,r0,__mh_bundle_header
0000ac74	beq	cr7,0xac98
0000ac78	addis	r2,r31,__mh_bundle_header
0000ac7c	addi	r3,r2,0x794c
0000ac80	addis	r2,r31,__mh_bundle_header
0000ac84	addi	r4,r2,0x796c
0000ac88	li	r5,0x14a
0000ac8c	addis	r2,r31,__mh_bundle_header
0000ac90	addi	r6,r2,0x7a24
0000ac94	bl	___eprintf
0000ac98	lis	r0,0xfeff
0000ac9c	ori	r0,r0,0xffff
0000aca0	stw	r0,0x48(r30)
0000aca4	lwz	r2,0x50(r30)
0000aca8	addis	r0,r2,0xfe00
0000acac	stw	r0,0x44(r30)
0000acb0	lwz	r0,0x48(r30)
0000acb4	stw	r0,0x54(r30)
0000acb8	li	r0,__mh_bundle_header
0000acbc	stw	r0,0x40(r30)
0000acc0	addis	r2,r31,0x1
0000acc4	lwz	r2,0x8468(r2)
0000acc8	lwz	r0,__mh_bundle_header(r2)
0000accc	stw	r0,0x3c(r30)
0000acd0	b	0xad34
0000acd4	lwz	r2,0x50(r30)
0000acd8	addi	r0,r30,0x54
0000acdc	lwz	r3,0x3c(r30)
0000ace0	or	r4,r0,r0
0000ace4	or	r5,r2,r2
0000ace8	li	r6,__mh_bundle_header
0000acec	bl	0x11620	; symbol stub for: _vm_allocate
0000acf0	or	r0,r3,r3
0000acf4	stw	r0,0x4c(r30)
0000acf8	lwz	r0,0x4c(r30)
0000acfc	cmpwi	cr7,r0,__mh_bundle_header
0000ad00	bne	cr7,0xad10
0000ad04	li	r0,0x1
0000ad08	stw	r0,0x40(r30)
0000ad0c	b	0xad34
0000ad10	lwz	r0,0x4c(r30)
0000ad14	cmpwi	cr7,r0,0x3
0000ad18	bne	cr7,0xad34
0000ad1c	lwz	r2,0x54(r30)
0000ad20	lwz	r0,0x50(r30)
0000ad24	add	r0,r2,r0
0000ad28	stw	r0,0x54(r30)
0000ad2c	li	r0,__mh_bundle_header
0000ad30	stw	r0,0x4c(r30)
0000ad34	lwz	r0,0x4c(r30)
0000ad38	cmpwi	cr7,r0,__mh_bundle_header
0000ad3c	bne	cr7,0xad5c
0000ad40	lwz	r0,0x40(r30)
0000ad44	cmpwi	cr7,r0,__mh_bundle_header
0000ad48	bne	cr7,0xad5c
0000ad4c	lwz	r0,0x54(r30)
0000ad50	lwz	r2,0x44(r30)
0000ad54	cmpw	cr7,r0,r2
0000ad58	bne	cr7,0xacd4
0000ad5c	lwz	r0,0x40(r30)
0000ad60	cmpwi	cr7,r0,__mh_bundle_header
0000ad64	beq	cr7,0xad78
0000ad68	lwz	r0,0x54(r30)
0000ad6c	lwz	r2,0x88(r30)
0000ad70	stw	r0,__mh_bundle_header(r2)
0000ad74	b	0xadd0
0000ad78	lwz	r0,0x40(r30)
0000ad7c	cmpwi	cr7,r0,__mh_bundle_header
0000ad80	bne	cr7,0xadd0
0000ad84	lwz	r0,0x4c(r30)
0000ad88	cmpwi	cr7,r0,__mh_bundle_header
0000ad8c	bne	cr7,0xadd0
0000ad90	li	r0,0x3
0000ad94	stw	r0,0x4c(r30)
0000ad98	b	0xadd0
0000ad9c	li	r3,0x20
0000ada0	bl	0x111c0	; symbol stub for: _malloc
0000ada4	or	r0,r3,r3
0000ada8	stw	r0,0x38(r30)
0000adac	lwz	r0,0x38(r30)
0000adb0	cmpwi	cr7,r0,__mh_bundle_header
0000adb4	beq	cr7,0xadc8
0000adb8	lwz	r0,0x38(r30)
0000adbc	lwz	r2,0x88(r30)
0000adc0	stw	r0,__mh_bundle_header(r2)
0000adc4	b	0xadd0
0000adc8	li	r0,0x3
0000adcc	stw	r0,0x4c(r30)
0000add0	lwz	r0,0x4c(r30)
0000add4	cmpwi	cr7,r0,__mh_bundle_header
0000add8	bne	cr7,0xadec
0000addc	lwz	r2,0x88(r30)
0000ade0	lwz	r2,__mh_bundle_header(r2)
0000ade4	lwz	r0,0x8c(r30)
0000ade8	stw	r0,0x1c(r2)
0000adec	lwz	r0,0x4c(r30)
0000adf0	or	r3,r0,r0
0000adf4	lwz	r1,__mh_bundle_header(r1)
0000adf8	lwz	r0,0x8(r1)
0000adfc	mtspr	lr,r0
0000ae00	lmw	r30,0xfff8(r1)
0000ae04	blr
_freeBranchIsland:
0000ae08	mfspr	r0,lr
0000ae0c	stmw	r30,0xfff8(r1)
0000ae10	stw	r0,0x8(r1)
0000ae14	stwu	r1,0xffa0(r1)
0000ae18	or	r30,r1,r1
0000ae1c	bcl	20,31,0xae20
0000ae20	mfspr	r31,lr
0000ae24	stw	r3,0x78(r30)
0000ae28	lwz	r0,0x78(r30)
0000ae2c	cmpwi	cr7,r0,__mh_bundle_header
0000ae30	mfcr	r0
0000ae34	rlwinm	r0,r0,31,31,31
0000ae38	cmpwi	cr7,r0,__mh_bundle_header
0000ae3c	beq	cr7,0xae60
0000ae40	addis	r2,r31,__mh_bundle_header
0000ae44	addi	r3,r2,0x7704
0000ae48	addis	r2,r31,__mh_bundle_header
0000ae4c	addi	r4,r2,0x7724
0000ae50	li	r5,0x178
0000ae54	addis	r2,r31,__mh_bundle_header
0000ae58	addi	r6,r2,0x77d4
0000ae5c	bl	___eprintf
0000ae60	lwz	r0,0x78(r30)
0000ae64	or	r2,r0,r0
0000ae68	lwz	r9,__mh_bundle_header(r2)
0000ae6c	addis	r2,r31,0x1
0000ae70	addi	r2,r2,0x8b10
0000ae74	lwz	r0,__mh_bundle_header(r2)
0000ae78	xor	r0,r9,r0
0000ae7c	srawi	r2,r0,31
0000ae80	xor	r0,r2,r0
0000ae84	subf	r0,r2,r0
0000ae88	neg	r0,r0
0000ae8c	rlwinm	r0,r0,1,31,31
0000ae90	cmpwi	cr7,r0,__mh_bundle_header
0000ae94	beq	cr7,0xaeb8
0000ae98	addis	r2,r31,__mh_bundle_header
0000ae9c	addi	r3,r2,0x7704
0000aea0	addis	r2,r31,__mh_bundle_header
0000aea4	addi	r4,r2,0x7724
0000aea8	li	r5,0x179
0000aeac	addis	r2,r31,__mh_bundle_header
0000aeb0	addi	r6,r2,0x7800
0000aeb4	bl	___eprintf
0000aeb8	lwz	r2,0x78(r30)
0000aebc	lwz	r0,0x1c(r2)
0000aec0	cmpwi	cr7,r0,__mh_bundle_header
0000aec4	mfcr	r0
0000aec8	rlwinm	r0,r0,31,31,31
0000aecc	cmpwi	cr7,r0,__mh_bundle_header
0000aed0	beq	cr7,0xaef4
0000aed4	addis	r2,r31,__mh_bundle_header
0000aed8	addi	r3,r2,0x7704
0000aedc	addis	r2,r31,__mh_bundle_header
0000aee0	addi	r4,r2,0x7724
0000aee4	li	r5,0x17a
0000aee8	addis	r2,r31,__mh_bundle_header
0000aeec	addi	r6,r2,0x783c
0000aef0	bl	___eprintf
0000aef4	li	r0,__mh_bundle_header
0000aef8	stw	r0,0x38(r30)
0000aefc	lwz	r2,0x78(r30)
0000af00	lwz	r0,0x1c(r2)
0000af04	cmpwi	cr7,r0,__mh_bundle_header
0000af08	beq	cr7,0xafa4
0000af0c	bl	0x111a0	; symbol stub for: _mach_host_self
0000af10	or	r0,r3,r3
0000af14	addi	r2,r30,0x3c
0000af18	or	r3,r0,r0
0000af1c	or	r4,r2,r2
0000af20	bl	0x11120	; symbol stub for: _host_page_size
0000af24	or	r0,r3,r3
0000af28	stw	r0,0x38(r30)
0000af2c	lwz	r0,0x38(r30)
0000af30	cmpwi	cr7,r0,__mh_bundle_header
0000af34	bne	cr7,0xafac
0000af38	lwz	r0,0x3c(r30)
0000af3c	cmplwi	cr7,r0,0x1f
0000af40	crnor	30,29,29
0000af44	mfcr	r0
0000af48	rlwinm	r0,r0,31,31,31
0000af4c	cmpwi	cr7,r0,__mh_bundle_header
0000af50	beq	cr7,0xaf74
0000af54	addis	r2,r31,__mh_bundle_header
0000af58	addi	r3,r2,0x7704
0000af5c	addis	r2,r31,__mh_bundle_header
0000af60	addi	r4,r2,0x7724
0000af64	li	r5,0x182
0000af68	addis	r2,r31,__mh_bundle_header
0000af6c	addi	r6,r2,0x77dc
0000af70	bl	___eprintf
0000af74	addis	r2,r31,0x1
0000af78	lwz	r2,0x8220(r2)
0000af7c	lwz	r9,__mh_bundle_header(r2)
0000af80	lwz	r0,0x78(r30)
0000af84	lwz	r2,0x3c(r30)
0000af88	or	r3,r9,r9
0000af8c	or	r4,r0,r0
0000af90	or	r5,r2,r2
0000af94	bl	0x11640	; symbol stub for: _vm_deallocate
0000af98	or	r0,r3,r3
0000af9c	stw	r0,0x38(r30)
0000afa0	b	0xafac
0000afa4	lwz	r3,0x78(r30)
0000afa8	bl	0x11040	; symbol stub for: _free
0000afac	lwz	r0,0x38(r30)
0000afb0	or	r3,r0,r0
0000afb4	lwz	r1,__mh_bundle_header(r1)
0000afb8	lwz	r0,0x8(r1)
0000afbc	mtspr	lr,r0
0000afc0	lmw	r30,0xfff8(r1)
0000afc4	blr
_setBranchIslandTarget:
0000afc8	mfspr	r0,lr
0000afcc	stmw	r30,0xfff8(r1)
0000afd0	stw	r0,0x8(r1)
0000afd4	stwu	r1,0xffb0(r1)
0000afd8	or	r30,r1,r1
0000afdc	bcl	20,31,0xafe0
0000afe0	mfspr	r31,lr
0000afe4	stw	r3,0x68(r30)
0000afe8	stw	r4,0x6c(r30)
0000afec	stw	r5,0x70(r30)
0000aff0	lwz	r0,0x68(r30)
0000aff4	addis	r2,r31,0x1
0000aff8	addi	r3,r2,0x8950
0000affc	or	r4,r0,r0
0000b000	li	r5,0x1c
0000b004	bl	0x10e20	; symbol stub for: _bcopy
0000b008	lwz	r0,0x68(r30)
0000b00c	or	r2,r0,r0
0000b010	addi	r2,r2,0xa
0000b014	lwz	r0,0x6c(r30)
0000b018	extsh	r0,r0
0000b01c	sth	r0,__mh_bundle_header(r2)
0000b020	lwz	r0,0x68(r30)
0000b024	or	r2,r0,r0
0000b028	addi	r2,r2,0x6
0000b02c	lwz	r0,0x6c(r30)
0000b030	srawi	r0,r0,16
0000b034	extsh	r0,r0
0000b038	sth	r0,__mh_bundle_header(r2)
0000b03c	lwz	r0,0x70(r30)
0000b040	cmpwi	cr7,r0,__mh_bundle_header
0000b044	beq	cr7,0xb07c
0000b048	lwz	r0,0x68(r30)
0000b04c	or	r2,r0,r0
0000b050	addi	r2,r2,0x16
0000b054	lwz	r0,0x70(r30)
0000b058	extsh	r0,r0
0000b05c	sth	r0,__mh_bundle_header(r2)
0000b060	lwz	r0,0x68(r30)
0000b064	or	r2,r0,r0
0000b068	addi	r2,r2,0x14
0000b06c	lwz	r0,0x70(r30)
0000b070	srawi	r0,r0,16
0000b074	extsh	r0,r0
0000b078	sth	r0,__mh_bundle_header(r2)
0000b07c	lwz	r0,0x68(r30)
0000b080	or	r3,r0,r0
0000b084	li	r4,0x1c
0000b088	li	r5,0x2
0000b08c	bl	0x112e0	; symbol stub for: _msync
0000b090	li	r0,__mh_bundle_header
0000b094	or	r3,r0,r0
0000b098	lwz	r1,__mh_bundle_header(r1)
0000b09c	lwz	r0,0x8(r1)
0000b0a0	mtspr	lr,r0
0000b0a4	lmw	r30,0xfff8(r1)
0000b0a8	blr
_IconRefRetain:
0000b0ac	mfspr	r0,lr
0000b0b0	stmw	r30,0xfff8(r1)
0000b0b4	stw	r0,0x8(r1)
0000b0b8	stwu	r1,0xffb0(r1)
0000b0bc	or	r30,r1,r1
0000b0c0	stw	r3,0x68(r30)
0000b0c4	stw	r4,0x6c(r30)
0000b0c8	lwz	r3,0x6c(r30)
0000b0cc	bl	0xfb40	; symbol stub for: _AcquireIconRef
0000b0d0	lwz	r0,0x6c(r30)
0000b0d4	or	r3,r0,r0
0000b0d8	lwz	r1,__mh_bundle_header(r1)
0000b0dc	lwz	r0,0x8(r1)
0000b0e0	mtspr	lr,r0
0000b0e4	lmw	r30,0xfff8(r1)
0000b0e8	blr
_IconRefRelease:
0000b0ec	mfspr	r0,lr
0000b0f0	stmw	r30,0xfff8(r1)
0000b0f4	stw	r0,0x8(r1)
0000b0f8	stwu	r1,0xffb0(r1)
0000b0fc	or	r30,r1,r1
0000b100	stw	r3,0x68(r30)
0000b104	stw	r4,0x6c(r30)
0000b108	lwz	r3,0x6c(r30)
0000b10c	bl	0x10c40	; symbol stub for: _ReleaseIconRef
0000b110	lwz	r1,__mh_bundle_header(r1)
0000b114	lwz	r0,0x8(r1)
0000b118	mtspr	lr,r0
0000b11c	lmw	r30,0xfff8(r1)
0000b120	blr
_IconRefEqual:
0000b124	stmw	r30,0xfff8(r1)
0000b128	stwu	r1,0xffd0(r1)
0000b12c	or	r30,r1,r1
0000b130	stw	r3,0x48(r30)
0000b134	stw	r4,0x4c(r30)
0000b138	lwz	r2,0x48(r30)
0000b13c	lwz	r0,0x4c(r30)
0000b140	cmpw	cr7,r2,r0
0000b144	mfcr	r0
0000b148	rlwinm	r0,r0,31,31,31
0000b14c	or	r3,r0,r0
0000b150	lwz	r1,__mh_bundle_header(r1)
0000b154	lmw	r30,0xfff8(r1)
0000b158	blr
_DropboxIconOverlayCachedComposite:
0000b15c	mfspr	r0,lr
0000b160	stmw	r30,0xfff8(r1)
0000b164	stw	r0,0x8(r1)
0000b168	stwu	r1,0xffa0(r1)
0000b16c	or	r30,r1,r1
0000b170	bcl	20,31,0xb174
0000b174	mfspr	r31,lr
0000b178	stw	r3,0x78(r30)
0000b17c	stw	r4,0x7c(r30)
0000b180	stw	r5,0x80(r30)
0000b184	lwz	r2,0x80(r30)
0000b188	li	r0,__mh_bundle_header
0000b18c	stw	r0,__mh_bundle_header(r2)
0000b190	addis	r2,r31,0x1
0000b194	addi	r2,r2,0x88d8
0000b198	lwz	r0,__mh_bundle_header(r2)
0000b19c	or	r3,r0,r0
0000b1a0	lwz	r4,0x7c(r30)
0000b1a4	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
0000b1a8	or	r0,r3,r3
0000b1ac	stw	r0,0x38(r30)
0000b1b0	lwz	r0,0x38(r30)
0000b1b4	cmpwi	cr7,r0,__mh_bundle_header
0000b1b8	bne	cr7,0xb1fc
0000b1bc	li	r3,__mh_bundle_header
0000b1c0	li	r4,__mh_bundle_header
0000b1c4	addis	r2,r31,0x1
0000b1c8	addi	r5,r2,0x8734
0000b1cc	addis	r2,r31,0x1
0000b1d0	addi	r6,r2,0x874c
0000b1d4	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
0000b1d8	or	r0,r3,r3
0000b1dc	stw	r0,0x38(r30)
0000b1e0	addis	r2,r31,0x1
0000b1e4	addi	r2,r2,0x88d8
0000b1e8	lwz	r0,__mh_bundle_header(r2)
0000b1ec	or	r3,r0,r0
0000b1f0	lwz	r4,0x7c(r30)
0000b1f4	lwz	r5,0x38(r30)
0000b1f8	bl	0xfd80	; symbol stub for: _CFDictionaryAddValue
0000b1fc	lwz	r0,0x80(r30)
0000b200	lwz	r3,0x38(r30)
0000b204	lwz	r4,0x78(r30)
0000b208	or	r5,r0,r0
0000b20c	bl	0xfe00	; symbol stub for: _CFDictionaryGetValueIfPresent
0000b210	or	r0,r3,r3
0000b214	cmpwi	cr7,r0,__mh_bundle_header
0000b218	beq	cr7,0xb230
0000b21c	lwz	r2,0x80(r30)
0000b220	lwz	r0,__mh_bundle_header(r2)
0000b224	or	r3,r0,r0
0000b228	bl	0xfb40	; symbol stub for: _AcquireIconRef
0000b22c	b	0xb29c
0000b230	li	r0,__mh_bundle_header
0000b234	stw	r0,0x3c(r30)
0000b238	addi	r0,r30,0x3c
0000b23c	lwz	r3,0x78(r30)
0000b240	lwz	r4,0x7c(r30)
0000b244	or	r5,r0,r0
0000b248	bl	0x10360	; symbol stub for: _CompositeIconRef
0000b24c	lwz	r0,0x3c(r30)
0000b250	cmpwi	cr7,r0,__mh_bundle_header
0000b254	beq	cr7,0xb284
0000b258	lwz	r2,0x80(r30)
0000b25c	lwz	r0,__mh_bundle_header(r2)
0000b260	cmpwi	cr7,r0,__mh_bundle_header
0000b264	beq	cr7,0xb278
0000b268	lwz	r2,0x80(r30)
0000b26c	lwz	r0,__mh_bundle_header(r2)
0000b270	or	r3,r0,r0
0000b274	bl	0x10c40	; symbol stub for: _ReleaseIconRef
0000b278	lwz	r0,0x3c(r30)
0000b27c	lwz	r2,0x80(r30)
0000b280	stw	r0,__mh_bundle_header(r2)
0000b284	lwz	r2,0x80(r30)
0000b288	lwz	r0,__mh_bundle_header(r2)
0000b28c	lwz	r3,0x38(r30)
0000b290	lwz	r4,0x78(r30)
0000b294	or	r5,r0,r0
0000b298	bl	0xfd80	; symbol stub for: _CFDictionaryAddValue
0000b29c	li	r0,__mh_bundle_header
0000b2a0	or	r3,r0,r0
0000b2a4	lwz	r1,__mh_bundle_header(r1)
0000b2a8	lwz	r0,0x8(r1)
0000b2ac	mtspr	lr,r0
0000b2b0	lmw	r30,0xfff8(r1)
0000b2b4	blr
_DropboxIconOverlayGetIconRefFromFileInfo:
0000b2b8	mfspr	r0,lr
0000b2bc	stmw	r30,0xfff8(r1)
0000b2c0	stw	r0,0x8(r1)
0000b2c4	stwu	r1,0xffa0(r1)
0000b2c8	or	r30,r1,r1
0000b2cc	bcl	20,31,0xb2d0
0000b2d0	mfspr	r31,lr
0000b2d4	stw	r3,0x78(r30)
0000b2d8	stw	r4,0x7c(r30)
0000b2dc	stw	r5,0x80(r30)
0000b2e0	stw	r6,0x84(r30)
0000b2e4	stw	r7,0x88(r30)
0000b2e8	stw	r8,0x8c(r30)
0000b2ec	stw	r9,0x90(r30)
0000b2f0	stw	r10,0x94(r30)
0000b2f4	addis	r2,r31,0x1
0000b2f8	addi	r2,r2,0x8774
0000b2fc	lwz	r0,__mh_bundle_header(r2)
0000b300	lwz	r3,0x78(r30)
0000b304	lwz	r4,0x7c(r30)
0000b308	lwz	r5,0x80(r30)
0000b30c	lwz	r6,0x84(r30)
0000b310	lwz	r7,0x88(r30)
0000b314	lwz	r8,0x8c(r30)
0000b318	lwz	r9,0x90(r30)
0000b31c	lwz	r10,0x94(r30)
0000b320	or	r12,r0,r0
0000b324	mtspr	ctr,r12
0000b328	bctrl
0000b32c	or	r0,r3,r3
0000b330	stw	r0,0x40(r30)
0000b334	lwz	r0,0x40(r30)
0000b338	cmpwi	cr7,r0,__mh_bundle_header
0000b33c	beq	cr7,0xb34c
0000b340	lwz	r0,0x40(r30)
0000b344	stw	r0,0x48(r30)
0000b348	b	0xb3ec
0000b34c	lwz	r0,0x8c(r30)
0000b350	rlwinm	r0,r0,0,31,31
0000b354	cmpwi	cr7,r0,__mh_bundle_header
0000b358	beq	cr7,0xb368
0000b35c	li	r0,__mh_bundle_header
0000b360	stw	r0,0x48(r30)
0000b364	b	0xb3ec
0000b368	addis	r2,r31,0x1
0000b36c	addi	r2,r2,0x867c
0000b370	lwz	r0,__mh_bundle_header(r2)
0000b374	cmpwi	cr7,r0,__mh_bundle_header
0000b378	bne	cr7,0xb388
0000b37c	li	r0,__mh_bundle_header
0000b380	stw	r0,0x48(r30)
0000b384	b	0xb3ec
0000b388	addis	r2,r31,0x1
0000b38c	addi	r2,r2,0x867c
0000b390	lwz	r0,__mh_bundle_header(r2)
0000b394	lwz	r3,0x78(r30)
0000b398	or	r12,r0,r0
0000b39c	mtspr	ctr,r12
0000b3a0	bctrl
0000b3a4	or	r0,r3,r3
0000b3a8	stw	r0,0x3c(r30)
0000b3ac	lwz	r0,0x3c(r30)
0000b3b0	cmpwi	cr7,r0,__mh_bundle_header
0000b3b4	beq	cr7,0xb3e4
0000b3b8	lwz	r2,0x90(r30)
0000b3bc	lwz	r0,__mh_bundle_header(r2)
0000b3c0	stw	r0,0x38(r30)
0000b3c4	lwz	r3,0x38(r30)
0000b3c8	lwz	r4,0x3c(r30)
0000b3cc	lwz	r5,0x90(r30)
0000b3d0	bl	_DropboxIconOverlayCachedComposite
0000b3d4	or	r0,r3,r3
0000b3d8	stw	r0,0x40(r30)
0000b3dc	lwz	r3,0x38(r30)
0000b3e0	bl	0x10c40	; symbol stub for: _ReleaseIconRef
0000b3e4	li	r0,__mh_bundle_header
0000b3e8	stw	r0,0x48(r30)
0000b3ec	lwz	r0,0x48(r30)
0000b3f0	or	r3,r0,r0
0000b3f4	lwz	r1,__mh_bundle_header(r1)
0000b3f8	lwz	r0,0x8(r1)
0000b3fc	mtspr	lr,r0
0000b400	lmw	r30,0xfff8(r1)
0000b404	blr
_DropboxIconOverlayInitialize:
0000b408	mfspr	r0,lr
0000b40c	stmw	r30,0xfff8(r1)
0000b410	stw	r0,0x8(r1)
0000b414	stwu	r1,0xff90(r1)
0000b418	or	r30,r1,r1
0000b41c	bcl	20,31,0xb420
0000b420	mfspr	r31,lr
0000b424	li	r0,__mh_bundle_header
0000b428	stb	r0,0x40(r30)
0000b42c	addis	r2,r31,0x1
0000b430	addi	r0,r2,0x8010
0000b434	or	r3,r0,r0
0000b438	li	r4,__mh_bundle_header
0000b43c	bl	_getPreferenceBool
0000b440	or	r0,r3,r3
0000b444	cmpwi	cr7,r0,__mh_bundle_header
0000b448	beq	cr7,0xb45c
0000b44c	addis	r2,r31,__mh_bundle_header
0000b450	lwz	r2,0x7c00(r2)
0000b454	li	r0,0x1
0000b458	stb	r0,__mh_bundle_header(r2)
0000b45c	addis	r2,r31,0x1
0000b460	addi	r0,r2,0x8150
0000b464	or	r3,r0,r0
0000b468	li	r4,__mh_bundle_header
0000b46c	bl	_getPreferenceBool
0000b470	or	r0,r3,r3
0000b474	cmpwi	cr7,r0,__mh_bundle_header
0000b478	beq	cr7,0xb484
0000b47c	li	r0,0x1
0000b480	stb	r0,0x40(r30)
0000b484	addis	r2,r31,0x1
0000b488	addi	r2,r2,0x8624
0000b48c	lwz	r0,__mh_bundle_header(r2)
0000b490	cmpwi	cr7,r0,__mh_bundle_header
0000b494	bne	cr7,0xb714
0000b498	bl	_ShouldLoadFullBlownHacks
0000b49c	or	r0,r3,r3
0000b4a0	cmpwi	cr7,r0,__mh_bundle_header
0000b4a4	beq	cr7,0xb714
0000b4a8	bl	_InitDropboxToolbarIntegration
0000b4ac	bl	_dbtrace_init
0000b4b0	addi	r0,r30,0x44
0000b4b4	addi	r2,r30,0x48
0000b4b8	addi	r9,r30,0x4c
0000b4bc	or	r3,r0,r0
0000b4c0	or	r4,r2,r2
0000b4c4	or	r5,r9,r9
0000b4c8	bl	_GetSystemVersion
0000b4cc	lwz	r0,0x44(r30)
0000b4d0	lwz	r9,0x48(r30)
0000b4d4	lwz	r11,0x4c(r30)
0000b4d8	addis	r2,r31,__mh_bundle_header
0000b4dc	addi	r3,r2,0x7260
0000b4e0	or	r4,r0,r0
0000b4e4	or	r5,r9,r9
0000b4e8	or	r6,r11,r11
0000b4ec	bl	_DEBUG_printf
0000b4f0	li	r3,__mh_bundle_header
0000b4f4	li	r4,__mh_bundle_header
0000b4f8	addis	r2,r31,__mh_bundle_header
0000b4fc	lwz	r5,0x7c0c(r2)
0000b500	li	r6,__mh_bundle_header
0000b504	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
0000b508	or	r0,r3,r3
0000b50c	addis	r2,r31,0x1
0000b510	addi	r2,r2,0x8628
0000b514	stw	r0,__mh_bundle_header(r2)
0000b518	addis	r2,r31,0x1
0000b51c	addi	r2,r2,0x8628
0000b520	lwz	r0,__mh_bundle_header(r2)
0000b524	cmpwi	cr7,r0,__mh_bundle_header
0000b528	mfcr	r0
0000b52c	rlwinm	r0,r0,31,31,31
0000b530	cmpwi	cr7,r0,__mh_bundle_header
0000b534	beq	cr7,0xb570
0000b538	lis	r3,0x3f2a
0000b53c	ori	r3,r3,0x3f2a
0000b540	li	r4,__mh_bundle_header
0000b544	addis	r2,r31,__mh_bundle_header
0000b548	addi	r5,r2,0x727c
0000b54c	addis	r2,r31,__mh_bundle_header
0000b550	addi	r6,r2,0x6abc
0000b554	li	r7,__mh_bundle_header
0000b558	addis	r2,r31,__mh_bundle_header
0000b55c	addi	r8,r2,0x72a4
0000b560	li	r9,0x8a
0000b564	li	r10,__mh_bundle_header
0000b568	bl	0x10480	; symbol stub for: _DebugAssert
0000b56c	b	0xb6f0
0000b570	li	r3,__mh_bundle_header
0000b574	li	r4,__mh_bundle_header
0000b578	addis	r2,r31,0x1
0000b57c	addi	r5,r2,0x8488
0000b580	addis	r2,r31,__mh_bundle_header
0000b584	lwz	r6,0x7c10(r2)
0000b588	bl	0xfdc0	; symbol stub for: _CFDictionaryCreateMutable
0000b58c	or	r0,r3,r3
0000b590	addis	r2,r31,0x1
0000b594	addi	r2,r2,0x862c
0000b598	stw	r0,__mh_bundle_header(r2)
0000b59c	addis	r2,r31,0x1
0000b5a0	addi	r2,r2,0x862c
0000b5a4	lwz	r0,__mh_bundle_header(r2)
0000b5a8	cmpwi	cr7,r0,__mh_bundle_header
0000b5ac	mfcr	r0
0000b5b0	rlwinm	r0,r0,31,31,31
0000b5b4	cmpwi	cr7,r0,__mh_bundle_header
0000b5b8	beq	cr7,0xb5f4
0000b5bc	lis	r3,0x3f2a
0000b5c0	ori	r3,r3,0x3f2a
0000b5c4	li	r4,__mh_bundle_header
0000b5c8	addis	r2,r31,__mh_bundle_header
0000b5cc	addi	r5,r2,0x72ec
0000b5d0	addis	r2,r31,__mh_bundle_header
0000b5d4	addi	r6,r2,0x6abc
0000b5d8	li	r7,__mh_bundle_header
0000b5dc	addis	r2,r31,__mh_bundle_header
0000b5e0	addi	r8,r2,0x72a4
0000b5e4	li	r9,0x8f
0000b5e8	li	r10,__mh_bundle_header
0000b5ec	bl	0x10480	; symbol stub for: _DebugAssert
0000b5f0	b	0xb6f0
0000b5f4	lwz	r0,0x48(r30)
0000b5f8	cmplwi	cr7,r0,0x4
0000b5fc	ble	cr7,0xb670
0000b600	lbz	r0,0x40(r30)
0000b604	extsb	r0,r0
0000b608	cmpwi	cr7,r0,__mh_bundle_header
0000b60c	bne	cr7,0xb670
0000b610	addis	r2,r31,0x1
0000b614	addi	r0,r2,0x8160
0000b618	or	r3,r0,r0
0000b61c	li	r4,0x1
0000b620	bl	_getPreferenceBool
0000b624	or	r0,r3,r3
0000b628	stb	r0,0x39(r30)
0000b62c	addis	r2,r31,0x1
0000b630	addi	r0,r2,0x8170
0000b634	or	r3,r0,r0
0000b638	li	r4,0x1
0000b63c	bl	_getPreferenceBool
0000b640	or	r0,r3,r3
0000b644	stb	r0,0x38(r30)
0000b648	lbz	r0,0x39(r30)
0000b64c	rlwinm	r0,r0,0,24,31
0000b650	cmpwi	cr7,r0,__mh_bundle_header
0000b654	beq	cr7,0xb65c
0000b658	bl	_QuickLookBadgingInitialize
0000b65c	lbz	r0,0x38(r30)
0000b660	rlwinm	r0,r0,0,24,31
0000b664	cmpwi	cr7,r0,__mh_bundle_header
0000b668	beq	cr7,0xb670
0000b66c	bl	_MoreMenuBypassInitialize
0000b670	addis	r2,r31,0x1
0000b674	addi	r0,r2,0x8624
0000b678	addis	r2,r31,__mh_bundle_header
0000b67c	addi	r3,r2,0x7340
0000b680	li	r4,__mh_bundle_header
0000b684	addis	r2,r31,__mh_bundle_header
0000b688	addi	r5,r2,0xfe98
0000b68c	or	r6,r0,r0
0000b690	bl	_mach_override
0000b694	or	r0,r3,r3
0000b698	stw	r0,0x3c(r30)
0000b69c	lwz	r0,0x3c(r30)
0000b6a0	srawi	r2,r0,31
0000b6a4	xor	r0,r2,r0
0000b6a8	subf	r0,r2,r0
0000b6ac	neg	r0,r0
0000b6b0	rlwinm	r0,r0,1,31,31
0000b6b4	cmpwi	cr7,r0,__mh_bundle_header
0000b6b8	beq	cr7,0xb714
0000b6bc	lis	r3,0x3f2a
0000b6c0	ori	r3,r3,0x3f2a
0000b6c4	li	r4,__mh_bundle_header
0000b6c8	addis	r2,r31,__mh_bundle_header
0000b6cc	addi	r5,r2,0x6800
0000b6d0	addis	r2,r31,__mh_bundle_header
0000b6d4	addi	r6,r2,0x6abc
0000b6d8	li	r7,__mh_bundle_header
0000b6dc	addis	r2,r31,__mh_bundle_header
0000b6e0	addi	r8,r2,0x72a4
0000b6e4	li	r9,0x9b
0000b6e8	li	r10,__mh_bundle_header
0000b6ec	bl	0x10480	; symbol stub for: _DebugAssert
0000b6f0	addis	r2,r31,__mh_bundle_header
0000b6f4	lwz	r2,0x7bec(r2)
0000b6f8	addi	r0,r2,0xb0
0000b6fc	addis	r2,r31,__mh_bundle_header
0000b700	addi	r3,r2,0x7358
0000b704	li	r4,0x1
0000b708	li	r5,0x3c
0000b70c	or	r6,r0,r0
0000b710	bl	0x11080	; symbol stub for: _fwrite
0000b714	lwz	r1,__mh_bundle_header(r1)
0000b718	lwz	r0,0x8(r1)
0000b71c	mtspr	lr,r0
0000b720	lmw	r30,0xfff8(r1)
0000b724	blr
_DropboxIconOverlaySetProvider:
0000b728	mfspr	r0,lr
0000b72c	stmw	r30,0xfff8(r1)
0000b730	stw	r0,0x8(r1)
0000b734	stwu	r1,0xffb0(r1)
0000b738	or	r30,r1,r1
0000b73c	bcl	20,31,0xb740
0000b740	mfspr	r31,lr
0000b744	stw	r3,0x68(r30)
0000b748	stw	r4,0x6c(r30)
0000b74c	lwz	r0,0x68(r30)
0000b750	cmpwi	cr7,r0,__mh_bundle_header
0000b754	beq	cr7,0xb75c
0000b758	bl	_DropboxIconOverlayInitialize
0000b75c	addis	r2,r31,0x1
0000b760	addi	r2,r2,0x820c
0000b764	lwz	r0,0x68(r30)
0000b768	stw	r0,__mh_bundle_header(r2)
0000b76c	addis	r2,r31,0x1
0000b770	addi	r2,r2,0x8210
0000b774	lwz	r0,0x6c(r30)
0000b778	stw	r0,__mh_bundle_header(r2)
0000b77c	lwz	r1,__mh_bundle_header(r1)
0000b780	lwz	r0,0x8(r1)
0000b784	mtspr	lr,r0
0000b788	lmw	r30,0xfff8(r1)
0000b78c	blr
_DropboxIconOverlayIconRefFromIconFile:
0000b790	mfspr	r0,lr
0000b794	stmw	r30,0xfff8(r1)
0000b798	stw	r0,0x8(r1)
0000b79c	stwu	r1,0xffa0(r1)
0000b7a0	or	r30,r1,r1
0000b7a4	bcl	20,31,0xb7a8
0000b7a8	mfspr	r31,lr
0000b7ac	stw	r3,0x78(r30)
0000b7b0	addis	r2,r31,0x1
0000b7b4	addi	r2,r2,0x82a0
0000b7b8	lwz	r0,__mh_bundle_header(r2)
0000b7bc	or	r3,r0,r0
0000b7c0	lwz	r4,0x78(r30)
0000b7c4	bl	0xfde0	; symbol stub for: _CFDictionaryGetValue
0000b7c8	or	r0,r3,r3
0000b7cc	stw	r0,0x38(r30)
0000b7d0	lwz	r0,0x38(r30)
0000b7d4	cmpwi	cr7,r0,__mh_bundle_header
0000b7d8	beq	cr7,0xb7e8
0000b7dc	lwz	r0,0x38(r30)
0000b7e0	stw	r0,0x48(r30)
0000b7e4	b	0xb828
0000b7e8	lwz	r3,0x78(r30)
0000b7ec	bl	_IconRefFromIconFileNoCache
0000b7f0	or	r0,r3,r3
0000b7f4	stw	r0,0x38(r30)
0000b7f8	lwz	r0,0x38(r30)
0000b7fc	cmpwi	cr7,r0,__mh_bundle_header
0000b800	beq	cr7,0xb820
0000b804	addis	r2,r31,0x1
0000b808	addi	r2,r2,0x82a0
0000b80c	lwz	r0,__mh_bundle_header(r2)
0000b810	or	r3,r0,r0
0000b814	lwz	r4,0x78(r30)
0000b818	lwz	r5,0x38(r30)
0000b81c	bl	0xfd80	; symbol stub for: _CFDictionaryAddValue
0000b820	lwz	r0,0x38(r30)
0000b824	stw	r0,0x48(r30)
0000b828	lwz	r0,0x48(r30)
0000b82c	or	r3,r0,r0
0000b830	lwz	r1,__mh_bundle_header(r1)
0000b834	lwz	r0,0x8(r1)
0000b838	mtspr	lr,r0
0000b83c	lmw	r30,0xfff8(r1)
0000b840	blr
_MyCreateBitmapContext:
0000b844	mfspr	r0,lr
0000b848	stmw	r30,0xfff8(r1)
0000b84c	stw	r0,0x8(r1)
0000b850	stwu	r1,0xff90(r1)
0000b854	or	r30,r1,r1
0000b858	bcl	20,31,0xb85c
0000b85c	mfspr	r31,lr
0000b860	stw	r3,0x88(r30)
0000b864	stw	r4,0x8c(r30)
0000b868	li	r0,__mh_bundle_header
0000b86c	stw	r0,0x48(r30)
0000b870	lwz	r0,0x88(r30)
0000b874	rlwinm	r0,r0,2,0,29
0000b878	stw	r0,0x38(r30)
0000b87c	lwz	r2,0x38(r30)
0000b880	lwz	r0,0x8c(r30)
0000b884	mullw	r0,r2,r0
0000b888	stw	r0,0x3c(r30)
0000b88c	addis	r2,r31,__mh_bundle_header
0000b890	lwz	r2,0x77e8(r2)
0000b894	lwz	r0,__mh_bundle_header(r2)
0000b898	or	r3,r0,r0
0000b89c	bl	0x101e0	; symbol stub for: _CGColorSpaceCreateWithName
0000b8a0	or	r0,r3,r3
0000b8a4	stw	r0,0x44(r30)
0000b8a8	lwz	r0,0x3c(r30)
0000b8ac	or	r3,r0,r0
0000b8b0	li	r4,0x1
0000b8b4	bl	0x10e60	; symbol stub for: _calloc
0000b8b8	or	r0,r3,r3
0000b8bc	stw	r0,0x40(r30)
0000b8c0	lwz	r0,0x40(r30)
0000b8c4	cmpwi	cr7,r0,__mh_bundle_header
0000b8c8	bne	cr7,0xb8fc
0000b8cc	addis	r2,r31,__mh_bundle_header
0000b8d0	lwz	r2,0x77b0(r2)
0000b8d4	addi	r0,r2,0xb0
0000b8d8	addis	r2,r31,__mh_bundle_header
0000b8dc	addi	r3,r2,0x6f74
0000b8e0	li	r4,0x1
0000b8e4	li	r5,0x15
0000b8e8	or	r6,r0,r0
0000b8ec	bl	0x11080	; symbol stub for: _fwrite
0000b8f0	li	r0,__mh_bundle_header
0000b8f4	stw	r0,0x58(r30)
0000b8f8	b	0xb978
0000b8fc	lwz	r0,0x88(r30)
0000b900	lwz	r2,0x8c(r30)
0000b904	lwz	r9,0x38(r30)
0000b908	lwz	r3,0x40(r30)
0000b90c	or	r4,r0,r0
0000b910	or	r5,r2,r2
0000b914	li	r6,0x8
0000b918	or	r7,r9,r9
0000b91c	lwz	r8,0x44(r30)
0000b920	li	r9,0x1
0000b924	bl	0x10180	; symbol stub for: _CGBitmapContextCreate
0000b928	or	r0,r3,r3
0000b92c	stw	r0,0x48(r30)
0000b930	lwz	r0,0x48(r30)
0000b934	cmpwi	cr7,r0,__mh_bundle_header
0000b938	bne	cr7,0xb968
0000b93c	lwz	r3,0x40(r30)
0000b940	bl	0x11040	; symbol stub for: _free
0000b944	addis	r2,r31,__mh_bundle_header
0000b948	lwz	r2,0x77b0(r2)
0000b94c	addi	r0,r2,0xb0
0000b950	addis	r2,r31,__mh_bundle_header
0000b954	addi	r3,r2,0x6f8c
0000b958	li	r4,0x1
0000b95c	li	r5,0x14
0000b960	or	r6,r0,r0
0000b964	bl	0x11080	; symbol stub for: _fwrite
0000b968	lwz	r3,0x44(r30)
0000b96c	bl	0x10200	; symbol stub for: _CGColorSpaceRelease
0000b970	lwz	r0,0x48(r30)
0000b974	stw	r0,0x58(r30)
0000b978	lwz	r0,0x58(r30)
0000b97c	or	r3,r0,r0
0000b980	lwz	r1,__mh_bundle_header(r1)
0000b984	lwz	r0,0x8(r1)
0000b988	mtspr	lr,r0
0000b98c	lmw	r30,0xfff8(r1)
0000b990	blr
_MyReleaseBitmapContext:
0000b994	mfspr	r0,lr
0000b998	stmw	r30,0xfff8(r1)
0000b99c	stw	r0,0x8(r1)
0000b9a0	stwu	r1,0xffa0(r1)
0000b9a4	or	r30,r1,r1
0000b9a8	stw	r3,0x78(r30)
0000b9ac	lwz	r3,0x78(r30)
0000b9b0	bl	0x101c0	; symbol stub for: _CGBitmapContextGetData
0000b9b4	or	r0,r3,r3
0000b9b8	stw	r0,0x38(r30)
0000b9bc	lwz	r0,0x38(r30)
0000b9c0	cmpwi	cr7,r0,__mh_bundle_header
0000b9c4	beq	cr7,0xb9d0
0000b9c8	lwz	r3,0x38(r30)
0000b9cc	bl	0x11040	; symbol stub for: _free
0000b9d0	lwz	r3,0x78(r30)
0000b9d4	bl	0x10220	; symbol stub for: _CGContextRelease
0000b9d8	lwz	r1,__mh_bundle_header(r1)
0000b9dc	lwz	r0,0x8(r1)
0000b9e0	mtspr	lr,r0
0000b9e4	lmw	r30,0xfff8(r1)
0000b9e8	blr
_ShouldLoadContextMenus:
0000b9ec	mfspr	r0,lr
0000b9f0	stmw	r30,0xfff8(r1)
0000b9f4	stw	r0,0x8(r1)
0000b9f8	stwu	r1,0xffa0(r1)
0000b9fc	or	r30,r1,r1
0000ba00	bcl	20,31,0xba04
0000ba04	mfspr	r31,lr
0000ba08	bl	0xfd20	; symbol stub for: _CFBundleGetMainBundle
0000ba0c	or	r0,r3,r3
0000ba10	stw	r0,0x3c(r30)
0000ba14	lwz	r0,0x3c(r30)
0000ba18	cmpwi	cr7,r0,__mh_bundle_header
0000ba1c	bne	cr7,0xba2c
0000ba20	li	r0,__mh_bundle_header
0000ba24	stw	r0,0x4c(r30)
0000ba28	b	0xbabc
0000ba2c	lwz	r3,0x3c(r30)
0000ba30	bl	0xfd00	; symbol stub for: _CFBundleGetIdentifier
0000ba34	or	r0,r3,r3
0000ba38	stw	r0,0x38(r30)
0000ba3c	lwz	r0,0x38(r30)
0000ba40	cmpwi	cr7,r0,__mh_bundle_header
0000ba44	beq	cr7,0xbab4
0000ba48	addis	r2,r31,__mh_bundle_header
0000ba4c	addi	r0,r2,0x7a3c
0000ba50	lwz	r3,0x38(r30)
0000ba54	or	r4,r0,r0
0000ba58	li	r5,__mh_bundle_header
0000ba5c	bl	0xffa0	; symbol stub for: _CFStringCompare
0000ba60	or	r0,r3,r3
0000ba64	cmpwi	cr7,r0,__mh_bundle_header
0000ba68	beq	cr7,0xba90
0000ba6c	addis	r2,r31,__mh_bundle_header
0000ba70	addi	r0,r2,0x7bac
0000ba74	lwz	r3,0x38(r30)
0000ba78	or	r4,r0,r0
0000ba7c	li	r5,__mh_bundle_header
0000ba80	bl	0xffa0	; symbol stub for: _CFStringCompare
0000ba84	or	r0,r3,r3
0000ba88	cmpwi	cr7,r0,__mh_bundle_header
0000ba8c	bne	cr7,0xba9c
0000ba90	li	r0,0x1
0000ba94	stw	r0,0x48(r30)
0000ba98	b	0xbaa4
0000ba9c	li	r2,__mh_bundle_header
0000baa0	stw	r2,0x48(r30)
0000baa4	lwz	r2,0x48(r30)
0000baa8	rlwinm	r0,r2,0,24,31
0000baac	stw	r0,0x4c(r30)
0000bab0	b	0xbabc
0000bab4	li	r0,__mh_bundle_header
0000bab8	stw	r0,0x4c(r30)
0000babc	lwz	r0,0x4c(r30)
0000bac0	or	r3,r0,r0
0000bac4	lwz	r1,__mh_bundle_header(r1)
0000bac8	lwz	r0,0x8(r1)
0000bacc	mtspr	lr,r0
0000bad0	lmw	r30,0xfff8(r1)
0000bad4	blr
_ShouldLoadFullBlownHacks:
0000bad8	mfspr	r0,lr
0000badc	stmw	r30,0xfff8(r1)
0000bae0	stw	r0,0x8(r1)
0000bae4	stwu	r1,0xffa0(r1)
0000bae8	or	r30,r1,r1
0000baec	bcl	20,31,0xbaf0
0000baf0	mfspr	r31,lr
0000baf4	bl	0xfd20	; symbol stub for: _CFBundleGetMainBundle
0000baf8	or	r0,r3,r3
0000bafc	stw	r0,0x3c(r30)
0000bb00	lwz	r0,0x3c(r30)
0000bb04	cmpwi	cr7,r0,__mh_bundle_header
0000bb08	bne	cr7,0xbb18
0000bb0c	li	r0,__mh_bundle_header
0000bb10	stw	r0,0x48(r30)
0000bb14	b	0xbb6c
0000bb18	lwz	r3,0x3c(r30)
0000bb1c	bl	0xfd00	; symbol stub for: _CFBundleGetIdentifier
0000bb20	or	r0,r3,r3
0000bb24	stw	r0,0x38(r30)
0000bb28	lwz	r0,0x38(r30)
0000bb2c	cmpwi	cr7,r0,__mh_bundle_header
0000bb30	beq	cr7,0xbb64
0000bb34	addis	r2,r31,__mh_bundle_header
0000bb38	addi	r0,r2,0x7950
0000bb3c	lwz	r3,0x38(r30)
0000bb40	or	r4,r0,r0
0000bb44	li	r5,__mh_bundle_header
0000bb48	bl	0xffa0	; symbol stub for: _CFStringCompare
0000bb4c	or	r0,r3,r3
0000bb50	cmpwi	cr7,r0,__mh_bundle_header
0000bb54	mfcr	r0
0000bb58	rlwinm	r0,r0,31,31,31
0000bb5c	stw	r0,0x48(r30)
0000bb60	b	0xbb6c
0000bb64	li	r0,__mh_bundle_header
0000bb68	stw	r0,0x48(r30)
0000bb6c	lwz	r0,0x48(r30)
0000bb70	or	r3,r0,r0
0000bb74	lwz	r1,__mh_bundle_header(r1)
0000bb78	lwz	r0,0x8(r1)
0000bb7c	mtspr	lr,r0
0000bb80	lmw	r30,0xfff8(r1)
0000bb84	blr
_GetSystemVersion:
0000bb88	mfspr	r0,lr
0000bb8c	stmw	r30,0xfff8(r1)
0000bb90	stw	r0,0x8(r1)
0000bb94	stwu	r1,0xff80(r1)
0000bb98	or	r30,r1,r1
0000bb9c	bcl	20,31,0xbba0
0000bba0	mfspr	r31,lr
0000bba4	stw	r3,0x98(r30)
0000bba8	stw	r4,0x9c(r30)
0000bbac	stw	r5,0xa0(r30)
0000bbb0	addi	r0,r30,0x4c
0000bbb4	lis	r3,0x7379
0000bbb8	ori	r3,r3,0x7376
0000bbbc	or	r4,r0,r0
0000bbc0	bl	0x105c0	; symbol stub for: _Gestalt
0000bbc4	or	r0,r3,r3
0000bbc8	sth	r0,0x48(r30)
0000bbcc	lhz	r0,0x48(r30)
0000bbd0	extsh	r0,r0
0000bbd4	stw	r0,0x44(r30)
0000bbd8	lwz	r0,0x44(r30)
0000bbdc	srawi	r2,r0,31
0000bbe0	xor	r0,r2,r0
0000bbe4	subf	r0,r2,r0
0000bbe8	neg	r0,r0
0000bbec	rlwinm	r0,r0,1,31,31
0000bbf0	cmpwi	cr7,r0,__mh_bundle_header
0000bbf4	beq	cr7,0xbc34
0000bbf8	lwz	r0,0x44(r30)
0000bbfc	lis	r3,0x3f2a
0000bc00	ori	r3,r3,0x3f2a
0000bc04	li	r4,__mh_bundle_header
0000bc08	addis	r2,r31,__mh_bundle_header
0000bc0c	addi	r5,r2,0x60f8
0000bc10	addis	r2,r31,__mh_bundle_header
0000bc14	addi	r6,r2,0x696c
0000bc18	li	r7,__mh_bundle_header
0000bc1c	addis	r2,r31,__mh_bundle_header
0000bc20	addi	r8,r2,0x6c7c
0000bc24	li	r9,0x67
0000bc28	or	r10,r0,r0
0000bc2c	bl	0x10480	; symbol stub for: _DebugAssert
0000bc30	b	0xbe94
0000bc34	lwz	r0,0x4c(r30)
0000bc38	cmpwi	cr7,r0,0x103f
0000bc3c	bgt	cr7,0xbcbc
0000bc40	lwz	r0,0x98(r30)
0000bc44	cmpwi	cr7,r0,__mh_bundle_header
0000bc48	beq	cr7,0xbc7c
0000bc4c	lwz	r0,0x4c(r30)
0000bc50	rlwinm	r0,r0,0,16,19
0000bc54	srawi	r0,r0,12
0000bc58	rlwinm	r2,r0,1,0,30
0000bc5c	rlwinm	r0,r2,2,0,29
0000bc60	add	r2,r2,r0
0000bc64	lwz	r0,0x4c(r30)
0000bc68	rlwinm	r0,r0,0,20,23
0000bc6c	srawi	r0,r0,8
0000bc70	add	r0,r2,r0
0000bc74	lwz	r2,0x98(r30)
0000bc78	stw	r0,__mh_bundle_header(r2)
0000bc7c	lwz	r0,0x9c(r30)
0000bc80	cmpwi	cr7,r0,__mh_bundle_header
0000bc84	beq	cr7,0xbc9c
0000bc88	lwz	r0,0x4c(r30)
0000bc8c	rlwinm	r0,r0,0,24,27
0000bc90	srawi	r0,r0,4
0000bc94	lwz	r2,0x9c(r30)
0000bc98	stw	r0,__mh_bundle_header(r2)
0000bc9c	lwz	r0,0xa0(r30)
0000bca0	cmpwi	cr7,r0,__mh_bundle_header
0000bca4	beq	cr7,0xbedc
0000bca8	lwz	r0,0x4c(r30)
0000bcac	rlwinm	r0,r0,0,28,31
0000bcb0	lwz	r2,0xa0(r30)
0000bcb4	stw	r0,__mh_bundle_header(r2)
0000bcb8	b	0xbedc
0000bcbc	addi	r0,r30,0x50
0000bcc0	lis	r3,0x7379
0000bcc4	ori	r3,r3,0x7331
0000bcc8	or	r4,r0,r0
0000bccc	bl	0x105c0	; symbol stub for: _Gestalt
0000bcd0	or	r0,r3,r3
0000bcd4	sth	r0,0x48(r30)
0000bcd8	lhz	r0,0x48(r30)
0000bcdc	extsh	r0,r0
0000bce0	stw	r0,0x40(r30)
0000bce4	lwz	r0,0x40(r30)
0000bce8	srawi	r2,r0,31
0000bcec	xor	r0,r2,r0
0000bcf0	subf	r0,r2,r0
0000bcf4	neg	r0,r0
0000bcf8	rlwinm	r0,r0,1,31,31
0000bcfc	cmpwi	cr7,r0,__mh_bundle_header
0000bd00	beq	cr7,0xbd40
0000bd04	lwz	r0,0x40(r30)
0000bd08	lis	r3,0x3f2a
0000bd0c	ori	r3,r3,0x3f2a
0000bd10	li	r4,__mh_bundle_header
0000bd14	addis	r2,r31,__mh_bundle_header
0000bd18	addi	r5,r2,0x60f8
0000bd1c	addis	r2,r31,__mh_bundle_header
0000bd20	addi	r6,r2,0x696c
0000bd24	li	r7,__mh_bundle_header
0000bd28	addis	r2,r31,__mh_bundle_header
0000bd2c	addi	r8,r2,0x6c7c
0000bd30	li	r9,0x72
0000bd34	or	r10,r0,r0
0000bd38	bl	0x10480	; symbol stub for: _DebugAssert
0000bd3c	b	0xbe94
0000bd40	addi	r0,r30,0x54
0000bd44	lis	r3,0x7379
0000bd48	ori	r3,r3,0x7332
0000bd4c	or	r4,r0,r0
0000bd50	bl	0x105c0	; symbol stub for: _Gestalt
0000bd54	or	r0,r3,r3
0000bd58	sth	r0,0x48(r30)
0000bd5c	lhz	r0,0x48(r30)
0000bd60	extsh	r0,r0
0000bd64	stw	r0,0x3c(r30)
0000bd68	lwz	r0,0x3c(r30)
0000bd6c	srawi	r2,r0,31
0000bd70	xor	r0,r2,r0
0000bd74	subf	r0,r2,r0
0000bd78	neg	r0,r0
0000bd7c	rlwinm	r0,r0,1,31,31
0000bd80	cmpwi	cr7,r0,__mh_bundle_header
0000bd84	beq	cr7,0xbdc4
0000bd88	lwz	r0,0x3c(r30)
0000bd8c	lis	r3,0x3f2a
0000bd90	ori	r3,r3,0x3f2a
0000bd94	li	r4,__mh_bundle_header
0000bd98	addis	r2,r31,__mh_bundle_header
0000bd9c	addi	r5,r2,0x60f8
0000bda0	addis	r2,r31,__mh_bundle_header
0000bda4	addi	r6,r2,0x696c
0000bda8	li	r7,__mh_bundle_header
0000bdac	addis	r2,r31,__mh_bundle_header
0000bdb0	addi	r8,r2,0x6c7c
0000bdb4	li	r9,0x74
0000bdb8	or	r10,r0,r0
0000bdbc	bl	0x10480	; symbol stub for: _DebugAssert
0000bdc0	b	0xbe94
0000bdc4	addi	r0,r30,0x58
0000bdc8	lis	r3,0x7379
0000bdcc	ori	r3,r3,0x7333
0000bdd0	or	r4,r0,r0
0000bdd4	bl	0x105c0	; symbol stub for: _Gestalt
0000bdd8	or	r0,r3,r3
0000bddc	sth	r0,0x48(r30)
0000bde0	lhz	r0,0x48(r30)
0000bde4	extsh	r0,r0
0000bde8	stw	r0,0x38(r30)
0000bdec	lwz	r0,0x38(r30)
0000bdf0	srawi	r2,r0,31
0000bdf4	xor	r0,r2,r0
0000bdf8	subf	r0,r2,r0
0000bdfc	neg	r0,r0
0000be00	rlwinm	r0,r0,1,31,31
0000be04	cmpwi	cr7,r0,__mh_bundle_header
0000be08	beq	cr7,0xbe48
0000be0c	lwz	r0,0x38(r30)
0000be10	lis	r3,0x3f2a
0000be14	ori	r3,r3,0x3f2a
0000be18	li	r4,__mh_bundle_header
0000be1c	addis	r2,r31,__mh_bundle_header
0000be20	addi	r5,r2,0x60f8
0000be24	addis	r2,r31,__mh_bundle_header
0000be28	addi	r6,r2,0x696c
0000be2c	li	r7,__mh_bundle_header
0000be30	addis	r2,r31,__mh_bundle_header
0000be34	addi	r8,r2,0x6c7c
0000be38	li	r9,0x76
0000be3c	or	r10,r0,r0
0000be40	bl	0x10480	; symbol stub for: _DebugAssert
0000be44	b	0xbe94
0000be48	lwz	r0,0x98(r30)
0000be4c	cmpwi	cr7,r0,__mh_bundle_header
0000be50	beq	cr7,0xbe60
0000be54	lwz	r0,0x50(r30)
0000be58	lwz	r2,0x98(r30)
0000be5c	stw	r0,__mh_bundle_header(r2)
0000be60	lwz	r0,0x9c(r30)
0000be64	cmpwi	cr7,r0,__mh_bundle_header
0000be68	beq	cr7,0xbe78
0000be6c	lwz	r0,0x54(r30)
0000be70	lwz	r2,0x9c(r30)
0000be74	stw	r0,__mh_bundle_header(r2)
0000be78	lwz	r0,0xa0(r30)
0000be7c	cmpwi	cr7,r0,__mh_bundle_header
0000be80	beq	cr7,0xbedc
0000be84	lwz	r0,0x58(r30)
0000be88	lwz	r2,0xa0(r30)
0000be8c	stw	r0,__mh_bundle_header(r2)
0000be90	b	0xbedc
0000be94	lwz	r0,0x98(r30)
0000be98	cmpwi	cr7,r0,__mh_bundle_header
0000be9c	beq	cr7,0xbeac
0000bea0	lwz	r2,0x98(r30)
0000bea4	li	r0,0xa
0000bea8	stw	r0,__mh_bundle_header(r2)
0000beac	lwz	r0,0x9c(r30)
0000beb0	cmpwi	cr7,r0,__mh_bundle_header
0000beb4	beq	cr7,0xbec4
0000beb8	lwz	r2,0x9c(r30)
0000bebc	li	r0,__mh_bundle_header
0000bec0	stw	r0,__mh_bundle_header(r2)
0000bec4	lwz	r0,0xa0(r30)
0000bec8	cmpwi	cr7,r0,__mh_bundle_header
0000becc	beq	cr7,0xbedc
0000bed0	lwz	r2,0xa0(r30)
0000bed4	li	r0,__mh_bundle_header
0000bed8	stw	r0,__mh_bundle_header(r2)
0000bedc	lwz	r1,__mh_bundle_header(r1)
0000bee0	lwz	r0,0x8(r1)
0000bee4	mtspr	lr,r0
0000bee8	lmw	r30,0xfff8(r1)
0000beec	blr
_IconRefFromIconFileNoCache:
0000bef0	mfspr	r0,lr
0000bef4	stmw	r30,0xfff8(r1)
0000bef8	stw	r0,0x8(r1)
0000befc	stwu	r1,0xff50(r1)
0000bf00	or	r30,r1,r1
0000bf04	stw	r3,0xc8(r30)
0000bf08	li	r3,__mh_bundle_header
0000bf0c	lwz	r4,0xc8(r30)
0000bf10	li	r5,__mh_bundle_header
0000bf14	li	r6,__mh_bundle_header
0000bf18	bl	0x10100	; symbol stub for: _CFURLCreateWithFileSystemPath
0000bf1c	or	r0,r3,r3
0000bf20	stw	r0,0x3c(r30)
0000bf24	lwz	r0,0x3c(r30)
0000bf28	cmpwi	cr7,r0,__mh_bundle_header
0000bf2c	bne	cr7,0xbf3c
0000bf30	li	r0,__mh_bundle_header
0000bf34	stw	r0,0x98(r30)
0000bf38	b	0xbff4
0000bf3c	addi	r0,r30,0x48
0000bf40	lwz	r3,0x3c(r30)
0000bf44	or	r4,r0,r0
0000bf48	bl	0x10120	; symbol stub for: _CFURLGetFSRef
0000bf4c	or	r0,r3,r3
0000bf50	stb	r0,0x38(r30)
0000bf54	lwz	r3,0x3c(r30)
0000bf58	bl	0xff40	; symbol stub for: _CFRelease
0000bf5c	lbz	r0,0x38(r30)
0000bf60	rlwinm	r0,r0,0,24,31
0000bf64	cmpwi	cr7,r0,__mh_bundle_header
0000bf68	bne	cr7,0xbf78
0000bf6c	li	r0,__mh_bundle_header
0000bf70	stw	r0,0x98(r30)
0000bf74	b	0xbff4
0000bf78	addi	r0,r30,0x48
0000bf7c	addi	r2,r30,0x44
0000bf80	or	r3,r0,r0
0000bf84	or	r4,r2,r2
0000bf88	bl	0x10c00	; symbol stub for: _ReadIconFromFSRef
0000bf8c	or	r0,r3,r3
0000bf90	cmpwi	cr7,r0,__mh_bundle_header
0000bf94	beq	cr7,0xbfa4
0000bf98	li	r0,__mh_bundle_header
0000bf9c	stw	r0,0x98(r30)
0000bfa0	b	0xbff4
0000bfa4	li	r0,__mh_bundle_header
0000bfa8	stw	r0,0x40(r30)
0000bfac	lwz	r0,0x44(r30)
0000bfb0	or	r3,r0,r0
0000bfb4	bl	0x10a40	; symbol stub for: _HLock
0000bfb8	lwz	r2,0x44(r30)
0000bfbc	lwz	r9,__mh_bundle_header(r2)
0000bfc0	lwz	r2,0x44(r30)
0000bfc4	lwz	r2,__mh_bundle_header(r2)
0000bfc8	lwz	r0,0x4(r2)
0000bfcc	addi	r2,r30,0x40
0000bfd0	or	r3,r9,r9
0000bfd4	or	r4,r0,r0
0000bfd8	or	r5,r2,r2
0000bfdc	bl	0x106a0	; symbol stub for: _GetIconRefFromIconFamilyPtr
0000bfe0	lwz	r0,0x44(r30)
0000bfe4	or	r3,r0,r0
0000bfe8	bl	0x104e0	; symbol stub for: _DisposeHandle
0000bfec	lwz	r0,0x40(r30)
0000bff0	stw	r0,0x98(r30)
0000bff4	lwz	r0,0x98(r30)
0000bff8	or	r3,r0,r0
0000bffc	lwz	r1,__mh_bundle_header(r1)
0000c000	lwz	r0,0x8(r1)
0000c004	mtspr	lr,r0
0000c008	lmw	r30,0xfff8(r1)
0000c00c	blr
_getPreferenceBool:
0000c010	mfspr	r0,lr
0000c014	stmw	r29,0xfff4(r1)
0000c018	stw	r0,0x8(r1)
0000c01c	stwu	r1,0xffa0(r1)
0000c020	or	r30,r1,r1
0000c024	bcl	20,31,0xc028
0000c028	mfspr	r31,lr
0000c02c	stw	r3,0x78(r30)
0000c030	or	r0,r4,r4
0000c034	stb	r0,0x7c(r30)
0000c038	addis	r2,r31,__mh_bundle_header
0000c03c	addi	r2,r2,0x78ac
0000c040	lwz	r0,__mh_bundle_header(r2)
0000c044	lwz	r3,0x78(r30)
0000c048	or	r4,r0,r0
0000c04c	bl	0xff20	; symbol stub for: _CFPreferencesCopyAppValue
0000c050	or	r0,r3,r3
0000c054	stw	r0,0x38(r30)
0000c058	lwz	r0,0x38(r30)
0000c05c	cmpwi	cr7,r0,__mh_bundle_header
0000c060	beq	cr7,0xc0b0
0000c064	lwz	r3,0x38(r30)
0000c068	bl	0xfe80	; symbol stub for: _CFGetTypeID
0000c06c	or	r29,r3,r3
0000c070	bl	0xfc60	; symbol stub for: _CFBooleanGetTypeID
0000c074	or	r0,r3,r3
0000c078	cmpw	cr7,r29,r0
0000c07c	bne	cr7,0xc0b0
0000c080	lwz	r0,0x38(r30)
0000c084	or	r3,r0,r0
0000c088	bl	0xfc80	; symbol stub for: _CFBooleanGetValue
0000c08c	or	r0,r3,r3
0000c090	cmpwi	cr7,r0,__mh_bundle_header
0000c094	beq	cr7,0xc0a4
0000c098	li	r0,0x1
0000c09c	stw	r0,0x48(r30)
0000c0a0	b	0xc0bc
0000c0a4	li	r0,__mh_bundle_header
0000c0a8	stw	r0,0x48(r30)
0000c0ac	b	0xc0bc
0000c0b0	lbz	r0,0x7c(r30)
0000c0b4	rlwinm	r0,r0,0,24,31
0000c0b8	stw	r0,0x48(r30)
0000c0bc	lwz	r0,0x48(r30)
0000c0c0	or	r3,r0,r0
0000c0c4	lwz	r1,__mh_bundle_header(r1)
0000c0c8	lwz	r0,0x8(r1)
0000c0cc	mtspr	lr,r0
0000c0d0	lmw	r29,0xfff4(r1)
0000c0d4	blr
_getPreferenceInt:
0000c0d8	mfspr	r0,lr
0000c0dc	stmw	r29,0xfff4(r1)
0000c0e0	stw	r0,0x8(r1)
0000c0e4	stwu	r1,0xffa0(r1)
0000c0e8	or	r30,r1,r1
0000c0ec	bcl	20,31,0xc0f0
0000c0f0	mfspr	r31,lr
0000c0f4	stw	r3,0x78(r30)
0000c0f8	or	r0,r4,r4
0000c0fc	stb	r0,0x7c(r30)
0000c100	addis	r2,r31,__mh_bundle_header
0000c104	addi	r2,r2,0x77e4
0000c108	lwz	r0,__mh_bundle_header(r2)
0000c10c	lwz	r3,0x78(r30)
0000c110	or	r4,r0,r0
0000c114	bl	0xff20	; symbol stub for: _CFPreferencesCopyAppValue
0000c118	or	r0,r3,r3
0000c11c	stw	r0,0x38(r30)
0000c120	lwz	r0,0x38(r30)
0000c124	cmpwi	cr7,r0,__mh_bundle_header
0000c128	beq	cr7,0xc178
0000c12c	lwz	r3,0x38(r30)
0000c130	bl	0xfe80	; symbol stub for: _CFGetTypeID
0000c134	or	r29,r3,r3
0000c138	bl	0xfc60	; symbol stub for: _CFBooleanGetTypeID
0000c13c	or	r0,r3,r3
0000c140	cmpw	cr7,r29,r0
0000c144	bne	cr7,0xc178
0000c148	lwz	r0,0x38(r30)
0000c14c	or	r3,r0,r0
0000c150	bl	0xfc80	; symbol stub for: _CFBooleanGetValue
0000c154	or	r0,r3,r3
0000c158	cmpwi	cr7,r0,__mh_bundle_header
0000c15c	beq	cr7,0xc16c
0000c160	li	r0,0x1
0000c164	stw	r0,0x48(r30)
0000c168	b	0xc184
0000c16c	li	r0,__mh_bundle_header
0000c170	stw	r0,0x48(r30)
0000c174	b	0xc184
0000c178	lbz	r0,0x7c(r30)
0000c17c	rlwinm	r0,r0,0,24,31
0000c180	stw	r0,0x48(r30)
0000c184	lwz	r0,0x48(r30)
0000c188	or	r3,r0,r0
0000c18c	lwz	r1,__mh_bundle_header(r1)
0000c190	lwz	r0,0x8(r1)
0000c194	mtspr	lr,r0
0000c198	lmw	r29,0xfff4(r1)
0000c19c	blr
_DEBUG_printf:
0000c1a0	mfspr	r0,lr
0000c1a4	stmw	r30,0xfff8(r1)
0000c1a8	stw	r0,0x8(r1)
0000c1ac	stwu	r1,0xffa0(r1)
0000c1b0	or	r30,r1,r1
0000c1b4	bcl	20,31,0xc1b8
0000c1b8	mfspr	r31,lr
0000c1bc	stw	r4,0x7c(r30)
0000c1c0	stw	r5,0x80(r30)
0000c1c4	stw	r6,0x84(r30)
0000c1c8	stw	r7,0x88(r30)
0000c1cc	stw	r8,0x8c(r30)
0000c1d0	stw	r9,0x90(r30)
0000c1d4	stw	r10,0x94(r30)
0000c1d8	stw	r3,0x78(r30)
0000c1dc	addi	r0,r30,0x7c
0000c1e0	stw	r0,0x38(r30)
0000c1e4	addis	r2,r31,__mh_bundle_header
0000c1e8	lwz	r2,0x6e54(r2)
0000c1ec	addi	r0,r2,0xb0
0000c1f0	lwz	r2,0x38(r30)
0000c1f4	or	r3,r0,r0
0000c1f8	lwz	r4,0x78(r30)
0000c1fc	or	r5,r2,r2
0000c200	bl	0x11600	; symbol stub for: _vfprintf$LDBL128
0000c204	lwz	r1,__mh_bundle_header(r1)
0000c208	lwz	r0,0x8(r1)
0000c20c	mtspr	lr,r0
0000c210	lmw	r30,0xfff8(r1)
0000c214	blr
_CachedCheckIconRef:
0000c218	mfspr	r0,lr
0000c21c	stmw	r30,0xfff8(r1)
0000c220	stw	r0,0x8(r1)
0000c224	stwu	r1,0xff50(r1)
0000c228	or	r30,r1,r1
0000c22c	bcl	20,31,0xc230
0000c230	mfspr	r31,lr
0000c234	addis	r2,r31,__mh_bundle_header
0000c238	addi	r2,r2,0x7820
0000c23c	lwz	r0,__mh_bundle_header(r2)
0000c240	cmpwi	cr7,r0,__mh_bundle_header
0000c244	bne	cr7,0xc304
0000c248	li	r0,__mh_bundle_header
0000c24c	stw	r0,0x40(r30)
0000c250	addis	r2,r31,__mh_bundle_header
0000c254	addi	r0,r2,0x7390
0000c258	stw	r0,0x38(r30)
0000c25c	li	r3,__mh_bundle_header
0000c260	lwz	r4,0x38(r30)
0000c264	li	r5,__mh_bundle_header
0000c268	li	r6,__mh_bundle_header
0000c26c	bl	0x10100	; symbol stub for: _CFURLCreateWithFileSystemPath
0000c270	or	r0,r3,r3
0000c274	stw	r0,0x3c(r30)
0000c278	lwz	r0,0x3c(r30)
0000c27c	cmpwi	cr7,r0,__mh_bundle_header
0000c280	bne	cr7,0xc290
0000c284	li	r0,__mh_bundle_header
0000c288	stw	r0,0x98(r30)
0000c28c	b	0xc314
0000c290	addi	r0,r30,0x48
0000c294	lwz	r3,0x3c(r30)
0000c298	or	r4,r0,r0
0000c29c	bl	0x10120	; symbol stub for: _CFURLGetFSRef
0000c2a0	or	r0,r3,r3
0000c2a4	stw	r0,0x40(r30)
0000c2a8	addi	r0,r30,0x48
0000c2ac	addi	r2,r30,0x44
0000c2b0	or	r3,r0,r0
0000c2b4	or	r4,r2,r2
0000c2b8	bl	0x10c00	; symbol stub for: _ReadIconFromFSRef
0000c2bc	or	r0,r3,r3
0000c2c0	stw	r0,0x40(r30)
0000c2c4	lwz	r0,0x44(r30)
0000c2c8	or	r3,r0,r0
0000c2cc	bl	0x10a40	; symbol stub for: _HLock
0000c2d0	lwz	r2,0x44(r30)
0000c2d4	lwz	r9,__mh_bundle_header(r2)
0000c2d8	lwz	r2,0x44(r30)
0000c2dc	lwz	r2,__mh_bundle_header(r2)
0000c2e0	lwz	r0,0x4(r2)
0000c2e4	or	r3,r9,r9
0000c2e8	or	r4,r0,r0
0000c2ec	addis	r2,r31,__mh_bundle_header
0000c2f0	addi	r5,r2,0x7820
0000c2f4	bl	0x106a0	; symbol stub for: _GetIconRefFromIconFamilyPtr
0000c2f8	lwz	r0,0x44(r30)
0000c2fc	or	r3,r0,r0
0000c300	bl	0x104e0	; symbol stub for: _DisposeHandle
0000c304	addis	r2,r31,__mh_bundle_header
0000c308	addi	r2,r2,0x7820
0000c30c	lwz	r2,__mh_bundle_header(r2)
0000c310	stw	r2,0x98(r30)
0000c314	lwz	r0,0x98(r30)
0000c318	or	r3,r0,r0
0000c31c	lwz	r1,__mh_bundle_header(r1)
0000c320	lwz	r0,0x8(r1)
0000c324	mtspr	lr,r0
0000c328	lmw	r30,0xfff8(r1)
0000c32c	blr
_EatMenuDescriptorWithExtremePrejudice:
0000c330	mfspr	r0,lr
0000c334	stmw	r30,0xfff8(r1)
0000c338	stw	r0,0x8(r1)
0000c33c	stwu	r1,0xff80(r1)
0000c340	or	r30,r1,r1
0000c344	bcl	20,31,0xc348
0000c348	mfspr	r31,lr
0000c34c	stw	r3,0x98(r30)
0000c350	stw	r4,0x9c(r30)
0000c354	stw	r5,0xa0(r30)
0000c358	stw	r6,0xa4(r30)
0000c35c	stw	r7,0xa8(r30)
0000c360	addis	r2,r31,__mh_bundle_header
0000c364	addi	r0,r2,0x72f8
0000c368	or	r3,r0,r0
0000c36c	lwz	r4,0xa4(r30)
0000c370	bl	_DBLog
0000c374	lwz	r0,0xa4(r30)
0000c378	stw	r0,0x5c(r30)
0000c37c	li	r0,__mh_bundle_header
0000c380	stw	r0,0x50(r30)
0000c384	li	r0,__mh_bundle_header
0000c388	stw	r0,0x4c(r30)
0000c38c	li	r0,0x1
0000c390	stw	r0,0x44(r30)
0000c394	lwz	r2,0x98(r30)
0000c398	lwz	r0,__mh_bundle_header(r2)
0000c39c	cmpwi	cr7,r0,__mh_bundle_header
0000c3a0	bne	cr7,0xc3e0
0000c3a4	lwz	r2,0x9c(r30)
0000c3a8	lhz	r0,__mh_bundle_header(r2)
0000c3ac	extsh	r2,r0
0000c3b0	sth	r2,0x40(r30)
0000c3b4	addi	r0,r2,0x1
0000c3b8	extsh	r0,r0
0000c3bc	lwz	r2,0x9c(r30)
0000c3c0	sth	r0,__mh_bundle_header(r2)
0000c3c4	lhz	r0,0x40(r30)
0000c3c8	extsh	r0,r0
0000c3cc	or	r3,r0,r0
0000c3d0	li	r4,__mh_bundle_header
0000c3d4	lwz	r5,0x98(r30)
0000c3d8	bl	0x10440	; symbol stub for: _CreateNewMenu
0000c3dc	b	0xc65c
0000c3e0	addis	r2,r31,__mh_bundle_header
0000c3e4	addi	r2,r2,0x7610
0000c3e8	lhz	r0,__mh_bundle_header(r2)
0000c3ec	sth	r0,0x40(r30)
0000c3f0	b	0xc65c
0000c3f4	lwz	r0,0x50(r30)
0000c3f8	stw	r0,0x4c(r30)
0000c3fc	li	r3,0x14
0000c400	bl	0x111c0	; symbol stub for: _malloc
0000c404	or	r0,r3,r3
0000c408	stw	r0,0x50(r30)
0000c40c	lwz	r2,0xa0(r30)
0000c410	lwz	r0,__mh_bundle_header(r2)
0000c414	cmpwi	cr7,r0,__mh_bundle_header
0000c418	bne	cr7,0xc428
0000c41c	lwz	r2,0xa0(r30)
0000c420	lwz	r0,0x50(r30)
0000c424	stw	r0,__mh_bundle_header(r2)
0000c428	lwz	r0,0x4c(r30)
0000c42c	cmpwi	cr7,r0,__mh_bundle_header
0000c430	beq	cr7,0xc440
0000c434	lwz	r2,0x4c(r30)
0000c438	lwz	r0,0x50(r30)
0000c43c	stw	r0,0x10(r2)
0000c440	lwz	r2,0x50(r30)
0000c444	lhz	r0,0x40(r30)
0000c448	sth	r0,__mh_bundle_header(r2)
0000c44c	lwz	r2,0x50(r30)
0000c450	lwz	r0,0x44(r30)
0000c454	stw	r0,0x4(r2)
0000c458	lwz	r2,0x44(r30)
0000c45c	addi	r0,r2,0x1
0000c460	stw	r0,0x44(r30)
0000c464	lwz	r2,0x50(r30)
0000c468	li	r0,__mh_bundle_header
0000c46c	stw	r0,0xc(r2)
0000c470	lwz	r2,0x50(r30)
0000c474	li	r0,__mh_bundle_header
0000c478	stw	r0,0x10(r2)
0000c47c	addi	r0,r30,0x5c
0000c480	or	r3,r0,r0
0000c484	addis	r2,r31,__mh_bundle_header
0000c488	addi	r4,r2,0x5f10
0000c48c	bl	0x11580	; symbol stub for: _strsep
0000c490	or	r0,r3,r3
0000c494	stw	r0,0x58(r30)
0000c498	lwz	r0,0x5c(r30)
0000c49c	or	r2,r0,r0
0000c4a0	lwz	r0,0x58(r30)
0000c4a4	subf	r0,r0,r2
0000c4a8	lwz	r3,0x58(r30)
0000c4ac	lwz	r4,0x58(r30)
0000c4b0	or	r5,r0,r0
0000c4b4	bl	_GhettoURLDecode
0000c4b8	addis	r2,r31,__mh_bundle_header
0000c4bc	lwz	r2,0x6cd0(r2)
0000c4c0	lwz	r0,__mh_bundle_header(r2)
0000c4c4	or	r3,r0,r0
0000c4c8	lwz	r4,0x58(r30)
0000c4cc	lis	r5,0x800
0000c4d0	ori	r5,r5,0x100
0000c4d4	bl	0xffc0	; symbol stub for: _CFStringCreateWithCString
0000c4d8	or	r0,r3,r3
0000c4dc	stw	r0,0x3c(r30)
0000c4e0	addi	r0,r30,0x5c
0000c4e4	or	r3,r0,r0
0000c4e8	addis	r2,r31,__mh_bundle_header
0000c4ec	addi	r4,r2,0x5f10
0000c4f0	bl	0x11580	; symbol stub for: _strsep
0000c4f4	or	r0,r3,r3
0000c4f8	stw	r0,0x54(r30)
0000c4fc	addi	r0,r30,0x5c
0000c500	or	r3,r0,r0
0000c504	addis	r2,r31,__mh_bundle_header
0000c508	addi	r4,r2,0x5f14
0000c50c	bl	0x11580	; symbol stub for: _strsep
0000c510	or	r0,r3,r3
0000c514	stw	r0,0x58(r30)
0000c518	lwz	r0,0x5c(r30)
0000c51c	cmpwi	cr7,r0,__mh_bundle_header
0000c520	bne	cr7,0xc538
0000c524	lwz	r3,0x58(r30)
0000c528	bl	0x11540	; symbol stub for: _strlen
0000c52c	or	r0,r3,r3
0000c530	stw	r0,0x48(r30)
0000c534	b	0xc54c
0000c538	lwz	r0,0x5c(r30)
0000c53c	or	r2,r0,r0
0000c540	lwz	r0,0x58(r30)
0000c544	subf	r0,r0,r2
0000c548	stw	r0,0x48(r30)
0000c54c	lwz	r2,0x48(r30)
0000c550	addi	r0,r2,0x1
0000c554	or	r3,r0,r0
0000c558	bl	0x111c0	; symbol stub for: _malloc
0000c55c	or	r0,r3,r3
0000c560	lwz	r2,0x50(r30)
0000c564	stw	r0,0x8(r2)
0000c568	lwz	r2,0x50(r30)
0000c56c	lwz	r0,0x8(r2)
0000c570	lwz	r2,0x48(r30)
0000c574	addi	r2,r2,0x1
0000c578	or	r3,r0,r0
0000c57c	lwz	r4,0x58(r30)
0000c580	or	r5,r2,r2
0000c584	bl	_GhettoURLDecode
0000c588	lwz	r2,0x98(r30)
0000c58c	lwz	r0,__mh_bundle_header(r2)
0000c590	lwz	r2,0x50(r30)
0000c594	lwz	r2,0x4(r2)
0000c598	addi	r9,r30,0x60
0000c59c	or	r3,r0,r0
0000c5a0	lwz	r4,0x3c(r30)
0000c5a4	li	r5,__mh_bundle_header
0000c5a8	or	r6,r2,r2
0000c5ac	or	r7,r9,r9
0000c5b0	bl	0xfb60	; symbol stub for: _AppendMenuItemTextWithCFString
0000c5b4	lwz	r3,0x3c(r30)
0000c5b8	bl	0xff40	; symbol stub for: _CFRelease
0000c5bc	lwz	r2,0x58(r30)
0000c5c0	lwz	r0,0x54(r30)
0000c5c4	subf	r0,r0,r2
0000c5c8	lwz	r3,0x54(r30)
0000c5cc	lwz	r4,0x54(r30)
0000c5d0	or	r5,r0,r0
0000c5d4	bl	_GhettoURLDecode
0000c5d8	or	r0,r3,r3
0000c5dc	stw	r0,0x38(r30)
0000c5e0	lwz	r3,0x54(r30)
0000c5e4	li	r4,0x7e
0000c5e8	bl	0x114c0	; symbol stub for: _strchr
0000c5ec	or	r0,r3,r3
0000c5f0	cmpwi	cr7,r0,__mh_bundle_header
0000c5f4	beq	cr7,0xc65c
0000c5f8	li	r0,__mh_bundle_header
0000c5fc	stw	r0,0x64(r30)
0000c600	lwz	r2,0x50(r30)
0000c604	addi	r2,r2,0x10
0000c608	addi	r0,r30,0x64
0000c60c	or	r3,r0,r0
0000c610	lwz	r4,0x9c(r30)
0000c614	or	r5,r2,r2
0000c618	lwz	r6,0x54(r30)
0000c61c	lwz	r7,0x38(r30)
0000c620	bl	_EatMenuDescriptorWithExtremePrejudice
0000c624	or	r0,r3,r3
0000c628	stw	r0,0x50(r30)
0000c62c	lwz	r2,0x98(r30)
0000c630	lwz	r9,__mh_bundle_header(r2)
0000c634	lhz	r0,0x60(r30)
0000c638	rlwinm	r0,r0,0,16,31
0000c63c	lwz	r2,0x64(r30)
0000c640	or	r3,r9,r9
0000c644	or	r4,r0,r0
0000c648	or	r5,r2,r2
0000c64c	bl	0x10d00	; symbol stub for: _SetMenuItemHierarchicalMenu
0000c650	lwz	r0,0x64(r30)
0000c654	lwz	r2,0x50(r30)
0000c658	stw	r0,0xc(r2)
0000c65c	lwz	r0,0x5c(r30)
0000c660	or	r2,r0,r0
0000c664	lwz	r0,0xa4(r30)
0000c668	subf	r2,r0,r2
0000c66c	lwz	r0,0xa8(r30)
0000c670	cmpw	cr7,r2,r0
0000c674	blt	cr7,0xc3f4
0000c678	lwz	r0,0x50(r30)
0000c67c	or	r3,r0,r0
0000c680	lwz	r1,__mh_bundle_header(r1)
0000c684	lwz	r0,0x8(r1)
0000c688	mtspr	lr,r0
0000c68c	lmw	r30,0xfff8(r1)
0000c690	blr
_EatMenuDescriptor:
0000c694	mfspr	r0,lr
0000c698	stmw	r30,0xfff8(r1)
0000c69c	stw	r0,0x8(r1)
0000c6a0	stwu	r1,0xffa0(r1)
0000c6a4	or	r30,r1,r1
0000c6a8	bcl	20,31,0xc6ac
0000c6ac	mfspr	r31,lr
0000c6b0	stw	r3,0x78(r30)
0000c6b4	stw	r4,0x7c(r30)
0000c6b8	addis	r2,r31,__mh_bundle_header
0000c6bc	addi	r2,r2,0x72ac
0000c6c0	lhz	r0,__mh_bundle_header(r2)
0000c6c4	extsh	r0,r0
0000c6c8	rlwinm	r2,r0,0,16,31
0000c6cc	addi	r0,r2,0x1
0000c6d0	rlwinm	r0,r0,0,16,31
0000c6d4	extsh	r0,r0
0000c6d8	sth	r0,0x38(r30)
0000c6dc	addis	r2,r31,__mh_bundle_header
0000c6e0	addi	r3,r2,0x73c4
0000c6e4	addi	r0,r30,0x38
0000c6e8	or	r4,r0,r0
0000c6ec	addis	r2,r31,__mh_bundle_header
0000c6f0	addi	r5,r2,0x73c8
0000c6f4	lwz	r6,0x78(r30)
0000c6f8	lwz	r7,0x7c(r30)
0000c6fc	bl	_EatMenuDescriptorWithExtremePrejudice
0000c700	lwz	r1,__mh_bundle_header(r1)
0000c704	lwz	r0,0x8(r1)
0000c708	mtspr	lr,r0
0000c70c	lmw	r30,0xfff8(r1)
0000c710	blr
_VerbResult:
0000c714	stmw	r30,0xfff8(r1)
0000c718	stwu	r1,0xffc0(r1)
0000c71c	or	r30,r1,r1
0000c720	stw	r3,0x58(r30)
0000c724	or	r0,r4,r4
0000c728	stw	r5,0x60(r30)
0000c72c	sth	r0,0x5c(r30)
0000c730	li	r0,__mh_bundle_header
0000c734	stw	r0,0x18(r30)
0000c738	b	0xc798
0000c73c	lwz	r2,0x58(r30)
0000c740	lhz	r0,__mh_bundle_header(r2)
0000c744	extsh	r2,r0
0000c748	lhz	r0,0x5c(r30)
0000c74c	extsh	r0,r0
0000c750	cmpw	cr7,r0,r2
0000c754	bne	cr7,0xc77c
0000c758	lwz	r2,0x58(r30)
0000c75c	lwz	r2,0x4(r2)
0000c760	lwz	r0,0x60(r30)
0000c764	cmpw	cr7,r2,r0
0000c768	bne	cr7,0xc77c
0000c76c	lwz	r2,0x58(r30)
0000c770	lwz	r2,0x8(r2)
0000c774	stw	r2,0x28(r30)
0000c778	b	0xc784
0000c77c	li	r0,__mh_bundle_header
0000c780	stw	r0,0x28(r30)
0000c784	lwz	r0,0x28(r30)
0000c788	stw	r0,0x18(r30)
0000c78c	lwz	r2,0x58(r30)
0000c790	lwz	r0,0x10(r2)
0000c794	stw	r0,0x58(r30)
0000c798	lwz	r0,0x18(r30)
0000c79c	cmpwi	cr7,r0,__mh_bundle_header
0000c7a0	bne	cr7,0xc7b0
0000c7a4	lwz	r0,0x58(r30)
0000c7a8	cmpwi	cr7,r0,__mh_bundle_header
0000c7ac	bne	cr7,0xc73c
0000c7b0	lwz	r0,0x18(r30)
0000c7b4	or	r3,r0,r0
0000c7b8	lwz	r1,__mh_bundle_header(r1)
0000c7bc	lmw	r30,0xfff8(r1)
0000c7c0	blr
_FreeVerbList:
0000c7c4	mfspr	r0,lr
0000c7c8	stmw	r30,0xfff8(r1)
0000c7cc	stw	r0,0x8(r1)
0000c7d0	stwu	r1,0xffa0(r1)
0000c7d4	or	r30,r1,r1
0000c7d8	stw	r3,0x78(r30)
0000c7dc	b	0xc82c
0000c7e0	lwz	r2,0x78(r30)
0000c7e4	lwz	r0,0x8(r2)
0000c7e8	or	r3,r0,r0
0000c7ec	bl	0x11040	; symbol stub for: _free
0000c7f0	lwz	r2,0x78(r30)
0000c7f4	lwz	r0,0xc(r2)
0000c7f8	cmpwi	cr7,r0,__mh_bundle_header
0000c7fc	beq	cr7,0xc810
0000c800	lwz	r2,0x78(r30)
0000c804	lwz	r0,0xc(r2)
0000c808	or	r3,r0,r0
0000c80c	bl	0x10520	; symbol stub for: _DisposeMenu
0000c810	lwz	r0,0x78(r30)
0000c814	stw	r0,0x38(r30)
0000c818	lwz	r2,0x78(r30)
0000c81c	lwz	r0,0x10(r2)
0000c820	stw	r0,0x78(r30)
0000c824	lwz	r3,0x38(r30)
0000c828	bl	0x11040	; symbol stub for: _free
0000c82c	lwz	r0,0x78(r30)
0000c830	cmpwi	cr7,r0,__mh_bundle_header
0000c834	bne	cr7,0xc7e0
0000c838	lwz	r1,__mh_bundle_header(r1)
0000c83c	lwz	r0,0x8(r1)
0000c840	mtspr	lr,r0
0000c844	lmw	r30,0xfff8(r1)
0000c848	blr
_RequestVerb:
0000c84c	mfspr	r0,lr
0000c850	stmw	r30,0xfff8(r1)
0000c854	stw	r0,0x8(r1)
0000c858	stwu	r1,0xfb90(r1)
0000c85c	or	r30,r1,r1
0000c860	bcl	20,31,0xc864
0000c864	mfspr	r31,lr
0000c868	stw	r3,0x488(r30)
0000c86c	addis	r2,r31,__mh_bundle_header
0000c870	lwz	r2,0x67b4(r2)
0000c874	lwz	r0,__mh_bundle_header(r2)
0000c878	or	r3,r0,r0
0000c87c	lwz	r4,0x488(r30)
0000c880	lis	r5,0x800
0000c884	ori	r5,r5,0x100
0000c888	bl	0xffc0	; symbol stub for: _CFStringCreateWithCString
0000c88c	or	r0,r3,r3
0000c890	stw	r0,0x40(r30)
0000c894	li	r0,__mh_bundle_header
0000c898	stw	r0,0x44(r30)
0000c89c	lwz	r3,0x40(r30)
0000c8a0	bl	0x100a0	; symbol stub for: _CFStringGetLength
0000c8a4	or	r0,r3,r3
0000c8a8	stw	r0,0x48(r30)
0000c8ac	lwz	r0,0x48(r30)
0000c8b0	rlwinm	r0,r0,1,0,30
0000c8b4	or	r3,r0,r0
0000c8b8	bl	0x111c0	; symbol stub for: _malloc
0000c8bc	or	r0,r3,r3
0000c8c0	stw	r0,0x38(r30)
0000c8c4	lwz	r3,0x40(r30)
0000c8c8	lwz	r4,0x44(r30)
0000c8cc	lwz	r5,0x48(r30)
0000c8d0	lwz	r6,0x38(r30)
0000c8d4	bl	0x10060	; symbol stub for: _CFStringGetCharacters
0000c8d8	lwz	r0,0x48(r30)
0000c8dc	addi	r2,r30,0x4c
0000c8e0	li	r3,0x7
0000c8e4	lwz	r4,0x38(r30)
0000c8e8	or	r5,r0,r0
0000c8ec	or	r6,r2,r2
0000c8f0	li	r7,0x3ff
0000c8f4	bl	_dropboxRequest
0000c8f8	or	r0,r3,r3
0000c8fc	stw	r0,0x3c(r30)
0000c900	lwz	r0,0x3c(r30)
0000c904	cmpwi	cr7,r0,__mh_bundle_header
0000c908	blt	cr7,0xc920
0000c90c	lwz	r2,0x3c(r30)
0000c910	addi	r0,r30,0x38
0000c914	add	r2,r0,r2
0000c918	li	r0,__mh_bundle_header
0000c91c	stb	r0,0x14(r2)
0000c920	lwz	r3,0x38(r30)
0000c924	bl	0x11040	; symbol stub for: _free
0000c928	lwz	r3,0x40(r30)
0000c92c	bl	0xff40	; symbol stub for: _CFRelease
0000c930	lwz	r1,__mh_bundle_header(r1)
0000c934	lwz	r0,0x8(r1)
0000c938	mtspr	lr,r0
0000c93c	lmw	r30,0xfff8(r1)
0000c940	blr
_RebuildMenu:
0000c944	mfspr	r0,lr
0000c948	stmw	r29,0xfff4(r1)
0000c94c	stw	r0,0x8(r1)
0000c950	stwu	r1,0xfb80(r1)
0000c954	or	r30,r1,r1
0000c958	bcl	20,31,0xc95c
0000c95c	mfspr	r31,lr
0000c960	li	r0,__mh_bundle_header
0000c964	stw	r0,0x54(r30)
0000c968	addi	r0,r30,0x54
0000c96c	or	r3,r0,r0
0000c970	li	r4,__mh_bundle_header
0000c974	bl	_GetFinderContext
0000c978	or	r0,r3,r3
0000c97c	stw	r0,0x50(r30)
0000c980	lwz	r0,0x54(r30)
0000c984	cmpwi	cr7,r0,__mh_bundle_header
0000c988	bne	cr7,0xc9e0
0000c98c	addis	r2,r31,__mh_bundle_header
0000c990	addi	r0,r2,0x6cf4
0000c994	or	r3,r0,r0
0000c998	bl	_DBLog
0000c99c	lwz	r0,0x54(r30)
0000c9a0	lwz	r3,0x50(r30)
0000c9a4	or	r4,r0,r0
0000c9a8	bl	_FreeFinderContext
0000c9ac	addi	r0,r30,0x54
0000c9b0	or	r3,r0,r0
0000c9b4	li	r4,0x1
0000c9b8	bl	_GetFinderContext
0000c9bc	or	r0,r3,r3
0000c9c0	stw	r0,0x50(r30)
0000c9c4	lwz	r0,0x54(r30)
0000c9c8	cmpwi	cr7,r0,__mh_bundle_header
0000c9cc	bne	cr7,0xc9e0
0000c9d0	addis	r2,r31,__mh_bundle_header
0000c9d4	addi	r0,r2,0x6d04
0000c9d8	or	r3,r0,r0
0000c9dc	bl	_DBLog
0000c9e0	li	r0,__mh_bundle_header
0000c9e4	stw	r0,0x4c(r30)
0000c9e8	li	r0,__mh_bundle_header
0000c9ec	stw	r0,0x48(r30)
0000c9f0	li	r0,__mh_bundle_header
0000c9f4	stw	r0,0x40(r30)
0000c9f8	li	r0,__mh_bundle_header
0000c9fc	stw	r0,0x44(r30)
0000ca00	b	0xca64
0000ca04	lwz	r0,0x44(r30)
0000ca08	rlwinm	r0,r0,2,0,29
0000ca0c	or	r2,r0,r0
0000ca10	lwz	r0,0x50(r30)
0000ca14	add	r2,r2,r0
0000ca18	lwz	r0,__mh_bundle_header(r2)
0000ca1c	cmpwi	cr7,r0,__mh_bundle_header
0000ca20	beq	cr7,0xca58
0000ca24	lwz	r0,0x44(r30)
0000ca28	rlwinm	r0,r0,2,0,29
0000ca2c	or	r2,r0,r0
0000ca30	lwz	r0,0x50(r30)
0000ca34	add	r2,r2,r0
0000ca38	lwz	r0,__mh_bundle_header(r2)
0000ca3c	or	r3,r0,r0
0000ca40	bl	0x100a0	; symbol stub for: _CFStringGetLength
0000ca44	or	r2,r3,r3
0000ca48	addi	r2,r2,0x1
0000ca4c	lwz	r0,0x4c(r30)
0000ca50	add	r0,r0,r2
0000ca54	stw	r0,0x4c(r30)
0000ca58	lwz	r2,0x44(r30)
0000ca5c	addi	r0,r2,0x1
0000ca60	stw	r0,0x44(r30)
0000ca64	lwz	r0,0x54(r30)
0000ca68	lwz	r2,0x44(r30)
0000ca6c	cmpw	cr7,r2,r0
0000ca70	blt	cr7,0xca04
0000ca74	lwz	r0,0x4c(r30)
0000ca78	rlwinm	r0,r0,1,0,30
0000ca7c	or	r3,r0,r0
0000ca80	bl	0x111c0	; symbol stub for: _malloc
0000ca84	or	r0,r3,r3
0000ca88	stw	r0,0x3c(r30)
0000ca8c	li	r0,0xffff
0000ca90	stw	r0,0x38(r30)
0000ca94	li	r0,__mh_bundle_header
0000ca98	stw	r0,0x44(r30)
0000ca9c	b	0xcbc8
0000caa0	lwz	r0,0x44(r30)
0000caa4	rlwinm	r0,r0,2,0,29
0000caa8	or	r2,r0,r0
0000caac	lwz	r0,0x50(r30)
0000cab0	add	r2,r2,r0
0000cab4	lwz	r0,__mh_bundle_header(r2)
0000cab8	cmpwi	cr7,r0,__mh_bundle_header
0000cabc	beq	cr7,0xcbbc
0000cac0	addis	r2,r31,__mh_bundle_header
0000cac4	addi	r9,r2,0x6b54
0000cac8	lwz	r0,0x44(r30)
0000cacc	rlwinm	r0,r0,2,0,29
0000cad0	or	r2,r0,r0
0000cad4	lwz	r0,0x50(r30)
0000cad8	add	r2,r2,r0
0000cadc	lwz	r0,__mh_bundle_header(r2)
0000cae0	or	r3,r9,r9
0000cae4	or	r4,r0,r0
0000cae8	bl	_DBLog
0000caec	li	r0,__mh_bundle_header
0000caf0	stw	r0,0x458(r30)
0000caf4	lwz	r0,0x44(r30)
0000caf8	rlwinm	r0,r0,2,0,29
0000cafc	or	r2,r0,r0
0000cb00	lwz	r0,0x50(r30)
0000cb04	add	r2,r2,r0
0000cb08	lwz	r0,__mh_bundle_header(r2)
0000cb0c	or	r3,r0,r0
0000cb10	bl	0x100a0	; symbol stub for: _CFStringGetLength
0000cb14	or	r0,r3,r3
0000cb18	stw	r0,0x45c(r30)
0000cb1c	lwz	r0,0x44(r30)
0000cb20	rlwinm	r0,r0,2,0,29
0000cb24	or	r2,r0,r0
0000cb28	lwz	r0,0x50(r30)
0000cb2c	add	r2,r2,r0
0000cb30	lwz	r9,__mh_bundle_header(r2)
0000cb34	lwz	r0,0x40(r30)
0000cb38	rlwinm	r0,r0,1,0,30
0000cb3c	or	r2,r0,r0
0000cb40	lwz	r0,0x3c(r30)
0000cb44	add	r0,r2,r0
0000cb48	or	r3,r9,r9
0000cb4c	lwz	r4,0x458(r30)
0000cb50	lwz	r5,0x45c(r30)
0000cb54	or	r6,r0,r0
0000cb58	bl	0x10060	; symbol stub for: _CFStringGetCharacters
0000cb5c	lwz	r2,0x45c(r30)
0000cb60	lwz	r0,0x40(r30)
0000cb64	add	r0,r0,r2
0000cb68	stw	r0,0x40(r30)
0000cb6c	lwz	r0,0x40(r30)
0000cb70	stw	r0,0x38(r30)
0000cb74	lwz	r0,0x40(r30)
0000cb78	rlwinm	r0,r0,1,0,30
0000cb7c	or	r2,r0,r0
0000cb80	lwz	r0,0x3c(r30)
0000cb84	add	r2,r2,r0
0000cb88	li	r0,0x7c
0000cb8c	sth	r0,__mh_bundle_header(r2)
0000cb90	lwz	r2,0x40(r30)
0000cb94	addi	r0,r2,0x1
0000cb98	stw	r0,0x40(r30)
0000cb9c	lwz	r0,0x40(r30)
0000cba0	cmpwi	cr7,r0,0x400
0000cba4	ble	cr7,0xcbbc
0000cba8	lwz	r2,0x45c(r30)
0000cbac	addi	r2,r2,0x1
0000cbb0	lwz	r0,0x40(r30)
0000cbb4	subf	r0,r2,r0
0000cbb8	stw	r0,0x40(r30)
0000cbbc	lwz	r2,0x44(r30)
0000cbc0	addi	r0,r2,0x1
0000cbc4	stw	r0,0x44(r30)
0000cbc8	lwz	r0,0x54(r30)
0000cbcc	lwz	r2,0x44(r30)
0000cbd0	cmpw	cr7,r2,r0
0000cbd4	blt	cr7,0xcaa0
0000cbd8	lwz	r0,0x38(r30)
0000cbdc	li	r2,0xffff
0000cbe0	cmpw	cr7,r0,r2
0000cbe4	ble	cr7,0xcc00
0000cbe8	lwz	r0,0x40(r30)
0000cbec	lwz	r2,0x38(r30)
0000cbf0	cmpw	cr7,r0,r2
0000cbf4	ble	cr7,0xcc00
0000cbf8	lwz	r0,0x38(r30)
0000cbfc	stw	r0,0x40(r30)
0000cc00	addi	r0,r30,0x58
0000cc04	li	r3,0x6
0000cc08	lwz	r4,0x3c(r30)
0000cc0c	lwz	r5,0x40(r30)
0000cc10	or	r6,r0,r0
0000cc14	li	r7,0x3ff
0000cc18	bl	_dropboxRequest
0000cc1c	or	r0,r3,r3
0000cc20	stw	r0,0x48(r30)
0000cc24	lwz	r0,0x48(r30)
0000cc28	cmpwi	cr7,r0,__mh_bundle_header
0000cc2c	blt	cr7,0xcc44
0000cc30	lwz	r2,0x48(r30)
0000cc34	addi	r0,r30,0x38
0000cc38	add	r2,r0,r2
0000cc3c	li	r0,__mh_bundle_header
0000cc40	stb	r0,0x20(r2)
0000cc44	lwz	r3,0x3c(r30)
0000cc48	bl	0x11040	; symbol stub for: _free
0000cc4c	lwz	r0,0x54(r30)
0000cc50	lwz	r3,0x50(r30)
0000cc54	or	r4,r0,r0
0000cc58	bl	_FreeFinderContext
0000cc5c	addis	r2,r31,__mh_bundle_header
0000cc60	addi	r2,r2,0x6d14
0000cc64	lbz	r0,0x58(r30)
0000cc68	extsb	r0,r0
0000cc6c	or	r9,r0,r0
0000cc70	addi	r0,r30,0x58
0000cc74	or	r3,r2,r2
0000cc78	or	r4,r0,r0
0000cc7c	lwz	r5,0x48(r30)
0000cc80	or	r6,r9,r9
0000cc84	bl	_DBLog
0000cc88	addis	r2,r31,__mh_bundle_header
0000cc8c	addi	r2,r2,0x7118
0000cc90	lwz	r0,__mh_bundle_header(r2)
0000cc94	cmpwi	cr7,r0,__mh_bundle_header
0000cc98	beq	cr7,0xccc0
0000cc9c	addis	r2,r31,__mh_bundle_header
0000cca0	addi	r2,r2,0x7118
0000cca4	lwz	r0,__mh_bundle_header(r2)
0000cca8	or	r3,r0,r0
0000ccac	bl	_FreeVerbList
0000ccb0	addis	r2,r31,__mh_bundle_header
0000ccb4	addi	r2,r2,0x7118
0000ccb8	li	r0,__mh_bundle_header
0000ccbc	stw	r0,__mh_bundle_header(r2)
0000ccc0	addis	r2,r31,__mh_bundle_header
0000ccc4	addi	r2,r2,0x7114
0000ccc8	lwz	r29,__mh_bundle_header(r2)
0000cccc	addis	r2,r31,__mh_bundle_header
0000ccd0	addi	r2,r2,0x7114
0000ccd4	lwz	r0,__mh_bundle_header(r2)
0000ccd8	or	r3,r0,r0
0000ccdc	bl	0x10400	; symbol stub for: _CountMenuItems
0000cce0	or	r0,r3,r3
0000cce4	or	r3,r29,r29
0000cce8	li	r4,0x1
0000ccec	or	r5,r0,r0
0000ccf0	bl	0x104c0	; symbol stub for: _DeleteMenuItems
0000ccf4	addi	r0,r30,0x58
0000ccf8	or	r3,r0,r0
0000ccfc	addis	r2,r31,__mh_bundle_header
0000cd00	addi	r4,r2,0x6058
0000cd04	bl	0x114e0	; symbol stub for: _strcmp
0000cd08	or	r0,r3,r3
0000cd0c	cmpwi	cr7,r0,__mh_bundle_header
0000cd10	beq	cr7,0xcd64
0000cd14	addi	r0,r30,0x58
0000cd18	or	r3,r0,r0
0000cd1c	lwz	r4,0x48(r30)
0000cd20	bl	_EatMenuDescriptor
0000cd24	lwz	r0,0x48(r30)
0000cd28	cmpwi	cr7,r0,__mh_bundle_header
0000cd2c	bgt	cr7,0xcd94
0000cd30	addis	r2,r31,__mh_bundle_header
0000cd34	addi	r2,r2,0x7114
0000cd38	lwz	r9,__mh_bundle_header(r2)
0000cd3c	addis	r2,r31,__mh_bundle_header
0000cd40	addi	r2,r2,0x6f98
0000cd44	lwz	r0,__mh_bundle_header(r2)
0000cd48	or	r3,r9,r9
0000cd4c	or	r4,r0,r0
0000cd50	li	r5,0x1
0000cd54	li	r6,0x1
0000cd58	li	r7,__mh_bundle_header
0000cd5c	bl	0xfb60	; symbol stub for: _AppendMenuItemTextWithCFString
0000cd60	b	0xcd94
0000cd64	addis	r2,r31,__mh_bundle_header
0000cd68	addi	r2,r2,0x7114
0000cd6c	lwz	r9,__mh_bundle_header(r2)
0000cd70	addis	r2,r31,__mh_bundle_header
0000cd74	addi	r2,r2,0x6f9c
0000cd78	lwz	r0,__mh_bundle_header(r2)
0000cd7c	or	r3,r9,r9
0000cd80	or	r4,r0,r0
0000cd84	li	r5,0x1
0000cd88	li	r6,0x1
0000cd8c	li	r7,__mh_bundle_header
0000cd90	bl	0xfb60	; symbol stub for: _AppendMenuItemTextWithCFString
0000cd94	lwz	r1,__mh_bundle_header(r1)
0000cd98	lwz	r0,0x8(r1)
0000cd9c	mtspr	lr,r0
0000cda0	lmw	r29,0xfff4(r1)
0000cda4	blr
_MenuEventHandler:
0000cda8	mfspr	r0,lr
0000cdac	stmw	r29,0xfff4(r1)
0000cdb0	stw	r0,0x8(r1)
0000cdb4	stwu	r1,0xff90(r1)
0000cdb8	or	r30,r1,r1
0000cdbc	bcl	20,31,0xcdc0
0000cdc0	mfspr	r31,lr
0000cdc4	stw	r3,0x88(r30)
0000cdc8	stw	r4,0x8c(r30)
0000cdcc	stw	r5,0x90(r30)
0000cdd0	li	r0,0xd96e
0000cdd4	stw	r0,0x40(r30)
0000cdd8	lwz	r3,0x8c(r30)
0000cddc	bl	0x10640	; symbol stub for: _GetEventClass
0000cde0	or	r2,r3,r3
0000cde4	lis	r0,0x6d65
0000cde8	ori	r0,r0,0x6e75
0000cdec	cmpw	cr7,r2,r0
0000cdf0	bne	cr7,0xce88
0000cdf4	lwz	r3,0x8c(r30)
0000cdf8	bl	0x10660	; symbol stub for: _GetEventKind
0000cdfc	or	r0,r3,r3
0000ce00	cmpwi	cr7,r0,0x9
0000ce04	bne	cr7,0xce88
0000ce08	lwz	r3,0x88(r30)
0000ce0c	lwz	r4,0x8c(r30)
0000ce10	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000ce14	or	r0,r3,r3
0000ce18	stw	r0,0x40(r30)
0000ce1c	li	r0,__mh_bundle_header
0000ce20	stw	r0,0x44(r30)
0000ce24	addi	r0,r30,0x44
0000ce28	lwz	r3,0x8c(r30)
0000ce2c	lis	r4,0x2d2d
0000ce30	ori	r4,r4,0x2d2d
0000ce34	lis	r5,0x6d65
0000ce38	ori	r5,r5,0x6e75
0000ce3c	li	r6,__mh_bundle_header
0000ce40	li	r7,0x4
0000ce44	li	r8,__mh_bundle_header
0000ce48	or	r9,r0,r0
0000ce4c	bl	0x10680	; symbol stub for: _GetEventParameter
0000ce50	or	r0,r3,r3
0000ce54	stw	r0,0x3c(r30)
0000ce58	lwz	r9,0x44(r30)
0000ce5c	addis	r2,r31,__mh_bundle_header
0000ce60	addi	r2,r2,0x6cb0
0000ce64	lwz	r0,__mh_bundle_header(r2)
0000ce68	cmpw	cr7,r9,r0
0000ce6c	bne	cr7,0xcf98
0000ce70	addis	r2,r31,__mh_bundle_header
0000ce74	addi	r0,r2,0x68c0
0000ce78	or	r3,r0,r0
0000ce7c	bl	_DBLog
0000ce80	bl	_RebuildMenu
0000ce84	b	0xcf98
0000ce88	lwz	r3,0x8c(r30)
0000ce8c	bl	0x10640	; symbol stub for: _GetEventClass
0000ce90	or	r0,r3,r3
0000ce94	lis	r2,0x636d
0000ce98	ori	r2,r2,0x6473
0000ce9c	cmpw	cr7,r0,r2
0000cea0	bne	cr7,0xcf98
0000cea4	lwz	r3,0x8c(r30)
0000cea8	bl	0x10660	; symbol stub for: _GetEventKind
0000ceac	or	r0,r3,r3
0000ceb0	cmpwi	cr7,r0,0x1
0000ceb4	bne	cr7,0xcf98
0000ceb8	addi	r0,r30,0x48
0000cebc	lwz	r3,0x8c(r30)
0000cec0	lis	r4,0x2d2d
0000cec4	ori	r4,r4,0x2d2d
0000cec8	lis	r5,0x6863
0000cecc	ori	r5,r5,0x6d64
0000ced0	li	r6,__mh_bundle_header
0000ced4	li	r7,0xe
0000ced8	li	r8,__mh_bundle_header
0000cedc	or	r9,r0,r0
0000cee0	bl	0x10680	; symbol stub for: _GetEventParameter
0000cee4	or	r0,r3,r3
0000cee8	stw	r0,0x3c(r30)
0000ceec	lwz	r0,0x3c(r30)
0000cef0	srawi	r2,r0,31
0000cef4	xor	r0,r2,r0
0000cef8	subf	r0,r2,r0
0000cefc	neg	r0,r0
0000cf00	rlwinm	r0,r0,1,31,31
0000cf04	cmpwi	cr7,r0,__mh_bundle_header
0000cf08	beq	cr7,0xcf44
0000cf0c	lis	r3,0x3f2a
0000cf10	ori	r3,r3,0x3f2a
0000cf14	li	r4,__mh_bundle_header
0000cf18	addis	r2,r31,__mh_bundle_header
0000cf1c	addi	r5,r2,0x4a90
0000cf20	addis	r2,r31,__mh_bundle_header
0000cf24	addi	r6,r2,0x5c10
0000cf28	li	r7,__mh_bundle_header
0000cf2c	addis	r2,r31,__mh_bundle_header
0000cf30	addi	r8,r2,0x5c2c
0000cf34	li	r9,0x154
0000cf38	li	r10,__mh_bundle_header
0000cf3c	bl	0x10480	; symbol stub for: _DebugAssert
0000cf40	b	0xcf98
0000cf44	addis	r2,r31,__mh_bundle_header
0000cf48	addi	r2,r2,0x6cb4
0000cf4c	lwz	r29,__mh_bundle_header(r2)
0000cf50	lwz	r0,0x50(r30)
0000cf54	or	r3,r0,r0
0000cf58	bl	0x10700	; symbol stub for: _GetMenuID
0000cf5c	or	r0,r3,r3
0000cf60	lwz	r2,0x4c(r30)
0000cf64	or	r3,r29,r29
0000cf68	or	r4,r0,r0
0000cf6c	or	r5,r2,r2
0000cf70	bl	_VerbResult
0000cf74	or	r0,r3,r3
0000cf78	stw	r0,0x38(r30)
0000cf7c	lwz	r0,0x38(r30)
0000cf80	cmpwi	cr7,r0,__mh_bundle_header
0000cf84	beq	cr7,0xcf98
0000cf88	lwz	r3,0x38(r30)
0000cf8c	bl	_RequestVerb
0000cf90	li	r0,__mh_bundle_header
0000cf94	stw	r0,0x40(r30)
0000cf98	lwz	r0,0x40(r30)
0000cf9c	or	r3,r0,r0
0000cfa0	lwz	r1,__mh_bundle_header(r1)
0000cfa4	lwz	r0,0x8(r1)
0000cfa8	mtspr	lr,r0
0000cfac	lmw	r29,0xfff4(r1)
0000cfb0	blr
_DropboxButtonEventHandler:
0000cfb4	mfspr	r0,lr
0000cfb8	stfd	f31,0xfff8(r1)
0000cfbc	stmw	r29,0xffec(r1)
0000cfc0	stw	r0,0x8(r1)
0000cfc4	stwu	r1,0xff30(r1)
0000cfc8	or	r30,r1,r1
0000cfcc	bcl	20,31,0xcfd0
0000cfd0	mfspr	r31,lr
0000cfd4	stw	r3,0xe8(r30)
0000cfd8	stw	r4,0xec(r30)
0000cfdc	stw	r5,0xf0(r30)
0000cfe0	li	r0,0xd96e
0000cfe4	stw	r0,0x40(r30)
0000cfe8	lwz	r3,0xec(r30)
0000cfec	bl	0x10660	; symbol stub for: _GetEventKind
0000cff0	stw	r3,0xa4(r30)
0000cff4	lwz	r0,0xa4(r30)
0000cff8	cmpwi	cr7,r0,0x69
0000cffc	beq	cr7,0xd01c
0000d000	lwz	r2,0xa4(r30)
0000d004	cmpwi	cr7,r2,0xa1
0000d008	beq	cr7,0xd238
0000d00c	lwz	r9,0xa4(r30)
0000d010	cmpwi	cr7,r9,0xd
0000d014	beq	cr7,0xd294
0000d018	b	0xd570
0000d01c	addis	r2,r31,__mh_bundle_header
0000d020	addi	r2,r2,0x6a84
0000d024	lwz	r0,__mh_bundle_header(r2)
0000d028	or	r3,r0,r0
0000d02c	bl	0x102c0	; symbol stub for: _CGImageGetWidth
0000d030	or	r2,r3,r3
0000d034	addi	r0,r2,0x2
0000d038	lis	r9,0x4330
0000d03c	addis	r2,r31,__mh_bundle_header
0000d040	addi	r2,r2,0x47a8
0000d044	lfd	f13,__mh_bundle_header(r2)
0000d048	stw	r0,0x7c(r30)
0000d04c	stw	r9,0x78(r30)
0000d050	lfd	f0,0x78(r30)
0000d054	fsub	f0,f0,f13
0000d058	frsp	f31,f0
0000d05c	addis	r2,r31,__mh_bundle_header
0000d060	addi	r2,r2,0x6a84
0000d064	lwz	r0,__mh_bundle_header(r2)
0000d068	or	r3,r0,r0
0000d06c	bl	0x102a0	; symbol stub for: _CGImageGetHeight
0000d070	or	r0,r3,r3
0000d074	lis	r9,0x4330
0000d078	addis	r2,r31,__mh_bundle_header
0000d07c	addi	r2,r2,0x47a8
0000d080	lfd	f13,__mh_bundle_header(r2)
0000d084	stw	r0,0x84(r30)
0000d088	stw	r9,0x80(r30)
0000d08c	lfd	f0,0x80(r30)
0000d090	fsub	f0,f0,f13
0000d094	frsp	f0,f0
0000d098	stfs	f31,0x44(r30)
0000d09c	stfs	f0,0x48(r30)
0000d0a0	addis	r2,r31,__mh_bundle_header
0000d0a4	addi	r2,r2,0x6a84
0000d0a8	lwz	r0,__mh_bundle_header(r2)
0000d0ac	or	r3,r0,r0
0000d0b0	bl	0x102c0	; symbol stub for: _CGImageGetWidth
0000d0b4	or	r2,r3,r3
0000d0b8	addi	r0,r2,0x2
0000d0bc	lis	r9,0x4330
0000d0c0	addis	r2,r31,__mh_bundle_header
0000d0c4	addi	r2,r2,0x47a8
0000d0c8	lfd	f13,__mh_bundle_header(r2)
0000d0cc	stw	r0,0x8c(r30)
0000d0d0	stw	r9,0x88(r30)
0000d0d4	lfd	f0,0x88(r30)
0000d0d8	fsub	f0,f0,f13
0000d0dc	frsp	f31,f0
0000d0e0	addis	r2,r31,__mh_bundle_header
0000d0e4	addi	r2,r2,0x6a84
0000d0e8	lwz	r0,__mh_bundle_header(r2)
0000d0ec	or	r3,r0,r0
0000d0f0	bl	0x102a0	; symbol stub for: _CGImageGetHeight
0000d0f4	or	r0,r3,r3
0000d0f8	lis	r9,0x4330
0000d0fc	addis	r2,r31,__mh_bundle_header
0000d100	addi	r2,r2,0x47a8
0000d104	lfd	f13,__mh_bundle_header(r2)
0000d108	stw	r0,0x94(r30)
0000d10c	stw	r9,0x90(r30)
0000d110	lfd	f0,0x90(r30)
0000d114	fsub	f0,f0,f13
0000d118	frsp	f0,f0
0000d11c	stfs	f31,0x4c(r30)
0000d120	stfs	f0,0x50(r30)
0000d124	addi	r0,r30,0x44
0000d128	lwz	r3,0xec(r30)
0000d12c	lis	r4,0x6d6e
0000d130	ori	r4,r4,0x737a
0000d134	lis	r5,0x6869
0000d138	ori	r5,r5,0x737a
0000d13c	li	r6,0x8
0000d140	or	r7,r0,r0
0000d144	bl	0x10cc0	; symbol stub for: _SetEventParameter
0000d148	or	r0,r3,r3
0000d14c	stw	r0,0x3c(r30)
0000d150	lwz	r0,0x3c(r30)
0000d154	srawi	r2,r0,31
0000d158	xor	r0,r2,r0
0000d15c	subf	r0,r2,r0
0000d160	neg	r0,r0
0000d164	rlwinm	r0,r0,1,31,31
0000d168	cmpwi	cr7,r0,__mh_bundle_header
0000d16c	beq	cr7,0xd1a8
0000d170	lis	r3,0x3f2a
0000d174	ori	r3,r3,0x3f2a
0000d178	li	r4,__mh_bundle_header
0000d17c	addis	r2,r31,__mh_bundle_header
0000d180	addi	r5,r2,0x4880
0000d184	addis	r2,r31,__mh_bundle_header
0000d188	addi	r6,r2,0x5a60
0000d18c	li	r7,__mh_bundle_header
0000d190	addis	r2,r31,__mh_bundle_header
0000d194	addi	r8,r2,0x5a1c
0000d198	li	r9,0x17c
0000d19c	li	r10,__mh_bundle_header
0000d1a0	bl	0x10480	; symbol stub for: _DebugAssert
0000d1a4	b	0xd570
0000d1a8	addi	r0,r30,0x4c
0000d1ac	lwz	r3,0xec(r30)
0000d1b0	lis	r4,0x6d78
0000d1b4	ori	r4,r4,0x737a
0000d1b8	lis	r5,0x6869
0000d1bc	ori	r5,r5,0x737a
0000d1c0	li	r6,0x8
0000d1c4	or	r7,r0,r0
0000d1c8	bl	0x10cc0	; symbol stub for: _SetEventParameter
0000d1cc	or	r0,r3,r3
0000d1d0	stw	r0,0x3c(r30)
0000d1d4	lwz	r0,0x3c(r30)
0000d1d8	srawi	r2,r0,31
0000d1dc	xor	r0,r2,r0
0000d1e0	subf	r0,r2,r0
0000d1e4	neg	r0,r0
0000d1e8	rlwinm	r0,r0,1,31,31
0000d1ec	cmpwi	cr7,r0,__mh_bundle_header
0000d1f0	beq	cr7,0xd22c
0000d1f4	lis	r3,0x3f2a
0000d1f8	ori	r3,r3,0x3f2a
0000d1fc	li	r4,__mh_bundle_header
0000d200	addis	r2,r31,__mh_bundle_header
0000d204	addi	r5,r2,0x4880
0000d208	addis	r2,r31,__mh_bundle_header
0000d20c	addi	r6,r2,0x5a60
0000d210	li	r7,__mh_bundle_header
0000d214	addis	r2,r31,__mh_bundle_header
0000d218	addi	r8,r2,0x5a1c
0000d21c	li	r9,0x189
0000d220	li	r10,__mh_bundle_header
0000d224	bl	0x10480	; symbol stub for: _DebugAssert
0000d228	b	0xd570
0000d22c	li	r0,__mh_bundle_header
0000d230	stw	r0,0x40(r30)
0000d234	b	0xd570
0000d238	lwz	r0,0xf0(r30)
0000d23c	stw	r0,0xa0(r30)
0000d240	lwz	r0,0xf0(r30)
0000d244	or	r3,r0,r0
0000d248	bl	0x10ae0	; symbol stub for: _IsControlEnabled
0000d24c	or	r0,r3,r3
0000d250	cmpwi	cr7,r0,__mh_bundle_header
0000d254	beq	cr7,0xd26c
0000d258	addis	r2,r31,__mh_bundle_header
0000d25c	addi	r2,r2,0x6a84
0000d260	lwz	r2,__mh_bundle_header(r2)
0000d264	stw	r2,0x9c(r30)
0000d268	b	0xd27c
0000d26c	addis	r2,r31,__mh_bundle_header
0000d270	addi	r2,r2,0x6a90
0000d274	lwz	r2,__mh_bundle_header(r2)
0000d278	stw	r2,0x9c(r30)
0000d27c	lwz	r3,0xa0(r30)
0000d280	lwz	r4,0x9c(r30)
0000d284	bl	0x10840	; symbol stub for: _HIImageViewSetImage
0000d288	li	r0,__mh_bundle_header
0000d28c	stw	r0,0x40(r30)
0000d290	b	0xd570
0000d294	addi	r0,r30,0x54
0000d298	or	r3,r0,r0
0000d29c	bl	0x103c0	; symbol stub for: _CopyThemeIdentifier
0000d2a0	addis	r2,r31,__mh_bundle_header
0000d2a4	addi	r0,r2,0x66c0
0000d2a8	lwz	r2,0x54(r30)
0000d2ac	or	r3,r0,r0
0000d2b0	or	r4,r2,r2
0000d2b4	li	r5,0x4
0000d2b8	bl	0xffa0	; symbol stub for: _CFStringCompare
0000d2bc	or	r0,r3,r3
0000d2c0	cmpwi	cr7,r0,__mh_bundle_header
0000d2c4	bne	cr7,0xd2e8
0000d2c8	lwz	r9,0xf0(r30)
0000d2cc	addis	r2,r31,__mh_bundle_header
0000d2d0	addi	r2,r2,0x6a8c
0000d2d4	lwz	r0,__mh_bundle_header(r2)
0000d2d8	or	r3,r9,r9
0000d2dc	or	r4,r0,r0
0000d2e0	bl	0x10840	; symbol stub for: _HIImageViewSetImage
0000d2e4	b	0xd304
0000d2e8	lwz	r9,0xf0(r30)
0000d2ec	addis	r2,r31,__mh_bundle_header
0000d2f0	addi	r2,r2,0x6a88
0000d2f4	lwz	r0,__mh_bundle_header(r2)
0000d2f8	or	r3,r9,r9
0000d2fc	or	r4,r0,r0
0000d300	bl	0x10840	; symbol stub for: _HIImageViewSetImage
0000d304	lwz	r0,0x54(r30)
0000d308	or	r3,r0,r0
0000d30c	bl	0xff40	; symbol stub for: _CFRelease
0000d310	lwz	r0,0xf0(r30)
0000d314	addi	r2,r30,0x58
0000d318	or	r3,r0,r0
0000d31c	or	r4,r2,r2
0000d320	bl	0x10a00	; symbol stub for: _HIViewGetBounds
0000d324	or	r0,r3,r3
0000d328	stw	r0,0x3c(r30)
0000d32c	lwz	r0,0x3c(r30)
0000d330	srawi	r2,r0,31
0000d334	xor	r0,r2,r0
0000d338	subf	r0,r2,r0
0000d33c	neg	r0,r0
0000d340	rlwinm	r0,r0,1,31,31
0000d344	cmpwi	cr7,r0,__mh_bundle_header
0000d348	beq	cr7,0xd384
0000d34c	lis	r3,0x3f2a
0000d350	ori	r3,r3,0x3f2a
0000d354	li	r4,__mh_bundle_header
0000d358	addis	r2,r31,__mh_bundle_header
0000d35c	addi	r5,r2,0x4880
0000d360	addis	r2,r31,__mh_bundle_header
0000d364	addi	r6,r2,0x5aa8
0000d368	li	r7,__mh_bundle_header
0000d36c	addis	r2,r31,__mh_bundle_header
0000d370	addi	r8,r2,0x5a1c
0000d374	li	r9,0x1ae
0000d378	li	r10,__mh_bundle_header
0000d37c	bl	0x10480	; symbol stub for: _DebugAssert
0000d380	b	0xd54c
0000d384	bl	0x107a0	; symbol stub for: _GetUserFocusWindow
0000d388	or	r0,r3,r3
0000d38c	stw	r0,0x38(r30)
0000d390	lwz	r29,0xf0(r30)
0000d394	lwz	r3,0x38(r30)
0000d398	bl	0x10a20	; symbol stub for: _HIViewGetRoot
0000d39c	or	r2,r3,r3
0000d3a0	addi	r0,r30,0x58
0000d3a4	or	r3,r0,r0
0000d3a8	or	r4,r29,r29
0000d3ac	or	r5,r2,r2
0000d3b0	bl	0x109e0	; symbol stub for: _HIViewConvertRect
0000d3b4	or	r0,r3,r3
0000d3b8	stw	r0,0x3c(r30)
0000d3bc	lwz	r0,0x3c(r30)
0000d3c0	srawi	r2,r0,31
0000d3c4	xor	r0,r2,r0
0000d3c8	subf	r0,r2,r0
0000d3cc	neg	r0,r0
0000d3d0	rlwinm	r0,r0,1,31,31
0000d3d4	cmpwi	cr7,r0,__mh_bundle_header
0000d3d8	beq	cr7,0xd414
0000d3dc	lis	r3,0x3f2a
0000d3e0	ori	r3,r3,0x3f2a
0000d3e4	li	r4,__mh_bundle_header
0000d3e8	addis	r2,r31,__mh_bundle_header
0000d3ec	addi	r5,r2,0x4880
0000d3f0	addis	r2,r31,__mh_bundle_header
0000d3f4	addi	r6,r2,0x5aa8
0000d3f8	li	r7,__mh_bundle_header
0000d3fc	addis	r2,r31,__mh_bundle_header
0000d400	addi	r8,r2,0x5a1c
0000d404	li	r9,0x1bb
0000d408	li	r10,__mh_bundle_header
0000d40c	bl	0x10480	; symbol stub for: _DebugAssert
0000d410	b	0xd54c
0000d414	addi	r0,r30,0x68
0000d418	lwz	r3,0x38(r30)
0000d41c	li	r4,0x20
0000d420	or	r5,r0,r0
0000d424	bl	0x107c0	; symbol stub for: _GetWindowBounds
0000d428	or	r0,r3,r3
0000d42c	stw	r0,0x3c(r30)
0000d430	lwz	r0,0x3c(r30)
0000d434	srawi	r2,r0,31
0000d438	xor	r0,r2,r0
0000d43c	subf	r0,r2,r0
0000d440	neg	r0,r0
0000d444	rlwinm	r0,r0,1,31,31
0000d448	cmpwi	cr7,r0,__mh_bundle_header
0000d44c	beq	cr7,0xd488
0000d450	lis	r3,0x3f2a
0000d454	ori	r3,r3,0x3f2a
0000d458	li	r4,__mh_bundle_header
0000d45c	addis	r2,r31,__mh_bundle_header
0000d460	addi	r5,r2,0x4880
0000d464	addis	r2,r31,__mh_bundle_header
0000d468	addi	r6,r2,0x5aa8
0000d46c	li	r7,__mh_bundle_header
0000d470	addis	r2,r31,__mh_bundle_header
0000d474	addi	r8,r2,0x5a1c
0000d478	li	r9,0x1c8
0000d47c	li	r10,__mh_bundle_header
0000d480	bl	0x10480	; symbol stub for: _DebugAssert
0000d484	b	0xd54c
0000d488	addis	r2,r31,__mh_bundle_header
0000d48c	addi	r2,r2,0x6aa0
0000d490	lwz	r11,__mh_bundle_header(r2)
0000d494	lhz	r0,0x68(r30)
0000d498	extsh	r0,r0
0000d49c	rlwinm	r2,r0,0,16,31
0000d4a0	lfs	f0,0x5c(r30)
0000d4a4	fctiwz	f0,f0
0000d4a8	addi	r9,r30,0x98
0000d4ac	stfiwx	f0,0,r9
0000d4b0	lwz	r0,0x98(r30)
0000d4b4	extsh	r0,r0
0000d4b8	rlwinm	r0,r0,0,16,31
0000d4bc	add	r0,r2,r0
0000d4c0	rlwinm	r2,r0,0,16,31
0000d4c4	lfs	f0,0x64(r30)
0000d4c8	fctiwz	f0,f0
0000d4cc	addi	r10,r30,0x98
0000d4d0	stfiwx	f0,0,r10
0000d4d4	lwz	r0,0x98(r30)
0000d4d8	extsh	r0,r0
0000d4dc	rlwinm	r0,r0,0,16,31
0000d4e0	add	r0,r2,r0
0000d4e4	rlwinm	r9,r0,0,16,31
0000d4e8	addis	r2,r31,__mh_bundle_header
0000d4ec	addi	r2,r2,0x6a94
0000d4f0	lhz	r0,__mh_bundle_header(r2)
0000d4f4	rlwinm	r0,r0,0,16,31
0000d4f8	add	r0,r9,r0
0000d4fc	rlwinm	r0,r0,0,16,31
0000d500	extsh	r9,r0
0000d504	lhz	r0,0x6a(r30)
0000d508	extsh	r0,r0
0000d50c	rlwinm	r2,r0,0,16,31
0000d510	lfs	f0,0x58(r30)
0000d514	fctiwz	f0,f0
0000d518	addi	r10,r30,0x98
0000d51c	stfiwx	f0,0,r10
0000d520	lwz	r0,0x98(r30)
0000d524	extsh	r0,r0
0000d528	rlwinm	r0,r0,0,16,31
0000d52c	add	r0,r2,r0
0000d530	rlwinm	r0,r0,0,16,31
0000d534	extsh	r0,r0
0000d538	or	r3,r11,r11
0000d53c	or	r4,r9,r9
0000d540	or	r5,r0,r0
0000d544	li	r6,__mh_bundle_header
0000d548	bl	0x10ba0	; symbol stub for: _PopUpMenuSelect
0000d54c	lwz	r9,0xf0(r30)
0000d550	addis	r2,r31,__mh_bundle_header
0000d554	addi	r2,r2,0x6a84
0000d558	lwz	r0,__mh_bundle_header(r2)
0000d55c	or	r3,r9,r9
0000d560	or	r4,r0,r0
0000d564	bl	0x10840	; symbol stub for: _HIImageViewSetImage
0000d568	li	r0,__mh_bundle_header
0000d56c	stw	r0,0x40(r30)
0000d570	lwz	r0,0x40(r30)
0000d574	or	r3,r0,r0
0000d578	lwz	r1,__mh_bundle_header(r1)
0000d57c	lwz	r0,0x8(r1)
0000d580	mtspr	lr,r0
0000d584	lmw	r29,0xffec(r1)
0000d588	lfd	f31,0xfff8(r1)
0000d58c	blr
_DropboxToolbarItemHandler:
0000d590	mfspr	r0,lr
0000d594	stmw	r30,0xfff8(r1)
0000d598	stw	r0,0x8(r1)
0000d59c	stwu	r1,0xff90(r1)
0000d5a0	or	r30,r1,r1
0000d5a4	bcl	20,31,0xd5a8
0000d5a8	mfspr	r31,lr
0000d5ac	stw	r3,0x88(r30)
0000d5b0	stw	r4,0x8c(r30)
0000d5b4	stw	r5,0x90(r30)
0000d5b8	li	r0,0xd96e
0000d5bc	stw	r0,0x40(r30)
0000d5c0	lwz	r0,0x90(r30)
0000d5c4	stw	r0,0x38(r30)
0000d5c8	lwz	r3,0x8c(r30)
0000d5cc	bl	0x10640	; symbol stub for: _GetEventClass
0000d5d0	stw	r3,0x5c(r30)
0000d5d4	lis	r0,0x6869
0000d5d8	ori	r0,r0,0x6f62
0000d5dc	lwz	r2,0x5c(r30)
0000d5e0	cmpw	cr7,r2,r0
0000d5e4	beq	cr7,0xd600
0000d5e8	lis	r0,0x7462
0000d5ec	ori	r0,r0,0x6974
0000d5f0	lwz	r2,0x5c(r30)
0000d5f4	cmpw	cr7,r2,r0
0000d5f8	beq	cr7,0xd7ac
0000d5fc	b	0xd96c
0000d600	lwz	r3,0x8c(r30)
0000d604	bl	0x10660	; symbol stub for: _GetEventKind
0000d608	stw	r3,0x58(r30)
0000d60c	lwz	r0,0x58(r30)
0000d610	cmpwi	cr7,r0,0x2
0000d614	beq	cr7,0xd704
0000d618	lwz	r2,0x58(r30)
0000d61c	cmpwi	cr7,r2,0x3
0000d620	beq	cr7,0xd798
0000d624	lwz	r0,0x58(r30)
0000d628	cmpwi	cr7,r0,0x1
0000d62c	beq	cr7,0xd634
0000d630	b	0xd96c
0000d634	addi	r0,r30,0x44
0000d638	lwz	r3,0x8c(r30)
0000d63c	lis	r4,0x6869
0000d640	ori	r4,r4,0x6f69
0000d644	lis	r5,0x6869
0000d648	ori	r5,r5,0x6f62
0000d64c	li	r6,__mh_bundle_header
0000d650	li	r7,0x4
0000d654	li	r8,__mh_bundle_header
0000d658	or	r9,r0,r0
0000d65c	bl	0x10680	; symbol stub for: _GetEventParameter
0000d660	li	r3,0x4
0000d664	bl	0x111c0	; symbol stub for: _malloc
0000d668	or	r0,r3,r3
0000d66c	stw	r0,0x48(r30)
0000d670	lwz	r0,0x48(r30)
0000d674	cmpwi	cr7,r0,__mh_bundle_header
0000d678	mfcr	r0
0000d67c	rlwinm	r0,r0,31,31,31
0000d680	cmpwi	cr7,r0,__mh_bundle_header
0000d684	beq	cr7,0xd6c8
0000d688	lis	r3,0x3f2a
0000d68c	ori	r3,r3,0x3f2a
0000d690	li	r4,__mh_bundle_header
0000d694	addis	r2,r31,__mh_bundle_header
0000d698	addi	r5,r2,0x54ec
0000d69c	addis	r2,r31,__mh_bundle_header
0000d6a0	addi	r6,r2,0x5514
0000d6a4	li	r7,__mh_bundle_header
0000d6a8	addis	r2,r31,__mh_bundle_header
0000d6ac	addi	r8,r2,0x5444
0000d6b0	li	r9,0x1fd
0000d6b4	li	r10,__mh_bundle_header
0000d6b8	bl	0x10480	; symbol stub for: _DebugAssert
0000d6bc	li	r0,0xff94
0000d6c0	stw	r0,0x40(r30)
0000d6c4	b	0xd96c
0000d6c8	lwz	r2,0x48(r30)
0000d6cc	lwz	r0,0x44(r30)
0000d6d0	stw	r0,__mh_bundle_header(r2)
0000d6d4	addi	r0,r30,0x48
0000d6d8	lwz	r3,0x8c(r30)
0000d6dc	lis	r4,0x6869
0000d6e0	ori	r4,r4,0x6f69
0000d6e4	lis	r5,0x766f
0000d6e8	ori	r5,r5,0x6964
0000d6ec	li	r6,0x4
0000d6f0	or	r7,r0,r0
0000d6f4	bl	0x10cc0	; symbol stub for: _SetEventParameter
0000d6f8	li	r0,__mh_bundle_header
0000d6fc	stw	r0,0x40(r30)
0000d700	b	0xd96c
0000d704	lwz	r3,0x88(r30)
0000d708	lwz	r4,0x8c(r30)
0000d70c	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000d710	or	r0,r3,r3
0000d714	cmpwi	cr7,r0,__mh_bundle_header
0000d718	bne	cr7,0xd96c
0000d71c	lwz	r2,0x38(r30)
0000d720	lwz	r9,__mh_bundle_header(r2)
0000d724	addis	r2,r31,__mh_bundle_header
0000d728	addi	r2,r2,0x6348
0000d72c	lwz	r0,__mh_bundle_header(r2)
0000d730	or	r3,r9,r9
0000d734	or	r4,r0,r0
0000d738	bl	0x109a0	; symbol stub for: _HIToolbarItemSetLabel
0000d73c	lwz	r2,0x38(r30)
0000d740	lwz	r9,__mh_bundle_header(r2)
0000d744	addis	r2,r31,__mh_bundle_header
0000d748	addi	r2,r2,0x6340
0000d74c	lwz	r11,__mh_bundle_header(r2)
0000d750	addis	r2,r31,__mh_bundle_header
0000d754	addi	r2,r2,0x6344
0000d758	lwz	r0,__mh_bundle_header(r2)
0000d75c	or	r3,r9,r9
0000d760	or	r4,r11,r11
0000d764	or	r5,r0,r0
0000d768	bl	0x10980	; symbol stub for: _HIToolbarItemSetHelpText
0000d76c	lwz	r2,0x38(r30)
0000d770	lwz	r9,__mh_bundle_header(r2)
0000d774	addis	r2,r31,__mh_bundle_header
0000d778	addi	r2,r2,0x64c8
0000d77c	lwz	r0,__mh_bundle_header(r2)
0000d780	or	r3,r9,r9
0000d784	or	r4,r0,r0
0000d788	bl	0x109c0	; symbol stub for: _HIToolbarItemSetMenu
0000d78c	li	r0,__mh_bundle_header
0000d790	stw	r0,0x40(r30)
0000d794	b	0xd96c
0000d798	lwz	r3,0x38(r30)
0000d79c	bl	0x11040	; symbol stub for: _free
0000d7a0	li	r0,__mh_bundle_header
0000d7a4	stw	r0,0x40(r30)
0000d7a8	b	0xd96c
0000d7ac	lwz	r3,0x8c(r30)
0000d7b0	bl	0x10660	; symbol stub for: _GetEventKind
0000d7b4	or	r0,r3,r3
0000d7b8	cmpwi	cr7,r0,0x6
0000d7bc	beq	cr7,0xd7c4
0000d7c0	b	0xd96c
0000d7c4	addis	r2,r31,__mh_bundle_header
0000d7c8	addi	r2,r2,0x64ac
0000d7cc	lwz	r0,__mh_bundle_header(r2)
0000d7d0	addi	r2,r30,0x4c
0000d7d4	or	r3,r0,r0
0000d7d8	or	r4,r2,r2
0000d7dc	bl	0x10820	; symbol stub for: _HIImageViewCreate
0000d7e0	or	r0,r3,r3
0000d7e4	stw	r0,0x3c(r30)
0000d7e8	lwz	r0,0x3c(r30)
0000d7ec	srawi	r2,r0,31
0000d7f0	xor	r0,r2,r0
0000d7f4	subf	r0,r2,r0
0000d7f8	neg	r0,r0
0000d7fc	rlwinm	r0,r0,1,31,31
0000d800	cmpwi	cr7,r0,__mh_bundle_header
0000d804	beq	cr7,0xd840
0000d808	lis	r3,0x3f2a
0000d80c	ori	r3,r3,0x3f2a
0000d810	li	r4,__mh_bundle_header
0000d814	addis	r2,r31,__mh_bundle_header
0000d818	addi	r5,r2,0x42a8
0000d81c	addis	r2,r31,__mh_bundle_header
0000d820	addi	r6,r2,0x5524
0000d824	li	r7,__mh_bundle_header
0000d828	addis	r2,r31,__mh_bundle_header
0000d82c	addi	r8,r2,0x5444
0000d830	li	r9,0x232
0000d834	li	r10,__mh_bundle_header
0000d838	bl	0x10480	; symbol stub for: _DebugAssert
0000d83c	b	0xd96c
0000d840	addi	r0,r30,0x4c
0000d844	lwz	r3,0x8c(r30)
0000d848	lis	r4,0x6374
0000d84c	ori	r4,r4,0x726c
0000d850	lis	r5,0x6374
0000d854	ori	r5,r5,0x726c
0000d858	li	r6,0x4
0000d85c	or	r7,r0,r0
0000d860	bl	0x10cc0	; symbol stub for: _SetEventParameter
0000d864	or	r0,r3,r3
0000d868	stw	r0,0x3c(r30)
0000d86c	lwz	r0,0x3c(r30)
0000d870	srawi	r2,r0,31
0000d874	xor	r0,r2,r0
0000d878	subf	r0,r2,r0
0000d87c	neg	r0,r0
0000d880	rlwinm	r0,r0,1,31,31
0000d884	cmpwi	cr7,r0,__mh_bundle_header
0000d888	beq	cr7,0xd8c4
0000d88c	lis	r3,0x3f2a
0000d890	ori	r3,r3,0x3f2a
0000d894	li	r4,__mh_bundle_header
0000d898	addis	r2,r31,__mh_bundle_header
0000d89c	addi	r5,r2,0x42a8
0000d8a0	addis	r2,r31,__mh_bundle_header
0000d8a4	addi	r6,r2,0x5524
0000d8a8	li	r7,__mh_bundle_header
0000d8ac	addis	r2,r31,__mh_bundle_header
0000d8b0	addi	r8,r2,0x5444
0000d8b4	li	r9,0x23f
0000d8b8	li	r10,__mh_bundle_header
0000d8bc	bl	0x10480	; symbol stub for: _DebugAssert
0000d8c0	b	0xd96c
0000d8c4	lwz	r0,0x4c(r30)
0000d8c8	or	r3,r0,r0
0000d8cc	bl	0x10600	; symbol stub for: _GetControlEventTarget
0000d8d0	or	r9,r3,r3
0000d8d4	addis	r2,r31,__mh_bundle_header
0000d8d8	addi	r2,r2,0x6358
0000d8dc	lwz	r0,__mh_bundle_header(r2)
0000d8e0	lwz	r11,0x4c(r30)
0000d8e4	or	r3,r9,r9
0000d8e8	or	r4,r0,r0
0000d8ec	li	r5,0x3
0000d8f0	addis	r2,r31,__mh_bundle_header
0000d8f4	addi	r6,r2,0x41a8
0000d8f8	or	r7,r11,r11
0000d8fc	li	r8,__mh_bundle_header
0000d900	bl	0x10aa0	; symbol stub for: _InstallEventHandler
0000d904	or	r0,r3,r3
0000d908	stw	r0,0x3c(r30)
0000d90c	lwz	r0,0x3c(r30)
0000d910	srawi	r2,r0,31
0000d914	xor	r0,r2,r0
0000d918	subf	r0,r2,r0
0000d91c	neg	r0,r0
0000d920	rlwinm	r0,r0,1,31,31
0000d924	cmpwi	cr7,r0,__mh_bundle_header
0000d928	beq	cr7,0xd964
0000d92c	lis	r3,0x3f2a
0000d930	ori	r3,r3,0x3f2a
0000d934	li	r4,__mh_bundle_header
0000d938	addis	r2,r31,__mh_bundle_header
0000d93c	addi	r5,r2,0x42a8
0000d940	addis	r2,r31,__mh_bundle_header
0000d944	addi	r6,r2,0x5524
0000d948	li	r7,__mh_bundle_header
0000d94c	addis	r2,r31,__mh_bundle_header
0000d950	addi	r8,r2,0x5444
0000d954	li	r9,0x24d
0000d958	li	r10,__mh_bundle_header
0000d95c	bl	0x10480	; symbol stub for: _DebugAssert
0000d960	b	0xd96c
0000d964	li	r0,__mh_bundle_header
0000d968	stw	r0,0x40(r30)
0000d96c	lwz	r0,0x40(r30)
0000d970	or	r3,r0,r0
0000d974	lwz	r1,__mh_bundle_header(r1)
0000d978	lwz	r0,0x8(r1)
0000d97c	mtspr	lr,r0
0000d980	lmw	r30,0xfff8(r1)
0000d984	blr
_RegisterDropboxToolbarItemClass:
0000d988	mfspr	r0,lr
0000d98c	stmw	r30,0xfff8(r1)
0000d990	stw	r0,0x8(r1)
0000d994	stwu	r1,0xffb0(r1)
0000d998	or	r30,r1,r1
0000d99c	bcl	20,31,0xd9a0
0000d9a0	mfspr	r31,lr
0000d9a4	addis	r2,r31,__mh_bundle_header
0000d9a8	addi	r2,r2,0x5f44
0000d9ac	lwz	r9,__mh_bundle_header(r2)
0000d9b0	addis	r2,r31,__mh_bundle_header
0000d9b4	addi	r11,r2,0x5d00
0000d9b8	addis	r2,r31,__mh_bundle_header
0000d9bc	addi	r2,r2,0x5f64
0000d9c0	lwz	r0,__mh_bundle_header(r2)
0000d9c4	or	r3,r9,r9
0000d9c8	or	r4,r11,r11
0000d9cc	li	r5,__mh_bundle_header
0000d9d0	or	r6,r0,r0
0000d9d4	li	r7,0x4
0000d9d8	addis	r2,r31,__mh_bundle_header
0000d9dc	addi	r8,r2,0x3d90
0000d9e0	li	r9,__mh_bundle_header
0000d9e4	li	r10,__mh_bundle_header
0000d9e8	bl	0x108a0	; symbol stub for: _HIObjectRegisterSubclass
0000d9ec	or	r0,r3,r3
0000d9f0	or	r3,r0,r0
0000d9f4	lwz	r1,__mh_bundle_header(r1)
0000d9f8	lwz	r0,0x8(r1)
0000d9fc	mtspr	lr,r0
0000da00	lmw	r30,0xfff8(r1)
0000da04	blr
_CreateDropboxToolbarItem:
0000da08	mfspr	r0,lr
0000da0c	stmw	r30,0xfff8(r1)
0000da10	stw	r0,0x8(r1)
0000da14	stwu	r1,0xffa0(r1)
0000da18	or	r30,r1,r1
0000da1c	bcl	20,31,0xda20
0000da20	mfspr	r31,lr
0000da24	li	r0,__mh_bundle_header
0000da28	stw	r0,0x40(r30)
0000da2c	bl	0x10620	; symbol stub for: _GetCurrentEventTime
0000da30	fmr	f0,f1
0000da34	addi	r0,r30,0x3c
0000da38	li	r3,__mh_bundle_header
0000da3c	lis	r4,0x6869
0000da40	ori	r4,r4,0x6f62
0000da44	li	r5,0x2
0000da48	fmr	f1,f0
0000da4c	li	r8,__mh_bundle_header
0000da50	or	r9,r0,r0
0000da54	bl	0x10420	; symbol stub for: _CreateEvent
0000da58	or	r0,r3,r3
0000da5c	stw	r0,0x38(r30)
0000da60	lwz	r0,0x38(r30)
0000da64	srawi	r2,r0,31
0000da68	xor	r0,r2,r0
0000da6c	subf	r0,r2,r0
0000da70	neg	r0,r0
0000da74	rlwinm	r0,r0,1,31,31
0000da78	cmpwi	cr7,r0,__mh_bundle_header
0000da7c	beq	cr7,0xdab8
0000da80	lis	r3,0x3f2a
0000da84	ori	r3,r3,0x3f2a
0000da88	li	r4,__mh_bundle_header
0000da8c	addis	r2,r31,__mh_bundle_header
0000da90	addi	r5,r2,0x3e30
0000da94	addis	r2,r31,__mh_bundle_header
0000da98	addi	r6,r2,0x50d8
0000da9c	li	r7,__mh_bundle_header
0000daa0	addis	r2,r31,__mh_bundle_header
0000daa4	addi	r8,r2,0x4fcc
0000daa8	li	r9,0x27b
0000daac	li	r10,__mh_bundle_header
0000dab0	bl	0x10480	; symbol stub for: _DebugAssert
0000dab4	b	0xdc0c
0000dab8	lwz	r0,0x3c(r30)
0000dabc	or	r3,r0,r0
0000dac0	lis	r4,0x7462
0000dac4	ori	r4,r4,0x6969
0000dac8	lis	r5,0x6366
0000dacc	ori	r5,r5,0x7374
0000dad0	li	r6,0x4
0000dad4	addis	r2,r31,__mh_bundle_header
0000dad8	addi	r7,r2,0x5ec4
0000dadc	bl	0x10cc0	; symbol stub for: _SetEventParameter
0000dae0	or	r0,r3,r3
0000dae4	stw	r0,0x38(r30)
0000dae8	lwz	r0,0x38(r30)
0000daec	srawi	r2,r0,31
0000daf0	xor	r0,r2,r0
0000daf4	subf	r0,r2,r0
0000daf8	neg	r0,r0
0000dafc	rlwinm	r0,r0,1,31,31
0000db00	cmpwi	cr7,r0,__mh_bundle_header
0000db04	beq	cr7,0xdb40
0000db08	lis	r3,0x3f2a
0000db0c	ori	r3,r3,0x3f2a
0000db10	li	r4,__mh_bundle_header
0000db14	addis	r2,r31,__mh_bundle_header
0000db18	addi	r5,r2,0x3e30
0000db1c	addis	r2,r31,__mh_bundle_header
0000db20	addi	r6,r2,0x5100
0000db24	li	r7,__mh_bundle_header
0000db28	addis	r2,r31,__mh_bundle_header
0000db2c	addi	r8,r2,0x4fcc
0000db30	li	r9,0x288
0000db34	li	r10,__mh_bundle_header
0000db38	bl	0x10480	; symbol stub for: _DebugAssert
0000db3c	b	0xdc00
0000db40	li	r0,__mh_bundle_header
0000db44	stw	r0,0x44(r30)
0000db48	lwz	r0,0x3c(r30)
0000db4c	addi	r2,r30,0x44
0000db50	or	r3,r0,r0
0000db54	lis	r4,0x6174
0000db58	ori	r4,r4,0x7472
0000db5c	lis	r5,0x6d61
0000db60	ori	r5,r5,0x676e
0000db64	li	r6,0x4
0000db68	or	r7,r2,r2
0000db6c	bl	0x10cc0	; symbol stub for: _SetEventParameter
0000db70	lwz	r0,0x38(r30)
0000db74	srawi	r2,r0,31
0000db78	xor	r0,r2,r0
0000db7c	subf	r0,r2,r0
0000db80	neg	r0,r0
0000db84	rlwinm	r0,r0,1,31,31
0000db88	cmpwi	cr7,r0,__mh_bundle_header
0000db8c	beq	cr7,0xdbc8
0000db90	lis	r3,0x3f2a
0000db94	ori	r3,r3,0x3f2a
0000db98	li	r4,__mh_bundle_header
0000db9c	addis	r2,r31,__mh_bundle_header
0000dba0	addi	r5,r2,0x3e30
0000dba4	addis	r2,r31,__mh_bundle_header
0000dba8	addi	r6,r2,0x5100
0000dbac	li	r7,__mh_bundle_header
0000dbb0	addis	r2,r31,__mh_bundle_header
0000dbb4	addi	r8,r2,0x4fcc
0000dbb8	li	r9,0x297
0000dbbc	li	r10,__mh_bundle_header
0000dbc0	bl	0x10480	; symbol stub for: _DebugAssert
0000dbc4	b	0xdc00
0000dbc8	addis	r2,r31,__mh_bundle_header
0000dbcc	addi	r2,r2,0x5ec4
0000dbd0	lwz	r0,__mh_bundle_header(r2)
0000dbd4	lwz	r2,0x3c(r30)
0000dbd8	addi	r9,r30,0x40
0000dbdc	or	r3,r0,r0
0000dbe0	or	r4,r2,r2
0000dbe4	or	r5,r9,r9
0000dbe8	bl	0x10860	; symbol stub for: _HIObjectCreate
0000dbec	or	r0,r3,r3
0000dbf0	cmpwi	cr7,r0,__mh_bundle_header
0000dbf4	beq	cr7,0xdc00
0000dbf8	li	r0,__mh_bundle_header
0000dbfc	stw	r0,0x40(r30)
0000dc00	lwz	r0,0x3c(r30)
0000dc04	or	r3,r0,r0
0000dc08	bl	0x10c20	; symbol stub for: _ReleaseEvent
0000dc0c	lwz	r0,0x40(r30)
0000dc10	or	r3,r0,r0
0000dc14	lwz	r1,__mh_bundle_header(r1)
0000dc18	lwz	r0,0x8(r1)
0000dc1c	mtspr	lr,r0
0000dc20	lmw	r30,0xfff8(r1)
0000dc24	blr
_DropboxToolbarDelegate:
0000dc28	mfspr	r0,lr
0000dc2c	stmw	r30,0xfff8(r1)
0000dc30	stw	r0,0x8(r1)
0000dc34	stwu	r1,0xff70(r1)
0000dc38	or	r30,r1,r1
0000dc3c	bcl	20,31,0xdc40
0000dc40	mfspr	r31,lr
0000dc44	stw	r3,0xa8(r30)
0000dc48	stw	r4,0xac(r30)
0000dc4c	stw	r5,0xb0(r30)
0000dc50	li	r0,0xd96e
0000dc54	stw	r0,0x4c(r30)
0000dc58	lwz	r3,0xac(r30)
0000dc5c	bl	0x10660	; symbol stub for: _GetEventKind
0000dc60	stw	r3,0x78(r30)
0000dc64	lwz	r0,0x78(r30)
0000dc68	cmplwi	cr7,r0,0x9
0000dc6c	bgt	cr7,0xe4b4
0000dc70	lwz	r2,0x78(r30)
0000dc74	rlwinm	r0,r2,2,0,29
0000dc78	addis	r2,r31,__mh_bundle_header
0000dc7c	addi	r2,r2,0x5c
0000dc80	add	r2,r0,r2
0000dc84	lwz	r0,__mh_bundle_header(r2)
0000dc88	addis	r2,r31,__mh_bundle_header
0000dc8c	addi	r2,r2,0x5c
0000dc90	add	r0,r0,r2
0000dc94	mtspr	ctr,r0
0000dc98	bctr
0000dc9c	.long 0x00000818
0000dca0	.long 0x00000028
0000dca4	.long 0x00000060
0000dca8	.long 0x000001b8
0000dcac	.long 0x00000818
0000dcb0	.long 0x000003bc
0000dcb4	.long 0x000005b4
0000dcb8	.long 0x00000818
0000dcbc	.long 0x00000818
0000dcc0	.long 0x000006e0
0000dcc4	lwz	r3,0xa8(r30)
0000dcc8	lwz	r4,0xac(r30)
0000dccc	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000dcd0	or	r0,r3,r3
0000dcd4	stw	r0,0x4c(r30)
0000dcd8	lwz	r0,0x4c(r30)
0000dcdc	cmpwi	cr7,r0,__mh_bundle_header
0000dce0	beq	cr7,0xe4b4
0000dce4	addis	r2,r31,__mh_bundle_header
0000dce8	addi	r0,r2,0x5a70
0000dcec	or	r3,r0,r0
0000dcf0	lwz	r4,0x4c(r30)
0000dcf4	bl	_DBLog
0000dcf8	b	0xe4b4
0000dcfc	lwz	r3,0xa8(r30)
0000dd00	lwz	r4,0xac(r30)
0000dd04	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000dd08	or	r0,r3,r3
0000dd0c	stw	r0,0x4c(r30)
0000dd10	lwz	r0,0x4c(r30)
0000dd14	cmpwi	cr7,r0,__mh_bundle_header
0000dd18	beq	cr7,0xdd30
0000dd1c	addis	r2,r31,__mh_bundle_header
0000dd20	addi	r0,r2,0x5a80
0000dd24	or	r3,r0,r0
0000dd28	lwz	r4,0x4c(r30)
0000dd2c	bl	_DBLog
0000dd30	lwz	r0,0x4c(r30)
0000dd34	srawi	r2,r0,31
0000dd38	xor	r0,r2,r0
0000dd3c	subf	r0,r2,r0
0000dd40	neg	r0,r0
0000dd44	rlwinm	r0,r0,1,31,31
0000dd48	cmpwi	cr7,r0,__mh_bundle_header
0000dd4c	beq	cr7,0xdd88
0000dd50	lis	r3,0x3f2a
0000dd54	ori	r3,r3,0x3f2a
0000dd58	li	r4,__mh_bundle_header
0000dd5c	addis	r2,r31,__mh_bundle_header
0000dd60	addi	r5,r2,0x4f64
0000dd64	addis	r2,r31,__mh_bundle_header
0000dd68	addi	r6,r2,0x4f88
0000dd6c	li	r7,__mh_bundle_header
0000dd70	addis	r2,r31,__mh_bundle_header
0000dd74	addi	r8,r2,0x4dac
0000dd78	li	r9,0x2c0
0000dd7c	li	r10,__mh_bundle_header
0000dd80	bl	0x10480	; symbol stub for: _DebugAssert
0000dd84	b	0xe4b4
0000dd88	addi	r0,r30,0x50
0000dd8c	lwz	r3,0xac(r30)
0000dd90	lis	r4,0x6d61
0000dd94	ori	r4,r4,0x7272
0000dd98	lis	r5,0x6366
0000dd9c	ori	r5,r5,0x6d61
0000dda0	li	r6,__mh_bundle_header
0000dda4	li	r7,0x4
0000dda8	li	r8,__mh_bundle_header
0000ddac	or	r9,r0,r0
0000ddb0	bl	0x10680	; symbol stub for: _GetEventParameter
0000ddb4	or	r0,r3,r3
0000ddb8	stw	r0,0x48(r30)
0000ddbc	lwz	r0,0x48(r30)
0000ddc0	cmpwi	cr7,r0,__mh_bundle_header
0000ddc4	beq	cr7,0xdddc
0000ddc8	addis	r2,r31,__mh_bundle_header
0000ddcc	addi	r0,r2,0x5a90
0000ddd0	or	r3,r0,r0
0000ddd4	lwz	r4,0x48(r30)
0000ddd8	bl	_DBLog
0000dddc	lwz	r0,0x48(r30)
0000dde0	srawi	r2,r0,31
0000dde4	xor	r0,r2,r0
0000dde8	subf	r0,r2,r0
0000ddec	neg	r0,r0
0000ddf0	rlwinm	r0,r0,1,31,31
0000ddf4	cmpwi	cr7,r0,__mh_bundle_header
0000ddf8	beq	cr7,0xde34
0000ddfc	lis	r3,0x3f2a
0000de00	ori	r3,r3,0x3f2a
0000de04	li	r4,__mh_bundle_header
0000de08	addis	r2,r31,__mh_bundle_header
0000de0c	addi	r5,r2,0x3c10
0000de10	addis	r2,r31,__mh_bundle_header
0000de14	addi	r6,r2,0x4f88
0000de18	li	r7,__mh_bundle_header
0000de1c	addis	r2,r31,__mh_bundle_header
0000de20	addi	r8,r2,0x4dac
0000de24	li	r9,0x2d4
0000de28	li	r10,__mh_bundle_header
0000de2c	bl	0x10480	; symbol stub for: _DebugAssert
0000de30	b	0xe4b4
0000de34	lwz	r9,0x50(r30)
0000de38	addis	r2,r31,__mh_bundle_header
0000de3c	addi	r2,r2,0x5ca4
0000de40	lwz	r0,__mh_bundle_header(r2)
0000de44	or	r3,r9,r9
0000de48	or	r4,r0,r0
0000de4c	bl	0xfbe0	; symbol stub for: _CFArrayAppendValue
0000de50	b	0xe4b4
0000de54	addi	r0,r30,0x54
0000de58	lwz	r3,0xac(r30)
0000de5c	lis	r4,0x7462
0000de60	ori	r4,r4,0x6969
0000de64	lis	r5,0x6366
0000de68	ori	r5,r5,0x7374
0000de6c	li	r6,__mh_bundle_header
0000de70	li	r7,0x4
0000de74	li	r8,__mh_bundle_header
0000de78	or	r9,r0,r0
0000de7c	bl	0x10680	; symbol stub for: _GetEventParameter
0000de80	or	r0,r3,r3
0000de84	stw	r0,0x48(r30)
0000de88	lwz	r0,0x48(r30)
0000de8c	cmpwi	cr7,r0,__mh_bundle_header
0000de90	beq	cr7,0xdea8
0000de94	addis	r2,r31,__mh_bundle_header
0000de98	addi	r0,r2,0x5aa0
0000de9c	or	r3,r0,r0
0000dea0	lwz	r4,0x48(r30)
0000dea4	bl	_DBLog
0000dea8	lwz	r0,0x48(r30)
0000deac	srawi	r2,r0,31
0000deb0	xor	r0,r2,r0
0000deb4	subf	r0,r2,r0
0000deb8	neg	r0,r0
0000debc	rlwinm	r0,r0,1,31,31
0000dec0	cmpwi	cr7,r0,__mh_bundle_header
0000dec4	beq	cr7,0xdf00
0000dec8	lis	r3,0x3f2a
0000decc	ori	r3,r3,0x3f2a
0000ded0	li	r4,__mh_bundle_header
0000ded4	addis	r2,r31,__mh_bundle_header
0000ded8	addi	r5,r2,0x3c10
0000dedc	addis	r2,r31,__mh_bundle_header
0000dee0	addi	r6,r2,0x4f88
0000dee4	li	r7,__mh_bundle_header
0000dee8	addis	r2,r31,__mh_bundle_header
0000deec	addi	r8,r2,0x4dac
0000def0	li	r9,0x2ec
0000def4	li	r10,__mh_bundle_header
0000def8	bl	0x10480	; symbol stub for: _DebugAssert
0000defc	b	0xe4b4
0000df00	addis	r2,r31,__mh_bundle_header
0000df04	addi	r2,r2,0x5ca4
0000df08	lwz	r0,__mh_bundle_header(r2)
0000df0c	lwz	r2,0x54(r30)
0000df10	or	r3,r0,r0
0000df14	or	r4,r2,r2
0000df18	li	r5,0x4
0000df1c	bl	0xffa0	; symbol stub for: _CFStringCompare
0000df20	or	r0,r3,r3
0000df24	cmpwi	cr7,r0,__mh_bundle_header
0000df28	bne	cr7,0xe010
0000df2c	bl	_CreateDropboxToolbarItem
0000df30	or	r0,r3,r3
0000df34	stw	r0,0x58(r30)
0000df38	lwz	r0,0x58(r30)
0000df3c	cmpwi	cr7,r0,__mh_bundle_header
0000df40	beq	cr7,0xdff4
0000df44	addi	r0,r30,0x58
0000df48	lwz	r3,0xac(r30)
0000df4c	lis	r4,0x7462
0000df50	ori	r4,r4,0x6974
0000df54	lis	r5,0x7462
0000df58	ori	r5,r5,0x6974
0000df5c	li	r6,0x4
0000df60	or	r7,r0,r0
0000df64	bl	0x10cc0	; symbol stub for: _SetEventParameter
0000df68	or	r0,r3,r3
0000df6c	stw	r0,0x44(r30)
0000df70	lwz	r0,0x44(r30)
0000df74	cmpwi	cr7,r0,__mh_bundle_header
0000df78	beq	cr7,0xdf90
0000df7c	addis	r2,r31,__mh_bundle_header
0000df80	addi	r0,r2,0x5ab0
0000df84	or	r3,r0,r0
0000df88	lwz	r4,0x44(r30)
0000df8c	bl	_DBLog
0000df90	lwz	r0,0x44(r30)
0000df94	srawi	r2,r0,31
0000df98	xor	r0,r2,r0
0000df9c	subf	r0,r2,r0
0000dfa0	neg	r0,r0
0000dfa4	rlwinm	r0,r0,1,31,31
0000dfa8	cmpwi	cr7,r0,__mh_bundle_header
0000dfac	beq	cr7,0xdfe8
0000dfb0	lis	r3,0x3f2a
0000dfb4	ori	r3,r3,0x3f2a
0000dfb8	li	r4,__mh_bundle_header
0000dfbc	addis	r2,r31,__mh_bundle_header
0000dfc0	addi	r5,r2,0x3c10
0000dfc4	addis	r2,r31,__mh_bundle_header
0000dfc8	addi	r6,r2,0x4f88
0000dfcc	li	r7,__mh_bundle_header
0000dfd0	addis	r2,r31,__mh_bundle_header
0000dfd4	addi	r8,r2,0x4dac
0000dfd8	li	r9,0x302
0000dfdc	li	r10,__mh_bundle_header
0000dfe0	bl	0x10480	; symbol stub for: _DebugAssert
0000dfe4	b	0xe4b4
0000dfe8	li	r0,__mh_bundle_header
0000dfec	stw	r0,0x4c(r30)
0000dff0	b	0xe4b4
0000dff4	addis	r2,r31,__mh_bundle_header
0000dff8	addi	r0,r2,0x5ac0
0000dffc	lwz	r2,0x58(r30)
0000e000	or	r3,r0,r0
0000e004	or	r4,r2,r2
0000e008	bl	_DBLog
0000e00c	b	0xe4b4
0000e010	lwz	r3,0xa8(r30)
0000e014	lwz	r4,0xac(r30)
0000e018	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000e01c	or	r0,r3,r3
0000e020	stw	r0,0x4c(r30)
0000e024	lwz	r0,0x4c(r30)
0000e028	cmpwi	cr7,r0,__mh_bundle_header
0000e02c	beq	cr7,0xe4b4
0000e030	lwz	r0,0x4c(r30)
0000e034	li	r2,0xd96e
0000e038	cmpw	cr7,r0,r2
0000e03c	beq	cr7,0xe4b4
0000e040	addis	r2,r31,__mh_bundle_header
0000e044	addi	r0,r2,0x5ad0
0000e048	or	r3,r0,r0
0000e04c	lwz	r4,0x4c(r30)
0000e050	bl	_DBLog
0000e054	b	0xe4b4
0000e058	addi	r0,r30,0x5c
0000e05c	lwz	r3,0xac(r30)
0000e060	lis	r4,0x7462
0000e064	ori	r4,r4,0x6974
0000e068	lis	r5,0x7462
0000e06c	ori	r5,r5,0x6974
0000e070	li	r6,__mh_bundle_header
0000e074	li	r7,0x4
0000e078	li	r8,__mh_bundle_header
0000e07c	or	r9,r0,r0
0000e080	bl	0x10680	; symbol stub for: _GetEventParameter
0000e084	or	r0,r3,r3
0000e088	stw	r0,0x48(r30)
0000e08c	lwz	r0,0x48(r30)
0000e090	cmpwi	cr7,r0,__mh_bundle_header
0000e094	beq	cr7,0xe0ac
0000e098	addis	r2,r31,__mh_bundle_header
0000e09c	addi	r0,r2,0x5ae0
0000e0a0	or	r3,r0,r0
0000e0a4	lwz	r4,0x48(r30)
0000e0a8	bl	_DBLog
0000e0ac	lwz	r0,0x48(r30)
0000e0b0	srawi	r2,r0,31
0000e0b4	xor	r0,r2,r0
0000e0b8	subf	r0,r2,r0
0000e0bc	neg	r0,r0
0000e0c0	rlwinm	r0,r0,1,31,31
0000e0c4	cmpwi	cr7,r0,__mh_bundle_header
0000e0c8	beq	cr7,0xe104
0000e0cc	lis	r3,0x3f2a
0000e0d0	ori	r3,r3,0x3f2a
0000e0d4	li	r4,__mh_bundle_header
0000e0d8	addis	r2,r31,__mh_bundle_header
0000e0dc	addi	r5,r2,0x3c10
0000e0e0	addis	r2,r31,__mh_bundle_header
0000e0e4	addi	r6,r2,0x4f88
0000e0e8	li	r7,__mh_bundle_header
0000e0ec	addis	r2,r31,__mh_bundle_header
0000e0f0	addi	r8,r2,0x4dac
0000e0f4	li	r9,0x329
0000e0f8	li	r10,__mh_bundle_header
0000e0fc	bl	0x10480	; symbol stub for: _DebugAssert
0000e100	b	0xe4b4
0000e104	lwz	r0,0x5c(r30)
0000e108	addi	r2,r30,0x60
0000e10c	or	r3,r0,r0
0000e110	or	r4,r2,r2
0000e114	bl	0x10960	; symbol stub for: _HIToolbarItemCopyIdentifier
0000e118	addis	r2,r31,__mh_bundle_header
0000e11c	addi	r2,r2,0x5ca4
0000e120	lwz	r0,__mh_bundle_header(r2)
0000e124	lwz	r2,0x60(r30)
0000e128	or	r3,r0,r0
0000e12c	or	r4,r2,r2
0000e130	li	r5,0x4
0000e134	bl	0xffa0	; symbol stub for: _CFStringCompare
0000e138	or	r0,r3,r3
0000e13c	cmpwi	cr7,r0,__mh_bundle_header
0000e140	bne	cr7,0xe208
0000e144	addi	r0,r30,0x64
0000e148	lwz	r3,0xac(r30)
0000e14c	lis	r4,0x696e
0000e150	ori	r4,r4,0x6478
0000e154	lis	r5,0x6366
0000e158	ori	r5,r5,0x6978
0000e15c	li	r6,__mh_bundle_header
0000e160	li	r7,0x4
0000e164	li	r8,__mh_bundle_header
0000e168	or	r9,r0,r0
0000e16c	bl	0x10680	; symbol stub for: _GetEventParameter
0000e170	or	r0,r3,r3
0000e174	stw	r0,0x48(r30)
0000e178	lwz	r0,0x48(r30)
0000e17c	cmpwi	cr7,r0,__mh_bundle_header
0000e180	beq	cr7,0xe198
0000e184	addis	r2,r31,__mh_bundle_header
0000e188	addi	r0,r2,0x5af0
0000e18c	or	r3,r0,r0
0000e190	lwz	r4,0x48(r30)
0000e194	bl	_DBLog
0000e198	lwz	r0,0x48(r30)
0000e19c	srawi	r2,r0,31
0000e1a0	xor	r0,r2,r0
0000e1a4	subf	r0,r2,r0
0000e1a8	neg	r0,r0
0000e1ac	rlwinm	r0,r0,1,31,31
0000e1b0	cmpwi	cr7,r0,__mh_bundle_header
0000e1b4	beq	cr7,0xe1f0
0000e1b8	lis	r3,0x3f2a
0000e1bc	ori	r3,r3,0x3f2a
0000e1c0	li	r4,__mh_bundle_header
0000e1c4	addis	r2,r31,__mh_bundle_header
0000e1c8	addi	r5,r2,0x3c10
0000e1cc	addis	r2,r31,__mh_bundle_header
0000e1d0	addi	r6,r2,0x4f88
0000e1d4	li	r7,__mh_bundle_header
0000e1d8	addis	r2,r31,__mh_bundle_header
0000e1dc	addi	r8,r2,0x4dac
0000e1e0	li	r9,0x340
0000e1e4	li	r10,__mh_bundle_header
0000e1e8	bl	0x10480	; symbol stub for: _DebugAssert
0000e1ec	b	0xe4b4
0000e1f0	lwz	r0,0x64(r30)
0000e1f4	or	r3,r0,r0
0000e1f8	bl	_store_insertion_index
0000e1fc	li	r0,__mh_bundle_header
0000e200	stw	r0,0x4c(r30)
0000e204	b	0xe4b4
0000e208	lwz	r3,0xa8(r30)
0000e20c	lwz	r4,0xac(r30)
0000e210	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000e214	or	r0,r3,r3
0000e218	stw	r0,0x4c(r30)
0000e21c	lwz	r0,0x4c(r30)
0000e220	cmpwi	cr7,r0,__mh_bundle_header
0000e224	beq	cr7,0xe4b4
0000e228	lwz	r0,0x4c(r30)
0000e22c	li	r2,0xd96e
0000e230	cmpw	cr7,r0,r2
0000e234	beq	cr7,0xe4b4
0000e238	addis	r2,r31,__mh_bundle_header
0000e23c	addi	r0,r2,0x5b00
0000e240	or	r3,r0,r0
0000e244	lwz	r4,0x4c(r30)
0000e248	bl	_DBLog
0000e24c	b	0xe4b4
0000e250	addi	r0,r30,0x68
0000e254	lwz	r3,0xac(r30)
0000e258	lis	r4,0x7462
0000e25c	ori	r4,r4,0x6974
0000e260	lis	r5,0x7462
0000e264	ori	r5,r5,0x6974
0000e268	li	r6,__mh_bundle_header
0000e26c	li	r7,0x4
0000e270	li	r8,__mh_bundle_header
0000e274	or	r9,r0,r0
0000e278	bl	0x10680	; symbol stub for: _GetEventParameter
0000e27c	or	r0,r3,r3
0000e280	stw	r0,0x48(r30)
0000e284	lwz	r0,0x48(r30)
0000e288	cmpwi	cr7,r0,__mh_bundle_header
0000e28c	beq	cr7,0xe2a4
0000e290	addis	r2,r31,__mh_bundle_header
0000e294	addi	r0,r2,0x5b10
0000e298	or	r3,r0,r0
0000e29c	lwz	r4,0x48(r30)
0000e2a0	bl	_DBLog
0000e2a4	lwz	r0,0x48(r30)
0000e2a8	srawi	r2,r0,31
0000e2ac	xor	r0,r2,r0
0000e2b0	subf	r0,r2,r0
0000e2b4	neg	r0,r0
0000e2b8	rlwinm	r0,r0,1,31,31
0000e2bc	cmpwi	cr7,r0,__mh_bundle_header
0000e2c0	beq	cr7,0xe2fc
0000e2c4	lis	r3,0x3f2a
0000e2c8	ori	r3,r3,0x3f2a
0000e2cc	li	r4,__mh_bundle_header
0000e2d0	addis	r2,r31,__mh_bundle_header
0000e2d4	addi	r5,r2,0x3c10
0000e2d8	addis	r2,r31,__mh_bundle_header
0000e2dc	addi	r6,r2,0x4f88
0000e2e0	li	r7,__mh_bundle_header
0000e2e4	addis	r2,r31,__mh_bundle_header
0000e2e8	addi	r8,r2,0x4dac
0000e2ec	li	r9,0x364
0000e2f0	li	r10,__mh_bundle_header
0000e2f4	bl	0x10480	; symbol stub for: _DebugAssert
0000e2f8	b	0xe4b4
0000e2fc	lwz	r0,0x68(r30)
0000e300	addi	r2,r30,0x6c
0000e304	or	r3,r0,r0
0000e308	or	r4,r2,r2
0000e30c	bl	0x10960	; symbol stub for: _HIToolbarItemCopyIdentifier
0000e310	addis	r2,r31,__mh_bundle_header
0000e314	addi	r2,r2,0x5ca4
0000e318	lwz	r0,__mh_bundle_header(r2)
0000e31c	lwz	r2,0x6c(r30)
0000e320	or	r3,r0,r0
0000e324	or	r4,r2,r2
0000e328	li	r5,0x4
0000e32c	bl	0xffa0	; symbol stub for: _CFStringCompare
0000e330	or	r0,r3,r3
0000e334	cmpwi	cr7,r0,__mh_bundle_header
0000e338	bne	cr7,0xe344
0000e33c	li	r3,0xfffe
0000e340	bl	_store_insertion_index
0000e344	lwz	r3,0xa8(r30)
0000e348	lwz	r4,0xac(r30)
0000e34c	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000e350	or	r0,r3,r3
0000e354	stw	r0,0x4c(r30)
0000e358	lwz	r0,0x4c(r30)
0000e35c	cmpwi	cr7,r0,__mh_bundle_header
0000e360	beq	cr7,0xe4b4
0000e364	addis	r2,r31,__mh_bundle_header
0000e368	addi	r0,r2,0x5b20
0000e36c	or	r3,r0,r0
0000e370	lwz	r4,0x4c(r30)
0000e374	bl	_DBLog
0000e378	b	0xe4b4
0000e37c	lwz	r3,0xa8(r30)
0000e380	lwz	r4,0xac(r30)
0000e384	bl	0x10300	; symbol stub for: _CallNextEventHandler
0000e388	or	r0,r3,r3
0000e38c	stw	r0,0x4c(r30)
0000e390	lwz	r0,0x4c(r30)
0000e394	cmpwi	cr7,r0,__mh_bundle_header
0000e398	beq	cr7,0xe3c0
0000e39c	lwz	r0,0x4c(r30)
0000e3a0	li	r2,0xd96e
0000e3a4	cmpw	cr7,r0,r2
0000e3a8	beq	cr7,0xe3c0
0000e3ac	addis	r2,r31,__mh_bundle_header
0000e3b0	addi	r0,r2,0x5b30
0000e3b4	or	r3,r0,r0
0000e3b8	lwz	r4,0x4c(r30)
0000e3bc	bl	_DBLog
0000e3c0	addis	r2,r31,__mh_bundle_header
0000e3c4	addi	r2,r2,0x5e2c
0000e3c8	lwz	r0,__mh_bundle_header(r2)
0000e3cc	addi	r2,r30,0x70
0000e3d0	or	r3,r0,r0
0000e3d4	or	r4,r2,r2
0000e3d8	bl	0x108e0	; symbol stub for: _HIToolbarCopyItems
0000e3dc	li	r0,0xfffe
0000e3e0	stw	r0,0x40(r30)
0000e3e4	li	r0,__mh_bundle_header
0000e3e8	stw	r0,0x38(r30)
0000e3ec	b	0xe474
0000e3f0	lwz	r0,0x70(r30)
0000e3f4	or	r3,r0,r0
0000e3f8	lwz	r4,0x38(r30)
0000e3fc	bl	0xfc40	; symbol stub for: _CFArrayGetValueAtIndex
0000e400	or	r0,r3,r3
0000e404	stw	r0,0x3c(r30)
0000e408	lwz	r3,0x3c(r30)
0000e40c	bl	0xff60	; symbol stub for: _CFRetain
0000e410	addi	r0,r30,0x74
0000e414	lwz	r3,0x3c(r30)
0000e418	or	r4,r0,r0
0000e41c	bl	0x10960	; symbol stub for: _HIToolbarItemCopyIdentifier
0000e420	addis	r2,r31,__mh_bundle_header
0000e424	addi	r2,r2,0x5ca4
0000e428	lwz	r0,__mh_bundle_header(r2)
0000e42c	lwz	r2,0x74(r30)
0000e430	or	r3,r0,r0
0000e434	or	r4,r2,r2
0000e438	li	r5,0x4
0000e43c	bl	0xffa0	; symbol stub for: _CFStringCompare
0000e440	or	r0,r3,r3
0000e444	cmpwi	cr7,r0,__mh_bundle_header
0000e448	bne	cr7,0xe454
0000e44c	lwz	r0,0x38(r30)
0000e450	stw	r0,0x40(r30)
0000e454	lwz	r3,0x3c(r30)
0000e458	bl	0xff40	; symbol stub for: _CFRelease
0000e45c	lwz	r0,0x74(r30)
0000e460	or	r3,r0,r0
0000e464	bl	0xff40	; symbol stub for: _CFRelease
0000e468	lwz	r2,0x38(r30)
0000e46c	addi	r0,r2,0x1
0000e470	stw	r0,0x38(r30)
0000e474	lwz	r0,0x40(r30)
0000e478	li	r2,0xfffe
0000e47c	cmpw	cr7,r0,r2
0000e480	bne	cr7,0xe4a0
0000e484	lwz	r0,0x70(r30)
0000e488	or	r3,r0,r0
0000e48c	bl	0xfc20	; symbol stub for: _CFArrayGetCount
0000e490	or	r2,r3,r3
0000e494	lwz	r0,0x38(r30)
0000e498	cmpw	cr7,r2,r0
0000e49c	bgt	cr7,0xe3f0
0000e4a0	lwz	r0,0x70(r30)
0000e4a4	or	r3,r0,r0
0000e4a8	bl	0xff40	; symbol stub for: _CFRelease
0000e4ac	lwz	r3,0x40(r30)
0000e4b0	bl	_store_insertion_index
0000e4b4	lwz	r0,0x4c(r30)
0000e4b8	or	r3,r0,r0
0000e4bc	lwz	r1,__mh_bundle_header(r1)
0000e4c0	lwz	r0,0x8(r1)
0000e4c4	mtspr	lr,r0
0000e4c8	lmw	r30,0xfff8(r1)
0000e4cc	blr
_LoadToolbarButtonImages:
0000e4d0	mfspr	r0,lr
0000e4d4	stmw	r30,0xfff8(r1)
0000e4d8	stw	r0,0x8(r1)
0000e4dc	stwu	r1,0xff40(r1)
0000e4e0	or	r30,r1,r1
0000e4e4	bcl	20,31,0xe4e8
0000e4e8	mfspr	r31,lr
0000e4ec	addi	r0,r30,0x98
0000e4f0	lis	r3,0x7379
0000e4f4	ori	r3,r3,0x7332
0000e4f8	or	r4,r0,r0
0000e4fc	bl	0x105c0	; symbol stub for: _Gestalt
0000e500	lwz	r0,0x98(r30)
0000e504	cmpwi	cr7,r0,0x4
0000e508	ble	cr7,0xe9f0
0000e50c	addis	r2,r31,__mh_bundle_header
0000e510	addi	r2,r2,0x556c
0000e514	lwz	r0,__mh_bundle_header(r2)
0000e518	cmpwi	cr7,r0,__mh_bundle_header
0000e51c	bne	cr7,0xe640
0000e520	addis	r2,r31,__mh_bundle_header
0000e524	addi	r2,r2,0x5474
0000e528	lbz	r0,__mh_bundle_header(r2)
0000e52c	rlwinm	r0,r0,0,24,31
0000e530	cmpwi	cr7,r0,__mh_bundle_header
0000e534	beq	cr7,0xe640
0000e538	addis	r2,r31,__mh_bundle_header
0000e53c	addi	r0,r2,0x4fb8
0000e540	or	r3,r0,r0
0000e544	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000e548	or	r0,r3,r3
0000e54c	stw	r0,0x94(r30)
0000e550	lwz	r0,0x94(r30)
0000e554	cmpwi	cr7,r0,__mh_bundle_header
0000e558	beq	cr7,0xe604
0000e55c	addis	r2,r31,__mh_bundle_header
0000e560	addi	r0,r2,0x5298
0000e564	lwz	r3,0x94(r30)
0000e568	or	r4,r0,r0
0000e56c	li	r5,__mh_bundle_header
0000e570	li	r6,__mh_bundle_header
0000e574	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000e578	or	r0,r3,r3
0000e57c	stw	r0,0x90(r30)
0000e580	lwz	r0,0x90(r30)
0000e584	cmpwi	cr7,r0,__mh_bundle_header
0000e588	beq	cr7,0xe604
0000e58c	lwz	r3,0x90(r30)
0000e590	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000e594	or	r0,r3,r3
0000e598	stw	r0,0x8c(r30)
0000e59c	lwz	r0,0x8c(r30)
0000e5a0	cmpwi	cr7,r0,__mh_bundle_header
0000e5a4	beq	cr7,0xe5fc
0000e5a8	lwz	r3,0x8c(r30)
0000e5ac	li	r4,__mh_bundle_header
0000e5b0	li	r5,__mh_bundle_header
0000e5b4	li	r6,__mh_bundle_header
0000e5b8	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000e5bc	or	r0,r3,r3
0000e5c0	addis	r2,r31,__mh_bundle_header
0000e5c4	addi	r2,r2,0x556c
0000e5c8	stw	r0,__mh_bundle_header(r2)
0000e5cc	addis	r2,r31,__mh_bundle_header
0000e5d0	addi	r2,r2,0x556c
0000e5d4	lwz	r0,__mh_bundle_header(r2)
0000e5d8	cmpwi	cr7,r0,__mh_bundle_header
0000e5dc	beq	cr7,0xe5f4
0000e5e0	addis	r2,r31,__mh_bundle_header
0000e5e4	addi	r2,r2,0x556c
0000e5e8	lwz	r0,__mh_bundle_header(r2)
0000e5ec	or	r3,r0,r0
0000e5f0	bl	0x102e0	; symbol stub for: _CGImageRetain
0000e5f4	lwz	r3,0x8c(r30)
0000e5f8	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000e5fc	lwz	r3,0x90(r30)
0000e600	bl	0xff40	; symbol stub for: _CFRelease
0000e604	addis	r2,r31,__mh_bundle_header
0000e608	addi	r2,r2,0x556c
0000e60c	lwz	r0,__mh_bundle_header(r2)
0000e610	cmpwi	cr7,r0,__mh_bundle_header
0000e614	bne	cr7,0xe640
0000e618	addis	r2,r31,__mh_bundle_header
0000e61c	addi	r2,r2,0x5474
0000e620	li	r0,__mh_bundle_header
0000e624	stb	r0,__mh_bundle_header(r2)
0000e628	addis	r2,r31,__mh_bundle_header
0000e62c	addi	r0,r2,0x52a8
0000e630	or	r3,r0,r0
0000e634	addis	r2,r31,__mh_bundle_header
0000e638	addi	r4,r2,0x4940
0000e63c	bl	0x10b20	; symbol stub for: _NSLog
0000e640	addis	r2,r31,__mh_bundle_header
0000e644	addi	r2,r2,0x5570
0000e648	lwz	r0,__mh_bundle_header(r2)
0000e64c	cmpwi	cr7,r0,__mh_bundle_header
0000e650	bne	cr7,0xe774
0000e654	addis	r2,r31,__mh_bundle_header
0000e658	addi	r2,r2,0x5474
0000e65c	lbz	r0,__mh_bundle_header(r2)
0000e660	rlwinm	r0,r0,0,24,31
0000e664	cmpwi	cr7,r0,__mh_bundle_header
0000e668	beq	cr7,0xe774
0000e66c	addis	r2,r31,__mh_bundle_header
0000e670	addi	r0,r2,0x4fb8
0000e674	or	r3,r0,r0
0000e678	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000e67c	or	r0,r3,r3
0000e680	stw	r0,0x88(r30)
0000e684	lwz	r0,0x88(r30)
0000e688	cmpwi	cr7,r0,__mh_bundle_header
0000e68c	beq	cr7,0xe738
0000e690	addis	r2,r31,__mh_bundle_header
0000e694	addi	r0,r2,0x52b8
0000e698	lwz	r3,0x88(r30)
0000e69c	or	r4,r0,r0
0000e6a0	li	r5,__mh_bundle_header
0000e6a4	li	r6,__mh_bundle_header
0000e6a8	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000e6ac	or	r0,r3,r3
0000e6b0	stw	r0,0x84(r30)
0000e6b4	lwz	r0,0x84(r30)
0000e6b8	cmpwi	cr7,r0,__mh_bundle_header
0000e6bc	beq	cr7,0xe738
0000e6c0	lwz	r3,0x84(r30)
0000e6c4	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000e6c8	or	r0,r3,r3
0000e6cc	stw	r0,0x80(r30)
0000e6d0	lwz	r0,0x80(r30)
0000e6d4	cmpwi	cr7,r0,__mh_bundle_header
0000e6d8	beq	cr7,0xe730
0000e6dc	lwz	r3,0x80(r30)
0000e6e0	li	r4,__mh_bundle_header
0000e6e4	li	r5,__mh_bundle_header
0000e6e8	li	r6,__mh_bundle_header
0000e6ec	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000e6f0	or	r0,r3,r3
0000e6f4	addis	r2,r31,__mh_bundle_header
0000e6f8	addi	r2,r2,0x5570
0000e6fc	stw	r0,__mh_bundle_header(r2)
0000e700	addis	r2,r31,__mh_bundle_header
0000e704	addi	r2,r2,0x5570
0000e708	lwz	r0,__mh_bundle_header(r2)
0000e70c	cmpwi	cr7,r0,__mh_bundle_header
0000e710	beq	cr7,0xe728
0000e714	addis	r2,r31,__mh_bundle_header
0000e718	addi	r2,r2,0x5570
0000e71c	lwz	r0,__mh_bundle_header(r2)
0000e720	or	r3,r0,r0
0000e724	bl	0x102e0	; symbol stub for: _CGImageRetain
0000e728	lwz	r3,0x80(r30)
0000e72c	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000e730	lwz	r3,0x84(r30)
0000e734	bl	0xff40	; symbol stub for: _CFRelease
0000e738	addis	r2,r31,__mh_bundle_header
0000e73c	addi	r2,r2,0x5570
0000e740	lwz	r0,__mh_bundle_header(r2)
0000e744	cmpwi	cr7,r0,__mh_bundle_header
0000e748	bne	cr7,0xe774
0000e74c	addis	r2,r31,__mh_bundle_header
0000e750	addi	r2,r2,0x5474
0000e754	li	r0,__mh_bundle_header
0000e758	stb	r0,__mh_bundle_header(r2)
0000e75c	addis	r2,r31,__mh_bundle_header
0000e760	addi	r0,r2,0x52a8
0000e764	or	r3,r0,r0
0000e768	addis	r2,r31,__mh_bundle_header
0000e76c	addi	r4,r2,0x4980
0000e770	bl	0x10b20	; symbol stub for: _NSLog
0000e774	addis	r2,r31,__mh_bundle_header
0000e778	addi	r2,r2,0x5574
0000e77c	lwz	r0,__mh_bundle_header(r2)
0000e780	cmpwi	cr7,r0,__mh_bundle_header
0000e784	bne	cr7,0xe8a8
0000e788	addis	r2,r31,__mh_bundle_header
0000e78c	addi	r2,r2,0x5474
0000e790	lbz	r0,__mh_bundle_header(r2)
0000e794	rlwinm	r0,r0,0,24,31
0000e798	cmpwi	cr7,r0,__mh_bundle_header
0000e79c	beq	cr7,0xe8a8
0000e7a0	addis	r2,r31,__mh_bundle_header
0000e7a4	addi	r0,r2,0x4fb8
0000e7a8	or	r3,r0,r0
0000e7ac	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000e7b0	or	r0,r3,r3
0000e7b4	stw	r0,0x7c(r30)
0000e7b8	lwz	r0,0x7c(r30)
0000e7bc	cmpwi	cr7,r0,__mh_bundle_header
0000e7c0	beq	cr7,0xe86c
0000e7c4	addis	r2,r31,__mh_bundle_header
0000e7c8	addi	r0,r2,0x52b8
0000e7cc	lwz	r3,0x7c(r30)
0000e7d0	or	r4,r0,r0
0000e7d4	li	r5,__mh_bundle_header
0000e7d8	li	r6,__mh_bundle_header
0000e7dc	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000e7e0	or	r0,r3,r3
0000e7e4	stw	r0,0x78(r30)
0000e7e8	lwz	r0,0x78(r30)
0000e7ec	cmpwi	cr7,r0,__mh_bundle_header
0000e7f0	beq	cr7,0xe86c
0000e7f4	lwz	r3,0x78(r30)
0000e7f8	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000e7fc	or	r0,r3,r3
0000e800	stw	r0,0x74(r30)
0000e804	lwz	r0,0x74(r30)
0000e808	cmpwi	cr7,r0,__mh_bundle_header
0000e80c	beq	cr7,0xe864
0000e810	lwz	r3,0x74(r30)
0000e814	li	r4,__mh_bundle_header
0000e818	li	r5,__mh_bundle_header
0000e81c	li	r6,__mh_bundle_header
0000e820	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000e824	or	r0,r3,r3
0000e828	addis	r2,r31,__mh_bundle_header
0000e82c	addi	r2,r2,0x5574
0000e830	stw	r0,__mh_bundle_header(r2)
0000e834	addis	r2,r31,__mh_bundle_header
0000e838	addi	r2,r2,0x5574
0000e83c	lwz	r0,__mh_bundle_header(r2)
0000e840	cmpwi	cr7,r0,__mh_bundle_header
0000e844	beq	cr7,0xe85c
0000e848	addis	r2,r31,__mh_bundle_header
0000e84c	addi	r2,r2,0x5574
0000e850	lwz	r0,__mh_bundle_header(r2)
0000e854	or	r3,r0,r0
0000e858	bl	0x102e0	; symbol stub for: _CGImageRetain
0000e85c	lwz	r3,0x74(r30)
0000e860	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000e864	lwz	r3,0x78(r30)
0000e868	bl	0xff40	; symbol stub for: _CFRelease
0000e86c	addis	r2,r31,__mh_bundle_header
0000e870	addi	r2,r2,0x5574
0000e874	lwz	r0,__mh_bundle_header(r2)
0000e878	cmpwi	cr7,r0,__mh_bundle_header
0000e87c	bne	cr7,0xe8a8
0000e880	addis	r2,r31,__mh_bundle_header
0000e884	addi	r2,r2,0x5474
0000e888	li	r0,__mh_bundle_header
0000e88c	stb	r0,__mh_bundle_header(r2)
0000e890	addis	r2,r31,__mh_bundle_header
0000e894	addi	r0,r2,0x52a8
0000e898	or	r3,r0,r0
0000e89c	addis	r2,r31,__mh_bundle_header
0000e8a0	addi	r4,r2,0x4980
0000e8a4	bl	0x10b20	; symbol stub for: _NSLog
0000e8a8	addis	r2,r31,__mh_bundle_header
0000e8ac	addi	r2,r2,0x5578
0000e8b0	lwz	r0,__mh_bundle_header(r2)
0000e8b4	cmpwi	cr7,r0,__mh_bundle_header
0000e8b8	bne	cr7,0xe9dc
0000e8bc	addis	r2,r31,__mh_bundle_header
0000e8c0	addi	r2,r2,0x5474
0000e8c4	lbz	r0,__mh_bundle_header(r2)
0000e8c8	rlwinm	r0,r0,0,24,31
0000e8cc	cmpwi	cr7,r0,__mh_bundle_header
0000e8d0	beq	cr7,0xe9dc
0000e8d4	addis	r2,r31,__mh_bundle_header
0000e8d8	addi	r0,r2,0x4fb8
0000e8dc	or	r3,r0,r0
0000e8e0	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000e8e4	or	r0,r3,r3
0000e8e8	stw	r0,0x70(r30)
0000e8ec	lwz	r0,0x70(r30)
0000e8f0	cmpwi	cr7,r0,__mh_bundle_header
0000e8f4	beq	cr7,0xe9a0
0000e8f8	addis	r2,r31,__mh_bundle_header
0000e8fc	addi	r0,r2,0x52c8
0000e900	lwz	r3,0x70(r30)
0000e904	or	r4,r0,r0
0000e908	li	r5,__mh_bundle_header
0000e90c	li	r6,__mh_bundle_header
0000e910	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000e914	or	r0,r3,r3
0000e918	stw	r0,0x6c(r30)
0000e91c	lwz	r0,0x6c(r30)
0000e920	cmpwi	cr7,r0,__mh_bundle_header
0000e924	beq	cr7,0xe9a0
0000e928	lwz	r3,0x6c(r30)
0000e92c	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000e930	or	r0,r3,r3
0000e934	stw	r0,0x68(r30)
0000e938	lwz	r0,0x68(r30)
0000e93c	cmpwi	cr7,r0,__mh_bundle_header
0000e940	beq	cr7,0xe998
0000e944	lwz	r3,0x68(r30)
0000e948	li	r4,__mh_bundle_header
0000e94c	li	r5,__mh_bundle_header
0000e950	li	r6,__mh_bundle_header
0000e954	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000e958	or	r0,r3,r3
0000e95c	addis	r2,r31,__mh_bundle_header
0000e960	addi	r2,r2,0x5578
0000e964	stw	r0,__mh_bundle_header(r2)
0000e968	addis	r2,r31,__mh_bundle_header
0000e96c	addi	r2,r2,0x5578
0000e970	lwz	r0,__mh_bundle_header(r2)
0000e974	cmpwi	cr7,r0,__mh_bundle_header
0000e978	beq	cr7,0xe990
0000e97c	addis	r2,r31,__mh_bundle_header
0000e980	addi	r2,r2,0x5578
0000e984	lwz	r0,__mh_bundle_header(r2)
0000e988	or	r3,r0,r0
0000e98c	bl	0x102e0	; symbol stub for: _CGImageRetain
0000e990	lwz	r3,0x68(r30)
0000e994	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000e998	lwz	r3,0x6c(r30)
0000e99c	bl	0xff40	; symbol stub for: _CFRelease
0000e9a0	addis	r2,r31,__mh_bundle_header
0000e9a4	addi	r2,r2,0x5578
0000e9a8	lwz	r0,__mh_bundle_header(r2)
0000e9ac	cmpwi	cr7,r0,__mh_bundle_header
0000e9b0	bne	cr7,0xe9dc
0000e9b4	addis	r2,r31,__mh_bundle_header
0000e9b8	addi	r2,r2,0x5474
0000e9bc	li	r0,__mh_bundle_header
0000e9c0	stb	r0,__mh_bundle_header(r2)
0000e9c4	addis	r2,r31,__mh_bundle_header
0000e9c8	addi	r0,r2,0x52a8
0000e9cc	or	r3,r0,r0
0000e9d0	addis	r2,r31,__mh_bundle_header
0000e9d4	addi	r4,r2,0x4990
0000e9d8	bl	0x10b20	; symbol stub for: _NSLog
0000e9dc	addis	r2,r31,__mh_bundle_header
0000e9e0	addi	r2,r2,0x557c
0000e9e4	li	r0,0x4
0000e9e8	sth	r0,__mh_bundle_header(r2)
0000e9ec	b	0xeed0
0000e9f0	addis	r2,r31,__mh_bundle_header
0000e9f4	addi	r2,r2,0x556c
0000e9f8	lwz	r0,__mh_bundle_header(r2)
0000e9fc	cmpwi	cr7,r0,__mh_bundle_header
0000ea00	bne	cr7,0xeb24
0000ea04	addis	r2,r31,__mh_bundle_header
0000ea08	addi	r2,r2,0x5474
0000ea0c	lbz	r0,__mh_bundle_header(r2)
0000ea10	rlwinm	r0,r0,0,24,31
0000ea14	cmpwi	cr7,r0,__mh_bundle_header
0000ea18	beq	cr7,0xeb24
0000ea1c	addis	r2,r31,__mh_bundle_header
0000ea20	addi	r0,r2,0x4fb8
0000ea24	or	r3,r0,r0
0000ea28	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000ea2c	or	r0,r3,r3
0000ea30	stw	r0,0x64(r30)
0000ea34	lwz	r0,0x64(r30)
0000ea38	cmpwi	cr7,r0,__mh_bundle_header
0000ea3c	beq	cr7,0xeae8
0000ea40	addis	r2,r31,__mh_bundle_header
0000ea44	addi	r0,r2,0x52d8
0000ea48	lwz	r3,0x64(r30)
0000ea4c	or	r4,r0,r0
0000ea50	li	r5,__mh_bundle_header
0000ea54	li	r6,__mh_bundle_header
0000ea58	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000ea5c	or	r0,r3,r3
0000ea60	stw	r0,0x60(r30)
0000ea64	lwz	r0,0x60(r30)
0000ea68	cmpwi	cr7,r0,__mh_bundle_header
0000ea6c	beq	cr7,0xeae8
0000ea70	lwz	r3,0x60(r30)
0000ea74	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000ea78	or	r0,r3,r3
0000ea7c	stw	r0,0x5c(r30)
0000ea80	lwz	r0,0x5c(r30)
0000ea84	cmpwi	cr7,r0,__mh_bundle_header
0000ea88	beq	cr7,0xeae0
0000ea8c	lwz	r3,0x5c(r30)
0000ea90	li	r4,__mh_bundle_header
0000ea94	li	r5,__mh_bundle_header
0000ea98	li	r6,__mh_bundle_header
0000ea9c	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000eaa0	or	r0,r3,r3
0000eaa4	addis	r2,r31,__mh_bundle_header
0000eaa8	addi	r2,r2,0x556c
0000eaac	stw	r0,__mh_bundle_header(r2)
0000eab0	addis	r2,r31,__mh_bundle_header
0000eab4	addi	r2,r2,0x556c
0000eab8	lwz	r0,__mh_bundle_header(r2)
0000eabc	cmpwi	cr7,r0,__mh_bundle_header
0000eac0	beq	cr7,0xead8
0000eac4	addis	r2,r31,__mh_bundle_header
0000eac8	addi	r2,r2,0x556c
0000eacc	lwz	r0,__mh_bundle_header(r2)
0000ead0	or	r3,r0,r0
0000ead4	bl	0x102e0	; symbol stub for: _CGImageRetain
0000ead8	lwz	r3,0x5c(r30)
0000eadc	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000eae0	lwz	r3,0x60(r30)
0000eae4	bl	0xff40	; symbol stub for: _CFRelease
0000eae8	addis	r2,r31,__mh_bundle_header
0000eaec	addi	r2,r2,0x556c
0000eaf0	lwz	r0,__mh_bundle_header(r2)
0000eaf4	cmpwi	cr7,r0,__mh_bundle_header
0000eaf8	bne	cr7,0xeb24
0000eafc	addis	r2,r31,__mh_bundle_header
0000eb00	addi	r2,r2,0x5474
0000eb04	li	r0,__mh_bundle_header
0000eb08	stb	r0,__mh_bundle_header(r2)
0000eb0c	addis	r2,r31,__mh_bundle_header
0000eb10	addi	r0,r2,0x52a8
0000eb14	or	r3,r0,r0
0000eb18	addis	r2,r31,__mh_bundle_header
0000eb1c	addi	r4,r2,0x49a4
0000eb20	bl	0x10b20	; symbol stub for: _NSLog
0000eb24	addis	r2,r31,__mh_bundle_header
0000eb28	addi	r2,r2,0x5570
0000eb2c	lwz	r0,__mh_bundle_header(r2)
0000eb30	cmpwi	cr7,r0,__mh_bundle_header
0000eb34	bne	cr7,0xec58
0000eb38	addis	r2,r31,__mh_bundle_header
0000eb3c	addi	r2,r2,0x5474
0000eb40	lbz	r0,__mh_bundle_header(r2)
0000eb44	rlwinm	r0,r0,0,24,31
0000eb48	cmpwi	cr7,r0,__mh_bundle_header
0000eb4c	beq	cr7,0xec58
0000eb50	addis	r2,r31,__mh_bundle_header
0000eb54	addi	r0,r2,0x4fb8
0000eb58	or	r3,r0,r0
0000eb5c	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000eb60	or	r0,r3,r3
0000eb64	stw	r0,0x58(r30)
0000eb68	lwz	r0,0x58(r30)
0000eb6c	cmpwi	cr7,r0,__mh_bundle_header
0000eb70	beq	cr7,0xec1c
0000eb74	addis	r2,r31,__mh_bundle_header
0000eb78	addi	r0,r2,0x52e8
0000eb7c	lwz	r3,0x58(r30)
0000eb80	or	r4,r0,r0
0000eb84	li	r5,__mh_bundle_header
0000eb88	li	r6,__mh_bundle_header
0000eb8c	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000eb90	or	r0,r3,r3
0000eb94	stw	r0,0x54(r30)
0000eb98	lwz	r0,0x54(r30)
0000eb9c	cmpwi	cr7,r0,__mh_bundle_header
0000eba0	beq	cr7,0xec1c
0000eba4	lwz	r3,0x54(r30)
0000eba8	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000ebac	or	r0,r3,r3
0000ebb0	stw	r0,0x50(r30)
0000ebb4	lwz	r0,0x50(r30)
0000ebb8	cmpwi	cr7,r0,__mh_bundle_header
0000ebbc	beq	cr7,0xec14
0000ebc0	lwz	r3,0x50(r30)
0000ebc4	li	r4,__mh_bundle_header
0000ebc8	li	r5,__mh_bundle_header
0000ebcc	li	r6,__mh_bundle_header
0000ebd0	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000ebd4	or	r0,r3,r3
0000ebd8	addis	r2,r31,__mh_bundle_header
0000ebdc	addi	r2,r2,0x5570
0000ebe0	stw	r0,__mh_bundle_header(r2)
0000ebe4	addis	r2,r31,__mh_bundle_header
0000ebe8	addi	r2,r2,0x5570
0000ebec	lwz	r0,__mh_bundle_header(r2)
0000ebf0	cmpwi	cr7,r0,__mh_bundle_header
0000ebf4	beq	cr7,0xec0c
0000ebf8	addis	r2,r31,__mh_bundle_header
0000ebfc	addi	r2,r2,0x5570
0000ec00	lwz	r0,__mh_bundle_header(r2)
0000ec04	or	r3,r0,r0
0000ec08	bl	0x102e0	; symbol stub for: _CGImageRetain
0000ec0c	lwz	r3,0x50(r30)
0000ec10	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000ec14	lwz	r3,0x54(r30)
0000ec18	bl	0xff40	; symbol stub for: _CFRelease
0000ec1c	addis	r2,r31,__mh_bundle_header
0000ec20	addi	r2,r2,0x5570
0000ec24	lwz	r0,__mh_bundle_header(r2)
0000ec28	cmpwi	cr7,r0,__mh_bundle_header
0000ec2c	bne	cr7,0xec58
0000ec30	addis	r2,r31,__mh_bundle_header
0000ec34	addi	r2,r2,0x5474
0000ec38	li	r0,__mh_bundle_header
0000ec3c	stb	r0,__mh_bundle_header(r2)
0000ec40	addis	r2,r31,__mh_bundle_header
0000ec44	addi	r0,r2,0x52a8
0000ec48	or	r3,r0,r0
0000ec4c	addis	r2,r31,__mh_bundle_header
0000ec50	addi	r4,r2,0x49b4
0000ec54	bl	0x10b20	; symbol stub for: _NSLog
0000ec58	addis	r2,r31,__mh_bundle_header
0000ec5c	addi	r2,r2,0x5574
0000ec60	lwz	r0,__mh_bundle_header(r2)
0000ec64	cmpwi	cr7,r0,__mh_bundle_header
0000ec68	bne	cr7,0xed8c
0000ec6c	addis	r2,r31,__mh_bundle_header
0000ec70	addi	r2,r2,0x5474
0000ec74	lbz	r0,__mh_bundle_header(r2)
0000ec78	rlwinm	r0,r0,0,24,31
0000ec7c	cmpwi	cr7,r0,__mh_bundle_header
0000ec80	beq	cr7,0xed8c
0000ec84	addis	r2,r31,__mh_bundle_header
0000ec88	addi	r0,r2,0x4fb8
0000ec8c	or	r3,r0,r0
0000ec90	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000ec94	or	r0,r3,r3
0000ec98	stw	r0,0x4c(r30)
0000ec9c	lwz	r0,0x4c(r30)
0000eca0	cmpwi	cr7,r0,__mh_bundle_header
0000eca4	beq	cr7,0xed50
0000eca8	addis	r2,r31,__mh_bundle_header
0000ecac	addi	r0,r2,0x52f8
0000ecb0	lwz	r3,0x4c(r30)
0000ecb4	or	r4,r0,r0
0000ecb8	li	r5,__mh_bundle_header
0000ecbc	li	r6,__mh_bundle_header
0000ecc0	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000ecc4	or	r0,r3,r3
0000ecc8	stw	r0,0x48(r30)
0000eccc	lwz	r0,0x48(r30)
0000ecd0	cmpwi	cr7,r0,__mh_bundle_header
0000ecd4	beq	cr7,0xed50
0000ecd8	lwz	r3,0x48(r30)
0000ecdc	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000ece0	or	r0,r3,r3
0000ece4	stw	r0,0x44(r30)
0000ece8	lwz	r0,0x44(r30)
0000ecec	cmpwi	cr7,r0,__mh_bundle_header
0000ecf0	beq	cr7,0xed48
0000ecf4	lwz	r3,0x44(r30)
0000ecf8	li	r4,__mh_bundle_header
0000ecfc	li	r5,__mh_bundle_header
0000ed00	li	r6,__mh_bundle_header
0000ed04	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000ed08	or	r0,r3,r3
0000ed0c	addis	r2,r31,__mh_bundle_header
0000ed10	addi	r2,r2,0x5574
0000ed14	stw	r0,__mh_bundle_header(r2)
0000ed18	addis	r2,r31,__mh_bundle_header
0000ed1c	addi	r2,r2,0x5574
0000ed20	lwz	r0,__mh_bundle_header(r2)
0000ed24	cmpwi	cr7,r0,__mh_bundle_header
0000ed28	beq	cr7,0xed40
0000ed2c	addis	r2,r31,__mh_bundle_header
0000ed30	addi	r2,r2,0x5574
0000ed34	lwz	r0,__mh_bundle_header(r2)
0000ed38	or	r3,r0,r0
0000ed3c	bl	0x102e0	; symbol stub for: _CGImageRetain
0000ed40	lwz	r3,0x44(r30)
0000ed44	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000ed48	lwz	r3,0x48(r30)
0000ed4c	bl	0xff40	; symbol stub for: _CFRelease
0000ed50	addis	r2,r31,__mh_bundle_header
0000ed54	addi	r2,r2,0x5574
0000ed58	lwz	r0,__mh_bundle_header(r2)
0000ed5c	cmpwi	cr7,r0,__mh_bundle_header
0000ed60	bne	cr7,0xed8c
0000ed64	addis	r2,r31,__mh_bundle_header
0000ed68	addi	r2,r2,0x5474
0000ed6c	li	r0,__mh_bundle_header
0000ed70	stb	r0,__mh_bundle_header(r2)
0000ed74	addis	r2,r31,__mh_bundle_header
0000ed78	addi	r0,r2,0x52a8
0000ed7c	or	r3,r0,r0
0000ed80	addis	r2,r31,__mh_bundle_header
0000ed84	addi	r4,r2,0x49c0
0000ed88	bl	0x10b20	; symbol stub for: _NSLog
0000ed8c	addis	r2,r31,__mh_bundle_header
0000ed90	addi	r2,r2,0x5578
0000ed94	lwz	r0,__mh_bundle_header(r2)
0000ed98	cmpwi	cr7,r0,__mh_bundle_header
0000ed9c	bne	cr7,0xeec0
0000eda0	addis	r2,r31,__mh_bundle_header
0000eda4	addi	r2,r2,0x5474
0000eda8	lbz	r0,__mh_bundle_header(r2)
0000edac	rlwinm	r0,r0,0,24,31
0000edb0	cmpwi	cr7,r0,__mh_bundle_header
0000edb4	beq	cr7,0xeec0
0000edb8	addis	r2,r31,__mh_bundle_header
0000edbc	addi	r0,r2,0x4fb8
0000edc0	or	r3,r0,r0
0000edc4	bl	0xfce0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000edc8	or	r0,r3,r3
0000edcc	stw	r0,0x40(r30)
0000edd0	lwz	r0,0x40(r30)
0000edd4	cmpwi	cr7,r0,__mh_bundle_header
0000edd8	beq	cr7,0xee84
0000eddc	addis	r2,r31,__mh_bundle_header
0000ede0	addi	r0,r2,0x5308
0000ede4	lwz	r3,0x40(r30)
0000ede8	or	r4,r0,r0
0000edec	li	r5,__mh_bundle_header
0000edf0	li	r6,__mh_bundle_header
0000edf4	bl	0xfcc0	; symbol stub for: _CFBundleCopyResourceURL
0000edf8	or	r0,r3,r3
0000edfc	stw	r0,0x3c(r30)
0000ee00	lwz	r0,0x3c(r30)
0000ee04	cmpwi	cr7,r0,__mh_bundle_header
0000ee08	beq	cr7,0xee84
0000ee0c	lwz	r3,0x3c(r30)
0000ee10	bl	0x10240	; symbol stub for: _CGDataProviderCreateWithURL
0000ee14	or	r0,r3,r3
0000ee18	stw	r0,0x38(r30)
0000ee1c	lwz	r0,0x38(r30)
0000ee20	cmpwi	cr7,r0,__mh_bundle_header
0000ee24	beq	cr7,0xee7c
0000ee28	lwz	r3,0x38(r30)
0000ee2c	li	r4,__mh_bundle_header
0000ee30	li	r5,__mh_bundle_header
0000ee34	li	r6,__mh_bundle_header
0000ee38	bl	0x10280	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000ee3c	or	r0,r3,r3
0000ee40	addis	r2,r31,__mh_bundle_header
0000ee44	addi	r2,r2,0x5578
0000ee48	stw	r0,__mh_bundle_header(r2)
0000ee4c	addis	r2,r31,__mh_bundle_header
0000ee50	addi	r2,r2,0x5578
0000ee54	lwz	r0,__mh_bundle_header(r2)
0000ee58	cmpwi	cr7,r0,__mh_bundle_header
0000ee5c	beq	cr7,0xee74
0000ee60	addis	r2,r31,__mh_bundle_header
0000ee64	addi	r2,r2,0x5578
0000ee68	lwz	r0,__mh_bundle_header(r2)
0000ee6c	or	r3,r0,r0
0000ee70	bl	0x102e0	; symbol stub for: _CGImageRetain
0000ee74	lwz	r3,0x38(r30)
0000ee78	bl	0x10260	; symbol stub for: _CGDataProviderRelease
0000ee7c	lwz	r3,0x3c(r30)
0000ee80	bl	0xff40	; symbol stub for: _CFRelease
0000ee84	addis	r2,r31,__mh_bundle_header
0000ee88	addi	r2,r2,0x5578
0000ee8c	lwz	r0,__mh_bundle_header(r2)
0000ee90	cmpwi	cr7,r0,__mh_bundle_header
0000ee94	bne	cr7,0xeec0
0000ee98	addis	r2,r31,__mh_bundle_header
0000ee9c	addi	r2,r2,0x5474
0000eea0	li	r0,__mh_bundle_header
0000eea4	stb	r0,__mh_bundle_header(r2)
0000eea8	addis	r2,r31,__mh_bundle_header
0000eeac	addi	r0,r2,0x52a8
0000eeb0	or	r3,r0,r0
0000eeb4	addis	r2,r31,__mh_bundle_header
0000eeb8	addi	r4,r2,0x49d8
0000eebc	bl	0x10b20	; symbol stub for: _NSLog
0000eec0	addis	r2,r31,__mh_bundle_header
0000eec4	addi	r2,r2,0x557c
0000eec8	li	r0,0x5
0000eecc	sth	r0,__mh_bundle_header(r2)
0000eed0	lwz	r1,__mh_bundle_header(r1)
0000eed4	lwz	r0,0x8(r1)
0000eed8	mtspr	lr,r0
0000eedc	lmw	r30,0xfff8(r1)
0000eee0	blr
_InstallDropboxToolbarDelegate:
0000eee4	mfspr	r0,lr
0000eee8	stmw	r30,0xfff8(r1)
0000eeec	stw	r0,0x8(r1)
0000eef0	stwu	r1,0xffb0(r1)
0000eef4	or	r30,r1,r1
0000eef8	bcl	20,31,0xeefc
0000eefc	mfspr	r31,lr
0000ef00	addis	r2,r31,__mh_bundle_header
0000ef04	addi	r2,r2,0x4b70
0000ef08	lwz	r0,__mh_bundle_header(r2)
0000ef0c	cmpwi	cr7,r0,__mh_bundle_header
0000ef10	beq	cr7,0xef70
0000ef14	addis	r2,r31,__mh_bundle_header
0000ef18	addi	r2,r2,0x4b70
0000ef1c	lwz	r0,__mh_bundle_header(r2)
0000ef20	or	r3,r0,r0
0000ef24	bl	0x10920	; symbol stub for: _HIToolbarGetDelegate
0000ef28	or	r0,r3,r3
0000ef2c	or	r3,r0,r0
0000ef30	bl	0x10880	; symbol stub for: _HIObjectGetEventTarget
0000ef34	or	r9,r3,r3
0000ef38	addis	r2,r31,__mh_bundle_header
0000ef3c	addi	r2,r2,0x4a0c
0000ef40	lwz	r0,__mh_bundle_header(r2)
0000ef44	or	r3,r9,r9
0000ef48	or	r4,r0,r0
0000ef4c	li	r5,0x6
0000ef50	addis	r2,r31,__mh_bundle_header
0000ef54	addi	r6,r2,0x2804
0000ef58	li	r7,__mh_bundle_header
0000ef5c	li	r8,__mh_bundle_header
0000ef60	bl	0x10aa0	; symbol stub for: _InstallEventHandler
0000ef64	or	r0,r3,r3
0000ef68	stw	r0,0x38(r30)
0000ef6c	b	0xef78
0000ef70	li	r0,0xd96e
0000ef74	stw	r0,0x38(r30)
0000ef78	lwz	r0,0x38(r30)
0000ef7c	or	r3,r0,r0
0000ef80	lwz	r1,__mh_bundle_header(r1)
0000ef84	lwz	r0,0x8(r1)
0000ef88	mtspr	lr,r0
0000ef8c	lmw	r30,0xfff8(r1)
0000ef90	blr
_HuntForToolbar:
0000ef94	mfspr	r0,lr
0000ef98	stmw	r30,0xfff8(r1)
0000ef9c	stw	r0,0x8(r1)
0000efa0	stwu	r1,0xffa0(r1)
0000efa4	or	r30,r1,r1
0000efa8	bcl	20,31,0xefac
0000efac	mfspr	r31,lr
0000efb0	li	r0,__mh_bundle_header
0000efb4	stw	r0,0x3c(r30)
0000efb8	bl	0x107e0	; symbol stub for: _GetWindowList
0000efbc	or	r0,r3,r3
0000efc0	stw	r0,0x38(r30)
0000efc4	b	0xf04c
0000efc8	addi	r0,r30,0x44
0000efcc	lwz	r3,0x38(r30)
0000efd0	or	r4,r0,r0
0000efd4	bl	0x103e0	; symbol stub for: _CopyWindowTitleAsCFString
0000efd8	addi	r0,r30,0x3c
0000efdc	lwz	r3,0x38(r30)
0000efe0	or	r4,r0,r0
0000efe4	bl	0x10800	; symbol stub for: _GetWindowToolbar
0000efe8	lwz	r0,0x3c(r30)
0000efec	cmpwi	cr7,r0,__mh_bundle_header
0000eff0	beq	cr7,0xf03c
0000eff4	lwz	r0,0x3c(r30)
0000eff8	addi	r2,r30,0x40
0000effc	or	r3,r0,r0
0000f000	or	r4,r2,r2
0000f004	bl	0x108c0	; symbol stub for: _HIToolbarCopyIdentifier
0000f008	addis	r2,r31,__mh_bundle_header
0000f00c	addi	r2,r2,0x492c
0000f010	lwz	r0,__mh_bundle_header(r2)
0000f014	lwz	r2,0x40(r30)
0000f018	or	r3,r0,r0
0000f01c	or	r4,r2,r2
0000f020	li	r5,0x4
0000f024	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f028	or	r0,r3,r3
0000f02c	cmpwi	cr7,r0,__mh_bundle_header
0000f030	beq	cr7,0xf03c
0000f034	li	r0,__mh_bundle_header
0000f038	stw	r0,0x3c(r30)
0000f03c	lwz	r3,0x38(r30)
0000f040	bl	0x10780	; symbol stub for: _GetNextWindow
0000f044	or	r0,r3,r3
0000f048	stw	r0,0x38(r30)
0000f04c	lwz	r0,0x3c(r30)
0000f050	cmpwi	cr7,r0,__mh_bundle_header
0000f054	bne	cr7,0xf06c
0000f058	lwz	r3,0x38(r30)
0000f05c	bl	0x10b00	; symbol stub for: _IsValidWindowPtr
0000f060	or	r0,r3,r3
0000f064	cmpwi	cr7,r0,__mh_bundle_header
0000f068	bne	cr7,0xefc8
0000f06c	lwz	r0,0x3c(r30)
0000f070	cmpwi	cr7,r0,__mh_bundle_header
0000f074	beq	cr7,0xf0c0
0000f078	addis	r2,r31,__mh_bundle_header
0000f07c	addi	r2,r2,0x4ac0
0000f080	lwz	r2,__mh_bundle_header(r2)
0000f084	lwz	r0,0x3c(r30)
0000f088	cmpw	cr7,r2,r0
0000f08c	beq	cr7,0xf0c0
0000f090	lwz	r0,0x3c(r30)
0000f094	addis	r2,r31,__mh_bundle_header
0000f098	addi	r2,r2,0x4ac0
0000f09c	stw	r0,__mh_bundle_header(r2)
0000f0a0	bl	_InstallDropboxToolbarDelegate
0000f0a4	or	r0,r3,r3
0000f0a8	cmpwi	cr7,r0,__mh_bundle_header
0000f0ac	beq	cr7,0xf0c0
0000f0b0	addis	r2,r31,__mh_bundle_header
0000f0b4	addi	r0,r2,0x4854
0000f0b8	or	r3,r0,r0
0000f0bc	bl	_DBLog
0000f0c0	lwz	r1,__mh_bundle_header(r1)
0000f0c4	lwz	r0,0x8(r1)
0000f0c8	mtspr	lr,r0
0000f0cc	lmw	r30,0xfff8(r1)
0000f0d0	blr
_InsertDropboxToolbarItem:
0000f0d4	mfspr	r0,lr
0000f0d8	stmw	r30,0xfff8(r1)
0000f0dc	stw	r0,0x8(r1)
0000f0e0	stwu	r1,0xff70(r1)
0000f0e4	or	r30,r1,r1
0000f0e8	bcl	20,31,0xf0ec
0000f0ec	mfspr	r31,lr
0000f0f0	bl	_HuntForToolbar
0000f0f4	addis	r2,r31,__mh_bundle_header
0000f0f8	addi	r2,r2,0x4980
0000f0fc	lwz	r0,__mh_bundle_header(r2)
0000f100	cmpwi	cr7,r0,__mh_bundle_header
0000f104	bne	cr7,0xf11c
0000f108	addis	r2,r31,__mh_bundle_header
0000f10c	addi	r0,r2,0x4724
0000f110	or	r3,r0,r0
0000f114	bl	_DBLog
0000f118	b	0xf528
0000f11c	bl	_get_insertion_index
0000f120	or	r0,r3,r3
0000f124	stw	r0,0x5c(r30)
0000f128	addis	r2,r31,__mh_bundle_header
0000f12c	addi	r0,r2,0x4734
0000f130	or	r3,r0,r0
0000f134	lwz	r4,0x5c(r30)
0000f138	bl	_DBLog
0000f13c	lwz	r2,0x5c(r30)
0000f140	li	r0,0xfffe
0000f144	cmpw	cr7,r2,r0
0000f148	beq	cr7,0xf528
0000f14c	addis	r2,r31,__mh_bundle_header
0000f150	addi	r2,r2,0x4980
0000f154	lwz	r0,__mh_bundle_header(r2)
0000f158	addi	r2,r30,0x60
0000f15c	or	r3,r0,r0
0000f160	or	r4,r2,r2
0000f164	bl	0x108e0	; symbol stub for: _HIToolbarCopyItems
0000f168	li	r0,0xffff
0000f16c	stw	r0,0x54(r30)
0000f170	li	r0,0xffff
0000f174	stw	r0,0x50(r30)
0000f178	li	r0,0xffff
0000f17c	stw	r0,0x4c(r30)
0000f180	li	r0,0xffff
0000f184	stw	r0,0x48(r30)
0000f188	li	r0,__mh_bundle_header
0000f18c	stb	r0,0x44(r30)
0000f190	li	r0,__mh_bundle_header
0000f194	stw	r0,0x58(r30)
0000f198	b	0xf340
0000f19c	lwz	r0,0x60(r30)
0000f1a0	or	r3,r0,r0
0000f1a4	lwz	r4,0x58(r30)
0000f1a8	bl	0xfc40	; symbol stub for: _CFArrayGetValueAtIndex
0000f1ac	or	r0,r3,r3
0000f1b0	stw	r0,0x64(r30)
0000f1b4	lwz	r0,0x64(r30)
0000f1b8	or	r3,r0,r0
0000f1bc	bl	0xff60	; symbol stub for: _CFRetain
0000f1c0	lwz	r0,0x64(r30)
0000f1c4	addi	r2,r30,0x68
0000f1c8	or	r3,r0,r0
0000f1cc	or	r4,r2,r2
0000f1d0	bl	0x10960	; symbol stub for: _HIToolbarItemCopyIdentifier
0000f1d4	addis	r2,r31,__mh_bundle_header
0000f1d8	addi	r0,r2,0x4744
0000f1dc	lwz	r2,0x68(r30)
0000f1e0	or	r3,r0,r0
0000f1e4	or	r4,r2,r2
0000f1e8	li	r5,0x4
0000f1ec	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f1f0	or	r0,r3,r3
0000f1f4	cmpwi	cr7,r0,__mh_bundle_header
0000f1f8	bne	cr7,0xf220
0000f1fc	lbz	r0,0x44(r30)
0000f200	rlwinm	r0,r0,0,24,31
0000f204	cmpwi	cr7,r0,__mh_bundle_header
0000f208	bne	cr7,0xf31c
0000f20c	lwz	r0,0x58(r30)
0000f210	stw	r0,0x48(r30)
0000f214	li	r0,0x1
0000f218	stb	r0,0x44(r30)
0000f21c	b	0xf31c
0000f220	li	r0,__mh_bundle_header
0000f224	stb	r0,0x44(r30)
0000f228	addis	r2,r31,__mh_bundle_header
0000f22c	addi	r2,r2,0x47f0
0000f230	lwz	r0,__mh_bundle_header(r2)
0000f234	lwz	r2,0x68(r30)
0000f238	or	r3,r0,r0
0000f23c	or	r4,r2,r2
0000f240	li	r5,0x4
0000f244	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f248	or	r0,r3,r3
0000f24c	cmpwi	cr7,r0,__mh_bundle_header
0000f250	bne	cr7,0xf260
0000f254	lwz	r0,0x58(r30)
0000f258	stw	r0,0x50(r30)
0000f25c	b	0xf31c
0000f260	addis	r2,r31,__mh_bundle_header
0000f264	addi	r0,r2,0x4754
0000f268	lwz	r2,0x68(r30)
0000f26c	or	r3,r0,r0
0000f270	or	r4,r2,r2
0000f274	li	r5,0x4
0000f278	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f27c	or	r0,r3,r3
0000f280	cmpwi	cr7,r0,__mh_bundle_header
0000f284	bne	cr7,0xf31c
0000f288	lwz	r0,0x4c(r30)
0000f28c	li	r2,0xffff
0000f290	cmpw	cr7,r0,r2
0000f294	bne	cr7,0xf2a4
0000f298	lwz	r0,0x58(r30)
0000f29c	stw	r0,0x4c(r30)
0000f2a0	b	0xf31c
0000f2a4	addis	r2,r31,__mh_bundle_header
0000f2a8	addi	r0,r2,_DropboxSetMenuItemTextWithCFString
0000f2ac	lwz	r2,0x68(r30)
0000f2b0	or	r3,r0,r0
0000f2b4	or	r4,r2,r2
0000f2b8	li	r5,0x4
0000f2bc	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f2c0	or	r0,r3,r3
0000f2c4	cmpwi	cr7,r0,__mh_bundle_header
0000f2c8	bne	cr7,0xf31c
0000f2cc	lwz	r0,0x4c(r30)
0000f2d0	li	r2,0xffff
0000f2d4	cmpw	cr7,r0,r2
0000f2d8	bne	cr7,0xf2e8
0000f2dc	lwz	r0,0x58(r30)
0000f2e0	stw	r0,0x4c(r30)
0000f2e4	b	0xf31c
0000f2e8	addis	r2,r31,__mh_bundle_header
0000f2ec	addi	r2,r2,0x47f8
0000f2f0	lwz	r0,__mh_bundle_header(r2)
0000f2f4	lwz	r2,0x68(r30)
0000f2f8	or	r3,r0,r0
0000f2fc	or	r4,r2,r2
0000f300	li	r5,0x4
0000f304	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f308	or	r0,r3,r3
0000f30c	cmpwi	cr7,r0,__mh_bundle_header
0000f310	bne	cr7,0xf31c
0000f314	lwz	r0,0x58(r30)
0000f318	stw	r0,0x54(r30)
0000f31c	lwz	r0,0x64(r30)
0000f320	or	r3,r0,r0
0000f324	bl	0xff40	; symbol stub for: _CFRelease
0000f328	lwz	r0,0x68(r30)
0000f32c	or	r3,r0,r0
0000f330	bl	0xff40	; symbol stub for: _CFRelease
0000f334	lwz	r2,0x58(r30)
0000f338	addi	r0,r2,0x1
0000f33c	stw	r0,0x58(r30)
0000f340	lwz	r0,0x60(r30)
0000f344	or	r3,r0,r0
0000f348	bl	0xfc20	; symbol stub for: _CFArrayGetCount
0000f34c	or	r2,r3,r3
0000f350	lwz	r0,0x58(r30)
0000f354	cmpw	cr7,r2,r0
0000f358	bgt	cr7,0xf19c
0000f35c	lwz	r0,0x60(r30)
0000f360	or	r3,r0,r0
0000f364	bl	0xff40	; symbol stub for: _CFRelease
0000f368	lwz	r2,0x54(r30)
0000f36c	li	r0,0xffff
0000f370	cmpw	cr7,r2,r0
0000f374	ble	cr7,0xf384
0000f378	li	r0,0xffff
0000f37c	stw	r0,0x58(r30)
0000f380	b	0xf3f8
0000f384	lwz	r0,0x5c(r30)
0000f388	li	r2,0xffff
0000f38c	cmpw	cr7,r0,r2
0000f390	ble	cr7,0xf3a0
0000f394	lwz	r0,0x5c(r30)
0000f398	stw	r0,0x58(r30)
0000f39c	b	0xf3f8
0000f3a0	lwz	r0,0x50(r30)
0000f3a4	li	r2,0xffff
0000f3a8	cmpw	cr7,r0,r2
0000f3ac	ble	cr7,0xf3c0
0000f3b0	lwz	r2,0x50(r30)
0000f3b4	addi	r0,r2,0x1
0000f3b8	stw	r0,0x58(r30)
0000f3bc	b	0xf3f8
0000f3c0	lwz	r0,0x48(r30)
0000f3c4	li	r2,0xffff
0000f3c8	cmpw	cr7,r0,r2
0000f3cc	ble	cr7,0xf3dc
0000f3d0	lwz	r0,0x48(r30)
0000f3d4	stw	r0,0x58(r30)
0000f3d8	b	0xf3f8
0000f3dc	lwz	r0,0x4c(r30)
0000f3e0	li	r2,0xffff
0000f3e4	cmpw	cr7,r0,r2
0000f3e8	ble	cr7,0xf3f8
0000f3ec	lwz	r2,0x4c(r30)
0000f3f0	addi	r0,r2,0x1
0000f3f4	stw	r0,0x58(r30)
0000f3f8	lwz	r0,0x58(r30)
0000f3fc	li	r2,0xffff
0000f400	cmpw	cr7,r0,r2
0000f404	ble	cr7,0xf528
0000f408	addis	r2,r31,__mh_bundle_header
0000f40c	addi	r2,r2,0x4980
0000f410	lwz	r9,__mh_bundle_header(r2)
0000f414	addis	r2,r31,__mh_bundle_header
0000f418	addi	r2,r2,0x47f8
0000f41c	lwz	r0,__mh_bundle_header(r2)
0000f420	addi	r2,r30,0x64
0000f424	or	r3,r9,r9
0000f428	or	r4,r0,r0
0000f42c	li	r5,__mh_bundle_header
0000f430	or	r6,r2,r2
0000f434	bl	0x10900	; symbol stub for: _HIToolbarCreateItemWithIdentifier
0000f438	or	r0,r3,r3
0000f43c	stw	r0,0x40(r30)
0000f440	lwz	r0,0x40(r30)
0000f444	stw	r0,0x3c(r30)
0000f448	lwz	r0,0x3c(r30)
0000f44c	srawi	r2,r0,31
0000f450	xor	r0,r2,r0
0000f454	subf	r0,r2,r0
0000f458	neg	r0,r0
0000f45c	rlwinm	r0,r0,1,31,31
0000f460	cmpwi	cr7,r0,__mh_bundle_header
0000f464	beq	cr7,0xf49c
0000f468	lwz	r0,0x3c(r30)
0000f46c	lis	r3,0x3f2a
0000f470	ori	r3,r3,0x3f2a
0000f474	li	r4,__mh_bundle_header
0000f478	addis	r2,r31,__mh_bundle_header
0000f47c	addi	r5,r2,0x2bac
0000f480	li	r6,__mh_bundle_header
0000f484	li	r7,__mh_bundle_header
0000f488	addis	r2,r31,__mh_bundle_header
0000f48c	addi	r8,r2,0x3900
0000f490	li	r9,0x452
0000f494	or	r10,r0,r0
0000f498	bl	0x10480	; symbol stub for: _DebugAssert
0000f49c	addis	r2,r31,__mh_bundle_header
0000f4a0	addi	r2,r2,0x4980
0000f4a4	lwz	r0,__mh_bundle_header(r2)
0000f4a8	lwz	r2,0x64(r30)
0000f4ac	or	r3,r0,r0
0000f4b0	or	r4,r2,r2
0000f4b4	lwz	r5,0x58(r30)
0000f4b8	bl	0x10940	; symbol stub for: _HIToolbarInsertItemAtIndex
0000f4bc	or	r0,r3,r3
0000f4c0	stw	r0,0x40(r30)
0000f4c4	lwz	r3,0x58(r30)
0000f4c8	bl	_store_insertion_index
0000f4cc	lwz	r0,0x40(r30)
0000f4d0	stw	r0,0x38(r30)
0000f4d4	lwz	r0,0x38(r30)
0000f4d8	srawi	r2,r0,31
0000f4dc	xor	r0,r2,r0
0000f4e0	subf	r0,r2,r0
0000f4e4	neg	r0,r0
0000f4e8	rlwinm	r0,r0,1,31,31
0000f4ec	cmpwi	cr7,r0,__mh_bundle_header
0000f4f0	beq	cr7,0xf528
0000f4f4	lwz	r0,0x38(r30)
0000f4f8	lis	r3,0x3f2a
0000f4fc	ori	r3,r3,0x3f2a
0000f500	li	r4,__mh_bundle_header
0000f504	addis	r2,r31,__mh_bundle_header
0000f508	addi	r5,r2,0x2bac
0000f50c	li	r6,__mh_bundle_header
0000f510	li	r7,__mh_bundle_header
0000f514	addis	r2,r31,__mh_bundle_header
0000f518	addi	r8,r2,0x3900
0000f51c	li	r9,0x45c
0000f520	or	r10,r0,r0
0000f524	bl	0x10480	; symbol stub for: _DebugAssert
0000f528	lwz	r1,__mh_bundle_header(r1)
0000f52c	lwz	r0,0x8(r1)
0000f530	mtspr	lr,r0
0000f534	lmw	r30,0xfff8(r1)
0000f538	blr
_OrbitalMindControlLaser:
0000f53c	mfspr	r0,lr
0000f540	stmw	r30,0xfff8(r1)
0000f544	stw	r0,0x8(r1)
0000f548	stwu	r1,0xffb0(r1)
0000f54c	or	r30,r1,r1
0000f550	stw	r3,0x68(r30)
0000f554	stw	r4,0x6c(r30)
0000f558	bl	_InsertDropboxToolbarItem
0000f55c	lwz	r1,__mh_bundle_header(r1)
0000f560	lwz	r0,0x8(r1)
0000f564	mtspr	lr,r0
0000f568	lmw	r30,0xfff8(r1)
0000f56c	blr
_DropboxHIToolbarCreateItemWithIdentifier:
0000f570	mfspr	r0,lr
0000f574	stmw	r30,0xfff8(r1)
0000f578	stw	r0,0x8(r1)
0000f57c	stwu	r1,0xffa0(r1)
0000f580	or	r30,r1,r1
0000f584	bcl	20,31,0xf588
0000f588	mfspr	r31,lr
0000f58c	stw	r3,0x78(r30)
0000f590	stw	r4,0x7c(r30)
0000f594	stw	r5,0x80(r30)
0000f598	stw	r6,0x84(r30)
0000f59c	addis	r2,r31,__mh_bundle_header
0000f5a0	addi	r2,r2,0x44f0
0000f5a4	lwz	r0,__mh_bundle_header(r2)
0000f5a8	lwz	r3,0x78(r30)
0000f5ac	lwz	r4,0x7c(r30)
0000f5b0	lwz	r5,0x80(r30)
0000f5b4	lwz	r6,0x84(r30)
0000f5b8	or	r12,r0,r0
0000f5bc	mtspr	ctr,r12
0000f5c0	bctrl
0000f5c4	or	r0,r3,r3
0000f5c8	stw	r0,0x38(r30)
0000f5cc	addi	r0,r30,0x3c
0000f5d0	lwz	r3,0x78(r30)
0000f5d4	or	r4,r0,r0
0000f5d8	bl	0x108c0	; symbol stub for: _HIToolbarCopyIdentifier
0000f5dc	or	r0,r3,r3
0000f5e0	cmpwi	cr7,r0,__mh_bundle_header
0000f5e4	bne	cr7,0xf6f8
0000f5e8	addis	r2,r31,__mh_bundle_header
0000f5ec	addi	r2,r2,0x4350
0000f5f0	lwz	r0,__mh_bundle_header(r2)
0000f5f4	lwz	r2,0x3c(r30)
0000f5f8	or	r3,r0,r0
0000f5fc	or	r4,r2,r2
0000f600	li	r5,0x4
0000f604	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f608	or	r0,r3,r3
0000f60c	cmpwi	cr7,r0,__mh_bundle_header
0000f610	bne	cr7,0xf6ec
0000f614	addis	r2,r31,__mh_bundle_header
0000f618	addi	r2,r2,0x44e4
0000f61c	lwz	r2,__mh_bundle_header(r2)
0000f620	lwz	r0,0x78(r30)
0000f624	cmpw	cr7,r2,r0
0000f628	beq	cr7,0xf640
0000f62c	addis	r2,r31,__mh_bundle_header
0000f630	addi	r2,r2,0x44e4
0000f634	lwz	r0,0x78(r30)
0000f638	stw	r0,__mh_bundle_header(r2)
0000f63c	bl	_InstallDropboxToolbarDelegate
0000f640	addis	r2,r31,__mh_bundle_header
0000f644	addi	r2,r2,0x435c
0000f648	lwz	r0,__mh_bundle_header(r2)
0000f64c	or	r3,r0,r0
0000f650	lwz	r4,0x7c(r30)
0000f654	li	r5,0x4
0000f658	bl	0xffa0	; symbol stub for: _CFStringCompare
0000f65c	or	r0,r3,r3
0000f660	cmpwi	cr7,r0,__mh_bundle_header
0000f664	beq	cr7,0xf6ec
0000f668	addis	r2,r31,__mh_bundle_header
0000f66c	addi	r2,r2,0x44e0
0000f670	lwz	r0,__mh_bundle_header(r2)
0000f674	cmpwi	cr7,r0,__mh_bundle_header
0000f678	beq	cr7,0xf6a0
0000f67c	addis	r2,r31,__mh_bundle_header
0000f680	addi	r2,r2,0x44e0
0000f684	lwz	r0,__mh_bundle_header(r2)
0000f688	or	r3,r0,r0
0000f68c	bl	0x10c80	; symbol stub for: _RemoveEventLoopTimer
0000f690	addis	r2,r31,__mh_bundle_header
0000f694	addi	r2,r2,0x44e0
0000f698	li	r0,__mh_bundle_header
0000f69c	stw	r0,__mh_bundle_header(r2)
0000f6a0	bl	0x106c0	; symbol stub for: _GetMainEventLoop
0000f6a4	or	r0,r3,r3
0000f6a8	addis	r2,r31,__mh_bundle_header
0000f6ac	addi	r2,r2,0x4384
0000f6b0	lwz	r9,__mh_bundle_header(r2)
0000f6b4	addis	r2,r31,__mh_bundle_header
0000f6b8	addi	r2,r2,0x21f8
0000f6bc	lfd	f13,__mh_bundle_header(r2)
0000f6c0	addis	r2,r31,__mh_bundle_header
0000f6c4	addi	r2,r2,0x2148
0000f6c8	lfd	f0,__mh_bundle_header(r2)
0000f6cc	or	r3,r0,r0
0000f6d0	fmr	f1,f13
0000f6d4	fmr	f2,f0
0000f6d8	or	r8,r9,r9
0000f6dc	li	r9,__mh_bundle_header
0000f6e0	addis	r2,r31,__mh_bundle_header
0000f6e4	addi	r10,r2,0x44e0
0000f6e8	bl	0x10ac0	; symbol stub for: _InstallEventLoopTimer
0000f6ec	lwz	r0,0x3c(r30)
0000f6f0	or	r3,r0,r0
0000f6f4	bl	0xff40	; symbol stub for: _CFRelease
0000f6f8	lwz	r0,0x38(r30)
0000f6fc	or	r3,r0,r0
0000f700	lwz	r1,__mh_bundle_header(r1)
0000f704	lwz	r0,0x8(r1)
0000f708	mtspr	lr,r0
0000f70c	lmw	r30,0xfff8(r1)
0000f710	blr
_InitDropboxToolbarIntegration:
0000f714	mfspr	r0,lr
0000f718	stmw	r30,0xfff8(r1)
0000f71c	stw	r0,0x8(r1)
0000f720	stwu	r1,0xffa0(r1)
0000f724	or	r30,r1,r1
0000f728	bcl	20,31,0xf72c
0000f72c	mfspr	r31,lr
0000f730	bl	_LoadToolbarButtonImages
0000f734	addis	r2,r31,__mh_bundle_header
0000f738	addi	r2,r2,0x4230
0000f73c	lbz	r0,__mh_bundle_header(r2)
0000f740	rlwinm	r0,r0,0,24,31
0000f744	cmpwi	cr7,r0,__mh_bundle_header
0000f748	beq	cr7,0xf8b4
0000f74c	bl	_RegisterDropboxToolbarItemClass
0000f750	or	r0,r3,r3
0000f754	stw	r0,0x40(r30)
0000f758	lwz	r0,0x40(r30)
0000f75c	stw	r0,0x3c(r30)
0000f760	lwz	r0,0x3c(r30)
0000f764	srawi	r2,r0,31
0000f768	xor	r0,r2,r0
0000f76c	subf	r0,r2,r0
0000f770	neg	r0,r0
0000f774	rlwinm	r0,r0,1,31,31
0000f778	cmpwi	cr7,r0,__mh_bundle_header
0000f77c	beq	cr7,0xf7b4
0000f780	lwz	r0,0x3c(r30)
0000f784	lis	r3,0x3f2a
0000f788	ori	r3,r3,0x3f2a
0000f78c	li	r4,__mh_bundle_header
0000f790	addis	r2,r31,__mh_bundle_header
0000f794	addi	r5,r2,0x256c
0000f798	li	r6,__mh_bundle_header
0000f79c	li	r7,__mh_bundle_header
0000f7a0	addis	r2,r31,__mh_bundle_header
0000f7a4	addi	r8,r2,0x32c0
0000f7a8	li	r9,0x499
0000f7ac	or	r10,r0,r0
0000f7b0	bl	0x10480	; symbol stub for: _DebugAssert
0000f7b4	addis	r2,r31,__mh_bundle_header
0000f7b8	addi	r2,r2,0x422c
0000f7bc	lhz	r0,__mh_bundle_header(r2)
0000f7c0	extsh	r0,r0
0000f7c4	or	r3,r0,r0
0000f7c8	li	r4,__mh_bundle_header
0000f7cc	addis	r2,r31,__mh_bundle_header
0000f7d0	addi	r5,r2,0x4344
0000f7d4	bl	0x10440	; symbol stub for: _CreateNewMenu
0000f7d8	bl	0x105e0	; symbol stub for: _GetApplicationEventTarget
0000f7dc	or	r9,r3,r3
0000f7e0	addis	r2,r31,__mh_bundle_header
0000f7e4	addi	r2,r2,0x41d0
0000f7e8	lwz	r0,__mh_bundle_header(r2)
0000f7ec	or	r3,r9,r9
0000f7f0	or	r4,r0,r0
0000f7f4	li	r5,0x2
0000f7f8	addis	r2,r31,__mh_bundle_header
0000f7fc	addi	r6,r2,0x203c
0000f800	li	r7,__mh_bundle_header
0000f804	li	r8,__mh_bundle_header
0000f808	bl	0x10aa0	; symbol stub for: _InstallEventHandler
0000f80c	bl	0x106c0	; symbol stub for: _GetMainEventLoop
0000f810	or	r9,r3,r3
0000f814	addis	r2,r31,__mh_bundle_header
0000f818	addi	r2,r2,0x41e0
0000f81c	lwz	r11,__mh_bundle_header(r2)
0000f820	addis	r2,r31,__mh_bundle_header
0000f824	addi	r2,r2,0x1fa4
0000f828	lfd	f13,__mh_bundle_header(r2)
0000f82c	addis	r2,r31,__mh_bundle_header
0000f830	addi	r2,r2,0x1fa4
0000f834	lfd	f0,__mh_bundle_header(r2)
0000f838	addi	r0,r30,0x44
0000f83c	or	r3,r9,r9
0000f840	fmr	f1,f13
0000f844	fmr	f2,f0
0000f848	or	r8,r11,r11
0000f84c	li	r9,__mh_bundle_header
0000f850	or	r10,r0,r0
0000f854	bl	0x10ac0	; symbol stub for: _InstallEventLoopTimer
0000f858	addis	r2,r31,__mh_bundle_header
0000f85c	addi	r2,r2,0x434c
0000f860	lwz	r0,__mh_bundle_header(r2)
0000f864	cmpwi	cr7,r0,__mh_bundle_header
0000f868	bne	cr7,0xf8b4
0000f86c	addis	r2,r31,__mh_bundle_header
0000f870	addi	r0,r2,0x434c
0000f874	addis	r2,r31,__mh_bundle_header
0000f878	addi	r3,r2,0x387c
0000f87c	li	r4,__mh_bundle_header
0000f880	addis	r2,r31,__mh_bundle_header
0000f884	addi	r5,r2,0xfe44
0000f888	or	r6,r0,r0
0000f88c	bl	_mach_override
0000f890	or	r0,r3,r3
0000f894	stw	r0,0x38(r30)
0000f898	lwz	r0,0x38(r30)
0000f89c	cmpwi	cr7,r0,__mh_bundle_header
0000f8a0	beq	cr7,0xf8b4
0000f8a4	addis	r2,r31,__mh_bundle_header
0000f8a8	addi	r0,r2,0x4134
0000f8ac	or	r3,r0,r0
0000f8b0	bl	0x10b20	; symbol stub for: _NSLog
0000f8b4	lwz	r1,__mh_bundle_header(r1)
0000f8b8	lwz	r0,0x8(r1)
0000f8bc	mtspr	lr,r0
0000f8c0	lmw	r30,0xfff8(r1)
0000f8c4	blr
0000f8c8	nop
0000f8cc	nop
___eprintf:
0000f8d0	mfspr	r0,lr
0000f8d4	or	r9,r3,r3
0000f8d8	or	r2,r5,r5
0000f8dc	stmw	r29,0xfff4(r1)
0000f8e0	bcl	20,31,0xf8e4
0000f8e4	stw	r0,0x8(r1)
0000f8e8	stwu	r1,0xffb0(r1)
0000f8ec	or	r0,r4,r4
0000f8f0	mfspr	r31,lr
0000f8f4	or	r7,r6,r6
0000f8f8	or	r4,r9,r9
0000f8fc	or	r5,r0,r0
0000f900	addis	r29,r31,__mh_bundle_header
0000f904	or	r6,r2,r2
0000f908	lwz	r29,0x3764(r29)
0000f90c	lwz	r3,__mh_bundle_header(r29)
0000f910	bl	0x11020	; symbol stub for: _fprintf
0000f914	lwz	r3,__mh_bundle_header(r29)
0000f918	bl	0x10fc0	; symbol stub for: _fflush
0000f91c	bl	0x10de0	; symbol stub for: _abort
/Users/ericgallager/Library Inspector Output/Dropbox/DropboxPlugin.plugin/Contents/MacOS/DropboxPlugin (architecture i386):
(__TEXT,__text) section
dyld_stub_binding_helper:
000010e0	subl	$0x08,%esp
000010e3	pushl	%eax
000010e4	pushl	%ecx
000010e5	calll	0x000010ea
000010ea	popl	%eax
000010eb	movl	0x0000e396(%eax),%ecx
000010f1	movl	%ecx,0x0c(%esp)
000010f5	movl	0x0000df16(%eax),%ecx
000010fb	movl	%ecx,0x08(%esp)
000010ff	popl	%ecx
00001100	popl	%eax
00001101	ret
00001102	nop
__dyld_func_lookup:
00001104	calll	0x00001109
00001109	popl	%eax
0000110a	movl	0x0000defb(%eax),%eax
00001110	jmp	*%eax
_reconnect:
00001112	pushl	%ebp
00001113	movl	%esp,%ebp
00001115	pushl	%esi
00001116	pushl	%ebx
00001117	subl	$0x00000470,%esp
0000111d	calll	0x00001122
00001122	popl	%ebx
00001123	movl	$0x00000010,0x04(%esp)
0000112b	leal	0xe0(%ebp),%eax
0000112e	movl	%eax,(%esp)
00001131	calll	0x000113c4	; symbol stub for: _bzero
00001136	leal	0x0000e3fe(%ebx),%eax
0000113c	movl	(%eax),%eax
0000113e	testl	%eax,%eax
00001140	js	0x0000115e
00001142	leal	0x0000e3fe(%ebx),%eax
00001148	movl	(%eax),%eax
0000114a	movl	%eax,(%esp)
0000114d	calll	0x000113e7	; symbol stub for: _close
00001152	leal	0x0000e3fe(%ebx),%eax
00001158	movl	$0xffffffff,(%eax)
0000115e	movl	$__mh_bundle_header,0x08(%esp)
00001166	movl	$0x00000001,0x04(%esp)
0000116e	movl	$0x00000002,(%esp)
00001175	calll	0x000114cd	; symbol stub for: _socket
0000117a	movl	%eax,%edx
0000117c	leal	0x0000e3fe(%ebx),%eax
00001182	movl	%edx,(%eax)
00001184	leal	0x0000e3fe(%ebx),%eax
0000118a	movl	(%eax),%eax
0000118c	testl	%eax,%eax
0000118e	js	0x0000140b
00001194	movb	$0x02,0xe1(%ebp)
00001198	calll	0x0001142d	; symbol stub for: _getuid
0000119d	movl	%eax,%ecx
0000119f	movl	$0x10624dd3,0xfffffbb4(%ebp)
000011a9	movl	0xfffffbb4(%ebp),%eax
000011af	mull	%ecx
000011b1	movl	%edx,%eax
000011b3	shrl	$0x06,%eax
000011b6	movl	%eax,0xfffffbc0(%ebp)
000011bc	imull	$0x000003e8,0xfffffbc0(%ebp),%eax
000011c6	movl	%ecx,%edx
000011c8	subl	%eax,%edx
000011ca	movl	%edx,0xfffffbc0(%ebp)
000011d0	movzwl	0xfffffbc0(%ebp),%eax
000011d7	addw	$0x643f,%ax
000011db	movzwl	%ax,%eax
000011de	movl	%eax,(%esp)
000011e1	calll	__OSSwapInt16
000011e6	movw	%ax,0xe2(%ebp)
000011ea	leal	0x0000c622(%ebx),%eax
000011f0	movl	%eax,(%esp)
000011f3	calll	0x00011437	; symbol stub for: _inet_addr
000011f8	movl	%eax,0xe4(%ebp)
000011fb	leal	0x0000e3fe(%ebx),%eax
00001201	movl	(%eax),%eax
00001203	movl	$__mh_bundle_header,0x08(%esp)
0000120b	movl	$0x00000003,0x04(%esp)
00001213	movl	%eax,(%esp)
00001216	calll	0x000113fb	; symbol stub for: _fcntl
0000121b	movl	%eax,0xf0(%ebp)
0000121e	cmpl	$__mh_bundle_header,0xf0(%ebp)
00001222	js	0x0000140b
00001228	movl	0xf0(%ebp),%edx
0000122b	orl	$0x04,%edx
0000122e	leal	0x0000e3fe(%ebx),%eax
00001234	movl	(%eax),%eax
00001236	movl	%edx,0x08(%esp)
0000123a	movl	$0x00000004,0x04(%esp)
00001242	movl	%eax,(%esp)
00001245	calll	0x000113fb	; symbol stub for: _fcntl
0000124a	testl	%eax,%eax
0000124c	js	0x0000140b
00001252	leal	0xe0(%ebp),%edx
00001255	leal	0x0000e3fe(%ebx),%eax
0000125b	movl	(%eax),%eax
0000125d	movl	$0x00000010,0x08(%esp)
00001265	movl	%edx,0x04(%esp)
00001269	movl	%eax,(%esp)
0000126c	calll	0x000113ec	; symbol stub for: _connect
00001271	testl	%eax,%eax
00001273	jns	0x00001362
00001279	calll	0x0001139c	; symbol stub for: ___error
0000127e	movl	(%eax),%eax
00001280	cmpl	$0x24,%eax
00001283	jne	0x0000140b
00001289	movl	$__mh_bundle_header,0xd8(%ebp)
00001290	movl	$0x0003d090,0xdc(%ebp)
00001297	movl	$0x00000080,0x04(%esp)
0000129f	leal	0xfffffbcc(%ebp),%eax
000012a5	movl	%eax,(%esp)
000012a8	calll	0x000113c4	; symbol stub for: _bzero
000012ad	leal	0x0000e3fe(%ebx),%eax
000012b3	movl	(%eax),%eax
000012b5	movl	%eax,0xf4(%ebp)
000012b8	movl	0xf4(%ebp),%eax
000012bb	shrl	$0x05,%eax
000012be	movl	%eax,%esi
000012c0	movl	0xfffffbcc(%ebp,%eax,4),%edx
000012c7	movl	0xf4(%ebp),%ecx
000012ca	andl	$0x1f,%ecx
000012cd	movl	$0x00000001,%eax
000012d2	shll	%cl,%eax
000012d4	orl	%edx,%eax
000012d6	movl	%eax,0xfffffbcc(%ebp,%esi,4)
000012dd	leal	0x0000e3fe(%ebx),%eax
000012e3	movl	(%eax),%eax
000012e5	leal	0x01(%eax),%edx
000012e8	leal	0xd8(%ebp),%eax
000012eb	movl	%eax,0x10(%esp)
000012ef	movl	$__mh_bundle_header,0x0c(%esp)
000012f7	leal	0xfffffbcc(%ebp),%eax
000012fd	movl	%eax,0x08(%esp)
00001301	movl	$__mh_bundle_header,0x04(%esp)
00001309	movl	%edx,(%esp)
0000130c	calll	0x000114b9	; symbol stub for: _select
00001311	cmpl	$0x01,%eax
00001314	jne	0x0000140b
0000131a	movl	$0x00000004,0xd0(%ebp)
00001321	leal	0x0000e3fe(%ebx),%eax
00001327	movl	(%eax),%edx
00001329	leal	0xd0(%ebp),%eax
0000132c	movl	%eax,0x10(%esp)
00001330	leal	0xd4(%ebp),%eax
00001333	movl	%eax,0x0c(%esp)
00001337	movl	$0x00001007,0x08(%esp)
0000133f	movl	$0x0000ffff,0x04(%esp)
00001347	movl	%edx,(%esp)
0000134a	calll	0x00011423	; symbol stub for: _getsockopt
0000134f	testl	%eax,%eax
00001351	js	0x0000140b
00001357	movl	0xd4(%ebp),%eax
0000135a	testl	%eax,%eax
0000135c	jne	0x0000140b
00001362	leal	0x0000e3fe(%ebx),%eax
00001368	movl	(%eax),%edx
0000136a	movl	0xf0(%ebp),%eax
0000136d	movl	%eax,0x08(%esp)
00001371	movl	$0x00000004,0x04(%esp)
00001379	movl	%edx,(%esp)
0000137c	calll	0x000113fb	; symbol stub for: _fcntl
00001381	testl	%eax,%eax
00001383	js	0x0000140b
00001389	movl	$0x00000001,0xcc(%ebp)
00001390	leal	0x0000e3fe(%ebx),%eax
00001396	movl	(%eax),%edx
00001398	movl	$0x00000004,0x10(%esp)
000013a0	leal	0xcc(%ebp),%eax
000013a3	movl	%eax,0x0c(%esp)
000013a7	movl	$0x00001022,0x08(%esp)
000013af	movl	$0x0000ffff,0x04(%esp)
000013b7	movl	%edx,(%esp)
000013ba	calll	0x000114c3	; symbol stub for: _setsockopt
000013bf	testl	%eax,%eax
000013c1	js	0x0000140b
000013c3	leal	0x0000c62c(%ebx),%eax
000013c9	movl	$__mh_bundle_header,0x08(%esp)
000013d1	movl	%eax,0x04(%esp)
000013d5	movl	$__mh_bundle_header,(%esp)
000013dc	calll	_sendRequest
000013e1	testb	%al,%al
000013e3	je	0x0000140b
000013e5	movl	$0x00000400,0x04(%esp)
000013ed	leal	0xfffffbcc(%ebp),%eax
000013f3	movl	%eax,(%esp)
000013f6	calll	_getResponse
000013fb	testl	%eax,%eax
000013fd	js	0x0000140b
000013ff	movl	$0x00000001,0xfffffbc4(%ebp)
00001409	jmp	0x0000143d
0000140b	leal	0x0000e3fe(%ebx),%eax
00001411	movl	(%eax),%eax
00001413	testl	%eax,%eax
00001415	js	0x00001433
00001417	leal	0x0000e3fe(%ebx),%eax
0000141d	movl	(%eax),%eax
0000141f	movl	%eax,(%esp)
00001422	calll	0x000113e7	; symbol stub for: _close
00001427	leal	0x0000e3fe(%ebx),%eax
0000142d	movl	$0xffffffff,(%eax)
00001433	movl	$__mh_bundle_header,0xfffffbc4(%ebp)
0000143d	movl	0xfffffbc4(%ebp),%eax
00001443	addl	$0x00000470,%esp
00001449	popl	%ebx
0000144a	popl	%esi
0000144b	leave
0000144c	ret
__OSSwapInt16:
0000144d	pushl	%ebp
0000144e	movl	%esp,%ebp
00001450	subl	$0x18,%esp
00001453	movl	0x08(%ebp),%eax
00001456	movw	%ax,0xf4(%ebp)
0000145a	movzwl	0xf4(%ebp),%eax
0000145e	shll	$0x08,%eax
00001461	movl	%eax,%edx
00001463	movzwl	0xf4(%ebp),%eax
00001467	shrw	$0x08,%ax
0000146b	orl	%edx,%eax
0000146d	movzwl	%ax,%eax
00001470	leave
00001471	ret
_sendall:
00001472	pushl	%ebp
00001473	movl	%esp,%ebp
00001475	subl	$0x38,%esp
00001478	movl	0x0c(%ebp),%eax
0000147b	movl	%eax,0xec(%ebp)
0000147e	movl	0x10(%ebp),%eax
00001481	shll	$0x03,%eax
00001484	addl	0x0c(%ebp),%eax
00001487	movl	%eax,0xf0(%ebp)
0000148a	jmp	0x0000153e
0000148f	movl	0xf0(%ebp),%edx
00001492	movl	0xec(%ebp),%eax
00001495	movl	%edx,%ecx
00001497	subl	%eax,%ecx
00001499	movl	%ecx,%eax
0000149b	sarl	$0x03,%eax
0000149e	movl	%eax,0x08(%esp)
000014a2	movl	0xec(%ebp),%eax
000014a5	movl	%eax,0x04(%esp)
000014a9	movl	0x08(%ebp),%eax
000014ac	movl	%eax,(%esp)
000014af	calll	0x00011522	; symbol stub for: _writev
000014b4	movl	%eax,0xf4(%ebp)
000014b7	cmpl	$__mh_bundle_header,0xf4(%ebp)
000014bb	jns	0x000014db
000014bd	calll	0x0001139c	; symbol stub for: ___error
000014c2	movl	(%eax),%eax
000014c4	cmpl	$0x04,%eax
000014c7	jne	0x000014d2
000014c9	movl	$__mh_bundle_header,0xf4(%ebp)
000014d0	jmp	0x00001538
000014d2	movl	$__mh_bundle_header,0xe4(%ebp)
000014d9	jmp	0x00001551
000014db	cmpl	$__mh_bundle_header,0xf4(%ebp)
000014df	jne	0x00001538
000014e1	movl	$__mh_bundle_header,0xe4(%ebp)
000014e8	jmp	0x00001551
000014ea	movl	0xf4(%ebp),%eax
000014ed	movl	0xec(%ebp),%edx
000014f0	movl	0x04(%edx),%edx
000014f3	cmpl	%edx,%eax
000014f5	jb	0x0000150f
000014f7	movl	0xf4(%ebp),%edx
000014fa	movl	0xec(%ebp),%eax
000014fd	movl	0x04(%eax),%eax
00001500	movl	%edx,%ecx
00001502	subl	%eax,%ecx
00001504	movl	%ecx,%eax
00001506	movl	%eax,0xf4(%ebp)
00001509	addl	$0x08,0xec(%ebp)
0000150d	jmp	0x00001538
0000150f	movl	0xec(%ebp),%eax
00001512	movl	(%eax),%eax
00001514	movl	%eax,%edx
00001516	movl	0xf4(%ebp),%eax
00001519	addl	%eax,%edx
0000151b	movl	0xec(%ebp),%eax
0000151e	movl	%edx,(%eax)
00001520	movl	0xec(%ebp),%eax
00001523	movl	0x04(%eax),%edx
00001526	movl	0xf4(%ebp),%eax
00001529	subl	%eax,%edx
0000152b	movl	0xec(%ebp),%eax
0000152e	movl	%edx,0x04(%eax)
00001531	movl	$__mh_bundle_header,0xf4(%ebp)
00001538	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000153c	jne	0x000014ea
0000153e	movl	0xec(%ebp),%eax
00001541	cmpl	0xf0(%ebp),%eax
00001544	jb	0x0000148f
0000154a	movl	$0x00000001,0xe4(%ebp)
00001551	movl	0xe4(%ebp),%eax
00001554	leave
00001555	ret
_subtract_timevals:
00001556	pushl	%ebp
00001557	movl	%esp,%ebp
00001559	subl	$0x08,%esp
0000155c	movl	0x08(%ebp),%eax
0000155f	movl	0x04(%eax),%edx
00001562	movl	0x0c(%ebp),%eax
00001565	movl	0x04(%eax),%eax
00001568	cmpl	%eax,%edx
0000156a	jge	0x0000158c
0000156c	movl	0x08(%ebp),%eax
0000156f	movl	(%eax),%eax
00001571	leal	0xff(%eax),%edx
00001574	movl	0x08(%ebp),%eax
00001577	movl	%edx,(%eax)
00001579	movl	0x08(%ebp),%eax
0000157c	movl	0x04(%eax),%eax
0000157f	addl	$0x000f4240,%eax
00001584	movl	%eax,%edx
00001586	movl	0x08(%ebp),%eax
00001589	movl	%edx,0x04(%eax)
0000158c	movl	0x08(%ebp),%eax
0000158f	movl	0x04(%eax),%edx
00001592	movl	0x0c(%ebp),%eax
00001595	movl	0x04(%eax),%eax
00001598	subl	%eax,%edx
0000159a	movl	0x08(%ebp),%eax
0000159d	movl	%edx,0x04(%eax)
000015a0	movl	0x08(%ebp),%eax
000015a3	movl	(%eax),%edx
000015a5	movl	0x0c(%ebp),%eax
000015a8	movl	(%eax),%eax
000015aa	subl	%eax,%edx
000015ac	movl	0x08(%ebp),%eax
000015af	movl	%edx,(%eax)
000015b1	leave
000015b2	ret
_sendRequest:
000015b3	pushl	%ebp
000015b4	movl	%esp,%ebp
000015b6	pushl	%ebx
000015b7	subl	$0x54,%esp
000015ba	calll	0x000015bf
000015bf	popl	%ebx
000015c0	cmpl	$__mh_bundle_header,0x10(%ebp)
000015c4	jns	0x000015e7
000015c6	movl	0x10(%ebp),%eax
000015c9	movl	%eax,0x04(%esp)
000015cd	leal	0x0000c190(%ebx),%eax
000015d3	movl	%eax,(%esp)
000015d6	calll	_dbtrace
000015db	movl	$__mh_bundle_header,0xc4(%ebp)
000015e2	jmp	0x000016d2
000015e7	leal	0x0000df61(%ebx),%eax
000015ed	movl	(%eax),%eax
000015ef	testl	%eax,%eax
000015f1	jns	0x00001619
000015f3	leal	0x0000df61(%ebx),%eax
000015f9	movl	(%eax),%eax
000015fb	movl	%eax,0x04(%esp)
000015ff	leal	0x0000c1a0(%ebx),%eax
00001605	movl	%eax,(%esp)
00001608	calll	_dbtrace
0000160d	movl	$__mh_bundle_header,0xc4(%ebp)
00001614	jmp	0x000016d2
00001619	movl	$0xa0830403,0xe2(%ebp)
00001620	leal	0x0000fa49(%ebx),%eax
00001626	movl	(%eax),%eax
00001628	movl	(%eax),%eax
0000162a	leal	0x01(%eax),%edx
0000162d	leal	0x0000fa49(%ebx),%eax
00001633	movl	(%eax),%eax
00001635	movl	%edx,(%eax)
00001637	leal	0x0000fa49(%ebx),%eax
0000163d	movl	(%eax),%eax
0000163f	movl	(%eax),%eax
00001641	movl	%eax,(%esp)
00001644	calll	__OSSwapInt32
00001649	movl	%eax,0xe6(%ebp)
0000164c	movl	0x08(%ebp),%eax
0000164f	movl	%eax,(%esp)
00001652	calll	__OSSwapInt32
00001657	movl	%eax,0xea(%ebp)
0000165a	leal	0xe2(%ebp),%eax
0000165d	movl	%eax,0xd0(%ebp)
00001660	cmpl	$__mh_bundle_header,0x10(%ebp)
00001664	je	0x00001699
00001666	movl	$0x00000012,0xd4(%ebp)
0000166d	movl	0x10(%ebp),%eax
00001670	incl	%eax
00001671	movl	%eax,(%esp)
00001674	calll	__OSSwapInt32
00001679	movl	%eax,0xee(%ebp)
0000167c	movw	$0xfeff,0xf2(%ebp)
00001682	movl	0x0c(%ebp),%eax
00001685	movl	%eax,0xd8(%ebp)
00001688	movl	0x10(%ebp),%eax
0000168b	addl	%eax,%eax
0000168d	movl	%eax,0xdc(%ebp)
00001690	movl	$0x00000002,0xf4(%ebp)
00001697	jmp	0x000016ae
00001699	movl	$0x00000010,0xd4(%ebp)
000016a0	movl	$__mh_bundle_header,0xee(%ebp)
000016a7	movl	$0x00000001,0xf4(%ebp)
000016ae	leal	0x0000df61(%ebx),%eax
000016b4	movl	(%eax),%edx
000016b6	movl	0xf4(%ebp),%eax
000016b9	movl	%eax,0x08(%esp)
000016bd	leal	0xd0(%ebp),%eax
000016c0	movl	%eax,0x04(%esp)
000016c4	movl	%edx,(%esp)
000016c7	calll	0x00001472
000016cc	movzbl	%al,%eax
000016cf	movl	%eax,0xc4(%ebp)
000016d2	movl	0xc4(%ebp),%eax
000016d5	addl	$0x54,%esp
000016d8	popl	%ebx
000016d9	leave
000016da	ret
__OSSwapInt32:
000016db	pushl	%ebp
000016dc	movl	%esp,%ebp
000016de	subl	$0x08,%esp
000016e1	movl	0x08(%ebp),%eax
000016e4	bswap	%eax
000016e6	movl	%eax,0x08(%ebp)
000016e9	movl	0x08(%ebp),%eax
000016ec	leave
000016ed	ret
_recvall:
000016ee	pushl	%ebp
000016ef	movl	%esp,%ebp
000016f1	pushl	%edi
000016f2	pushl	%esi
000016f3	pushl	%ebx
000016f4	subl	$0x000040dc,%esp
000016fa	calll	0x000016ff
000016ff	popl	%ebx
00001700	movl	0x0c(%ebp),%eax
00001703	movl	%eax,0xd8(%ebp)
00001706	movl	0x10(%ebp),%eax
00001709	movl	%eax,0xdc(%ebp)
0000170c	jmp	0x0000191a
00001711	movl	$0x00000080,0x04(%esp)
00001719	leal	0xffffff48(%ebp),%eax
0000171f	movl	%eax,(%esp)
00001722	calll	0x000113c4	; symbol stub for: _bzero
00001727	leal	0x0000de21(%ebx),%eax
0000172d	movl	(%eax),%eax
0000172f	movl	%eax,0xe4(%ebp)
00001732	movl	0xe4(%ebp),%eax
00001735	shrl	$0x05,%eax
00001738	movl	%eax,%esi
0000173a	movl	0xffffff48(%ebp,%eax,4),%edx
00001741	movl	0xe4(%ebp),%ecx
00001744	andl	$0x1f,%ecx
00001747	movl	$0x00000001,%eax
0000174c	shll	%cl,%eax
0000174e	orl	%edx,%eax
00001750	movl	%eax,0xffffff48(%ebp,%esi,4)
00001757	movl	$__mh_bundle_header,0x04(%esp)
0000175f	leal	0xd0(%ebp),%eax
00001762	movl	%eax,(%esp)
00001765	calll	0x00011428	; symbol stub for: _gettimeofday
0000176a	leal	0x0000de21(%ebx),%eax
00001770	movl	(%eax),%eax
00001772	leal	0x01(%eax),%edx
00001775	movl	0x18(%ebp),%eax
00001778	movl	%eax,0x10(%esp)
0000177c	movl	$__mh_bundle_header,0x0c(%esp)
00001784	movl	$__mh_bundle_header,0x08(%esp)
0000178c	leal	0xffffff48(%ebp),%eax
00001792	movl	%eax,0x04(%esp)
00001796	movl	%edx,(%esp)
00001799	calll	0x000114b9	; symbol stub for: _select
0000179e	movl	%eax,0xe0(%ebp)
000017a1	cmpl	$__mh_bundle_header,0xe0(%ebp)
000017a5	jns	0x000017f6
000017a7	calll	0x0001139c	; symbol stub for: ___error
000017ac	movl	(%eax),%eax
000017ae	cmpl	$0x04,%eax
000017b1	je	0x000017f6
000017b3	movl	0x18(%ebp),%eax
000017b6	movl	0x04(%eax),%esi
000017b9	movl	0x18(%ebp),%eax
000017bc	movl	(%eax),%edi
000017be	calll	0x0001139c	; symbol stub for: ___error
000017c3	movl	(%eax),%eax
000017c5	movl	%eax,(%esp)
000017c8	calll	0x000114e6	; symbol stub for: _strerror
000017cd	movl	%esi,0x0c(%esp)
000017d1	movl	%edi,0x08(%esp)
000017d5	movl	%eax,0x04(%esp)
000017d9	leal	0x0000c071(%ebx),%eax
000017df	movl	%eax,(%esp)
000017e2	calll	_dbtrace
000017e7	movl	$__mh_bundle_header,0xffffbf44(%ebp)
000017f1	jmp	0x0000196e
000017f6	movl	$__mh_bundle_header,0x04(%esp)
000017fe	leal	0xc8(%ebp),%eax
00001801	movl	%eax,(%esp)
00001804	calll	0x00011428	; symbol stub for: _gettimeofday
00001809	leal	0xd0(%ebp),%eax
0000180c	movl	%eax,0x04(%esp)
00001810	leal	0xc8(%ebp),%eax
00001813	movl	%eax,(%esp)
00001816	calll	0x00001556
0000181b	leal	0xc8(%ebp),%eax
0000181e	movl	%eax,0x04(%esp)
00001822	movl	0x18(%ebp),%eax
00001825	movl	%eax,(%esp)
00001828	calll	0x00001556
0000182d	cmpl	$__mh_bundle_header,0xe0(%ebp)
00001831	jle	0x0000191a
00001837	cmpl	$__mh_bundle_header,0x0c(%ebp)
0000183b	jne	0x000018b2
0000183d	movl	$0x00004000,%eax
00001842	cmpl	$0x00004000,0xdc(%ebp)
00001849	movl	%eax,%edx
0000184b	cmovbel	0xdc(%ebp),%edx
0000184f	leal	0x0000de21(%ebx),%eax
00001855	movl	(%eax),%ecx
00001857	movl	$__mh_bundle_header,0x0c(%esp)
0000185f	movl	%edx,0x08(%esp)
00001863	leal	0xffffbf48(%ebp),%eax
00001869	movl	%eax,0x04(%esp)
0000186d	movl	%ecx,(%esp)
00001870	calll	0x000114af	; symbol stub for: _recv
00001875	movl	%eax,0xe0(%ebp)
00001878	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000187c	jg	0x00001914
00001882	calll	0x0001139c	; symbol stub for: ___error
00001887	movl	(%eax),%eax
00001889	movl	%eax,(%esp)
0000188c	calll	0x000114e6	; symbol stub for: _strerror
00001891	movl	%eax,0x04(%esp)
00001895	leal	0x0000c08d(%ebx),%eax
0000189b	movl	%eax,(%esp)
0000189e	calll	_dbtrace
000018a3	movl	$__mh_bundle_header,0xffffbf44(%ebp)
000018ad	jmp	0x0000196e
000018b2	leal	0x0000de21(%ebx),%eax
000018b8	movl	(%eax),%edx
000018ba	movl	$__mh_bundle_header,0x0c(%esp)
000018c2	movl	0xdc(%ebp),%eax
000018c5	movl	%eax,0x08(%esp)
000018c9	movl	0xd8(%ebp),%eax
000018cc	movl	%eax,0x04(%esp)
000018d0	movl	%edx,(%esp)
000018d3	calll	0x000114af	; symbol stub for: _recv
000018d8	movl	%eax,0xe0(%ebp)
000018db	cmpl	$__mh_bundle_header,0xe0(%ebp)
000018df	jg	0x0000190e
000018e1	calll	0x0001139c	; symbol stub for: ___error
000018e6	movl	(%eax),%eax
000018e8	movl	%eax,(%esp)
000018eb	calll	0x000114e6	; symbol stub for: _strerror
000018f0	movl	%eax,0x04(%esp)
000018f4	leal	0x0000c0a1(%ebx),%eax
000018fa	movl	%eax,(%esp)
000018fd	calll	_dbtrace
00001902	movl	$__mh_bundle_header,0xffffbf44(%ebp)
0000190c	jmp	0x0000196e
0000190e	movl	0xe0(%ebp),%eax
00001911	addl	%eax,0xd8(%ebp)
00001914	movl	0xe0(%ebp),%eax
00001917	subl	%eax,0xdc(%ebp)
0000191a	movl	0x18(%ebp),%eax
0000191d	movl	(%eax),%eax
0000191f	testl	%eax,%eax
00001921	js	0x00001937
00001923	movl	0x18(%ebp),%eax
00001926	movl	0x04(%eax),%eax
00001929	testl	%eax,%eax
0000192b	js	0x00001937
0000192d	cmpl	$__mh_bundle_header,0xdc(%ebp)
00001931	jne	0x00001711
00001937	cmpl	$__mh_bundle_header,0xdc(%ebp)
0000193b	je	0x0000195e
0000193d	movl	0x18(%ebp),%eax
00001940	movl	0x04(%eax),%edx
00001943	movl	0x18(%ebp),%eax
00001946	movl	(%eax),%eax
00001948	movl	%edx,0x08(%esp)
0000194c	movl	%eax,0x04(%esp)
00001950	leal	0x0000c0b4(%ebx),%eax
00001956	movl	%eax,(%esp)
00001959	calll	_dbtrace
0000195e	cmpl	$__mh_bundle_header,0xdc(%ebp)
00001962	sete	%al
00001965	movzbl	%al,%eax
00001968	movl	%eax,0xffffbf44(%ebp)
0000196e	movl	0xffffbf44(%ebp),%eax
00001974	addl	$0x000040dc,%esp
0000197a	popl	%ebx
0000197b	popl	%esi
0000197c	popl	%edi
0000197d	leave
0000197e	ret
_getResponse:
0000197f	pushl	%ebp
00001980	movl	%esp,%ebp
00001982	pushl	%ebx
00001983	subl	$0x54,%esp
00001986	calll	0x0000198b
0000198b	popl	%ebx
0000198c	movl	$0x00000001,0xe8(%ebp)
00001993	movl	$__mh_bundle_header,0xec(%ebp)
0000199a	leal	0x0000db95(%ebx),%eax
000019a0	movl	(%eax),%eax
000019a2	testl	%eax,%eax
000019a4	jns	0x000019cc
000019a6	leal	0x0000db95(%ebx),%eax
000019ac	movl	(%eax),%eax
000019ae	movl	%eax,0x04(%esp)
000019b2	leal	0x0000bdd4(%ebx),%eax
000019b8	movl	%eax,(%esp)
000019bb	calll	_dbtrace
000019c0	movl	$__mh_bundle_header,0xd4(%ebp)
000019c7	jmp	0x00001ae9
000019cc	leal	0x0000db95(%ebx),%eax
000019d2	movl	(%eax),%edx
000019d4	leal	0xe8(%ebp),%eax
000019d7	movl	%eax,0x10(%esp)
000019db	movl	$__mh_bundle_header,0x0c(%esp)
000019e3	movl	$0x0000000c,0x08(%esp)
000019eb	leal	0xdc(%ebp),%eax
000019ee	movl	%eax,0x04(%esp)
000019f2	movl	%edx,(%esp)
000019f5	calll	0x000016ee
000019fa	testb	%al,%al
000019fc	jne	0x00001a0a
000019fe	movl	$0xffffffff,0xd4(%ebp)
00001a05	jmp	0x00001ae9
00001a0a	movl	0xe0(%ebp),%eax
00001a0d	movl	%eax,(%esp)
00001a10	calll	0x000016db
00001a15	movl	%eax,%edx
00001a17	leal	0x0000f67d(%ebx),%eax
00001a1d	movl	(%eax),%eax
00001a1f	movl	(%eax),%eax
00001a21	cmpl	%eax,%edx
00001a23	jne	0x000019cc
00001a25	movl	0xe4(%ebp),%eax
00001a28	movl	%eax,(%esp)
00001a2b	calll	0x000016db
00001a30	movl	%eax,0xf0(%ebp)
00001a33	movl	0x0c(%ebp),%eax
00001a36	cmpl	%eax,0xf0(%ebp)
00001a39	cmovbel	0xf0(%ebp),%eax
00001a3d	movl	%eax,0xf4(%ebp)
00001a40	cmpl	$__mh_bundle_header,0xf4(%ebp)
00001a44	je	0x00001ae3
00001a4a	movl	0xf4(%ebp),%edx
00001a4d	leal	0x0000db95(%ebx),%eax
00001a53	movl	(%eax),%ecx
00001a55	leal	0xe8(%ebp),%eax
00001a58	movl	%eax,0x10(%esp)
00001a5c	movl	$__mh_bundle_header,0x0c(%esp)
00001a64	movl	%edx,0x08(%esp)
00001a68	movl	0x08(%ebp),%eax
00001a6b	movl	%eax,0x04(%esp)
00001a6f	movl	%ecx,(%esp)
00001a72	calll	0x000016ee
00001a77	testb	%al,%al
00001a79	jne	0x00001a84
00001a7b	movl	$0xffffffff,0xd4(%ebp)
00001a82	jmp	0x00001ae9
00001a84	movl	0xf0(%ebp),%eax
00001a87	cmpl	0x0c(%ebp),%eax
00001a8a	jbe	0x00001ae3
00001a8c	movl	0x0c(%ebp),%edx
00001a8f	movl	0xf0(%ebp),%eax
00001a92	movl	%eax,%ecx
00001a94	subl	%edx,%ecx
00001a96	movl	%ecx,%edx
00001a98	leal	0x0000db95(%ebx),%eax
00001a9e	movl	(%eax),%ecx
00001aa0	leal	0xe8(%ebp),%eax
00001aa3	movl	%eax,0x10(%esp)
00001aa7	movl	$__mh_bundle_header,0x0c(%esp)
00001aaf	movl	%edx,0x08(%esp)
00001ab3	movl	$__mh_bundle_header,0x04(%esp)
00001abb	movl	%ecx,(%esp)
00001abe	calll	0x000016ee
00001ac3	testb	%al,%al
00001ac5	jne	0x00001ae3
00001ac7	leal	0x0000db95(%ebx),%eax
00001acd	movl	(%eax),%eax
00001acf	movl	%eax,(%esp)
00001ad2	calll	0x000113e7	; symbol stub for: _close
00001ad7	leal	0x0000db95(%ebx),%eax
00001add	movl	$0xffffffff,(%eax)
00001ae3	movl	0xf4(%ebp),%eax
00001ae6	movl	%eax,0xd4(%ebp)
00001ae9	movl	0xd4(%ebp),%eax
00001aec	addl	$0x54,%esp
00001aef	popl	%ebx
00001af0	leave
00001af1	ret
_dropboxRequest:
00001af2	pushl	%ebp
00001af3	movl	%esp,%ebp
00001af5	pushl	%ebx
00001af6	subl	$0x44,%esp
00001af9	calll	0x00001afe
00001afe	popl	%ebx
00001aff	movl	$0xffffffff,0xec(%ebp)
00001b06	leal	0x0000f50e(%ebx),%eax
00001b0c	movl	(%eax),%eax
00001b0e	movl	%eax,(%esp)
00001b11	calll	0x000114a0	; symbol stub for: _pthread_mutex_lock
00001b16	testl	%eax,%eax
00001b18	jns	0x00001b26
00001b1a	movl	$0xffffffff,0xd4(%ebp)
00001b21	jmp	0x00001c9a
00001b26	movl	$__mh_bundle_header,0x04(%esp)
00001b2e	leal	0xe4(%ebp),%eax
00001b31	movl	%eax,(%esp)
00001b34	calll	0x00011428	; symbol stub for: _gettimeofday
00001b39	leal	0x0000f502(%ebx),%eax
00001b3f	movl	(%eax),%eax
00001b41	movl	%eax,0x04(%esp)
00001b45	leal	0xe4(%ebp),%eax
00001b48	movl	%eax,(%esp)
00001b4b	calll	0x00001556
00001b50	movl	0xe4(%ebp),%eax
00001b53	testl	%eax,%eax
00001b55	js	0x00001b5e
00001b57	movl	0xe8(%ebp),%eax
00001b5a	testl	%eax,%eax
00001b5c	jns	0x00001b7a
00001b5e	leal	0x0000f50e(%ebx),%eax
00001b64	movl	(%eax),%eax
00001b66	movl	%eax,(%esp)
00001b69	calll	0x000114a5	; symbol stub for: _pthread_mutex_unlock
00001b6e	movl	$0xffffffff,0xd4(%ebp)
00001b75	jmp	0x00001c9a
00001b7a	leal	0x0000da22(%ebx),%eax
00001b80	movl	(%eax),%eax
00001b82	testl	%eax,%eax
00001b84	jns	0x00001b8f
00001b86	calll	0x00001112
00001b8b	testb	%al,%al
00001b8d	je	0x00001c03
00001b8f	movl	$0x00000002,0xf0(%ebp)
00001b96	movl	0x10(%ebp),%eax
00001b99	movl	%eax,0x08(%esp)
00001b9d	movl	0x0c(%ebp),%eax
00001ba0	movl	%eax,0x04(%esp)
00001ba4	movl	0x08(%ebp),%eax
00001ba7	movl	%eax,(%esp)
00001baa	calll	0x000015b3
00001baf	movb	%al,0xf7(%ebp)
00001bb2	cmpl	$__mh_bundle_header,0x14(%ebp)
00001bb6	je	0x00001bd3
00001bb8	movl	0x18(%ebp),%eax
00001bbb	movl	%eax,0x04(%esp)
00001bbf	movl	0x14(%ebp),%eax
00001bc2	movl	%eax,(%esp)
00001bc5	calll	0x0000197f
00001bca	movl	%eax,0xec(%ebp)
00001bcd	cmpl	$__mh_bundle_header,0xec(%ebp)
00001bd1	jns	0x00001c03
00001bd3	decl	0xf0(%ebp)
00001bd6	cmpl	$__mh_bundle_header,0xf0(%ebp)
00001bda	je	0x00001be7
00001bdc	calll	0x00001112
00001be1	testb	%al,%al
00001be3	je	0x00001c03
00001be5	jmp	0x00001b96
00001be7	leal	0x0000da22(%ebx),%eax
00001bed	movl	(%eax),%eax
00001bef	movl	%eax,(%esp)
00001bf2	calll	0x000113e7	; symbol stub for: _close
00001bf7	leal	0x0000da22(%ebx),%eax
00001bfd	movl	$0xffffffff,(%eax)
00001c03	cmpl	$__mh_bundle_header,0xec(%ebp)
00001c07	jns	0x00001c84
00001c09	movl	$__mh_bundle_header,0x04(%esp)
00001c11	leal	0x0000f502(%ebx),%eax
00001c17	movl	(%eax),%eax
00001c19	movl	%eax,(%esp)
00001c1c	calll	0x00011428	; symbol stub for: _gettimeofday
00001c21	leal	0x0000f502(%ebx),%eax
00001c27	movl	(%eax),%eax
00001c29	movl	0x04(%eax),%eax
00001c2c	addl	$0x000186a0,%eax
00001c31	movl	%eax,%edx
00001c33	leal	0x0000f502(%ebx),%eax
00001c39	movl	(%eax),%eax
00001c3b	movl	%edx,0x04(%eax)
00001c3e	leal	0x0000f502(%ebx),%eax
00001c44	movl	(%eax),%eax
00001c46	movl	0x04(%eax),%eax
00001c49	cmpl	$0x000f423f,%eax
00001c4e	jbe	0x00001c84
00001c50	leal	0x0000f502(%ebx),%eax
00001c56	movl	(%eax),%eax
00001c58	movl	(%eax),%eax
00001c5a	leal	0x01(%eax),%edx
00001c5d	leal	0x0000f502(%ebx),%eax
00001c63	movl	(%eax),%eax
00001c65	movl	%edx,(%eax)
00001c67	leal	0x0000f502(%ebx),%eax
00001c6d	movl	(%eax),%eax
00001c6f	movl	0x04(%eax),%eax
00001c72	subl	$0x000f4240,%eax
00001c77	movl	%eax,%edx
00001c79	leal	0x0000f502(%ebx),%eax
00001c7f	movl	(%eax),%eax
00001c81	movl	%edx,0x04(%eax)
00001c84	leal	0x0000f50e(%ebx),%eax
00001c8a	movl	(%eax),%eax
00001c8c	movl	%eax,(%esp)
00001c8f	calll	0x000114a5	; symbol stub for: _pthread_mutex_unlock
00001c94	movl	0xec(%ebp),%eax
00001c97	movl	%eax,0xd4(%ebp)
00001c9a	movl	0xd4(%ebp),%eax
00001c9d	addl	$0x44,%esp
00001ca0	popl	%ebx
00001ca1	leave
00001ca2	ret
_DropboxCommunication:
00001ca3	pushl	%ebp
00001ca4	movl	%esp,%ebp
00001ca6	pushl	%ebx
00001ca7	subl	$0x34,%esp
00001caa	calll	0x00001caf
00001caf	popl	%ebx
00001cb0	movl	$__mh_bundle_header,0xf4(%ebp)
00001cb7	movl	$__mh_bundle_header,0x04(%esp)
00001cbf	leal	0x0000f35d(%ebx),%eax
00001cc5	movl	(%eax),%eax
00001cc7	movl	%eax,(%esp)
00001cca	calll	0x0001149b	; symbol stub for: _pthread_mutex_init
00001ccf	movl	%eax,0xf4(%ebp)
00001cd2	cmpl	$__mh_bundle_header,0xf4(%ebp)
00001cd6	je	0x00001d07
00001cd8	leal	0x0000f355(%ebx),%eax
00001cde	movl	(%eax),%edx
00001ce0	leal	0x000000b0(%edx),%edx
00001ce6	movl	0xf4(%ebp),%eax
00001ce9	movl	%eax,0x08(%esp)
00001ced	leal	0x0000bb1d(%ebx),%eax
00001cf3	movl	%eax,0x04(%esp)
00001cf7	movl	%edx,(%esp)
00001cfa	calll	0x0001140a	; symbol stub for: _fprintf
00001cff	movl	0xf4(%ebp),%eax
00001d02	movl	%eax,0xe4(%ebp)
00001d05	jmp	0x00001d1f
00001d07	leal	0x0000d871(%ebx),%eax
00001d0d	movl	$0xffffffff,(%eax)
00001d13	calll	0x00001112
00001d18	movl	$__mh_bundle_header,0xe4(%ebp)
00001d1f	movl	0xe4(%ebp),%eax
00001d22	addl	$0x34,%esp
00001d25	popl	%ebx
00001d26	leave
00001d27	ret
_DebugAE:
00001d28	pushl	%ebp
00001d29	movl	%esp,%ebp
00001d2b	pushl	%ebx
00001d2c	subl	$0x24,%esp
00001d2f	calll	0x00001d34
00001d34	popl	%ebx
00001d35	leal	0xf0(%ebp),%eax
00001d38	movl	%eax,0x04(%esp)
00001d3c	movl	0x08(%ebp),%eax
00001d3f	movl	%eax,(%esp)
00001d42	calll	0x00011077	; symbol stub for: _AEPrintDescToHandle
00001d47	movl	0xf0(%ebp),%eax
00001d4a	movl	(%eax),%eax
00001d4c	leal	0x0000d2d8(%ebx),%edx
00001d52	movl	%eax,0x0c(%esp)
00001d56	movl	%edx,0x08(%esp)
00001d5a	movl	$__mh_bundle_header,0x04(%esp)
00001d62	movl	$__mh_bundle_header,(%esp)
00001d69	calll	0x0001116c	; symbol stub for: _CFStringCreateWithFormat
00001d6e	movl	%eax,0xf4(%ebp)
00001d71	movl	0xf4(%ebp),%eax
00001d74	movl	%eax,(%esp)
00001d77	calll	0x00011153	; symbol stub for: _CFShow
00001d7c	cmpl	$__mh_bundle_header,0xf4(%ebp)
00001d80	je	0x00001d8d
00001d82	movl	0xf4(%ebp),%eax
00001d85	movl	%eax,(%esp)
00001d88	calll	0x00011149	; symbol stub for: _CFRelease
00001d8d	movl	0xf0(%ebp),%eax
00001d90	movl	%eax,(%esp)
00001d93	calll	0x0001122f	; symbol stub for: _DisposeHandle
00001d98	addl	$0x24,%esp
00001d9b	popl	%ebx
00001d9c	leave
00001d9d	ret
_BuildPath:
00001d9e	pushl	%ebp
00001d9f	movl	%esp,%ebp
00001da1	pushl	%ebx
00001da2	subl	$0x000002c4,%esp
00001da8	calll	0x00001dad
00001dad	popl	%ebx
00001dae	movl	$__mh_bundle_header,0xd0(%ebp)
00001db5	leal	0xc4(%ebp),%eax
00001db8	movl	%eax,0x0c(%esp)
00001dbc	leal	0xc8(%ebp),%eax
00001dbf	movl	%eax,0x08(%esp)
00001dc3	movl	$0x66726f6d,0x04(%esp)
00001dcb	movl	0x08(%ebp),%eax
00001dce	movl	%eax,(%esp)
00001dd1	calll	0x00011095	; symbol stub for: _AESizeOfParam
00001dd6	movw	%ax,0xce(%ebp)
00001dda	cmpw	$__mh_bundle_header,0xce(%ebp)
00001ddf	setne	%al
00001de2	movzbl	%al,%eax
00001de5	testl	%eax,%eax
00001de7	je	0x00001e38
00001de9	movl	$__mh_bundle_header,0x1c(%esp)
00001df1	movl	$0x00000030,0x18(%esp)
00001df9	leal	0x0000ba57(%ebx),%eax
00001dff	movl	%eax,0x14(%esp)
00001e03	movl	$__mh_bundle_header,0x10(%esp)
00001e0b	leal	0x0000baaa(%ebx),%eax
00001e11	movl	%eax,0x0c(%esp)
00001e15	leal	0x0000babf(%ebx),%eax
00001e1b	movl	%eax,0x08(%esp)
00001e1f	movl	$__mh_bundle_header,0x04(%esp)
00001e27	movl	$0x3f2a3f2a,(%esp)
00001e2e	calll	0x00011220	; symbol stub for: _DebugAssert
00001e33	jmp	0x000023bb
00001e38	movl	0xc8(%ebp),%eax
00001e3b	cmpl	$0x6e756c6c,%eax
00001e40	jne	0x000021b3
00001e46	leal	0xc4(%ebp),%eax
00001e49	movl	%eax,0x18(%esp)
00001e4d	movl	$0x00000004,0x14(%esp)
00001e55	leal	0xb4(%ebp),%eax
00001e58	movl	%eax,0x10(%esp)
00001e5c	leal	0xc8(%ebp),%eax
00001e5f	movl	%eax,0x0c(%esp)
00001e63	movl	$0x74797065,0x08(%esp)
00001e6b	movl	$0x77616e74,0x04(%esp)
00001e73	movl	0x08(%ebp),%eax
00001e76	movl	%eax,(%esp)
00001e79	calll	0x00011072	; symbol stub for: _AEGetParamPtr
00001e7e	movw	%ax,0xce(%ebp)
00001e82	cmpw	$__mh_bundle_header,0xce(%ebp)
00001e87	setne	%al
00001e8a	movzbl	%al,%eax
00001e8d	testl	%eax,%eax
00001e8f	je	0x00001ee0
00001e91	movl	$__mh_bundle_header,0x1c(%esp)
00001e99	movl	$0x00000044,0x18(%esp)
00001ea1	leal	0x0000ba57(%ebx),%eax
00001ea7	movl	%eax,0x14(%esp)
00001eab	movl	$__mh_bundle_header,0x10(%esp)
00001eb3	leal	0x0000baaa(%ebx),%eax
00001eb9	movl	%eax,0x0c(%esp)
00001ebd	leal	0x0000babf(%ebx),%eax
00001ec3	movl	%eax,0x08(%esp)
00001ec7	movl	$__mh_bundle_header,0x04(%esp)
00001ecf	movl	$0x3f2a3f2a,(%esp)
00001ed6	calll	0x00011220	; symbol stub for: _DebugAssert
00001edb	jmp	0x000023bb
00001ee0	movl	0xb4(%ebp),%eax
00001ee3	cmpl	$0x70726f70,%eax
00001ee8	jne	0x00001fb0
00001eee	leal	0xc4(%ebp),%eax
00001ef1	movl	%eax,0x18(%esp)
00001ef5	movl	$0x00000004,0x14(%esp)
00001efd	leal	0xb8(%ebp),%eax
00001f00	movl	%eax,0x10(%esp)
00001f04	leal	0xc8(%ebp),%eax
00001f07	movl	%eax,0x0c(%esp)
00001f0b	movl	$0x74797065,0x08(%esp)
00001f13	movl	$0x73656c64,0x04(%esp)
00001f1b	movl	0x08(%ebp),%eax
00001f1e	movl	%eax,(%esp)
00001f21	calll	0x00011072	; symbol stub for: _AEGetParamPtr
00001f26	movw	%ax,0xce(%ebp)
00001f2a	cmpw	$__mh_bundle_header,0xce(%ebp)
00001f2f	setne	%al
00001f32	movzbl	%al,%eax
00001f35	testl	%eax,%eax
00001f37	je	0x00001f88
00001f39	movl	$__mh_bundle_header,0x1c(%esp)
00001f41	movl	$0x00000055,0x18(%esp)
00001f49	leal	0x0000ba57(%ebx),%eax
00001f4f	movl	%eax,0x14(%esp)
00001f53	movl	$__mh_bundle_header,0x10(%esp)
00001f5b	leal	0x0000baaa(%ebx),%eax
00001f61	movl	%eax,0x0c(%esp)
00001f65	leal	0x0000babf(%ebx),%eax
00001f6b	movl	%eax,0x08(%esp)
00001f6f	movl	$__mh_bundle_header,0x04(%esp)
00001f77	movl	$0x3f2a3f2a,(%esp)
00001f7e	calll	0x00011220	; symbol stub for: _DebugAssert
00001f83	jmp	0x000023bb
00001f88	movl	0xb8(%ebp),%eax
00001f8b	cmpl	$0x7364736b,%eax
00001f90	jne	0x000023bb
00001f96	movl	$0x00000001,(%esp)
00001f9d	calll	0x00011450	; symbol stub for: _malloc
00001fa2	movl	%eax,0xd0(%ebp)
00001fa5	movl	0xd0(%ebp),%eax
00001fa8	movb	$__mh_bundle_header,(%eax)
00001fab	jmp	0x000023bb
00001fb0	movl	0xb4(%ebp),%eax
00001fb3	cmpl	$0x63646973,%eax
00001fb8	je	0x00001fc8
00001fba	movl	0xb4(%ebp),%eax
00001fbd	cmpl	$0x636f626a,%eax
00001fc2	jne	0x000023bb
00001fc8	leal	0xbc(%ebp),%eax
00001fcb	movl	%eax,0x0c(%esp)
00001fcf	movl	$0x75747874,0x08(%esp)
00001fd7	movl	$0x73656c64,0x04(%esp)
00001fdf	movl	0x08(%ebp),%eax
00001fe2	movl	%eax,(%esp)
00001fe5	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
00001fea	movw	%ax,0xce(%ebp)
00001fee	cmpw	$__mh_bundle_header,0xce(%ebp)
00001ff3	setne	%al
00001ff6	movzbl	%al,%eax
00001ff9	testl	%eax,%eax
00001ffb	je	0x0000204c
00001ffd	movl	$__mh_bundle_header,0x1c(%esp)
00002005	movl	$0x0000006d,0x18(%esp)
0000200d	leal	0x0000ba57(%ebx),%eax
00002013	movl	%eax,0x14(%esp)
00002017	movl	$__mh_bundle_header,0x10(%esp)
0000201f	leal	0x0000baaa(%ebx),%eax
00002025	movl	%eax,0x0c(%esp)
00002029	leal	0x0000babf(%ebx),%eax
0000202f	movl	%eax,0x08(%esp)
00002033	movl	$__mh_bundle_header,0x04(%esp)
0000203b	movl	$0x3f2a3f2a,(%esp)
00002042	calll	0x00011220	; symbol stub for: _DebugAssert
00002047	jmp	0x000023bb
0000204c	leal	0xbc(%ebp),%eax
0000204f	movl	%eax,(%esp)
00002052	calll	0x00011063	; symbol stub for: _AEGetDescDataSize
00002057	movl	%eax,0xd4(%ebp)
0000205a	movl	0xd4(%ebp),%eax
0000205d	movl	%eax,(%esp)
00002060	calll	0x00011450	; symbol stub for: _malloc
00002065	movl	%eax,0xd8(%ebp)
00002068	movl	0xd4(%ebp),%eax
0000206b	movl	%eax,0x08(%esp)
0000206f	movl	0xd8(%ebp),%eax
00002072	movl	%eax,0x04(%esp)
00002076	leal	0xbc(%ebp),%eax
00002079	movl	%eax,(%esp)
0000207c	calll	0x0001105e	; symbol stub for: _AEGetDescData
00002081	leal	0xbc(%ebp),%eax
00002084	movl	%eax,(%esp)
00002087	calll	0x00011059	; symbol stub for: _AEDisposeDesc
0000208c	movl	$0x00000001,0xdc(%ebp)
00002093	jmp	0x0000213c
00002098	leal	0xffffff5a(%ebp),%eax
0000209e	movl	%eax,0x18(%esp)
000020a2	leal	0xfffffd5a(%ebp),%eax
000020a8	movl	%eax,0x14(%esp)
000020ac	movl	$__mh_bundle_header,0x10(%esp)
000020b4	movl	$__mh_bundle_header,0x0c(%esp)
000020bc	leal	0xb2(%ebp),%eax
000020bf	movl	%eax,0x08(%esp)
000020c3	movl	0xdc(%ebp),%eax
000020c6	movl	%eax,0x04(%esp)
000020ca	movl	$__mh_bundle_header,(%esp)
000020d1	calll	0x00011248	; symbol stub for: _FSGetVolumeInfo
000020d6	movw	%ax,0xce(%ebp)
000020da	cmpw	$__mh_bundle_header,0xce(%ebp)
000020df	jne	0x00002139
000020e1	movl	0xd4(%ebp),%edx
000020e4	movzwl	0xfffffd5a(%ebp),%eax
000020eb	movzwl	%ax,%eax
000020ee	addl	%eax,%eax
000020f0	cmpl	%eax,%edx
000020f2	jne	0x00002139
000020f4	movl	$__mh_bundle_header,0xe0(%ebp)
000020fb	jmp	0x0000211b
000020fd	movl	0xe0(%ebp),%eax
00002100	addl	%eax,%eax
00002102	addl	0xd8(%ebp),%eax
00002105	movzwl	(%eax),%edx
00002108	movl	0xe0(%ebp),%eax
0000210b	movzwl	0xfffffd5c(%ebp,%eax,2),%eax
00002113	cmpw	%ax,%dx
00002116	jne	0x0000212a
00002118	incl	0xe0(%ebp)
0000211b	movzwl	0xfffffd5a(%ebp),%eax
00002122	movzwl	%ax,%eax
00002125	cmpl	0xe0(%ebp),%eax
00002128	jg	0x000020fd
0000212a	movzwl	0xfffffd5a(%ebp),%eax
00002131	movzwl	%ax,%eax
00002134	cmpl	0xe0(%ebp),%eax
00002137	je	0x00002147
00002139	incl	0xdc(%ebp)
0000213c	cmpw	$0xdd,0xce(%ebp)
00002141	jne	0x00002098
00002147	movl	0xd8(%ebp),%eax
0000214a	movl	%eax,(%esp)
0000214d	calll	0x0001140f	; symbol stub for: _free
00002152	cmpw	$0xdd,0xce(%ebp)
00002157	je	0x000023bb
0000215d	movl	$0x00000080,0xe8(%ebp)
00002164	shll	0xe8(%ebp)
00002167	cmpl	$__mh_bundle_header,0xd0(%ebp)
0000216b	je	0x00002178
0000216d	movl	0xd0(%ebp),%eax
00002170	movl	%eax,(%esp)
00002173	calll	0x0001140f	; symbol stub for: _free
00002178	movl	0xe8(%ebp),%eax
0000217b	movl	%eax,(%esp)
0000217e	calll	0x00011450	; symbol stub for: _malloc
00002183	movl	%eax,0xd0(%ebp)
00002186	movl	0xe8(%ebp),%eax
00002189	movl	0xd0(%ebp),%edx
0000218c	movl	%eax,0x08(%esp)
00002190	movl	%edx,0x04(%esp)
00002194	leal	0xffffff5a(%ebp),%eax
0000219a	movl	%eax,(%esp)
0000219d	calll	0x0001124d	; symbol stub for: _FSRefMakePath
000021a2	movl	%eax,0xe4(%ebp)
000021a5	cmpl	$0xfffff7c2,0xe4(%ebp)
000021ac	je	0x00002164
000021ae	jmp	0x000023bb
000021b3	movl	0xc8(%ebp),%eax
000021b6	cmpl	$0x6f626a20,%eax
000021bb	jne	0x000023bb
000021c1	leal	0xaa(%ebp),%eax
000021c4	movl	%eax,0x0c(%esp)
000021c8	movl	$0x6f626a20,0x08(%esp)
000021d0	movl	$0x66726f6d,0x04(%esp)
000021d8	movl	0x08(%ebp),%eax
000021db	movl	%eax,(%esp)
000021de	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
000021e3	movw	%ax,0xce(%ebp)
000021e7	cmpw	$__mh_bundle_header,0xce(%ebp)
000021ec	setne	%al
000021ef	movzbl	%al,%eax
000021f2	testl	%eax,%eax
000021f4	je	0x00002245
000021f6	movl	$__mh_bundle_header,0x1c(%esp)
000021fe	movl	$0x000000ad,0x18(%esp)
00002206	leal	0x0000ba57(%ebx),%eax
0000220c	movl	%eax,0x14(%esp)
00002210	movl	$__mh_bundle_header,0x10(%esp)
00002218	leal	0x0000baaa(%ebx),%eax
0000221e	movl	%eax,0x0c(%esp)
00002222	leal	0x0000babf(%ebx),%eax
00002228	movl	%eax,0x08(%esp)
0000222c	movl	$__mh_bundle_header,0x04(%esp)
00002234	movl	$0x3f2a3f2a,(%esp)
0000223b	calll	0x00011220	; symbol stub for: _DebugAssert
00002240	jmp	0x000023bb
00002245	leal	0xaa(%ebp),%eax
00002248	movl	%eax,(%esp)
0000224b	calll	0x00001d9e
00002250	movl	%eax,0xec(%ebp)
00002253	leal	0xaa(%ebp),%eax
00002256	movl	%eax,(%esp)
00002259	calll	0x00011059	; symbol stub for: _AEDisposeDesc
0000225e	cmpl	$__mh_bundle_header,0xec(%ebp)
00002262	je	0x000023bb
00002268	leal	0xbc(%ebp),%eax
0000226b	movl	%eax,0x0c(%esp)
0000226f	movl	$0x75746638,0x08(%esp)
00002277	movl	$0x73656c64,0x04(%esp)
0000227f	movl	0x08(%ebp),%eax
00002282	movl	%eax,(%esp)
00002285	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
0000228a	movw	%ax,0xce(%ebp)
0000228e	cmpw	$__mh_bundle_header,0xce(%ebp)
00002293	setne	%al
00002296	movzbl	%al,%eax
00002299	testl	%eax,%eax
0000229b	je	0x000022ec
0000229d	movl	$__mh_bundle_header,0x1c(%esp)
000022a5	movl	$0x000000bd,0x18(%esp)
000022ad	leal	0x0000ba57(%ebx),%eax
000022b3	movl	%eax,0x14(%esp)
000022b7	movl	$__mh_bundle_header,0x10(%esp)
000022bf	leal	0x0000bae0(%ebx),%eax
000022c5	movl	%eax,0x0c(%esp)
000022c9	leal	0x0000babf(%ebx),%eax
000022cf	movl	%eax,0x08(%esp)
000022d3	movl	$__mh_bundle_header,0x04(%esp)
000022db	movl	$0x3f2a3f2a,(%esp)
000022e2	calll	0x00011220	; symbol stub for: _DebugAssert
000022e7	jmp	0x000023b0
000022ec	leal	0xbc(%ebp),%eax
000022ef	movl	%eax,(%esp)
000022f2	calll	0x00011063	; symbol stub for: _AEGetDescDataSize
000022f7	movl	%eax,0xf0(%ebp)
000022fa	movl	0xec(%ebp),%eax
000022fd	movl	%eax,(%esp)
00002300	calll	0x000114eb	; symbol stub for: _strlen
00002305	movl	%eax,0xf4(%ebp)
00002308	movl	0xf0(%ebp),%eax
0000230b	addl	0xf4(%ebp),%eax
0000230e	addl	$0x02,%eax
00002311	movl	%eax,(%esp)
00002314	calll	0x00011450	; symbol stub for: _malloc
00002319	movl	%eax,0xd0(%ebp)
0000231c	movl	0xf4(%ebp),%eax
0000231f	movl	%eax,0x08(%esp)
00002323	movl	0xec(%ebp),%eax
00002326	movl	%eax,0x04(%esp)
0000232a	movl	0xd0(%ebp),%eax
0000232d	movl	%eax,(%esp)
00002330	calll	0x0001145a	; symbol stub for: _memcpy
00002335	movl	0xf4(%ebp),%eax
00002338	movl	%eax,%edx
0000233a	addl	0xd0(%ebp),%edx
0000233d	movl	$0x00000001,0x08(%esp)
00002345	leal	0x0000bafa(%ebx),%eax
0000234b	movl	%eax,0x04(%esp)
0000234f	movl	%edx,(%esp)
00002352	calll	0x0001145a	; symbol stub for: _memcpy
00002357	movl	0xf4(%ebp),%eax
0000235a	addl	0xd0(%ebp),%eax
0000235d	leal	0x01(%eax),%edx
00002360	movl	0xf0(%ebp),%eax
00002363	movl	%eax,0x08(%esp)
00002367	movl	%edx,0x04(%esp)
0000236b	leal	0xbc(%ebp),%eax
0000236e	movl	%eax,(%esp)
00002371	calll	0x0001105e	; symbol stub for: _AEGetDescData
00002376	movw	%ax,0xce(%ebp)
0000237a	cmpw	$__mh_bundle_header,0xce(%ebp)
0000237f	jne	0x00002393
00002381	movl	0xd0(%ebp),%edx
00002384	incl	%edx
00002385	movl	0xf0(%ebp),%eax
00002388	addl	0xf4(%ebp),%eax
0000238b	leal	(%edx,%eax),%eax
0000238e	movb	$__mh_bundle_header,(%eax)
00002391	jmp	0x000023a5
00002393	movl	0xd0(%ebp),%eax
00002396	movl	%eax,(%esp)
00002399	calll	0x0001140f	; symbol stub for: _free
0000239e	movl	$__mh_bundle_header,0xd0(%ebp)
000023a5	leal	0xbc(%ebp),%eax
000023a8	movl	%eax,(%esp)
000023ab	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000023b0	movl	0xec(%ebp),%eax
000023b3	movl	%eax,(%esp)
000023b6	calll	0x0001140f	; symbol stub for: _free
000023bb	movl	0xd0(%ebp),%eax
000023be	addl	$0x000002c4,%esp
000023c4	popl	%ebx
000023c5	leave
000023c6	ret
_GetFinderContext:
000023c7	pushl	%ebp
000023c8	movl	%esp,%ebp
000023ca	pushl	%esi
000023cb	pushl	%ebx
000023cc	subl	$0x000000c0,%esp
000023d2	calll	0x000023d7
000023d7	popl	%ebx
000023d8	movl	$__mh_bundle_header,0xe8(%ebp)
000023df	cmpl	$__mh_bundle_header,0x0c(%ebp)
000023e3	je	0x000023f7
000023e5	cmpl	$0x01,0x0c(%ebp)
000023e9	je	0x000023f7
000023eb	movl	$0x00000001,0xffffff64(%ebp)
000023f5	jmp	0x00002401
000023f7	movl	$__mh_bundle_header,0xffffff64(%ebp)
00002401	movl	0xffffff64(%ebp),%eax
00002407	testl	%eax,%eax
00002409	je	0x0000245a
0000240b	movl	$__mh_bundle_header,0x1c(%esp)
00002413	movl	$0x000000e1,0x18(%esp)
0000241b	leal	0x0000b42d(%ebx),%eax
00002421	movl	%eax,0x14(%esp)
00002425	movl	$__mh_bundle_header,0x10(%esp)
0000242d	leal	0x0000b4d2(%ebx),%eax
00002433	movl	%eax,0x0c(%esp)
00002437	leal	0x0000b4f1(%ebx),%eax
0000243d	movl	%eax,0x08(%esp)
00002441	movl	$__mh_bundle_header,0x04(%esp)
00002449	movl	$0x3f2a3f2a,(%esp)
00002450	calll	0x00011220	; symbol stub for: _DebugAssert
00002455	jmp	0x00002dfe
0000245a	movl	$__mh_bundle_header,0xd8(%ebp)
00002461	movl	$0x00000002,0xdc(%ebp)
00002468	leal	0xe0(%ebp),%eax
0000246b	movl	%eax,0x0c(%esp)
0000246f	movl	$0x00000008,0x08(%esp)
00002477	leal	0xd8(%ebp),%eax
0000247a	movl	%eax,0x04(%esp)
0000247e	movl	$0x70736e20,(%esp)
00002485	calll	0x0001104f	; symbol stub for: _AECreateDesc
0000248a	movw	%ax,0xee(%ebp)
0000248e	cmpw	$__mh_bundle_header,0xee(%ebp)
00002493	setne	%al
00002496	movzbl	%al,%eax
00002499	testl	%eax,%eax
0000249b	je	0x000024ec
0000249d	movl	$__mh_bundle_header,0x1c(%esp)
000024a5	movl	$0x000000f3,0x18(%esp)
000024ad	leal	0x0000b42d(%ebx),%eax
000024b3	movl	%eax,0x14(%esp)
000024b7	movl	$__mh_bundle_header,0x10(%esp)
000024bf	leal	0x0000b4d2(%ebx),%eax
000024c5	movl	%eax,0x0c(%esp)
000024c9	leal	0x0000b495(%ebx),%eax
000024cf	movl	%eax,0x08(%esp)
000024d3	movl	$__mh_bundle_header,0x04(%esp)
000024db	movl	$0x3f2a3f2a,(%esp)
000024e2	calll	0x00011220	; symbol stub for: _DebugAssert
000024e7	jmp	0x00002dfe
000024ec	cmpl	$0x01,0x0c(%ebp)
000024f0	jne	0x000024fb
000024f2	movl	$0x66767467,0xcc(%ebp)
000024f9	jmp	0x00002502
000024fb	movl	$0x73656c65,0xcc(%ebp)
00002502	movl	$0x6675726c,0xc8(%ebp)
00002509	leal	0xd0(%ebp),%eax
0000250c	movl	%eax,0x14(%esp)
00002510	movl	$__mh_bundle_header,0x10(%esp)
00002518	movl	$0xffffffff,0x0c(%esp)
00002520	leal	0xe0(%ebp),%eax
00002523	movl	%eax,0x08(%esp)
00002527	movl	$0x67657464,0x04(%esp)
0000252f	movl	$0x636f7265,(%esp)
00002536	calll	0x0001104a	; symbol stub for: _AECreateAppleEvent
0000253b	movw	%ax,0xee(%ebp)
0000253f	cmpw	$__mh_bundle_header,0xee(%ebp)
00002544	setne	%al
00002547	movzbl	%al,%eax
0000254a	testl	%eax,%eax
0000254c	je	0x0000259d
0000254e	movl	$__mh_bundle_header,0x1c(%esp)
00002556	movl	$0x0000010c,0x18(%esp)
0000255e	leal	0x0000b42d(%ebx),%eax
00002564	movl	%eax,0x14(%esp)
00002568	movl	$__mh_bundle_header,0x10(%esp)
00002570	leal	0x0000b533(%ebx),%eax
00002576	movl	%eax,0x0c(%esp)
0000257a	leal	0x0000b495(%ebx),%eax
00002580	movl	%eax,0x08(%esp)
00002584	movl	$__mh_bundle_header,0x04(%esp)
0000258c	movl	$0x3f2a3f2a,(%esp)
00002593	calll	0x00011220	; symbol stub for: _DebugAssert
00002598	jmp	0x00002df3
0000259d	cmpl	$0x01,0x0c(%ebp)
000025a1	jne	0x00002754
000025a7	movl	$0x00000001,0xffffff78(%ebp)
000025b1	leal	0xb8(%ebp),%eax
000025b4	movl	%eax,0x0c(%esp)
000025b8	movl	$0x00000004,0x08(%esp)
000025c0	leal	0xffffff78(%ebp),%eax
000025c6	movl	%eax,0x04(%esp)
000025ca	movl	$0x6c6f6e67,(%esp)
000025d1	calll	0x0001104f	; symbol stub for: _AECreateDesc
000025d6	movw	%ax,0xee(%ebp)
000025da	cmpw	$__mh_bundle_header,0xee(%ebp)
000025df	setne	%al
000025e2	movzbl	%al,%eax
000025e5	testl	%eax,%eax
000025e7	je	0x00002638
000025e9	movl	$__mh_bundle_header,0x1c(%esp)
000025f1	movl	$0x0000011f,0x18(%esp)
000025f9	leal	0x0000b42d(%ebx),%eax
000025ff	movl	%eax,0x14(%esp)
00002603	movl	$__mh_bundle_header,0x10(%esp)
0000260b	leal	0x0000b54e(%ebx),%eax
00002611	movl	%eax,0x0c(%esp)
00002615	leal	0x0000b495(%ebx),%eax
0000261b	movl	%eax,0x08(%esp)
0000261f	movl	$__mh_bundle_header,0x04(%esp)
00002627	movl	$0x3f2a3f2a,(%esp)
0000262e	calll	0x00011220	; symbol stub for: _DebugAssert
00002633	jmp	0x00002de8
00002638	leal	0xb0(%ebp),%eax
0000263b	movl	%eax,0x0c(%esp)
0000263f	movl	$__mh_bundle_header,0x08(%esp)
00002647	movl	$__mh_bundle_header,0x04(%esp)
0000264f	movl	$0x6e756c6c,(%esp)
00002656	calll	0x0001104f	; symbol stub for: _AECreateDesc
0000265b	movw	%ax,0xee(%ebp)
0000265f	cmpw	$__mh_bundle_header,0xee(%ebp)
00002664	setne	%al
00002667	movzbl	%al,%eax
0000266a	testl	%eax,%eax
0000266c	je	0x000026bd
0000266e	movl	$__mh_bundle_header,0x1c(%esp)
00002676	movl	$0x00000126,0x18(%esp)
0000267e	leal	0x0000b42d(%ebx),%eax
00002684	movl	%eax,0x14(%esp)
00002688	movl	$__mh_bundle_header,0x10(%esp)
00002690	leal	0x0000b568(%ebx),%eax
00002696	movl	%eax,0x0c(%esp)
0000269a	leal	0x0000b495(%ebx),%eax
000026a0	movl	%eax,0x08(%esp)
000026a4	movl	$__mh_bundle_header,0x04(%esp)
000026ac	movl	$0x3f2a3f2a,(%esp)
000026b3	calll	0x00011220	; symbol stub for: _DebugAssert
000026b8	jmp	0x00002dd7
000026bd	leal	0xc0(%ebp),%eax
000026c0	movl	%eax,0x14(%esp)
000026c4	movl	$0x00000001,0x10(%esp)
000026cc	leal	0xb8(%ebp),%eax
000026cf	movl	%eax,0x0c(%esp)
000026d3	movl	$0x696e6478,0x08(%esp)
000026db	leal	0xb0(%ebp),%eax
000026de	movl	%eax,0x04(%esp)
000026e2	movl	$0x6377696e,(%esp)
000026e9	calll	0x0001121b	; symbol stub for: _CreateObjSpecifier
000026ee	movw	%ax,0xee(%ebp)
000026f2	cmpw	$__mh_bundle_header,0xee(%ebp)
000026f7	setne	%al
000026fa	movzbl	%al,%eax
000026fd	testl	%eax,%eax
000026ff	je	0x000027d9
00002705	movl	$__mh_bundle_header,0x1c(%esp)
0000270d	movl	$0x00000136,0x18(%esp)
00002715	leal	0x0000b42d(%ebx),%eax
0000271b	movl	%eax,0x14(%esp)
0000271f	movl	$__mh_bundle_header,0x10(%esp)
00002727	leal	0x0000b585(%ebx),%eax
0000272d	movl	%eax,0x0c(%esp)
00002731	leal	0x0000b495(%ebx),%eax
00002737	movl	%eax,0x08(%esp)
0000273b	movl	$__mh_bundle_header,0x04(%esp)
00002743	movl	$0x3f2a3f2a,(%esp)
0000274a	calll	0x00011220	; symbol stub for: _DebugAssert
0000274f	jmp	0x00002dc6
00002754	leal	0xc0(%ebp),%eax
00002757	movl	%eax,0x0c(%esp)
0000275b	movl	$__mh_bundle_header,0x08(%esp)
00002763	movl	$__mh_bundle_header,0x04(%esp)
0000276b	movl	$0x6e756c6c,(%esp)
00002772	calll	0x0001104f	; symbol stub for: _AECreateDesc
00002777	movw	%ax,0xee(%ebp)
0000277b	cmpw	$__mh_bundle_header,0xee(%ebp)
00002780	setne	%al
00002783	movzbl	%al,%eax
00002786	testl	%eax,%eax
00002788	je	0x000027d9
0000278a	movl	$__mh_bundle_header,0x1c(%esp)
00002792	movl	$0x0000013f,0x18(%esp)
0000279a	leal	0x0000b42d(%ebx),%eax
000027a0	movl	%eax,0x14(%esp)
000027a4	movl	$__mh_bundle_header,0x10(%esp)
000027ac	leal	0x0000b585(%ebx),%eax
000027b2	movl	%eax,0x0c(%esp)
000027b6	leal	0x0000b495(%ebx),%eax
000027bc	movl	%eax,0x08(%esp)
000027c0	movl	$__mh_bundle_header,0x04(%esp)
000027c8	movl	$0x3f2a3f2a,(%esp)
000027cf	calll	0x00011220	; symbol stub for: _DebugAssert
000027d4	jmp	0x00002dc6
000027d9	leal	0xa8(%ebp),%eax
000027dc	movl	%eax,0x0c(%esp)
000027e0	movl	$0x00000004,0x08(%esp)
000027e8	leal	0xcc(%ebp),%eax
000027eb	movl	%eax,0x04(%esp)
000027ef	movl	$0x74797065,(%esp)
000027f6	calll	0x0001104f	; symbol stub for: _AECreateDesc
000027fb	movw	%ax,0xee(%ebp)
000027ff	cmpw	$__mh_bundle_header,0xee(%ebp)
00002804	setne	%al
00002807	movzbl	%al,%eax
0000280a	testl	%eax,%eax
0000280c	je	0x0000285d
0000280e	movl	$__mh_bundle_header,0x1c(%esp)
00002816	movl	$0x0000014e,0x18(%esp)
0000281e	leal	0x0000b42d(%ebx),%eax
00002824	movl	%eax,0x14(%esp)
00002828	movl	$__mh_bundle_header,0x10(%esp)
00002830	leal	0x0000b5a2(%ebx),%eax
00002836	movl	%eax,0x0c(%esp)
0000283a	leal	0x0000b495(%ebx),%eax
00002840	movl	%eax,0x08(%esp)
00002844	movl	$__mh_bundle_header,0x04(%esp)
0000284c	movl	$0x3f2a3f2a,(%esp)
00002853	calll	0x00011220	; symbol stub for: _DebugAssert
00002858	jmp	0x00002dbb
0000285d	leal	0xa0(%ebp),%eax
00002860	movl	%eax,0x14(%esp)
00002864	movl	$0x00000001,0x10(%esp)
0000286c	leal	0xa8(%ebp),%eax
0000286f	movl	%eax,0x0c(%esp)
00002873	movl	$0x70726f70,0x08(%esp)
0000287b	leal	0xc0(%ebp),%eax
0000287e	movl	%eax,0x04(%esp)
00002882	movl	$0x70726f70,(%esp)
00002889	calll	0x0001121b	; symbol stub for: _CreateObjSpecifier
0000288e	movw	%ax,0xee(%ebp)
00002892	cmpw	$__mh_bundle_header,0xee(%ebp)
00002897	setne	%al
0000289a	movzbl	%al,%eax
0000289d	testl	%eax,%eax
0000289f	je	0x000028f0
000028a1	movl	$__mh_bundle_header,0x1c(%esp)
000028a9	movl	$0x0000015e,0x18(%esp)
000028b1	leal	0x0000b42d(%ebx),%eax
000028b7	movl	%eax,0x14(%esp)
000028bb	movl	$__mh_bundle_header,0x10(%esp)
000028c3	leal	0x0000b5b8(%ebx),%eax
000028c9	movl	%eax,0x0c(%esp)
000028cd	leal	0x0000b495(%ebx),%eax
000028d3	movl	%eax,0x08(%esp)
000028d7	movl	$__mh_bundle_header,0x04(%esp)
000028df	movl	$0x3f2a3f2a,(%esp)
000028e6	calll	0x00011220	; symbol stub for: _DebugAssert
000028eb	jmp	0x00002db0
000028f0	leal	0xa0(%ebp),%eax
000028f3	movl	%eax,0x08(%esp)
000028f7	movl	$0x2d2d2d2d,0x04(%esp)
000028ff	leal	0xd0(%ebp),%eax
00002902	movl	%eax,(%esp)
00002905	calll	0x00011086	; symbol stub for: _AEPutParamDesc
0000290a	movw	%ax,0xee(%ebp)
0000290e	cmpw	$__mh_bundle_header,0xee(%ebp)
00002913	setne	%al
00002916	movzbl	%al,%eax
00002919	testl	%eax,%eax
0000291b	je	0x0000296c
0000291d	movl	$__mh_bundle_header,0x1c(%esp)
00002925	movl	$0x00000169,0x18(%esp)
0000292d	leal	0x0000b42d(%ebx),%eax
00002933	movl	%eax,0x14(%esp)
00002937	movl	$__mh_bundle_header,0x10(%esp)
0000293f	leal	0x0000b5ca(%ebx),%eax
00002945	movl	%eax,0x0c(%esp)
00002949	leal	0x0000b495(%ebx),%eax
0000294f	movl	%eax,0x08(%esp)
00002953	movl	$__mh_bundle_header,0x04(%esp)
0000295b	movl	$0x3f2a3f2a,(%esp)
00002962	calll	0x00011220	; symbol stub for: _DebugAssert
00002967	jmp	0x00002da5
0000296c	leal	0x98(%ebp),%eax
0000296f	movl	%eax,0x0c(%esp)
00002973	movl	$0x00000004,0x08(%esp)
0000297b	leal	0xc8(%ebp),%eax
0000297e	movl	%eax,0x04(%esp)
00002982	movl	$0x74797065,(%esp)
00002989	calll	0x0001104f	; symbol stub for: _AECreateDesc
0000298e	movw	%ax,0xee(%ebp)
00002992	cmpw	$__mh_bundle_header,0xee(%ebp)
00002997	setne	%al
0000299a	movzbl	%al,%eax
0000299d	testl	%eax,%eax
0000299f	je	0x000029f0
000029a1	movl	$__mh_bundle_header,0x1c(%esp)
000029a9	movl	$0x00000177,0x18(%esp)
000029b1	leal	0x0000b42d(%ebx),%eax
000029b7	movl	%eax,0x14(%esp)
000029bb	movl	$__mh_bundle_header,0x10(%esp)
000029c3	leal	0x0000b5ca(%ebx),%eax
000029c9	movl	%eax,0x0c(%esp)
000029cd	leal	0x0000b495(%ebx),%eax
000029d3	movl	%eax,0x08(%esp)
000029d7	movl	$__mh_bundle_header,0x04(%esp)
000029df	movl	$0x3f2a3f2a,(%esp)
000029e6	calll	0x00011220	; symbol stub for: _DebugAssert
000029eb	jmp	0x00002da5
000029f0	leal	0x90(%ebp),%eax
000029f3	movl	%eax,0x08(%esp)
000029f7	movl	$0x6c697374,0x04(%esp)
000029ff	leal	0x98(%ebp),%eax
00002a02	movl	%eax,(%esp)
00002a05	calll	0x00011040	; symbol stub for: _AECoerceDesc
00002a0a	movw	%ax,0xee(%ebp)
00002a0e	cmpw	$__mh_bundle_header,0xee(%ebp)
00002a13	setne	%al
00002a16	movzbl	%al,%eax
00002a19	testl	%eax,%eax
00002a1b	je	0x00002a6c
00002a1d	movl	$__mh_bundle_header,0x1c(%esp)
00002a25	movl	$0x00000184,0x18(%esp)
00002a2d	leal	0x0000b42d(%ebx),%eax
00002a33	movl	%eax,0x14(%esp)
00002a37	movl	$__mh_bundle_header,0x10(%esp)
00002a3f	leal	0x0000b5e7(%ebx),%eax
00002a45	movl	%eax,0x0c(%esp)
00002a49	leal	0x0000b495(%ebx),%eax
00002a4f	movl	%eax,0x08(%esp)
00002a53	movl	$__mh_bundle_header,0x04(%esp)
00002a5b	movl	$0x3f2a3f2a,(%esp)
00002a62	calll	0x00011220	; symbol stub for: _DebugAssert
00002a67	jmp	0x00002d9a
00002a6c	leal	0x98(%ebp),%eax
00002a6f	movl	%eax,(%esp)
00002a72	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002a77	leal	0x90(%ebp),%eax
00002a7a	movl	%eax,0x08(%esp)
00002a7e	movl	$0x72747970,0x04(%esp)
00002a86	leal	0xd0(%ebp),%eax
00002a89	movl	%eax,(%esp)
00002a8c	calll	0x00011086	; symbol stub for: _AEPutParamDesc
00002a91	movw	%ax,0xee(%ebp)
00002a95	cmpw	$__mh_bundle_header,0xee(%ebp)
00002a9a	setne	%al
00002a9d	movzbl	%al,%eax
00002aa0	testl	%eax,%eax
00002aa2	je	0x00002af3
00002aa4	movl	$__mh_bundle_header,0x1c(%esp)
00002aac	movl	$0x00000191,0x18(%esp)
00002ab4	leal	0x0000b42d(%ebx),%eax
00002aba	movl	%eax,0x14(%esp)
00002abe	movl	$__mh_bundle_header,0x10(%esp)
00002ac6	leal	0x0000b5fc(%ebx),%eax
00002acc	movl	%eax,0x0c(%esp)
00002ad0	leal	0x0000b495(%ebx),%eax
00002ad6	movl	%eax,0x08(%esp)
00002ada	movl	$__mh_bundle_header,0x04(%esp)
00002ae2	movl	$0x3f2a3f2a,(%esp)
00002ae9	calll	0x00011220	; symbol stub for: _DebugAssert
00002aee	jmp	0x00002d8f
00002af3	movl	$__mh_bundle_header,0x18(%esp)
00002afb	movl	$__mh_bundle_header,0x14(%esp)
00002b03	movl	$0xffffffff,0x10(%esp)
00002b0b	movl	$__mh_bundle_header,0x0c(%esp)
00002b13	movl	$0x00000003,0x08(%esp)
00002b1b	leal	0x88(%ebp),%eax
00002b1e	movl	%eax,0x04(%esp)
00002b22	leal	0xd0(%ebp),%eax
00002b25	movl	%eax,(%esp)
00002b28	calll	0x00011090	; symbol stub for: _AESend
00002b2d	movw	%ax,0xee(%ebp)
00002b31	cmpw	$__mh_bundle_header,0xee(%ebp)
00002b36	setne	%al
00002b39	movzbl	%al,%eax
00002b3c	testl	%eax,%eax
00002b3e	je	0x00002b8f
00002b40	movl	$__mh_bundle_header,0x1c(%esp)
00002b48	movl	$0x000001a2,0x18(%esp)
00002b50	leal	0x0000b42d(%ebx),%eax
00002b56	movl	%eax,0x14(%esp)
00002b5a	movl	$__mh_bundle_header,0x10(%esp)
00002b62	leal	0x0000b5fc(%ebx),%eax
00002b68	movl	%eax,0x0c(%esp)
00002b6c	leal	0x0000b495(%ebx),%eax
00002b72	movl	%eax,0x08(%esp)
00002b76	movl	$__mh_bundle_header,0x04(%esp)
00002b7e	movl	$0x3f2a3f2a,(%esp)
00002b85	calll	0x00011220	; symbol stub for: _DebugAssert
00002b8a	jmp	0x00002d8f
00002b8f	leal	0x80(%ebp),%eax
00002b92	movl	%eax,0x0c(%esp)
00002b96	movl	$0x6c697374,0x08(%esp)
00002b9e	movl	$0x2d2d2d2d,0x04(%esp)
00002ba6	leal	0x88(%ebp),%eax
00002ba9	movl	%eax,(%esp)
00002bac	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
00002bb1	movw	%ax,0xee(%ebp)
00002bb5	cmpw	$__mh_bundle_header,0xee(%ebp)
00002bba	setne	%al
00002bbd	movzbl	%al,%eax
00002bc0	testl	%eax,%eax
00002bc2	je	0x00002c13
00002bc4	movl	$__mh_bundle_header,0x1c(%esp)
00002bcc	movl	$0x000001ab,0x18(%esp)
00002bd4	leal	0x0000b42d(%ebx),%eax
00002bda	movl	%eax,0x14(%esp)
00002bde	movl	$__mh_bundle_header,0x10(%esp)
00002be6	leal	0x0000b60e(%ebx),%eax
00002bec	movl	%eax,0x0c(%esp)
00002bf0	leal	0x0000b495(%ebx),%eax
00002bf6	movl	%eax,0x08(%esp)
00002bfa	movl	$__mh_bundle_header,0x04(%esp)
00002c02	movl	$0x3f2a3f2a,(%esp)
00002c09	calll	0x00011220	; symbol stub for: _DebugAssert
00002c0e	jmp	0x00002d84
00002c13	leal	0xffffff7c(%ebp),%eax
00002c19	movl	%eax,0x04(%esp)
00002c1d	leal	0x80(%ebp),%eax
00002c20	movl	%eax,(%esp)
00002c23	calll	0x00011045	; symbol stub for: _AECountItems
00002c28	movw	%ax,0xee(%ebp)
00002c2c	cmpw	$__mh_bundle_header,0xee(%ebp)
00002c31	setne	%al
00002c34	movzbl	%al,%eax
00002c37	testl	%eax,%eax
00002c39	je	0x00002c8a
00002c3b	movl	$__mh_bundle_header,0x1c(%esp)
00002c43	movl	$0x000001b3,0x18(%esp)
00002c4b	leal	0x0000b42d(%ebx),%eax
00002c51	movl	%eax,0x14(%esp)
00002c55	movl	$__mh_bundle_header,0x10(%esp)
00002c5d	leal	0x0000b60e(%ebx),%eax
00002c63	movl	%eax,0x0c(%esp)
00002c67	leal	0x0000b495(%ebx),%eax
00002c6d	movl	%eax,0x08(%esp)
00002c71	movl	$__mh_bundle_header,0x04(%esp)
00002c79	movl	$0x3f2a3f2a,(%esp)
00002c80	calll	0x00011220	; symbol stub for: _DebugAssert
00002c85	jmp	0x00002d84
00002c8a	movl	0xffffff7c(%ebp),%eax
00002c90	shll	$0x02,%eax
00002c93	movl	%eax,(%esp)
00002c96	calll	0x00011450	; symbol stub for: _malloc
00002c9b	movl	%eax,0xe8(%ebp)
00002c9e	movl	0xffffff7c(%ebp),%edx
00002ca4	movl	0x08(%ebp),%eax
00002ca7	movl	%edx,(%eax)
00002ca9	movl	$__mh_bundle_header,0xf0(%ebp)
00002cb0	jmp	0x00002d6a
00002cb5	movl	0xf0(%ebp),%edx
00002cb8	incl	%edx
00002cb9	leal	0xffffff70(%ebp),%eax
00002cbf	movl	%eax,0x10(%esp)
00002cc3	leal	0xffffff6c(%ebp),%eax
00002cc9	movl	%eax,0x0c(%esp)
00002ccd	movl	$0x6f626a20,0x08(%esp)
00002cd5	movl	%edx,0x04(%esp)
00002cd9	leal	0x80(%ebp),%eax
00002cdc	movl	%eax,(%esp)
00002cdf	calll	0x00011068	; symbol stub for: _AEGetNthDesc
00002ce4	movw	%ax,0xee(%ebp)
00002ce8	cmpw	$__mh_bundle_header,0xee(%ebp)
00002ced	jne	0x00002d58
00002cef	leal	0xffffff70(%ebp),%eax
00002cf5	movl	%eax,(%esp)
00002cf8	calll	0x00001d9e
00002cfd	movl	%eax,0xf4(%ebp)
00002d00	cmpl	$__mh_bundle_header,0xf4(%ebp)
00002d04	je	0x00002d39
00002d06	movl	0xf0(%ebp),%eax
00002d09	shll	$0x02,%eax
00002d0c	movl	%eax,%esi
00002d0e	addl	0xe8(%ebp),%esi
00002d11	leal	0x0000ec39(%ebx),%eax
00002d17	movl	(%eax),%eax
00002d19	movl	(%eax),%edx
00002d1b	movl	0xf4(%ebp),%eax
00002d1e	movl	%eax,0x04(%esp)
00002d22	movl	%edx,(%esp)
00002d25	calll	0x00011167	; symbol stub for: _CFStringCreateWithFileSystemRepresentation
00002d2a	movl	%eax,(%esi)
00002d2c	movl	0xf4(%ebp),%eax
00002d2f	movl	%eax,(%esp)
00002d32	calll	0x0001140f	; symbol stub for: _free
00002d37	jmp	0x00002d48
00002d39	movl	0xf0(%ebp),%eax
00002d3c	shll	$0x02,%eax
00002d3f	addl	0xe8(%ebp),%eax
00002d42	movl	$__mh_bundle_header,(%eax)
00002d48	leal	0xffffff70(%ebp),%eax
00002d4e	movl	%eax,(%esp)
00002d51	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002d56	jmp	0x00002d67
00002d58	movl	0xf0(%ebp),%eax
00002d5b	shll	$0x02,%eax
00002d5e	addl	0xe8(%ebp),%eax
00002d61	movl	$__mh_bundle_header,(%eax)
00002d67	incl	0xf0(%ebp)
00002d6a	movl	0xffffff7c(%ebp),%eax
00002d70	cmpl	%eax,0xf0(%ebp)
00002d73	jl	0x00002cb5
00002d79	leal	0x80(%ebp),%eax
00002d7c	movl	%eax,(%esp)
00002d7f	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002d84	leal	0x88(%ebp),%eax
00002d87	movl	%eax,(%esp)
00002d8a	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002d8f	leal	0x90(%ebp),%eax
00002d92	movl	%eax,(%esp)
00002d95	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002d9a	leal	0x98(%ebp),%eax
00002d9d	movl	%eax,(%esp)
00002da0	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002da5	leal	0xa0(%ebp),%eax
00002da8	movl	%eax,(%esp)
00002dab	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002db0	leal	0xa8(%ebp),%eax
00002db3	movl	%eax,(%esp)
00002db6	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002dbb	leal	0xc0(%ebp),%eax
00002dbe	movl	%eax,(%esp)
00002dc1	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002dc6	cmpl	$0x01,0x0c(%ebp)
00002dca	jne	0x00002dd7
00002dcc	leal	0xb0(%ebp),%eax
00002dcf	movl	%eax,(%esp)
00002dd2	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002dd7	cmpl	$0x01,0x0c(%ebp)
00002ddb	jne	0x00002de8
00002ddd	leal	0xb8(%ebp),%eax
00002de0	movl	%eax,(%esp)
00002de3	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002de8	leal	0xd0(%ebp),%eax
00002deb	movl	%eax,(%esp)
00002dee	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002df3	leal	0xe0(%ebp),%eax
00002df6	movl	%eax,(%esp)
00002df9	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00002dfe	movl	0xe8(%ebp),%eax
00002e01	addl	$0x000000c0,%esp
00002e07	popl	%ebx
00002e08	popl	%esi
00002e09	leave
00002e0a	ret
_FreeFinderContext:
00002e0b	pushl	%ebp
00002e0c	movl	%esp,%ebp
00002e0e	subl	$0x28,%esp
00002e11	cmpl	$__mh_bundle_header,0x08(%ebp)
00002e15	je	0x00002e58
00002e17	movl	$__mh_bundle_header,0xf4(%ebp)
00002e1e	jmp	0x00002e45
00002e20	movl	0xf4(%ebp),%eax
00002e23	shll	$0x02,%eax
00002e26	addl	0x08(%ebp),%eax
00002e29	movl	(%eax),%eax
00002e2b	testl	%eax,%eax
00002e2d	je	0x00002e42
00002e2f	movl	0xf4(%ebp),%eax
00002e32	shll	$0x02,%eax
00002e35	addl	0x08(%ebp),%eax
00002e38	movl	(%eax),%eax
00002e3a	movl	%eax,(%esp)
00002e3d	calll	0x00011149	; symbol stub for: _CFRelease
00002e42	incl	0xf4(%ebp)
00002e45	movl	0xf4(%ebp),%eax
00002e48	cmpl	0x0c(%ebp),%eax
00002e4b	jl	0x00002e20
00002e4d	movl	0x08(%ebp),%eax
00002e50	movl	%eax,(%esp)
00002e53	calll	0x0001140f	; symbol stub for: _free
00002e58	leave
00002e59	ret
_from_hex:
00002e5a	pushl	%ebp
00002e5b	movl	%esp,%ebp
00002e5d	subl	$0x28,%esp
00002e60	movl	0x08(%ebp),%eax
00002e63	movb	%al,0xf4(%ebp)
00002e66	movsbl	0xf4(%ebp),%eax
00002e6a	movl	%eax,(%esp)
00002e6d	calll	_isdigit
00002e72	testl	%eax,%eax
00002e74	je	0x00002e85
00002e76	movzbl	0xf4(%ebp),%eax
00002e7a	subl	$0x30,%eax
00002e7d	movsbl	%al,%eax
00002e80	movl	%eax,0xf0(%ebp)
00002e83	jmp	0x00002e9a
00002e85	movsbl	0xf4(%ebp),%eax
00002e89	movl	%eax,(%esp)
00002e8c	calll	_tolower
00002e91	subl	$0x57,%eax
00002e94	movsbl	%al,%eax
00002e97	movl	%eax,0xf0(%ebp)
00002e9a	movl	0xf0(%ebp),%eax
00002e9d	leave
00002e9e	ret
_isdigit:
00002e9f	pushl	%ebp
00002ea0	movl	%esp,%ebp
00002ea2	subl	$0x18,%esp
00002ea5	movl	$0x00000400,0x04(%esp)
00002ead	movl	0x08(%ebp),%eax
00002eb0	movl	%eax,(%esp)
00002eb3	calll	___isctype
00002eb8	leave
00002eb9	ret
___isctype:
00002eba	pushl	%ebp
00002ebb	movl	%esp,%ebp
00002ebd	subl	$0x18,%esp
00002ec0	calll	0x00002ec5
00002ec5	popl	%ecx
00002ec6	cmpl	$__mh_bundle_header,0x08(%ebp)
00002eca	js	0x00002ef4
00002ecc	cmpl	$0x000000ff,0x08(%ebp)
00002ed3	jg	0x00002ef4
00002ed5	movl	0x08(%ebp),%edx
00002ed8	leal	0x0000e14f(%ecx),%eax
00002ede	movl	(%eax),%eax
00002ee0	movl	0x34(%eax,%edx,4),%eax
00002ee4	andl	0x0c(%ebp),%eax
00002ee7	testl	%eax,%eax
00002ee9	je	0x00002ef4
00002eeb	movl	$0x00000001,0xf4(%ebp)
00002ef2	jmp	0x00002efb
00002ef4	movl	$__mh_bundle_header,0xf4(%ebp)
00002efb	movl	0xf4(%ebp),%eax
00002efe	leave
00002eff	ret
_tolower:
00002f00	pushl	%ebp
00002f01	movl	%esp,%ebp
00002f03	subl	$0x18,%esp
00002f06	movl	0x08(%ebp),%eax
00002f09	movl	%eax,(%esp)
00002f0c	calll	0x000113a1	; symbol stub for: ___tolower
00002f11	leave
00002f12	ret
_GhettoURLDecode:
00002f13	pushl	%ebp
00002f14	movl	%esp,%ebp
00002f16	pushl	%esi
00002f17	subl	$0x34,%esp
00002f1a	movl	0x08(%ebp),%eax
00002f1d	movl	%eax,0xf4(%ebp)
00002f20	jmp	0x00002f7a
00002f22	movl	0x0c(%ebp),%eax
00002f25	movzbl	(%eax),%eax
00002f28	cmpb	$0x25,%al
00002f2a	jne	0x00002f69
00002f2c	movl	0x0c(%ebp),%eax
00002f2f	incl	%eax
00002f30	movzbl	(%eax),%eax
00002f33	movsbl	%al,%eax
00002f36	movl	%eax,(%esp)
00002f39	calll	0x00002e5a
00002f3e	movsbl	%al,%eax
00002f41	shll	$0x04,%eax
00002f44	movl	%eax,%esi
00002f46	movl	0x0c(%ebp),%eax
00002f49	addl	$0x02,%eax
00002f4c	movzbl	(%eax),%eax
00002f4f	movsbl	%al,%eax
00002f52	movl	%eax,(%esp)
00002f55	calll	0x00002e5a
00002f5a	movl	%esi,%edx
00002f5c	orl	%eax,%edx
00002f5e	movl	0x08(%ebp),%eax
00002f61	movb	%dl,(%eax)
00002f63	addl	$0x03,0x0c(%ebp)
00002f67	jmp	0x00002f77
00002f69	movl	0x0c(%ebp),%eax
00002f6c	movzbl	(%eax),%edx
00002f6f	movl	0x08(%ebp),%eax
00002f72	movb	%dl,(%eax)
00002f74	incl	0x0c(%ebp)
00002f77	incl	0x08(%ebp)
00002f7a	movl	0x08(%ebp),%eax
00002f7d	movl	0xf4(%ebp),%edx
00002f80	subl	%edx,%eax
00002f82	cmpl	0x10(%ebp),%eax
00002f85	jge	0x00002f91
00002f87	movl	0x0c(%ebp),%eax
00002f8a	movzbl	(%eax),%eax
00002f8d	testb	%al,%al
00002f8f	jne	0x00002f22
00002f91	movl	0x08(%ebp),%eax
00002f94	movl	0xf4(%ebp),%edx
00002f97	subl	%edx,%eax
00002f99	cmpl	0x10(%ebp),%eax
00002f9c	jge	0x00002fb3
00002f9e	movl	0x08(%ebp),%eax
00002fa1	movb	$__mh_bundle_header,(%eax)
00002fa4	movl	0x08(%ebp),%edx
00002fa7	movl	0xf4(%ebp),%eax
00002faa	movl	%edx,%ecx
00002fac	subl	%eax,%ecx
00002fae	movl	%ecx,0xe4(%ebp)
00002fb1	jmp	0x00002fba
00002fb3	movl	$0xffffffff,0xe4(%ebp)
00002fba	movl	0xe4(%ebp),%eax
00002fbd	addl	$0x34,%esp
00002fc0	popl	%esi
00002fc1	leave
00002fc2	ret
_toolbar_index_path:
00002fc3	pushl	%ebp
00002fc4	movl	%esp,%ebp
00002fc6	pushl	%esi
00002fc7	pushl	%ebx
00002fc8	subl	$0x30,%esp
00002fcb	calll	0x00002fd0
00002fd0	popl	%ebx
00002fd1	leal	0x0000aa30(%ebx),%eax
00002fd7	movl	%eax,(%esp)
00002fda	calll	0x0001141e	; symbol stub for: _getenv
00002fdf	movl	%eax,0xe8(%ebp)
00002fe2	leal	0x0000aa38(%ebx),%eax
00002fe8	movl	%eax,0xec(%ebp)
00002feb	movl	0xe8(%ebp),%eax
00002fee	movl	%eax,(%esp)
00002ff1	calll	0x000114eb	; symbol stub for: _strlen
00002ff6	movl	%eax,%esi
00002ff8	movl	0xec(%ebp),%eax
00002ffb	movl	%eax,(%esp)
00002ffe	calll	0x000114eb	; symbol stub for: _strlen
00003003	leal	(%esi,%eax),%eax
00003006	incl	%eax
00003007	movl	%eax,0xf0(%ebp)
0000300a	movl	0xf0(%ebp),%eax
0000300d	movl	%eax,(%esp)
00003010	calll	0x00011450	; symbol stub for: _malloc
00003015	movl	%eax,0xf4(%ebp)
00003018	movl	0xec(%ebp),%eax
0000301b	movl	%eax,0x10(%esp)
0000301f	movl	0xe8(%ebp),%eax
00003022	movl	%eax,0x0c(%esp)
00003026	leal	0x0000aa5d(%ebx),%eax
0000302c	movl	%eax,0x08(%esp)
00003030	movl	0xf0(%ebp),%eax
00003033	movl	%eax,0x04(%esp)
00003037	movl	0xf4(%ebp),%eax
0000303a	movl	%eax,(%esp)
0000303d	calll	0x000114c8	; symbol stub for: _snprintf
00003042	movl	0xf4(%ebp),%eax
00003045	addl	$0x30,%esp
00003048	popl	%ebx
00003049	popl	%esi
0000304a	leave
0000304b	ret
_get_insertion_index:
0000304c	pushl	%ebp
0000304d	movl	%esp,%ebp
0000304f	pushl	%ebx
00003050	subl	$0x24,%esp
00003053	calll	0x00003058
00003058	popl	%ebx
00003059	movl	$0xffffffff,0xec(%ebp)
00003060	calll	0x00002fc3
00003065	movl	%eax,0xf0(%ebp)
00003068	leal	0x0000a9da(%ebx),%eax
0000306e	movl	%eax,0x04(%esp)
00003072	movl	0xf0(%ebp),%eax
00003075	movl	%eax,(%esp)
00003078	calll	0x00011405	; symbol stub for: _fopen
0000307d	movl	%eax,0xf4(%ebp)
00003080	cmpl	$__mh_bundle_header,0xf4(%ebp)
00003084	je	0x000030b7
00003086	leal	0xe8(%ebp),%eax
00003089	movl	%eax,0x08(%esp)
0000308d	leal	0x0000a9dc(%ebx),%eax
00003093	movl	%eax,0x04(%esp)
00003097	movl	0xf4(%ebp),%eax
0000309a	movl	%eax,(%esp)
0000309d	calll	0x00011414	; symbol stub for: _fscanf
000030a2	testl	%eax,%eax
000030a4	je	0x000030ac
000030a6	movl	0xe8(%ebp),%eax
000030a9	movl	%eax,0xec(%ebp)
000030ac	movl	0xf4(%ebp),%eax
000030af	movl	%eax,(%esp)
000030b2	calll	0x000113f6	; symbol stub for: _fclose
000030b7	movl	0xf0(%ebp),%eax
000030ba	movl	%eax,(%esp)
000030bd	calll	0x0001140f	; symbol stub for: _free
000030c2	movl	0xec(%ebp),%eax
000030c5	addl	$0x24,%esp
000030c8	popl	%ebx
000030c9	leave
000030ca	ret
_store_insertion_index:
000030cb	pushl	%ebp
000030cc	movl	%esp,%ebp
000030ce	pushl	%ebx
000030cf	subl	$0x34,%esp
000030d2	calll	0x000030d7
000030d7	popl	%ebx
000030d8	calll	0x00002fc3
000030dd	movl	%eax,0xf0(%ebp)
000030e0	leal	0x0000a960(%ebx),%eax
000030e6	movl	%eax,0x04(%esp)
000030ea	movl	0xf0(%ebp),%eax
000030ed	movl	%eax,(%esp)
000030f0	calll	0x00011405	; symbol stub for: _fopen
000030f5	movl	%eax,0xf4(%ebp)
000030f8	cmpl	$__mh_bundle_header,0xf4(%ebp)
000030fc	sete	%al
000030ff	movzbl	%al,%eax
00003102	testl	%eax,%eax
00003104	je	0x00003152
00003106	movl	$__mh_bundle_header,0x1c(%esp)
0000310e	movl	$0x0000004b,0x18(%esp)
00003116	leal	0x0000a965(%ebx),%eax
0000311c	movl	%eax,0x14(%esp)
00003120	movl	$__mh_bundle_header,0x10(%esp)
00003128	leal	0x0000a9b8(%ebx),%eax
0000312e	movl	%eax,0x0c(%esp)
00003132	leal	0x0000a9cd(%ebx),%eax
00003138	movl	%eax,0x08(%esp)
0000313c	movl	$__mh_bundle_header,0x04(%esp)
00003144	movl	$0x3f2a3f2a,(%esp)
0000314b	calll	0x00011220	; symbol stub for: _DebugAssert
00003150	jmp	0x00003179
00003152	movl	0x08(%ebp),%eax
00003155	movl	%eax,0x08(%esp)
00003159	leal	0x0000a95d(%ebx),%eax
0000315f	movl	%eax,0x04(%esp)
00003163	movl	0xf4(%ebp),%eax
00003166	movl	%eax,(%esp)
00003169	calll	0x0001140a	; symbol stub for: _fprintf
0000316e	movl	0xf4(%ebp),%eax
00003171	movl	%eax,(%esp)
00003174	calll	0x000113f6	; symbol stub for: _fclose
00003179	movl	0xf0(%ebp),%eax
0000317c	movl	%eax,(%esp)
0000317f	calll	0x0001140f	; symbol stub for: _free
00003184	addl	$0x34,%esp
00003187	popl	%ebx
00003188	leave
00003189	ret
_MoreMenuBypassInitialize:
0000318a	pushl	%ebp
0000318b	movl	%esp,%ebp
0000318d	pushl	%ebx
0000318e	subl	$0x34,%esp
00003191	calll	0x00003196
00003196	popl	%ebx
00003197	leal	0x0000be96(%ebx),%eax
0000319d	movl	$__mh_bundle_header,0x04(%esp)
000031a5	movl	%eax,(%esp)
000031a8	calll	_getPreferenceBool
000031ad	testb	%al,%al
000031af	je	0x000031bc
000031b1	leal	0x0000de82(%ebx),%eax
000031b7	movl	(%eax),%eax
000031b9	movb	$0x01,(%eax)
000031bc	leal	0x0000bea6(%ebx),%eax
000031c2	movl	%eax,(%esp)
000031c5	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
000031ca	movl	%eax,0xf0(%ebp)
000031cd	cmpl	$__mh_bundle_header,0xf0(%ebp)
000031d1	je	0x00003206
000031d3	leal	0x0000beb6(%ebx),%eax
000031d9	leal	0x0000bec6(%ebx),%edx
000031df	leal	0x0000bed6(%ebx),%ecx
000031e5	movl	%eax,0x0c(%esp)
000031e9	movl	%edx,0x08(%esp)
000031ed	movl	%ecx,0x04(%esp)
000031f1	movl	0xf0(%ebp),%eax
000031f4	movl	%eax,(%esp)
000031f7	calll	0x000110d6	; symbol stub for: _CFBundleCopyLocalizedString
000031fc	movl	%eax,%edx
000031fe	leal	0x0000c54e(%ebx),%eax
00003204	movl	%edx,(%eax)
00003206	leal	0x0000c54e(%ebx),%eax
0000320c	movl	(%eax),%eax
0000320e	testl	%eax,%eax
00003210	jne	0x00003220
00003212	leal	0x0000bec6(%ebx),%edx
00003218	leal	0x0000c54e(%ebx),%eax
0000321e	movl	%edx,(%eax)
00003220	leal	0x0000c54e(%ebx),%eax
00003226	movl	(%eax),%eax
00003228	testl	%eax,%eax
0000322a	sete	%al
0000322d	movzbl	%al,%eax
00003230	testl	%eax,%eax
00003232	je	0x00003283
00003234	movl	$__mh_bundle_header,0x1c(%esp)
0000323c	movl	$0x0000003e,0x18(%esp)
00003244	leal	0x0000a976(%ebx),%eax
0000324a	movl	%eax,0x14(%esp)
0000324e	movl	$__mh_bundle_header,0x10(%esp)
00003256	leal	0x0000a9b3(%ebx),%eax
0000325c	movl	%eax,0x0c(%esp)
00003260	leal	0x0000a9c2(%ebx),%eax
00003266	movl	%eax,0x08(%esp)
0000326a	movl	$__mh_bundle_header,0x04(%esp)
00003272	movl	$0x3f2a3f2a,(%esp)
00003279	calll	0x00011220	; symbol stub for: _DebugAssert
0000327e	jmp	0x00003392
00003283	leal	0x0000c55a(%ebx),%eax
00003289	movl	%eax,0x0c(%esp)
0000328d	leal	0x000011dd(%ebx),%eax
00003293	movl	%eax,0x08(%esp)
00003297	movl	$__mh_bundle_header,0x04(%esp)
0000329f	leal	0x0000a9e9(%ebx),%eax
000032a5	movl	%eax,(%esp)
000032a8	calll	_mach_override
000032ad	movl	%eax,0xf4(%ebp)
000032b0	cmpl	$__mh_bundle_header,0xf4(%ebp)
000032b4	setne	%al
000032b7	movzbl	%al,%eax
000032ba	testl	%eax,%eax
000032bc	je	0x0000330d
000032be	movl	$__mh_bundle_header,0x1c(%esp)
000032c6	movl	$0x00000040,0x18(%esp)
000032ce	leal	0x0000a976(%ebx),%eax
000032d4	movl	%eax,0x14(%esp)
000032d8	movl	$__mh_bundle_header,0x10(%esp)
000032e0	leal	0x0000a9b3(%ebx),%eax
000032e6	movl	%eax,0x0c(%esp)
000032ea	leal	0x0000aa06(%ebx),%eax
000032f0	movl	%eax,0x08(%esp)
000032f4	movl	$__mh_bundle_header,0x04(%esp)
000032fc	movl	$0x3f2a3f2a,(%esp)
00003303	calll	0x00011220	; symbol stub for: _DebugAssert
00003308	jmp	0x00003392
0000330d	leal	0x0000c556(%ebx),%eax
00003313	movl	%eax,0x0c(%esp)
00003317	leal	0x000013de(%ebx),%eax
0000331d	movl	%eax,0x08(%esp)
00003321	movl	$__mh_bundle_header,0x04(%esp)
00003329	leal	0x0000aa36(%ebx),%eax
0000332f	movl	%eax,(%esp)
00003332	calll	_mach_override
00003337	movl	%eax,0xf4(%ebp)
0000333a	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000333e	setne	%al
00003341	movzbl	%al,%eax
00003344	testl	%eax,%eax
00003346	je	0x000033c2
00003348	movl	$__mh_bundle_header,0x1c(%esp)
00003350	movl	$0x00000042,0x18(%esp)
00003358	leal	0x0000a976(%ebx),%eax
0000335e	movl	%eax,0x14(%esp)
00003362	movl	$__mh_bundle_header,0x10(%esp)
0000336a	leal	0x0000a9b3(%ebx),%eax
00003370	movl	%eax,0x0c(%esp)
00003374	leal	0x0000aa06(%ebx),%eax
0000337a	movl	%eax,0x08(%esp)
0000337e	movl	$__mh_bundle_header,0x04(%esp)
00003386	movl	$0x3f2a3f2a,(%esp)
0000338d	calll	0x00011220	; symbol stub for: _DebugAssert
00003392	leal	0x0000de6e(%ebx),%eax
00003398	movl	(%eax),%eax
0000339a	leal	0x000000b0(%eax),%eax
000033a0	movl	%eax,0x0c(%esp)
000033a4	movl	$0x0000002a,0x08(%esp)
000033ac	movl	$0x00000001,0x04(%esp)
000033b4	leal	0x0000aa52(%ebx),%eax
000033ba	movl	%eax,(%esp)
000033bd	calll	0x00011419	; symbol stub for: _fwrite
000033c2	addl	$0x34,%esp
000033c5	popl	%ebx
000033c6	leave
000033c7	ret
_MoreMenuItemIndex:
000033c8	pushl	%ebp
000033c9	movl	%esp,%ebp
000033cb	pushl	%ebx
000033cc	subl	$0x44,%esp
000033cf	calll	0x000033d4
000033d4	popl	%ebx
000033d5	movw	$0x0001,0xee(%ebp)
000033db	jmp	0x00003497
000033e0	movzwl	0xee(%ebp),%edx
000033e4	leal	0xe8(%ebp),%eax
000033e7	movl	%eax,0x08(%esp)
000033eb	movl	%edx,0x04(%esp)
000033ef	movl	0x08(%ebp),%eax
000033f2	movl	%eax,(%esp)
000033f5	calll	0x000111f3	; symbol stub for: _CopyMenuItemTextAsCFString
000033fa	movl	%eax,0xf0(%ebp)
000033fd	movl	0xf0(%ebp),%eax
00003400	movl	%eax,0xf4(%ebp)
00003403	cmpl	$__mh_bundle_header,0xf4(%ebp)
00003407	setne	%al
0000340a	movzbl	%al,%eax
0000340d	testl	%eax,%eax
0000340f	je	0x0000345c
00003411	movl	0xf4(%ebp),%eax
00003414	movl	%eax,0x1c(%esp)
00003418	movl	$0x0000004e,0x18(%esp)
00003420	leal	0x0000a738(%ebx),%eax
00003426	movl	%eax,0x14(%esp)
0000342a	movl	$__mh_bundle_header,0x10(%esp)
00003432	leal	0x0000a775(%ebx),%eax
00003438	movl	%eax,0x0c(%esp)
0000343c	leal	0x0000ad80(%ebx),%eax
00003442	movl	%eax,0x08(%esp)
00003446	movl	$__mh_bundle_header,0x04(%esp)
0000344e	movl	$0x3f2a3f2a,(%esp)
00003455	calll	0x00011220	; symbol stub for: _DebugAssert
0000345a	jmp	0x000034b5
0000345c	movl	0xe8(%ebp),%edx
0000345f	leal	0x0000c310(%ebx),%eax
00003465	movl	(%eax),%eax
00003467	movl	$__mh_bundle_header,0x08(%esp)
0000346f	movl	%edx,0x04(%esp)
00003473	movl	%eax,(%esp)
00003476	calll	0x00011158	; symbol stub for: _CFStringCompare
0000347b	testl	%eax,%eax
0000347d	jne	0x00003488
0000347f	movzwl	0xee(%ebp),%eax
00003483	movl	%eax,0xe4(%ebp)
00003486	jmp	0x000034ec
00003488	movl	0xe8(%ebp),%eax
0000348b	movl	%eax,(%esp)
0000348e	calll	0x00011149	; symbol stub for: _CFRelease
00003493	incw	0xee(%ebp)
00003497	movl	0x08(%ebp),%eax
0000349a	movl	%eax,(%esp)
0000349d	calll	0x0001120c	; symbol stub for: _CountMenuItems
000034a2	cmpw	0xee(%ebp),%ax
000034a6	jae	0x000033e0
000034ac	movl	$__mh_bundle_header,0xe4(%ebp)
000034b3	jmp	0x000034ec
000034b5	leal	0x0000dc30(%ebx),%eax
000034bb	movl	(%eax),%eax
000034bd	leal	0x000000b0(%eax),%eax
000034c3	movl	%eax,0x0c(%esp)
000034c7	movl	$0x00000023,0x08(%esp)
000034cf	movl	$0x00000001,0x04(%esp)
000034d7	leal	0x0000a840(%ebx),%eax
000034dd	movl	%eax,(%esp)
000034e0	calll	0x00011419	; symbol stub for: _fwrite
000034e5	movl	$__mh_bundle_header,0xe4(%ebp)
000034ec	movl	0xe4(%ebp),%eax
000034ef	addl	$0x44,%esp
000034f2	popl	%ebx
000034f3	leave
000034f4	ret
_DropboxMenuEventHandler:
000034f5	pushl	%ebp
000034f6	movl	%esp,%ebp
000034f8	pushl	%esi
000034f9	pushl	%ebx
000034fa	addl	$0x80,%esp
000034fd	calll	0x00003502
00003502	popl	%ebx
00003503	movl	0x10(%ebp),%eax
00003506	movl	%eax,0xd0(%ebp)
00003509	movl	$__mh_bundle_header,0xd4(%ebp)
00003510	movl	0x0c(%ebp),%eax
00003513	movl	%eax,(%esp)
00003516	calll	0x00011270	; symbol stub for: _GetEventKind
0000351b	cmpl	$0x01,%eax
0000351e	jne	0x0000368b
00003524	leal	0xc2(%ebp),%eax
00003527	movl	%eax,0x18(%esp)
0000352b	movl	$__mh_bundle_header,0x14(%esp)
00003533	movl	$0x0000000e,0x10(%esp)
0000353b	movl	$__mh_bundle_header,0x0c(%esp)
00003543	movl	$0x68636d64,0x08(%esp)
0000354b	movl	$0x2d2d2d2d,0x04(%esp)
00003553	movl	0x0c(%ebp),%eax
00003556	movl	%eax,(%esp)
00003559	calll	0x00011275	; symbol stub for: _GetEventParameter
0000355e	movl	%eax,0xd4(%ebp)
00003561	movl	0xd4(%ebp),%eax
00003564	movl	%eax,0xd8(%ebp)
00003567	cmpl	$__mh_bundle_header,0xd8(%ebp)
0000356b	setne	%al
0000356e	movzbl	%al,%eax
00003571	testl	%eax,%eax
00003573	je	0x000035c3
00003575	movl	0xd8(%ebp),%eax
00003578	movl	%eax,0x1c(%esp)
0000357c	movl	$0x00000063,0x18(%esp)
00003584	leal	0x0000a60a(%ebx),%eax
0000358a	movl	%eax,0x14(%esp)
0000358e	movl	$__mh_bundle_header,0x10(%esp)
00003596	leal	0x0000a647(%ebx),%eax
0000359c	movl	%eax,0x0c(%esp)
000035a0	leal	0x0000ac52(%ebx),%eax
000035a6	movl	%eax,0x08(%esp)
000035aa	movl	$__mh_bundle_header,0x04(%esp)
000035b2	movl	$0x3f2a3f2a,(%esp)
000035b9	calll	0x00011220	; symbol stub for: _DebugAssert
000035be	jmp	0x000039f9
000035c3	leal	0xbc(%ebp),%eax
000035c6	movl	%eax,0x18(%esp)
000035ca	movl	$__mh_bundle_header,0x14(%esp)
000035d2	movl	$0x00000004,0x10(%esp)
000035da	movl	$__mh_bundle_header,0x0c(%esp)
000035e2	movl	$0x6d61676e,0x08(%esp)
000035ea	movl	$0x6d637478,0x04(%esp)
000035f2	movl	0x0c(%ebp),%eax
000035f5	movl	%eax,(%esp)
000035f8	calll	0x00011275	; symbol stub for: _GetEventParameter
000035fd	movl	%eax,0xd4(%ebp)
00003600	movl	0xd4(%ebp),%eax
00003603	movl	%eax,0xdc(%ebp)
00003606	cmpl	$__mh_bundle_header,0xdc(%ebp)
0000360a	setne	%al
0000360d	movzbl	%al,%eax
00003610	testl	%eax,%eax
00003612	je	0x00003662
00003614	movl	0xdc(%ebp),%eax
00003617	movl	%eax,0x1c(%esp)
0000361b	movl	$0x00000065,0x18(%esp)
00003623	leal	0x0000a60a(%ebx),%eax
00003629	movl	%eax,0x14(%esp)
0000362d	movl	$__mh_bundle_header,0x10(%esp)
00003635	leal	0x0000a647(%ebx),%eax
0000363b	movl	%eax,0x0c(%esp)
0000363f	leal	0x0000ac52(%ebx),%eax
00003645	movl	%eax,0x08(%esp)
00003649	movl	$__mh_bundle_header,0x04(%esp)
00003651	movl	$0x3f2a3f2a,(%esp)
00003658	calll	0x00011220	; symbol stub for: _DebugAssert
0000365d	jmp	0x000039f9
00003662	movl	0xc6(%ebp),%eax
00003665	movl	%eax,%edx
00003667	leal	0x0000c1e6(%ebx),%eax
0000366d	movl	(%eax),%eax
0000366f	movl	%edx,0x08(%esp)
00003673	movl	%eax,0x04(%esp)
00003677	movl	$__mh_bundle_header,(%esp)
0000367e	calll	_SVNPluginHandleSelection
00003683	movl	%eax,0xd4(%ebp)
00003686	jmp	0x000039f9
0000368b	movl	0x0c(%ebp),%eax
0000368e	movl	%eax,(%esp)
00003691	calll	0x00011270	; symbol stub for: _GetEventKind
00003696	cmpl	$0x09,%eax
00003699	jne	0x000039f9
0000369f	cmpl	$__mh_bundle_header,0xd0(%ebp)
000036a3	jne	0x00003742
000036a9	leal	0x0000db02(%ebx),%eax
000036af	movl	(%eax),%eax
000036b1	leal	0x000000b0(%eax),%eax
000036b7	movl	%eax,0x0c(%esp)
000036bb	movl	$0x0000001d,0x08(%esp)
000036c3	movl	$0x00000001,0x04(%esp)
000036cb	leal	0x0000a736(%ebx),%eax
000036d1	movl	%eax,(%esp)
000036d4	calll	0x00011419	; symbol stub for: _fwrite
000036d9	movl	$0xffffffce,0xd4(%ebp)
000036e0	movl	0xd4(%ebp),%eax
000036e3	movl	%eax,0xe4(%ebp)
000036e6	cmpl	$__mh_bundle_header,0xe4(%ebp)
000036ea	setne	%al
000036ed	movzbl	%al,%eax
000036f0	testl	%eax,%eax
000036f2	je	0x00003742
000036f4	movl	0xe4(%ebp),%eax
000036f7	movl	%eax,0x1c(%esp)
000036fb	movl	$0x0000006b,0x18(%esp)
00003703	leal	0x0000a60a(%ebx),%eax
00003709	movl	%eax,0x14(%esp)
0000370d	movl	$__mh_bundle_header,0x10(%esp)
00003715	leal	0x0000a647(%ebx),%eax
0000371b	movl	%eax,0x0c(%esp)
0000371f	leal	0x0000ac52(%ebx),%eax
00003725	movl	%eax,0x08(%esp)
00003729	movl	$__mh_bundle_header,0x04(%esp)
00003731	movl	$0x3f2a3f2a,(%esp)
00003738	calll	0x00011220	; symbol stub for: _DebugAssert
0000373d	jmp	0x000039f9
00003742	leal	0xb8(%ebp),%eax
00003745	movl	%eax,0x18(%esp)
00003749	movl	$__mh_bundle_header,0x14(%esp)
00003751	movl	$0x00000004,0x10(%esp)
00003759	movl	$__mh_bundle_header,0x0c(%esp)
00003761	movl	$0x6d656e75,0x08(%esp)
00003769	movl	$0x2d2d2d2d,0x04(%esp)
00003771	movl	0x0c(%ebp),%eax
00003774	movl	%eax,(%esp)
00003777	calll	0x00011275	; symbol stub for: _GetEventParameter
0000377c	movl	%eax,0xd4(%ebp)
0000377f	movl	0xd4(%ebp),%eax
00003782	movl	%eax,0xe8(%ebp)
00003785	cmpl	$__mh_bundle_header,0xe8(%ebp)
00003789	setne	%al
0000378c	movzbl	%al,%eax
0000378f	testl	%eax,%eax
00003791	je	0x000037e1
00003793	movl	0xe8(%ebp),%eax
00003796	movl	%eax,0x1c(%esp)
0000379a	movl	$0x0000006f,0x18(%esp)
000037a2	leal	0x0000a60a(%ebx),%eax
000037a8	movl	%eax,0x14(%esp)
000037ac	movl	$__mh_bundle_header,0x10(%esp)
000037b4	leal	0x0000a647(%ebx),%eax
000037ba	movl	%eax,0x0c(%esp)
000037be	leal	0x0000ac52(%ebx),%eax
000037c4	movl	%eax,0x08(%esp)
000037c8	movl	$__mh_bundle_header,0x04(%esp)
000037d0	movl	$0x3f2a3f2a,(%esp)
000037d7	calll	0x00011220	; symbol stub for: _DebugAssert
000037dc	jmp	0x000039f9
000037e1	movl	0xb8(%ebp),%eax
000037e4	movl	%eax,(%esp)
000037e7	calll	0x0001120c	; symbol stub for: _CountMenuItems
000037ec	movw	%ax,0xe2(%ebp)
000037f0	movzwl	0xe2(%ebp),%eax
000037f4	movl	0xb8(%ebp),%edx
000037f7	movl	%eax,0x08(%esp)
000037fb	movl	$0x00000001,0x04(%esp)
00003803	movl	%edx,(%esp)
00003806	calll	0x0001122a	; symbol stub for: _DeleteMenuItems
0000380b	movl	%eax,0xd4(%ebp)
0000380e	cmpl	$__mh_bundle_header,0xd4(%ebp)
00003812	je	0x0000384a
00003814	movzwl	0xe2(%ebp),%ecx
00003818	movl	0xb8(%ebp),%esi
0000381b	leal	0x0000db02(%ebx),%eax
00003821	movl	(%eax),%edx
00003823	leal	0x000000b0(%edx),%edx
00003829	movl	0xd4(%ebp),%eax
0000382c	movl	%eax,0x10(%esp)
00003830	movl	%ecx,0x0c(%esp)
00003834	movl	%esi,0x08(%esp)
00003838	leal	0x0000a756(%ebx),%eax
0000383e	movl	%eax,0x04(%esp)
00003842	movl	%edx,(%esp)
00003845	calll	0x0001140a	; symbol stub for: _fprintf
0000384a	movl	0xd0(%ebp),%edx
0000384d	addl	$0x04,%edx
00003850	leal	0xa8(%ebp),%eax
00003853	movl	%eax,0x04(%esp)
00003857	movl	%edx,(%esp)
0000385a	calll	0x00011045	; symbol stub for: _AECountItems
0000385f	cwtl
00003860	movl	%eax,0xd4(%ebp)
00003863	movl	0xd4(%ebp),%eax
00003866	movl	%eax,0xec(%ebp)
00003869	cmpl	$__mh_bundle_header,0xec(%ebp)
0000386d	setne	%al
00003870	movzbl	%al,%eax
00003873	testl	%eax,%eax
00003875	je	0x000038c5
00003877	movl	0xec(%ebp),%eax
0000387a	movl	%eax,0x1c(%esp)
0000387e	movl	$0x00000078,0x18(%esp)
00003886	leal	0x0000a60a(%ebx),%eax
0000388c	movl	%eax,0x14(%esp)
00003890	movl	$__mh_bundle_header,0x10(%esp)
00003898	leal	0x0000a647(%ebx),%eax
0000389e	movl	%eax,0x0c(%esp)
000038a2	leal	0x0000ac52(%ebx),%eax
000038a8	movl	%eax,0x08(%esp)
000038ac	movl	$__mh_bundle_header,0x04(%esp)
000038b4	movl	$0x3f2a3f2a,(%esp)
000038bb	calll	0x00011220	; symbol stub for: _DebugAssert
000038c0	jmp	0x000039f9
000038c5	movl	0xa8(%ebp),%eax
000038c8	testl	%eax,%eax
000038ca	jle	0x000039f9
000038d0	movl	0xd0(%ebp),%edx
000038d3	addl	$0x04,%edx
000038d6	leal	0xb0(%ebp),%eax
000038d9	movl	%eax,0x10(%esp)
000038dd	leal	0xac(%ebp),%eax
000038e0	movl	%eax,0x0c(%esp)
000038e4	movl	$0x7265636f,0x08(%esp)
000038ec	movl	$0x00000001,0x04(%esp)
000038f4	movl	%edx,(%esp)
000038f7	calll	0x00011068	; symbol stub for: _AEGetNthDesc
000038fc	cwtl
000038fd	movl	%eax,0xd4(%ebp)
00003900	movl	0xd4(%ebp),%eax
00003903	movl	%eax,0xf0(%ebp)
00003906	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000390a	setne	%al
0000390d	movzbl	%al,%eax
00003910	testl	%eax,%eax
00003912	je	0x00003962
00003914	movl	0xf0(%ebp),%eax
00003917	movl	%eax,0x1c(%esp)
0000391b	movl	$0x0000007b,0x18(%esp)
00003923	leal	0x0000a60a(%ebx),%eax
00003929	movl	%eax,0x14(%esp)
0000392d	movl	$__mh_bundle_header,0x10(%esp)
00003935	leal	0x0000a647(%ebx),%eax
0000393b	movl	%eax,0x0c(%esp)
0000393f	leal	0x0000ac52(%ebx),%eax
00003945	movl	%eax,0x08(%esp)
00003949	movl	$__mh_bundle_header,0x04(%esp)
00003951	movl	$0x3f2a3f2a,(%esp)
00003958	calll	0x00011220	; symbol stub for: _DebugAssert
0000395d	jmp	0x000039f9
00003962	leal	0xa0(%ebp),%eax
00003965	movl	%eax,0x0c(%esp)
00003969	movl	$0x2a2a2a2a,0x08(%esp)
00003971	movl	$0x636d7362,0x04(%esp)
00003979	leal	0xb0(%ebp),%eax
0000397c	movl	%eax,(%esp)
0000397f	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
00003984	cwtl
00003985	movl	%eax,0xd4(%ebp)
00003988	movl	0xd4(%ebp),%eax
0000398b	movl	%eax,0xf4(%ebp)
0000398e	cmpl	$__mh_bundle_header,0xf4(%ebp)
00003992	setne	%al
00003995	movzbl	%al,%eax
00003998	testl	%eax,%eax
0000399a	je	0x000039e7
0000399c	movl	0xf4(%ebp),%eax
0000399f	movl	%eax,0x1c(%esp)
000039a3	movl	$0x0000007e,0x18(%esp)
000039ab	leal	0x0000a60a(%ebx),%eax
000039b1	movl	%eax,0x14(%esp)
000039b5	movl	$__mh_bundle_header,0x10(%esp)
000039bd	leal	0x0000a647(%ebx),%eax
000039c3	movl	%eax,0x0c(%esp)
000039c7	leal	0x0000ac52(%ebx),%eax
000039cd	movl	%eax,0x08(%esp)
000039d1	movl	$__mh_bundle_header,0x04(%esp)
000039d9	movl	$0x3f2a3f2a,(%esp)
000039e0	calll	0x00011220	; symbol stub for: _DebugAssert
000039e5	jmp	0x000039f9
000039e7	movl	0xb8(%ebp),%eax
000039ea	movl	%eax,0x04(%esp)
000039ee	leal	0xa0(%ebp),%eax
000039f1	movl	%eax,(%esp)
000039f4	calll	_MenuFromAEDescList
000039f9	cmpl	$__mh_bundle_header,0xd4(%ebp)
000039fd	je	0x00003a2f
000039ff	cmpl	$0xffffd96e,0xd4(%ebp)
00003a06	je	0x00003a2f
00003a08	leal	0x0000db02(%ebx),%eax
00003a0e	movl	(%eax),%edx
00003a10	leal	0x000000b0(%edx),%edx
00003a16	movl	0xd4(%ebp),%eax
00003a19	movl	%eax,0x08(%esp)
00003a1d	leal	0x0000a78a(%ebx),%eax
00003a23	movl	%eax,0x04(%esp)
00003a27	movl	%edx,(%esp)
00003a2a	calll	0x0001140a	; symbol stub for: _fprintf
00003a2f	movl	0x0c(%ebp),%eax
00003a32	movl	%eax,0x04(%esp)
00003a36	movl	0x08(%ebp),%eax
00003a39	movl	%eax,(%esp)
00003a3c	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
00003a41	movl	%eax,0xd4(%ebp)
00003a44	movl	0xd4(%ebp),%eax
00003a47	subl	$0x80,%esp
00003a4a	popl	%ebx
00003a4b	popl	%esi
00003a4c	leave
00003a4d	ret
_TriggerMoreMenuAndPopulateAEDescList:
00003a4e	pushl	%ebp
00003a4f	movl	%esp,%ebp
00003a51	pushl	%ebx
00003a52	subl	$0x54,%esp
00003a55	calll	0x00003a5a
00003a5a	popl	%ebx
00003a5b	cmpl	$__mh_bundle_header,0x08(%ebp)
00003a5f	je	0x00003cb7
00003a65	movl	0x08(%ebp),%eax
00003a68	movl	%eax,(%esp)
00003a6b	calll	0x000033c8
00003a70	movw	%ax,0xde(%ebp)
00003a74	movl	$__mh_bundle_header,0xd0(%ebp)
00003a7b	movzwl	0xde(%ebp),%edx
00003a7f	leal	0xd0(%ebp),%eax
00003a82	movl	%eax,0x08(%esp)
00003a86	movl	%edx,0x04(%esp)
00003a8a	movl	0x08(%ebp),%eax
00003a8d	movl	%eax,(%esp)
00003a90	calll	0x00011298	; symbol stub for: _GetMenuItemHierarchicalMenu
00003a95	movl	%eax,0xd8(%ebp)
00003a98	movl	0xd8(%ebp),%eax
00003a9b	movl	%eax,0xe0(%ebp)
00003a9e	cmpl	$__mh_bundle_header,0xe0(%ebp)
00003aa2	setne	%al
00003aa5	movzbl	%al,%eax
00003aa8	testl	%eax,%eax
00003aaa	je	0x00003afa
00003aac	movl	0xe0(%ebp),%eax
00003aaf	movl	%eax,0x1c(%esp)
00003ab3	movl	$0x00000093,0x18(%esp)
00003abb	leal	0x0000a0b2(%ebx),%eax
00003ac1	movl	%eax,0x14(%esp)
00003ac5	movl	$__mh_bundle_header,0x10(%esp)
00003acd	leal	0x0000a0ef(%ebx),%eax
00003ad3	movl	%eax,0x0c(%esp)
00003ad7	leal	0x0000a6fa(%ebx),%eax
00003add	movl	%eax,0x08(%esp)
00003ae1	movl	$__mh_bundle_header,0x04(%esp)
00003ae9	movl	$0x3f2a3f2a,(%esp)
00003af0	calll	0x00011220	; symbol stub for: _DebugAssert
00003af5	jmp	0x00003dcc
00003afa	leal	0x0000d5b6(%ebx),%eax
00003b00	movl	(%eax),%eax
00003b02	movl	(%eax),%edx
00003b04	leal	0xd4(%ebp),%eax
00003b07	movl	%eax,0x18(%esp)
00003b0b	movl	$__mh_bundle_header,0x14(%esp)
00003b13	leal	0x0000b4a6(%ebx),%eax
00003b19	movsd	(%eax),%xmm0
00003b1d	movsd	%xmm0,0x0c(%esp)
00003b23	movl	$0x00000009,0x08(%esp)
00003b2b	movl	$0x6d656e75,0x04(%esp)
00003b33	movl	%edx,(%esp)
00003b36	calll	0x00011211	; symbol stub for: _CreateEvent
00003b3b	movl	%eax,0xd8(%ebp)
00003b3e	movl	0xd8(%ebp),%eax
00003b41	movl	%eax,0xe4(%ebp)
00003b44	cmpl	$__mh_bundle_header,0xe4(%ebp)
00003b48	setne	%al
00003b4b	movzbl	%al,%eax
00003b4e	testl	%eax,%eax
00003b50	je	0x00003ba0
00003b52	movl	0xe4(%ebp),%eax
00003b55	movl	%eax,0x1c(%esp)
00003b59	movl	$0x00000095,0x18(%esp)
00003b61	leal	0x0000a0b2(%ebx),%eax
00003b67	movl	%eax,0x14(%esp)
00003b6b	movl	$__mh_bundle_header,0x10(%esp)
00003b73	leal	0x0000a0ef(%ebx),%eax
00003b79	movl	%eax,0x0c(%esp)
00003b7d	leal	0x0000a6fa(%ebx),%eax
00003b83	movl	%eax,0x08(%esp)
00003b87	movl	$__mh_bundle_header,0x04(%esp)
00003b8f	movl	$0x3f2a3f2a,(%esp)
00003b96	calll	0x00011220	; symbol stub for: _DebugAssert
00003b9b	jmp	0x00003dcc
00003ba0	movl	0xd4(%ebp),%edx
00003ba3	leal	0xd0(%ebp),%eax
00003ba6	movl	%eax,0x10(%esp)
00003baa	movl	$0x00000004,0x0c(%esp)
00003bb2	movl	$0x6d656e75,0x08(%esp)
00003bba	movl	$0x2d2d2d2d,0x04(%esp)
00003bc2	movl	%edx,(%esp)
00003bc5	calll	0x00011383	; symbol stub for: _SetEventParameter
00003bca	movl	%eax,0xd8(%ebp)
00003bcd	movl	0xd8(%ebp),%eax
00003bd0	movl	%eax,0xe8(%ebp)
00003bd3	cmpl	$__mh_bundle_header,0xe8(%ebp)
00003bd7	setne	%al
00003bda	movzbl	%al,%eax
00003bdd	testl	%eax,%eax
00003bdf	je	0x00003c2f
00003be1	movl	0xe8(%ebp),%eax
00003be4	movl	%eax,0x1c(%esp)
00003be8	movl	$0x00000097,0x18(%esp)
00003bf0	leal	0x0000a0b2(%ebx),%eax
00003bf6	movl	%eax,0x14(%esp)
00003bfa	movl	$__mh_bundle_header,0x10(%esp)
00003c02	leal	0x0000a0ef(%ebx),%eax
00003c08	movl	%eax,0x0c(%esp)
00003c0c	leal	0x0000a6fa(%ebx),%eax
00003c12	movl	%eax,0x08(%esp)
00003c16	movl	$__mh_bundle_header,0x04(%esp)
00003c1e	movl	$0x3f2a3f2a,(%esp)
00003c25	calll	0x00011220	; symbol stub for: _DebugAssert
00003c2a	jmp	0x00003dcc
00003c2f	movl	0xd0(%ebp),%eax
00003c32	movl	%eax,(%esp)
00003c35	calll	0x00011289	; symbol stub for: _GetMenuEventTarget
00003c3a	movl	0xd4(%ebp),%edx
00003c3d	movl	%eax,0x04(%esp)
00003c41	movl	%edx,(%esp)
00003c44	calll	0x00011379	; symbol stub for: _SendEventToEventTarget
00003c49	movl	%eax,0xd8(%ebp)
00003c4c	cmpl	$0xffffd96e,0xd8(%ebp)
00003c53	je	0x00003cb7
00003c55	movl	0xd8(%ebp),%eax
00003c58	movl	%eax,0xec(%ebp)
00003c5b	cmpl	$__mh_bundle_header,0xec(%ebp)
00003c5f	setne	%al
00003c62	movzbl	%al,%eax
00003c65	testl	%eax,%eax
00003c67	je	0x00003cb7
00003c69	movl	0xec(%ebp),%eax
00003c6c	movl	%eax,0x1c(%esp)
00003c70	movl	$0x0000009a,0x18(%esp)
00003c78	leal	0x0000a0b2(%ebx),%eax
00003c7e	movl	%eax,0x14(%esp)
00003c82	movl	$__mh_bundle_header,0x10(%esp)
00003c8a	leal	0x0000a0ef(%ebx),%eax
00003c90	movl	%eax,0x0c(%esp)
00003c94	leal	0x0000a6fa(%ebx),%eax
00003c9a	movl	%eax,0x08(%esp)
00003c9e	movl	$__mh_bundle_header,0x04(%esp)
00003ca6	movl	$0x3f2a3f2a,(%esp)
00003cad	calll	0x00011220	; symbol stub for: _DebugAssert
00003cb2	jmp	0x00003dcc
00003cb7	leal	0x0000bc8e(%ebx),%eax
00003cbd	movl	(%eax),%eax
00003cbf	testl	%eax,%eax
00003cc1	je	0x00003dcc
00003cc7	movl	0x0c(%ebp),%eax
00003cca	movl	%eax,0x0c(%esp)
00003cce	movl	$__mh_bundle_header,0x08(%esp)
00003cd6	movl	$__mh_bundle_header,0x04(%esp)
00003cde	movl	$__mh_bundle_header,(%esp)
00003ce5	calll	0x00011054	; symbol stub for: _AECreateList
00003cea	cwtl
00003ceb	movl	%eax,0xd8(%ebp)
00003cee	movl	0xd8(%ebp),%eax
00003cf1	movl	%eax,0xf0(%ebp)
00003cf4	cmpl	$__mh_bundle_header,0xf0(%ebp)
00003cf8	setne	%al
00003cfb	movzbl	%al,%eax
00003cfe	testl	%eax,%eax
00003d00	je	0x00003d4d
00003d02	movl	0xf0(%ebp),%eax
00003d05	movl	%eax,0x1c(%esp)
00003d09	movl	$0x0000009f,0x18(%esp)
00003d11	leal	0x0000a0b2(%ebx),%eax
00003d17	movl	%eax,0x14(%esp)
00003d1b	movl	$__mh_bundle_header,0x10(%esp)
00003d23	leal	0x0000a0ef(%ebx),%eax
00003d29	movl	%eax,0x0c(%esp)
00003d2d	leal	0x0000a6fa(%ebx),%eax
00003d33	movl	%eax,0x08(%esp)
00003d37	movl	$__mh_bundle_header,0x04(%esp)
00003d3f	movl	$0x3f2a3f2a,(%esp)
00003d46	calll	0x00011220	; symbol stub for: _DebugAssert
00003d4b	jmp	0x00003dcc
00003d4d	leal	0x0000bc8e(%ebx),%eax
00003d53	movl	(%eax),%edx
00003d55	movl	0x0c(%ebp),%eax
00003d58	movl	%eax,0x08(%esp)
00003d5c	movl	%edx,0x04(%esp)
00003d60	movl	$__mh_bundle_header,(%esp)
00003d67	calll	_SVNPluginExamineContext
00003d6c	movl	%eax,0xd8(%ebp)
00003d6f	movl	0xd8(%ebp),%eax
00003d72	movl	%eax,0xf4(%ebp)
00003d75	cmpl	$__mh_bundle_header,0xf4(%ebp)
00003d79	setne	%al
00003d7c	movzbl	%al,%eax
00003d7f	testl	%eax,%eax
00003d81	je	0x00003dcc
00003d83	movl	0xf4(%ebp),%eax
00003d86	movl	%eax,0x1c(%esp)
00003d8a	movl	$0x000000a1,0x18(%esp)
00003d92	leal	0x0000a0b2(%ebx),%eax
00003d98	movl	%eax,0x14(%esp)
00003d9c	movl	$__mh_bundle_header,0x10(%esp)
00003da4	leal	0x0000a0ef(%ebx),%eax
00003daa	movl	%eax,0x0c(%esp)
00003dae	leal	0x0000a6fa(%ebx),%eax
00003db4	movl	%eax,0x08(%esp)
00003db8	movl	$__mh_bundle_header,0x04(%esp)
00003dc0	movl	$0x3f2a3f2a,(%esp)
00003dc7	calll	0x00011220	; symbol stub for: _DebugAssert
00003dcc	cmpl	$__mh_bundle_header,0xd8(%ebp)
00003dd0	je	0x00003e02
00003dd2	leal	0x0000d5aa(%ebx),%eax
00003dd8	movl	(%eax),%eax
00003dda	leal	0x000000b0(%eax),%eax
00003de0	movl	%eax,0x0c(%esp)
00003de4	movl	$0x0000002c,0x08(%esp)
00003dec	movl	$0x00000001,0x04(%esp)
00003df4	leal	0x0000a26e(%ebx),%eax
00003dfa	movl	%eax,(%esp)
00003dfd	calll	0x00011419	; symbol stub for: _fwrite
00003e02	movl	0xd8(%ebp),%eax
00003e05	addl	$0x54,%esp
00003e08	popl	%ebx
00003e09	leave
00003e0a	ret
_MainMenuEventHandler:
00003e0b	pushl	%ebp
00003e0c	movl	%esp,%ebp
00003e0e	pushl	%ebx
00003e0f	subl	$0x000000a4,%esp
00003e15	calll	0x00003e1a
00003e1a	popl	%ebx
00003e1b	movl	$__mh_bundle_header,0xc4(%ebp)
00003e22	movl	0x10(%ebp),%eax
00003e25	movl	%eax,0xc8(%ebp)
00003e28	movl	0x0c(%ebp),%eax
00003e2b	movl	%eax,(%esp)
00003e2e	calll	0x00011270	; symbol stub for: _GetEventKind
00003e33	cmpl	$0x09,%eax
00003e36	jne	0x0000431c
00003e3c	leal	0xb4(%ebp),%eax
00003e3f	movl	%eax,0x18(%esp)
00003e43	movl	$__mh_bundle_header,0x14(%esp)
00003e4b	movl	$0x00000004,0x10(%esp)
00003e53	movl	$__mh_bundle_header,0x0c(%esp)
00003e5b	movl	$0x6d656e75,0x08(%esp)
00003e63	movl	$0x2d2d2d2d,0x04(%esp)
00003e6b	movl	0x0c(%ebp),%eax
00003e6e	movl	%eax,(%esp)
00003e71	calll	0x00011275	; symbol stub for: _GetEventParameter
00003e76	movl	%eax,0xc4(%ebp)
00003e79	movl	0xc4(%ebp),%eax
00003e7c	movl	%eax,0xd0(%ebp)
00003e7f	cmpl	$__mh_bundle_header,0xd0(%ebp)
00003e83	setne	%al
00003e86	movzbl	%al,%eax
00003e89	testl	%eax,%eax
00003e8b	je	0x00003edb
00003e8d	movl	0xd0(%ebp),%eax
00003e90	movl	%eax,0x1c(%esp)
00003e94	movl	$0x000000b3,0x18(%esp)
00003e9c	leal	0x00009cf2(%ebx),%eax
00003ea2	movl	%eax,0x14(%esp)
00003ea6	movl	$__mh_bundle_header,0x10(%esp)
00003eae	leal	0x00009d2f(%ebx),%eax
00003eb4	movl	%eax,0x0c(%esp)
00003eb8	leal	0x0000a33a(%ebx),%eax
00003ebe	movl	%eax,0x08(%esp)
00003ec2	movl	$__mh_bundle_header,0x04(%esp)
00003eca	movl	$0x3f2a3f2a,(%esp)
00003ed1	calll	0x00011220	; symbol stub for: _DebugAssert
00003ed6	jmp	0x0000431c
00003edb	movl	0xb4(%ebp),%edx
00003ede	leal	0xac(%ebp),%eax
00003ee1	movl	%eax,0x04(%esp)
00003ee5	movl	%edx,(%esp)
00003ee8	calll	0x00003a4e
00003eed	leal	0xa8(%ebp),%eax
00003ef0	movl	%eax,0x04(%esp)
00003ef4	leal	0xac(%ebp),%eax
00003ef7	movl	%eax,(%esp)
00003efa	calll	0x00011045	; symbol stub for: _AECountItems
00003eff	cwtl
00003f00	movl	%eax,0xc4(%ebp)
00003f03	movl	0xc4(%ebp),%eax
00003f06	movl	%eax,0xd4(%ebp)
00003f09	cmpl	$__mh_bundle_header,0xd4(%ebp)
00003f0d	setne	%al
00003f10	movzbl	%al,%eax
00003f13	testl	%eax,%eax
00003f15	je	0x00003f65
00003f17	movl	0xd4(%ebp),%eax
00003f1a	movl	%eax,0x1c(%esp)
00003f1e	movl	$0x000000b9,0x18(%esp)
00003f26	leal	0x00009cf2(%ebx),%eax
00003f2c	movl	%eax,0x14(%esp)
00003f30	movl	$__mh_bundle_header,0x10(%esp)
00003f38	leal	0x00009d2f(%ebx),%eax
00003f3e	movl	%eax,0x0c(%esp)
00003f42	leal	0x0000a33a(%ebx),%eax
00003f48	movl	%eax,0x08(%esp)
00003f4c	movl	$__mh_bundle_header,0x04(%esp)
00003f54	movl	$0x3f2a3f2a,(%esp)
00003f5b	calll	0x00011220	; symbol stub for: _DebugAssert
00003f60	jmp	0x0000431c
00003f65	movl	0xa8(%ebp),%eax
00003f68	testl	%eax,%eax
00003f6a	jle	0x0000431c
00003f70	leal	0xfffff6db(%ebx),%eax
00003f76	movl	%eax,0xdc(%ebp)
00003f79	movl	$0x636d6473,0x92(%ebp)
00003f80	movl	$0x00000001,0x96(%ebp)
00003f87	movl	$0x6d656e75,0x9a(%ebp)
00003f8e	movl	$0x00000009,0x9e(%ebp)
00003f95	movl	0xb4(%ebp),%eax
00003f98	movl	%eax,(%esp)
00003f9b	calll	0x000033c8
00003fa0	movw	%ax,0xe2(%ebp)
00003fa4	leal	0xa4(%ebp),%eax
00003fa7	movl	%eax,0x08(%esp)
00003fab	movl	$__mh_bundle_header,0x04(%esp)
00003fb3	movl	$0xffffb00b,(%esp)
00003fba	calll	0x00011216	; symbol stub for: _CreateNewMenu
00003fbf	movl	%eax,0xc4(%ebp)
00003fc2	movl	0xc4(%ebp),%eax
00003fc5	movl	%eax,0xe4(%ebp)
00003fc8	cmpl	$__mh_bundle_header,0xe4(%ebp)
00003fcc	setne	%al
00003fcf	movzbl	%al,%eax
00003fd2	testl	%eax,%eax
00003fd4	je	0x00004024
00003fd6	movl	0xe4(%ebp),%eax
00003fd9	movl	%eax,0x1c(%esp)
00003fdd	movl	$0x000000c3,0x18(%esp)
00003fe5	leal	0x00009cf2(%ebx),%eax
00003feb	movl	%eax,0x14(%esp)
00003fef	movl	$__mh_bundle_header,0x10(%esp)
00003ff7	leal	0x00009d2f(%ebx),%eax
00003ffd	movl	%eax,0x0c(%esp)
00004001	leal	0x0000a33a(%ebx),%eax
00004007	movl	%eax,0x08(%esp)
0000400b	movl	$__mh_bundle_header,0x04(%esp)
00004013	movl	$0x3f2a3f2a,(%esp)
0000401a	calll	0x00011220	; symbol stub for: _DebugAssert
0000401f	jmp	0x0000431c
00004024	movl	$0x0000000c,(%esp)
0000402b	calll	0x00011450	; symbol stub for: _malloc
00004030	movl	%eax,0xd8(%ebp)
00004033	movl	0xb4(%ebp),%eax
00004036	movl	$__mh_bundle_header,0xb8(%ebp)
0000403d	movl	$__mh_bundle_header,0xbc(%ebp)
00004044	movl	$__mh_bundle_header,0xc0(%ebp)
0000404b	movl	%eax,0xb8(%ebp)
0000404e	movl	0xac(%ebp),%eax
00004051	movl	0xb0(%ebp),%edx
00004054	movl	%eax,0xbc(%ebp)
00004057	movl	%edx,0xc0(%ebp)
0000405a	movl	0xd8(%ebp),%edx
0000405d	movl	0xb8(%ebp),%eax
00004060	movl	%eax,(%edx)
00004062	movl	0xbc(%ebp),%eax
00004065	movl	%eax,0x04(%edx)
00004068	movl	0xc0(%ebp),%eax
0000406b	movl	%eax,0x08(%edx)
0000406e	movl	0xa4(%ebp),%eax
00004071	movl	%eax,(%esp)
00004074	calll	0x00011289	; symbol stub for: _GetMenuEventTarget
00004079	movl	%eax,%edx
0000407b	movl	$__mh_bundle_header,0x14(%esp)
00004083	movl	0xd8(%ebp),%eax
00004086	movl	%eax,0x10(%esp)
0000408a	leal	0x92(%ebp),%eax
0000408d	movl	%eax,0x0c(%esp)
00004091	movl	$0x00000002,0x08(%esp)
00004099	movl	0xdc(%ebp),%eax
0000409c	movl	%eax,0x04(%esp)
000040a0	movl	%edx,(%esp)
000040a3	calll	0x00011324	; symbol stub for: _InstallEventHandler
000040a8	movl	%eax,0xc4(%ebp)
000040ab	movl	0xc4(%ebp),%eax
000040ae	movl	%eax,0xe8(%ebp)
000040b1	cmpl	$__mh_bundle_header,0xe8(%ebp)
000040b5	setne	%al
000040b8	movzbl	%al,%eax
000040bb	testl	%eax,%eax
000040bd	je	0x0000410d
000040bf	movl	0xe8(%ebp),%eax
000040c2	movl	%eax,0x1c(%esp)
000040c6	movl	$0x000000c8,0x18(%esp)
000040ce	leal	0x00009cf2(%ebx),%eax
000040d4	movl	%eax,0x14(%esp)
000040d8	movl	$__mh_bundle_header,0x10(%esp)
000040e0	leal	0x00009d2f(%ebx),%eax
000040e6	movl	%eax,0x0c(%esp)
000040ea	leal	0x0000a33a(%ebx),%eax
000040f0	movl	%eax,0x08(%esp)
000040f4	movl	$__mh_bundle_header,0x04(%esp)
000040fc	movl	$0x3f2a3f2a,(%esp)
00004103	calll	0x00011220	; symbol stub for: _DebugAssert
00004108	jmp	0x0000431c
0000410d	leal	0x0000b70a(%ebx),%eax
00004113	movl	(%eax),%eax
00004115	movl	%eax,0x84(%ebp)
00004118	cmpl	$0x70,0x84(%ebp)
0000411c	je	0x00004129
0000411e	cmpl	$0x000000b4,0x84(%ebp)
00004125	je	0x00004163
00004127	jmp	0x000041a3
00004129	leal	0x0000b1ee(%ebx),%eax
0000412f	movl	(%eax),%eax
00004131	movl	0xb4(%ebp),%edx
00004134	movl	$__mh_bundle_header,0x10(%esp)
0000413c	movl	$__mh_bundle_header,0x0c(%esp)
00004144	movl	$__mh_bundle_header,0x08(%esp)
0000414c	movl	%eax,0x04(%esp)
00004150	movl	%edx,(%esp)
00004153	calll	0x0001131f	; symbol stub for: _InsertMenuItemTextWithCFString
00004158	movl	%eax,0xc4(%ebp)
0000415b	movw	$0x0001,0xa2(%ebp)
00004161	jmp	0x000041d4
00004163	movzwl	0xe2(%ebp),%eax
00004167	decl	%eax
00004168	movzwl	%ax,%ecx
0000416b	leal	0x0000b1ee(%ebx),%eax
00004171	movl	(%eax),%eax
00004173	movl	0xb4(%ebp),%edx
00004176	movl	$__mh_bundle_header,0x10(%esp)
0000417e	movl	$__mh_bundle_header,0x0c(%esp)
00004186	movl	%ecx,0x08(%esp)
0000418a	movl	%eax,0x04(%esp)
0000418e	movl	%edx,(%esp)
00004191	calll	0x0001131f	; symbol stub for: _InsertMenuItemTextWithCFString
00004196	movl	%eax,0xc4(%ebp)
00004199	movzwl	0xe2(%ebp),%eax
0000419d	movw	%ax,0xa2(%ebp)
000041a1	jmp	0x000041d4
000041a3	leal	0x0000b1ee(%ebx),%eax
000041a9	movl	(%eax),%edx
000041ab	movl	0xb4(%ebp),%ecx
000041ae	leal	0xa2(%ebp),%eax
000041b1	movl	%eax,0x10(%esp)
000041b5	movl	$__mh_bundle_header,0x0c(%esp)
000041bd	movl	$__mh_bundle_header,0x08(%esp)
000041c5	movl	%edx,0x04(%esp)
000041c9	movl	%ecx,(%esp)
000041cc	calll	0x0001109f	; symbol stub for: _AppendMenuItemTextWithCFString
000041d1	movl	%eax,0xc4(%ebp)
000041d4	movl	0xc4(%ebp),%eax
000041d7	movl	%eax,0xec(%ebp)
000041da	cmpl	$__mh_bundle_header,0xec(%ebp)
000041de	setne	%al
000041e1	movzbl	%al,%eax
000041e4	testl	%eax,%eax
000041e6	je	0x00004236
000041e8	movl	0xec(%ebp),%eax
000041eb	movl	%eax,0x1c(%esp)
000041ef	movl	$0x000000d6,0x18(%esp)
000041f7	leal	0x00009cf2(%ebx),%eax
000041fd	movl	%eax,0x14(%esp)
00004201	movl	$__mh_bundle_header,0x10(%esp)
00004209	leal	0x00009d2f(%ebx),%eax
0000420f	movl	%eax,0x0c(%esp)
00004213	leal	0x0000a33a(%ebx),%eax
00004219	movl	%eax,0x08(%esp)
0000421d	movl	$__mh_bundle_header,0x04(%esp)
00004225	movl	$0x3f2a3f2a,(%esp)
0000422c	calll	0x00011220	; symbol stub for: _DebugAssert
00004231	jmp	0x0000431c
00004236	leal	0x0000b8c6(%ebx),%eax
0000423c	movl	(%eax),%eax
0000423e	testl	%eax,%eax
00004240	je	0x0000429f
00004242	leal	0x0000b8c6(%ebx),%eax
00004248	movl	(%eax),%eax
0000424a	movl	%eax,%edx
0000424c	movzwl	0xa2(%ebp),%eax
00004250	movzwl	%ax,%eax
00004253	movl	0xb4(%ebp),%ecx
00004256	movl	%edx,0x0c(%esp)
0000425a	movl	$0x00000006,0x08(%esp)
00004262	movl	%eax,0x04(%esp)
00004266	movl	%ecx,(%esp)
00004269	calll	0x00011392	; symbol stub for: _SetMenuItemIconHandle
0000426e	cwtl
0000426f	movl	%eax,0xf0(%ebp)
00004272	cmpl	$__mh_bundle_header,0xf0(%ebp)
00004276	je	0x0000429f
00004278	leal	0x0000d1ea(%ebx),%eax
0000427e	movl	(%eax),%edx
00004280	leal	0x000000b0(%edx),%edx
00004286	movl	0xf0(%ebp),%eax
00004289	movl	%eax,0x08(%esp)
0000428d	leal	0x00009ede(%ebx),%eax
00004293	movl	%eax,0x04(%esp)
00004297	movl	%edx,(%esp)
0000429a	calll	0x0001140a	; symbol stub for: _fprintf
0000429f	movl	0xa4(%ebp),%ecx
000042a2	movzwl	0xa2(%ebp),%eax
000042a6	movzwl	%ax,%eax
000042a9	movl	0xb4(%ebp),%edx
000042ac	movl	%ecx,0x08(%esp)
000042b0	movl	%eax,0x04(%esp)
000042b4	movl	%edx,(%esp)
000042b7	calll	0x0001138d	; symbol stub for: _SetMenuItemHierarchicalMenu
000042bc	movl	%eax,0xc4(%ebp)
000042bf	movl	0xc4(%ebp),%eax
000042c2	movl	%eax,0xf4(%ebp)
000042c5	cmpl	$__mh_bundle_header,0xf4(%ebp)
000042c9	setne	%al
000042cc	movzbl	%al,%eax
000042cf	testl	%eax,%eax
000042d1	je	0x0000431c
000042d3	movl	0xf4(%ebp),%eax
000042d6	movl	%eax,0x1c(%esp)
000042da	movl	$0x000000de,0x18(%esp)
000042e2	leal	0x00009cf2(%ebx),%eax
000042e8	movl	%eax,0x14(%esp)
000042ec	movl	$__mh_bundle_header,0x10(%esp)
000042f4	leal	0x00009d2f(%ebx),%eax
000042fa	movl	%eax,0x0c(%esp)
000042fe	leal	0x0000a33a(%ebx),%eax
00004304	movl	%eax,0x08(%esp)
00004308	movl	$__mh_bundle_header,0x04(%esp)
00004310	movl	$0x3f2a3f2a,(%esp)
00004317	calll	0x00011220	; symbol stub for: _DebugAssert
0000431c	cmpl	$__mh_bundle_header,0xc4(%ebp)
00004320	je	0x00004352
00004322	leal	0x0000d1ea(%ebx),%eax
00004328	movl	(%eax),%eax
0000432a	leal	0x000000b0(%eax),%eax
00004330	movl	%eax,0x0c(%esp)
00004334	movl	$0x00000023,0x08(%esp)
0000433c	movl	$0x00000001,0x04(%esp)
00004344	leal	0x00009f06(%ebx),%eax
0000434a	movl	%eax,(%esp)
0000434d	calll	0x00011419	; symbol stub for: _fwrite
00004352	movl	0x0c(%ebp),%eax
00004355	movl	%eax,0x04(%esp)
00004359	movl	0x08(%ebp),%eax
0000435c	movl	%eax,(%esp)
0000435f	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
00004364	movl	%eax,0xcc(%ebp)
00004367	movl	0xcc(%ebp),%eax
0000436a	addl	$0x000000a4,%esp
00004370	popl	%ebx
00004371	leave
00004372	ret
_DropboxSetMenuItemTextWithCFString:
00004373	pushl	%ebp
00004374	movl	%esp,%ebp
00004376	pushl	%ebx
00004377	subl	$0x64,%esp
0000437a	calll	0x0000437f
0000437f	popl	%ebx
00004380	movl	0x0c(%ebp),%eax
00004383	movw	%ax,0xc4(%ebp)
00004387	movl	$__mh_bundle_header,0xe0(%ebp)
0000438e	leal	0xdc(%ebp),%eax
00004391	movl	%eax,0x04(%esp)
00004395	movl	0x08(%ebp),%eax
00004398	movl	%eax,(%esp)
0000439b	calll	0x000111f8	; symbol stub for: _CopyMenuTitleAsCFString
000043a0	movl	%eax,0xe0(%ebp)
000043a3	movl	0xe0(%ebp),%eax
000043a6	movl	%eax,0xe8(%ebp)
000043a9	cmpl	$__mh_bundle_header,0xe8(%ebp)
000043ad	setne	%al
000043b0	movzbl	%al,%eax
000043b3	testl	%eax,%eax
000043b5	je	0x00004405
000043b7	movl	0xe8(%ebp),%eax
000043ba	movl	%eax,0x1c(%esp)
000043be	movl	$0x000000ef,0x18(%esp)
000043c6	leal	0x0000978d(%ebx),%eax
000043cc	movl	%eax,0x14(%esp)
000043d0	movl	$__mh_bundle_header,0x10(%esp)
000043d8	leal	0x000097ca(%ebx),%eax
000043de	movl	%eax,0x0c(%esp)
000043e2	leal	0x00009dd5(%ebx),%eax
000043e8	movl	%eax,0x08(%esp)
000043ec	movl	$__mh_bundle_header,0x04(%esp)
000043f4	movl	$0x3f2a3f2a,(%esp)
000043fb	calll	0x00011220	; symbol stub for: _DebugAssert
00004400	jmp	0x0000451c
00004405	leal	0x0000acfd(%ebx),%eax
0000440b	movl	0xdc(%ebp),%edx
0000440e	movl	$__mh_bundle_header,0x08(%esp)
00004416	movl	%eax,0x04(%esp)
0000441a	movl	%edx,(%esp)
0000441d	calll	0x00011158	; symbol stub for: _CFStringCompare
00004422	testl	%eax,%eax
00004424	jne	0x0000451c
0000442a	leal	0x0000b365(%ebx),%eax
00004430	movl	(%eax),%edx
00004432	movl	$__mh_bundle_header,0x08(%esp)
0000443a	movl	0x10(%ebp),%eax
0000443d	movl	%eax,0x04(%esp)
00004441	movl	%edx,(%esp)
00004444	calll	0x00011158	; symbol stub for: _CFStringCompare
00004449	testl	%eax,%eax
0000444b	jne	0x0000451c
00004451	movl	$__mh_bundle_header,(%esp)
00004458	calll	0x00011450	; symbol stub for: _malloc
0000445d	movl	%eax,0xec(%ebp)
00004460	movl	$0x6d656e75,0xd4(%ebp)
00004467	movl	$0x00000009,0xd8(%ebp)
0000446e	leal	0xfffffa8c(%ebx),%eax
00004474	movl	%eax,0xf0(%ebp)
00004477	movl	0x08(%ebp),%eax
0000447a	movl	%eax,(%esp)
0000447d	calll	0x00011289	; symbol stub for: _GetMenuEventTarget
00004482	movl	%eax,%edx
00004484	movl	$__mh_bundle_header,0x14(%esp)
0000448c	movl	0xec(%ebp),%eax
0000448f	movl	%eax,0x10(%esp)
00004493	leal	0xd4(%ebp),%eax
00004496	movl	%eax,0x0c(%esp)
0000449a	movl	$0x00000001,0x08(%esp)
000044a2	movl	0xf0(%ebp),%eax
000044a5	movl	%eax,0x04(%esp)
000044a9	movl	%edx,(%esp)
000044ac	calll	0x00011324	; symbol stub for: _InstallEventHandler
000044b1	movl	%eax,0xe0(%ebp)
000044b4	leal	0x0000cc9d(%ebx),%eax
000044ba	movl	(%eax),%eax
000044bc	movb	$__mh_bundle_header,(%eax)
000044bf	movl	0xe0(%ebp),%eax
000044c2	movl	%eax,0xf4(%ebp)
000044c5	cmpl	$__mh_bundle_header,0xf4(%ebp)
000044c9	setne	%al
000044cc	movzbl	%al,%eax
000044cf	testl	%eax,%eax
000044d1	je	0x0000451c
000044d3	movl	0xf4(%ebp),%eax
000044d6	movl	%eax,0x1c(%esp)
000044da	movl	$0x000000f8,0x18(%esp)
000044e2	leal	0x0000978d(%ebx),%eax
000044e8	movl	%eax,0x14(%esp)
000044ec	movl	$__mh_bundle_header,0x10(%esp)
000044f4	leal	0x000097ca(%ebx),%eax
000044fa	movl	%eax,0x0c(%esp)
000044fe	leal	0x00009dd5(%ebx),%eax
00004504	movl	%eax,0x08(%esp)
00004508	movl	$__mh_bundle_header,0x04(%esp)
00004510	movl	$0x3f2a3f2a,(%esp)
00004517	calll	0x00011220	; symbol stub for: _DebugAssert
0000451c	cmpl	$__mh_bundle_header,0xe0(%ebp)
00004520	je	0x00004549
00004522	leal	0x0000cc85(%ebx),%eax
00004528	movl	(%eax),%edx
0000452a	leal	0x000000b0(%edx),%edx
00004530	movl	0xe0(%ebp),%eax
00004533	movl	%eax,0x08(%esp)
00004537	leal	0x000099d1(%ebx),%eax
0000453d	movl	%eax,0x04(%esp)
00004541	movl	%edx,(%esp)
00004544	calll	0x0001140a	; symbol stub for: _fprintf
00004549	leal	0x0000b371(%ebx),%eax
0000454f	movl	(%eax),%ecx
00004551	movzwl	0xc4(%ebp),%edx
00004555	movl	0x10(%ebp),%eax
00004558	movl	%eax,0x08(%esp)
0000455c	movl	%edx,0x04(%esp)
00004560	movl	0x08(%ebp),%eax
00004563	movl	%eax,(%esp)
00004566	call	*%ecx
00004568	movl	%eax,0xe4(%ebp)
0000456b	movl	0xe4(%ebp),%eax
0000456e	addl	$0x64,%esp
00004571	popl	%ebx
00004572	leave
00004573	ret
_DropboxContextualMenuInsertItems:
00004574	pushl	%ebp
00004575	movl	%esp,%ebp
00004577	pushl	%ebx
00004578	subl	$0x34,%esp
0000457b	calll	0x00004580
00004580	popl	%ebx
00004581	movl	0x0c(%ebp),%eax
00004584	movw	%ax,0xf4(%ebp)
00004588	leal	0x0000b168(%ebx),%edx
0000458e	movl	0x10(%ebp),%eax
00004591	movl	%eax,(%edx)
00004593	leal	0x0000b16c(%ebx),%eax
00004599	movl	(%eax),%ecx
0000459b	movzwl	0xf4(%ebp),%edx
0000459f	movl	0x1c(%ebp),%eax
000045a2	movl	%eax,0x14(%esp)
000045a6	movl	0x18(%ebp),%eax
000045a9	movl	%eax,0x10(%esp)
000045ad	movl	0x14(%ebp),%eax
000045b0	movl	%eax,0x0c(%esp)
000045b4	movl	0x10(%ebp),%eax
000045b7	movl	%eax,0x08(%esp)
000045bb	movl	%edx,0x04(%esp)
000045bf	movl	0x08(%ebp),%eax
000045c2	movl	%eax,(%esp)
000045c5	call	*%ecx
000045c7	addl	$0x34,%esp
000045ca	popl	%ebx
000045cb	leave
000045cc	ret
_MenuFromAEDescList:
000045cd	pushl	%ebp
000045ce	movl	%esp,%ebp
000045d0	pushl	%ebx
000045d1	subl	$0x000000a4,%esp
000045d7	calll	0x000045dc
000045dc	popl	%ebx
000045dd	movl	$__mh_bundle_header,0xb8(%ebp)
000045e4	leal	0xb4(%ebp),%eax
000045e7	movl	%eax,0x04(%esp)
000045eb	movl	0x08(%ebp),%eax
000045ee	movl	%eax,(%esp)
000045f1	calll	0x00011045	; symbol stub for: _AECountItems
000045f6	cwtl
000045f7	movl	%eax,0xb8(%ebp)
000045fa	movl	0xb8(%ebp),%eax
000045fd	movl	%eax,0xbc(%ebp)
00004600	cmpl	$__mh_bundle_header,0xbc(%ebp)
00004604	setne	%al
00004607	movzbl	%al,%eax
0000460a	testl	%eax,%eax
0000460c	je	0x0000465c
0000460e	movl	0xbc(%ebp),%eax
00004611	movl	%eax,0x1c(%esp)
00004615	movl	$0x00000110,0x18(%esp)
0000461d	leal	0x00009530(%ebx),%eax
00004623	movl	%eax,0x14(%esp)
00004627	movl	$__mh_bundle_header,0x10(%esp)
0000462f	leal	0x0000956d(%ebx),%eax
00004635	movl	%eax,0x0c(%esp)
00004639	leal	0x00009b78(%ebx),%eax
0000463f	movl	%eax,0x08(%esp)
00004643	movl	$__mh_bundle_header,0x04(%esp)
0000464b	movl	$0x3f2a3f2a,(%esp)
00004652	calll	0x00011220	; symbol stub for: _DebugAssert
00004657	jmp	0x00004c5c
0000465c	movl	$0x00000001,0xc0(%ebp)
00004663	jmp	0x00004c50
00004668	leal	0xac(%ebp),%eax
0000466b	movl	%eax,0x10(%esp)
0000466f	leal	0xa8(%ebp),%eax
00004672	movl	%eax,0x0c(%esp)
00004676	movl	$0x7265636f,0x08(%esp)
0000467e	movl	0xc0(%ebp),%eax
00004681	movl	%eax,0x04(%esp)
00004685	movl	0x08(%ebp),%eax
00004688	movl	%eax,(%esp)
0000468b	calll	0x00011068	; symbol stub for: _AEGetNthDesc
00004690	cwtl
00004691	movl	%eax,0xb8(%ebp)
00004694	movl	0xb8(%ebp),%eax
00004697	movl	%eax,0xd0(%ebp)
0000469a	cmpl	$__mh_bundle_header,0xd0(%ebp)
0000469e	setne	%al
000046a1	movzbl	%al,%eax
000046a4	testl	%eax,%eax
000046a6	je	0x000046f6
000046a8	movl	0xd0(%ebp),%eax
000046ab	movl	%eax,0x1c(%esp)
000046af	movl	$0x00000119,0x18(%esp)
000046b7	leal	0x00009530(%ebx),%eax
000046bd	movl	%eax,0x14(%esp)
000046c1	movl	$__mh_bundle_header,0x10(%esp)
000046c9	leal	0x0000956d(%ebx),%eax
000046cf	movl	%eax,0x0c(%esp)
000046d3	leal	0x00009b78(%ebx),%eax
000046d9	movl	%eax,0x08(%esp)
000046dd	movl	$__mh_bundle_header,0x04(%esp)
000046e5	movl	$0x3f2a3f2a,(%esp)
000046ec	calll	0x00011220	; symbol stub for: _DebugAssert
000046f1	jmp	0x00004c5c
000046f6	leal	0x94(%ebp),%eax
000046f9	movl	%eax,0x0c(%esp)
000046fd	movl	$0x75747874,0x08(%esp)
00004705	movl	$0x706e616d,0x04(%esp)
0000470d	leal	0xac(%ebp),%eax
00004710	movl	%eax,(%esp)
00004713	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
00004718	cwtl
00004719	movl	%eax,0xb8(%ebp)
0000471c	movl	0xb8(%ebp),%eax
0000471f	movl	%eax,0xd4(%ebp)
00004722	cmpl	$__mh_bundle_header,0xd4(%ebp)
00004726	setne	%al
00004729	movzbl	%al,%eax
0000472c	testl	%eax,%eax
0000472e	je	0x0000477e
00004730	movl	0xd4(%ebp),%eax
00004733	movl	%eax,0x1c(%esp)
00004737	movl	$0x0000011c,0x18(%esp)
0000473f	leal	0x00009530(%ebx),%eax
00004745	movl	%eax,0x14(%esp)
00004749	movl	$__mh_bundle_header,0x10(%esp)
00004751	leal	0x0000956d(%ebx),%eax
00004757	movl	%eax,0x0c(%esp)
0000475b	leal	0x00009b78(%ebx),%eax
00004761	movl	%eax,0x08(%esp)
00004765	movl	$__mh_bundle_header,0x04(%esp)
0000476d	movl	$0x3f2a3f2a,(%esp)
00004774	calll	0x00011220	; symbol stub for: _DebugAssert
00004779	jmp	0x00004c5c
0000477e	leal	0x94(%ebp),%eax
00004781	movl	%eax,(%esp)
00004784	calll	0x00011063	; symbol stub for: _AEGetDescDataSize
00004789	movl	%eax,0xc4(%ebp)
0000478c	movl	0xc4(%ebp),%eax
0000478f	movl	%eax,(%esp)
00004792	calll	0x00011450	; symbol stub for: _malloc
00004797	movl	%eax,0xc8(%ebp)
0000479a	movl	0xc4(%ebp),%eax
0000479d	movl	%eax,0x08(%esp)
000047a1	movl	0xc8(%ebp),%eax
000047a4	movl	%eax,0x04(%esp)
000047a8	leal	0x94(%ebp),%eax
000047ab	movl	%eax,(%esp)
000047ae	calll	0x0001105e	; symbol stub for: _AEGetDescData
000047b3	cwtl
000047b4	movl	%eax,0xb8(%ebp)
000047b7	movl	0xb8(%ebp),%eax
000047ba	movl	%eax,0xd8(%ebp)
000047bd	cmpl	$__mh_bundle_header,0xd8(%ebp)
000047c1	setne	%al
000047c4	movzbl	%al,%eax
000047c7	testl	%eax,%eax
000047c9	je	0x00004819
000047cb	movl	0xd8(%ebp),%eax
000047ce	movl	%eax,0x1c(%esp)
000047d2	movl	$0x00000120,0x18(%esp)
000047da	leal	0x00009530(%ebx),%eax
000047e0	movl	%eax,0x14(%esp)
000047e4	movl	$__mh_bundle_header,0x10(%esp)
000047ec	leal	0x0000956d(%ebx),%eax
000047f2	movl	%eax,0x0c(%esp)
000047f6	leal	0x00009b78(%ebx),%eax
000047fc	movl	%eax,0x08(%esp)
00004800	movl	$__mh_bundle_header,0x04(%esp)
00004808	movl	$0x3f2a3f2a,(%esp)
0000480f	calll	0x00011220	; symbol stub for: _DebugAssert
00004814	jmp	0x00004c5c
00004819	movl	0xc4(%ebp),%eax
0000481c	shrl	%eax
0000481e	movl	%eax,%edx
00004820	leal	0x0000ca34(%ebx),%eax
00004826	movl	(%eax),%eax
00004828	movl	(%eax),%ecx
0000482a	movl	%edx,0x08(%esp)
0000482e	movl	0xc8(%ebp),%eax
00004831	movl	%eax,0x04(%esp)
00004835	movl	%ecx,(%esp)
00004838	calll	0x00011162	; symbol stub for: _CFStringCreateWithCharacters
0000483d	movl	%eax,0xcc(%ebp)
00004840	cmpl	$__mh_bundle_header,0xcc(%ebp)
00004844	je	0x00004c5c
0000484a	leal	0x92(%ebp),%eax
0000484d	movl	%eax,0x10(%esp)
00004851	movl	$__mh_bundle_header,0x0c(%esp)
00004859	movl	$__mh_bundle_header,0x08(%esp)
00004861	movl	0xcc(%ebp),%eax
00004864	movl	%eax,0x04(%esp)
00004868	movl	0x0c(%ebp),%eax
0000486b	movl	%eax,(%esp)
0000486e	calll	0x0001109f	; symbol stub for: _AppendMenuItemTextWithCFString
00004873	movl	%eax,0xb8(%ebp)
00004876	movl	0xb8(%ebp),%eax
00004879	movl	%eax,0xdc(%ebp)
0000487c	cmpl	$__mh_bundle_header,0xdc(%ebp)
00004880	setne	%al
00004883	movzbl	%al,%eax
00004886	testl	%eax,%eax
00004888	je	0x000048d8
0000488a	movl	0xdc(%ebp),%eax
0000488d	movl	%eax,0x1c(%esp)
00004891	movl	$0x00000126,0x18(%esp)
00004899	leal	0x00009530(%ebx),%eax
0000489f	movl	%eax,0x14(%esp)
000048a3	movl	$__mh_bundle_header,0x10(%esp)
000048ab	leal	0x0000956d(%ebx),%eax
000048b1	movl	%eax,0x0c(%esp)
000048b5	leal	0x00009b78(%ebx),%eax
000048bb	movl	%eax,0x08(%esp)
000048bf	movl	$__mh_bundle_header,0x04(%esp)
000048c7	movl	$0x3f2a3f2a,(%esp)
000048ce	calll	0x00011220	; symbol stub for: _DebugAssert
000048d3	jmp	0x00004c5c
000048d8	leal	0x8a(%ebp),%eax
000048db	movl	%eax,0x0c(%esp)
000048df	movl	$0x2a2a2a2a,0x08(%esp)
000048e7	movl	$0x636d7362,0x04(%esp)
000048ef	leal	0xac(%ebp),%eax
000048f2	movl	%eax,(%esp)
000048f5	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
000048fa	cwtl
000048fb	movl	%eax,0xb8(%ebp)
000048fe	cmpl	$__mh_bundle_header,0xb8(%ebp)
00004902	jne	0x00004a85
00004908	leal	0x84(%ebp),%eax
0000490b	movl	%eax,0x08(%esp)
0000490f	movl	$__mh_bundle_header,0x04(%esp)
00004917	movl	$__mh_bundle_header,(%esp)
0000491e	calll	0x00011216	; symbol stub for: _CreateNewMenu
00004923	movl	%eax,0xb8(%ebp)
00004926	movl	0xb8(%ebp),%eax
00004929	movl	%eax,0xe0(%ebp)
0000492c	cmpl	$__mh_bundle_header,0xe0(%ebp)
00004930	setne	%al
00004933	movzbl	%al,%eax
00004936	testl	%eax,%eax
00004938	je	0x00004988
0000493a	movl	0xe0(%ebp),%eax
0000493d	movl	%eax,0x1c(%esp)
00004941	movl	$0x0000012d,0x18(%esp)
00004949	leal	0x00009530(%ebx),%eax
0000494f	movl	%eax,0x14(%esp)
00004953	movl	$__mh_bundle_header,0x10(%esp)
0000495b	leal	0x0000956d(%ebx),%eax
00004961	movl	%eax,0x0c(%esp)
00004965	leal	0x00009b78(%ebx),%eax
0000496b	movl	%eax,0x08(%esp)
0000496f	movl	$__mh_bundle_header,0x04(%esp)
00004977	movl	$0x3f2a3f2a,(%esp)
0000497e	calll	0x00011220	; symbol stub for: _DebugAssert
00004983	jmp	0x00004c5c
00004988	movl	0x84(%ebp),%eax
0000498b	movl	%eax,0x04(%esp)
0000498f	leal	0x8a(%ebp),%eax
00004992	movl	%eax,(%esp)
00004995	calll	0x000045cd
0000499a	movl	%eax,0xb8(%ebp)
0000499d	movl	0xb8(%ebp),%eax
000049a0	movl	%eax,0xe4(%ebp)
000049a3	cmpl	$__mh_bundle_header,0xe4(%ebp)
000049a7	setne	%al
000049aa	movzbl	%al,%eax
000049ad	testl	%eax,%eax
000049af	je	0x000049ff
000049b1	movl	0xe4(%ebp),%eax
000049b4	movl	%eax,0x1c(%esp)
000049b8	movl	$0x00000130,0x18(%esp)
000049c0	leal	0x00009530(%ebx),%eax
000049c6	movl	%eax,0x14(%esp)
000049ca	movl	$__mh_bundle_header,0x10(%esp)
000049d2	leal	0x0000956d(%ebx),%eax
000049d8	movl	%eax,0x0c(%esp)
000049dc	leal	0x00009b78(%ebx),%eax
000049e2	movl	%eax,0x08(%esp)
000049e6	movl	$__mh_bundle_header,0x04(%esp)
000049ee	movl	$0x3f2a3f2a,(%esp)
000049f5	calll	0x00011220	; symbol stub for: _DebugAssert
000049fa	jmp	0x00004c5c
000049ff	movl	0x84(%ebp),%edx
00004a02	movzwl	0x92(%ebp),%eax
00004a06	movzwl	%ax,%eax
00004a09	movl	%edx,0x08(%esp)
00004a0d	movl	%eax,0x04(%esp)
00004a11	movl	0x0c(%ebp),%eax
00004a14	movl	%eax,(%esp)
00004a17	calll	0x0001138d	; symbol stub for: _SetMenuItemHierarchicalMenu
00004a1c	movl	%eax,0xb8(%ebp)
00004a1f	movl	0xb8(%ebp),%eax
00004a22	movl	%eax,0xe8(%ebp)
00004a25	cmpl	$__mh_bundle_header,0xe8(%ebp)
00004a29	setne	%al
00004a2c	movzbl	%al,%eax
00004a2f	testl	%eax,%eax
00004a31	je	0x00004c4d
00004a37	movl	0xe8(%ebp),%eax
00004a3a	movl	%eax,0x1c(%esp)
00004a3e	movl	$0x00000133,0x18(%esp)
00004a46	leal	0x00009530(%ebx),%eax
00004a4c	movl	%eax,0x14(%esp)
00004a50	movl	$__mh_bundle_header,0x10(%esp)
00004a58	leal	0x0000956d(%ebx),%eax
00004a5e	movl	%eax,0x0c(%esp)
00004a62	leal	0x00009b78(%ebx),%eax
00004a68	movl	%eax,0x08(%esp)
00004a6c	movl	$__mh_bundle_header,0x04(%esp)
00004a74	movl	$0x3f2a3f2a,(%esp)
00004a7b	calll	0x00011220	; symbol stub for: _DebugAssert
00004a80	jmp	0x00004c5c
00004a85	leal	0xa0(%ebp),%eax
00004a88	movl	%eax,0x0c(%esp)
00004a8c	movl	$0x6c6f6e67,0x08(%esp)
00004a94	movl	$0x636d6364,0x04(%esp)
00004a9c	leal	0xac(%ebp),%eax
00004a9f	movl	%eax,(%esp)
00004aa2	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
00004aa7	cwtl
00004aa8	movl	%eax,0xb8(%ebp)
00004aab	movl	0xb8(%ebp),%eax
00004aae	movl	%eax,0xec(%ebp)
00004ab1	cmpl	$__mh_bundle_header,0xec(%ebp)
00004ab5	setne	%al
00004ab8	movzbl	%al,%eax
00004abb	testl	%eax,%eax
00004abd	je	0x00004b0d
00004abf	movl	0xec(%ebp),%eax
00004ac2	movl	%eax,0x1c(%esp)
00004ac6	movl	$0x00000136,0x18(%esp)
00004ace	leal	0x00009530(%ebx),%eax
00004ad4	movl	%eax,0x14(%esp)
00004ad8	movl	$__mh_bundle_header,0x10(%esp)
00004ae0	leal	0x0000956d(%ebx),%eax
00004ae6	movl	%eax,0x0c(%esp)
00004aea	leal	0x00009b78(%ebx),%eax
00004af0	movl	%eax,0x08(%esp)
00004af4	movl	$__mh_bundle_header,0x04(%esp)
00004afc	movl	$0x3f2a3f2a,(%esp)
00004b03	calll	0x00011220	; symbol stub for: _DebugAssert
00004b08	jmp	0x00004c5c
00004b0d	movl	0xa0(%ebp),%eax
00004b10	cmpl	$0x6e756c6c,%eax
00004b15	je	0x00004c1d
00004b1b	movl	$0x00000004,0x08(%esp)
00004b23	leal	0x9c(%ebp),%eax
00004b26	movl	%eax,0x04(%esp)
00004b2a	leal	0xa0(%ebp),%eax
00004b2d	movl	%eax,(%esp)
00004b30	calll	0x0001105e	; symbol stub for: _AEGetDescData
00004b35	cwtl
00004b36	movl	%eax,0xb8(%ebp)
00004b39	movl	0xb8(%ebp),%eax
00004b3c	movl	%eax,0xf0(%ebp)
00004b3f	cmpl	$__mh_bundle_header,0xf0(%ebp)
00004b43	setne	%al
00004b46	movzbl	%al,%eax
00004b49	testl	%eax,%eax
00004b4b	je	0x00004b9b
00004b4d	movl	0xf0(%ebp),%eax
00004b50	movl	%eax,0x1c(%esp)
00004b54	movl	$0x00000139,0x18(%esp)
00004b5c	leal	0x00009530(%ebx),%eax
00004b62	movl	%eax,0x14(%esp)
00004b66	movl	$__mh_bundle_header,0x10(%esp)
00004b6e	leal	0x0000956d(%ebx),%eax
00004b74	movl	%eax,0x0c(%esp)
00004b78	leal	0x00009b78(%ebx),%eax
00004b7e	movl	%eax,0x08(%esp)
00004b82	movl	$__mh_bundle_header,0x04(%esp)
00004b8a	movl	$0x3f2a3f2a,(%esp)
00004b91	calll	0x00011220	; symbol stub for: _DebugAssert
00004b96	jmp	0x00004c5c
00004b9b	movl	0x9c(%ebp),%eax
00004b9e	movl	%eax,%edx
00004ba0	movzwl	0x92(%ebp),%eax
00004ba4	movzwl	%ax,%eax
00004ba7	movl	%edx,0x08(%esp)
00004bab	movl	%eax,0x04(%esp)
00004baf	movl	0x0c(%ebp),%eax
00004bb2	movl	%eax,(%esp)
00004bb5	calll	0x00011388	; symbol stub for: _SetMenuItemCommandID
00004bba	cwtl
00004bbb	movl	%eax,0xb8(%ebp)
00004bbe	movl	0xb8(%ebp),%eax
00004bc1	movl	%eax,0xf4(%ebp)
00004bc4	cmpl	$__mh_bundle_header,0xf4(%ebp)
00004bc8	setne	%al
00004bcb	movzbl	%al,%eax
00004bce	testl	%eax,%eax
00004bd0	je	0x00004c4d
00004bd2	movl	0xf4(%ebp),%eax
00004bd5	movl	%eax,0x1c(%esp)
00004bd9	movl	$0x0000013b,0x18(%esp)
00004be1	leal	0x00009530(%ebx),%eax
00004be7	movl	%eax,0x14(%esp)
00004beb	movl	$__mh_bundle_header,0x10(%esp)
00004bf3	leal	0x0000956d(%ebx),%eax
00004bf9	movl	%eax,0x0c(%esp)
00004bfd	leal	0x00009b78(%ebx),%eax
00004c03	movl	%eax,0x08(%esp)
00004c07	movl	$__mh_bundle_header,0x04(%esp)
00004c0f	movl	$0x3f2a3f2a,(%esp)
00004c16	calll	0x00011220	; symbol stub for: _DebugAssert
00004c1b	jmp	0x00004c5c
00004c1d	leal	0x0000ca28(%ebx),%eax
00004c23	movl	(%eax),%eax
00004c25	leal	0x000000b0(%eax),%eax
00004c2b	movl	%eax,0x0c(%esp)
00004c2f	movl	$0x00000036,0x08(%esp)
00004c37	movl	$0x00000001,0x04(%esp)
00004c3f	leal	0x000097a4(%ebx),%eax
00004c45	movl	%eax,(%esp)
00004c48	calll	0x00011419	; symbol stub for: _fwrite
00004c4d	incl	0xc0(%ebp)
00004c50	movl	0xb4(%ebp),%eax
00004c53	cmpl	%eax,0xc0(%ebp)
00004c56	jle	0x00004668
00004c5c	cmpl	$__mh_bundle_header,0xb8(%ebp)
00004c60	je	0x00004c92
00004c62	leal	0x0000ca28(%ebx),%eax
00004c68	movl	(%eax),%eax
00004c6a	leal	0x000000b0(%eax),%eax
00004c70	movl	%eax,0x0c(%esp)
00004c74	movl	$0x00000029,0x08(%esp)
00004c7c	movl	$0x00000001,0x04(%esp)
00004c84	leal	0x000097dc(%ebx),%eax
00004c8a	movl	%eax,(%esp)
00004c8d	calll	0x00011419	; symbol stub for: _fwrite
00004c92	movl	$__mh_bundle_header,%eax
00004c97	addl	$0x000000a4,%esp
00004c9d	popl	%ebx
00004c9e	leave
00004c9f	ret
_IconRefRetain:
00004ca0	pushl	%ebp
00004ca1	movl	%esp,%ebp
00004ca3	subl	$0x18,%esp
00004ca6	movl	0x0c(%ebp),%eax
00004ca9	movl	%eax,(%esp)
00004cac	calll	0x0001109a	; symbol stub for: _AcquireIconRef
00004cb1	movl	0x0c(%ebp),%eax
00004cb4	leave
00004cb5	ret
_IconRefRelease:
00004cb6	pushl	%ebp
00004cb7	movl	%esp,%ebp
00004cb9	subl	$0x18,%esp
00004cbc	movl	0x0c(%ebp),%eax
00004cbf	movl	%eax,(%esp)
00004cc2	calll	0x0001136a	; symbol stub for: _ReleaseIconRef
00004cc7	leave
00004cc8	ret
_IconRefEqual:
00004cc9	pushl	%ebp
00004cca	movl	%esp,%ebp
00004ccc	subl	$0x08,%esp
00004ccf	movl	0x08(%ebp),%eax
00004cd2	cmpl	0x0c(%ebp),%eax
00004cd5	sete	%al
00004cd8	movzbl	%al,%eax
00004cdb	leave
00004cdc	ret
_QuickLookBadgingInitialize:
00004cdd	pushl	%ebp
00004cde	movl	%esp,%ebp
00004ce0	pushl	%ebx
00004ce1	subl	$0x44,%esp
00004ce4	calll	0x00004ce9
00004ce9	popl	%ebx
00004cea	movl	$__mh_bundle_header,0xf0(%ebp)
00004cf1	movl	$__mh_bundle_header,0x04(%esp)
00004cf9	leal	0x0000aa37(%ebx),%eax
00004cff	movl	%eax,(%esp)
00004d02	calll	0x0001149b	; symbol stub for: _pthread_mutex_init
00004d07	movl	%eax,0xf4(%ebp)
00004d0a	cmpl	$__mh_bundle_header,0xf4(%ebp)
00004d0e	setne	%al
00004d11	movzbl	%al,%eax
00004d14	testl	%eax,%eax
00004d16	je	0x00004d66
00004d18	movl	0xf4(%ebp),%eax
00004d1b	movl	%eax,0x1c(%esp)
00004d1f	movl	$0x0000003e,0x18(%esp)
00004d27	leal	0x000090fb(%ebx),%eax
00004d2d	movl	%eax,0x14(%esp)
00004d31	movl	$__mh_bundle_header,0x10(%esp)
00004d39	leal	0x0000991d(%ebx),%eax
00004d3f	movl	%eax,0x0c(%esp)
00004d43	leal	0x0000913b(%ebx),%eax
00004d49	movl	%eax,0x08(%esp)
00004d4d	movl	$__mh_bundle_header,0x04(%esp)
00004d55	movl	$0x3f2a3f2a,(%esp)
00004d5c	calll	0x00011220	; symbol stub for: _DebugAssert
00004d61	jmp	0x00005057
00004d66	leal	0x0000c327(%ebx),%eax
00004d6c	movl	(%eax),%eax
00004d6e	movl	(%eax),%eax
00004d70	movl	$__mh_bundle_header,0x0c(%esp)
00004d78	movl	$__mh_bundle_header,0x08(%esp)
00004d80	movl	$__mh_bundle_header,0x04(%esp)
00004d88	movl	%eax,(%esp)
00004d8b	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
00004d90	movl	%eax,%edx
00004d92	leal	0x0000aa1f(%ebx),%eax
00004d98	movl	%edx,(%eax)
00004d9a	leal	0x0000c327(%ebx),%eax
00004da0	movl	(%eax),%eax
00004da2	movl	(%eax),%edx
00004da4	leal	0x0000c33f(%ebx),%eax
00004daa	movl	(%eax),%eax
00004dac	movl	%eax,0x0c(%esp)
00004db0	leal	0x0000a79b(%ebx),%eax
00004db6	movl	%eax,0x08(%esp)
00004dba	movl	$__mh_bundle_header,0x04(%esp)
00004dc2	movl	%edx,(%esp)
00004dc5	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
00004dca	movl	%eax,%edx
00004dcc	leal	0x0000aa23(%ebx),%eax
00004dd2	movl	%edx,(%eax)
00004dd4	leal	0x0000aa1f(%ebx),%eax
00004dda	movl	(%eax),%eax
00004ddc	testl	%eax,%eax
00004dde	je	0x00004dec
00004de0	leal	0x0000aa23(%ebx),%eax
00004de6	movl	(%eax),%eax
00004de8	testl	%eax,%eax
00004dea	jne	0x00004df5
00004dec	movl	$0x00000001,0xe4(%ebp)
00004df3	jmp	0x00004dfc
00004df5	movl	$__mh_bundle_header,0xe4(%ebp)
00004dfc	movl	0xe4(%ebp),%eax
00004dff	testl	%eax,%eax
00004e01	je	0x00004e52
00004e03	movl	$__mh_bundle_header,0x1c(%esp)
00004e0b	movl	$0x00000041,0x18(%esp)
00004e13	leal	0x000090fb(%ebx),%eax
00004e19	movl	%eax,0x14(%esp)
00004e1d	movl	$__mh_bundle_header,0x10(%esp)
00004e25	leal	0x0000991d(%ebx),%eax
00004e2b	movl	%eax,0x0c(%esp)
00004e2f	leal	0x0000918f(%ebx),%eax
00004e35	movl	%eax,0x08(%esp)
00004e39	movl	$__mh_bundle_header,0x04(%esp)
00004e41	movl	$0x3f2a3f2a,(%esp)
00004e48	calll	0x00011220	; symbol stub for: _DebugAssert
00004e4d	jmp	0x00005057
00004e52	movl	$__mh_bundle_header,0x08(%esp)
00004e5a	leal	0xec(%ebp),%eax
00004e5d	movl	%eax,0x04(%esp)
00004e61	leal	0x000091d9(%ebx),%eax
00004e67	movl	%eax,(%esp)
00004e6a	calll	0x000113a6	; symbol stub for: __dyld_lookup_and_bind
00004e6f	movl	0xec(%ebp),%eax
00004e72	testl	%eax,%eax
00004e74	sete	%al
00004e77	movzbl	%al,%eax
00004e7a	testl	%eax,%eax
00004e7c	je	0x00004ecd
00004e7e	movl	$__mh_bundle_header,0x1c(%esp)
00004e86	movl	$0x00000044,0x18(%esp)
00004e8e	leal	0x000090fb(%ebx),%eax
00004e94	movl	%eax,0x14(%esp)
00004e98	movl	$__mh_bundle_header,0x10(%esp)
00004ea0	leal	0x0000991d(%ebx),%eax
00004ea6	movl	%eax,0x0c(%esp)
00004eaa	leal	0x000091ef(%ebx),%eax
00004eb0	movl	%eax,0x08(%esp)
00004eb4	movl	$__mh_bundle_header,0x04(%esp)
00004ebc	movl	$0x3f2a3f2a,(%esp)
00004ec3	calll	0x00011220	; symbol stub for: _DebugAssert
00004ec8	jmp	0x00005057
00004ecd	movl	$__mh_bundle_header,0x08(%esp)
00004ed5	leal	0xe8(%ebp),%eax
00004ed8	movl	%eax,0x04(%esp)
00004edc	leal	0x0000921d(%ebx),%eax
00004ee2	movl	%eax,(%esp)
00004ee5	calll	0x000113a6	; symbol stub for: __dyld_lookup_and_bind
00004eea	movl	0xe8(%ebp),%eax
00004eed	testl	%eax,%eax
00004eef	sete	%al
00004ef2	movzbl	%al,%eax
00004ef5	testl	%eax,%eax
00004ef7	je	0x00004f48
00004ef9	movl	$__mh_bundle_header,0x1c(%esp)
00004f01	movl	$0x00000046,0x18(%esp)
00004f09	leal	0x000090fb(%ebx),%eax
00004f0f	movl	%eax,0x14(%esp)
00004f13	movl	$__mh_bundle_header,0x10(%esp)
00004f1b	leal	0x0000991d(%ebx),%eax
00004f21	movl	%eax,0x0c(%esp)
00004f25	leal	0x00009233(%ebx),%eax
00004f2b	movl	%eax,0x08(%esp)
00004f2f	movl	$__mh_bundle_header,0x04(%esp)
00004f37	movl	$0x3f2a3f2a,(%esp)
00004f3e	calll	0x00011220	; symbol stub for: _DebugAssert
00004f43	jmp	0x00005057
00004f48	leal	0x0000aa17(%ebx),%eax
00004f4e	movl	0xec(%ebp),%edx
00004f51	movl	%eax,0x08(%esp)
00004f55	leal	0x000007d7(%ebx),%eax
00004f5b	movl	%eax,0x04(%esp)
00004f5f	movl	%edx,(%esp)
00004f62	calll	_mach_override_ptr
00004f67	movl	%eax,0xf0(%ebp)
00004f6a	cmpl	$__mh_bundle_header,0xf0(%ebp)
00004f6e	setne	%al
00004f71	movzbl	%al,%eax
00004f74	testl	%eax,%eax
00004f76	je	0x00004fc4
00004f78	movl	$__mh_bundle_header,0x1c(%esp)
00004f80	movl	$0x00000048,0x18(%esp)
00004f88	leal	0x000090fb(%ebx),%eax
00004f8e	movl	%eax,0x14(%esp)
00004f92	movl	$__mh_bundle_header,0x10(%esp)
00004f9a	leal	0x00009262(%ebx),%eax
00004fa0	movl	%eax,0x0c(%esp)
00004fa4	leal	0x00008eb3(%ebx),%eax
00004faa	movl	%eax,0x08(%esp)
00004fae	movl	$__mh_bundle_header,0x04(%esp)
00004fb6	movl	$0x3f2a3f2a,(%esp)
00004fbd	calll	0x00011220	; symbol stub for: _DebugAssert
00004fc2	jmp	0x00005042
00004fc4	leal	0x0000aa1b(%ebx),%eax
00004fca	movl	0xe8(%ebp),%edx
00004fcd	movl	%eax,0x08(%esp)
00004fd1	leal	0x00000570(%ebx),%eax
00004fd7	movl	%eax,0x04(%esp)
00004fdb	movl	%edx,(%esp)
00004fde	calll	_mach_override_ptr
00004fe3	movl	%eax,0xf0(%ebp)
00004fe6	cmpl	$__mh_bundle_header,0xf0(%ebp)
00004fea	setne	%al
00004fed	movzbl	%al,%eax
00004ff0	testl	%eax,%eax
00004ff2	je	0x00005087
00004ff8	movl	$__mh_bundle_header,0x1c(%esp)
00005000	movl	$0x0000004a,0x18(%esp)
00005008	leal	0x000090fb(%ebx),%eax
0000500e	movl	%eax,0x14(%esp)
00005012	movl	$__mh_bundle_header,0x10(%esp)
0000501a	leal	0x00009262(%ebx),%eax
00005020	movl	%eax,0x0c(%esp)
00005024	leal	0x00008eb3(%ebx),%eax
0000502a	movl	%eax,0x08(%esp)
0000502e	movl	$__mh_bundle_header,0x04(%esp)
00005036	movl	$0x3f2a3f2a,(%esp)
0000503d	calll	0x00011220	; symbol stub for: _DebugAssert
00005042	movl	0xf0(%ebp),%eax
00005045	movl	%eax,0x04(%esp)
00005049	leal	0x00009277(%ebx),%eax
0000504f	movl	%eax,(%esp)
00005052	calll	0x00011446	; symbol stub for: _mach_error
00005057	leal	0x0000c31b(%ebx),%eax
0000505d	movl	(%eax),%eax
0000505f	leal	0x000000b0(%eax),%eax
00005065	movl	%eax,0x0c(%esp)
00005069	movl	$0x00000034,0x08(%esp)
00005071	movl	$0x00000001,0x04(%esp)
00005079	leal	0x0000928f(%ebx),%eax
0000507f	movl	%eax,(%esp)
00005082	calll	0x00011419	; symbol stub for: _fwrite
00005087	addl	$0x44,%esp
0000508a	popl	%ebx
0000508b	leave
0000508c	ret
_CompositeCGImageWithIconRef:
0000508d	pushl	%ebp
0000508e	movl	%esp,%ebp
00005090	pushl	%ebx
00005091	subl	$0x64,%esp
00005094	calll	0x00005099
00005099	popl	%ebx
0000509a	movl	0x08(%ebp),%eax
0000509d	movl	%eax,(%esp)
000050a0	calll	0x000111da	; symbol stub for: _CGImageGetWidth
000050a5	movl	%eax,0xe4(%ebp)
000050a8	movl	0x08(%ebp),%eax
000050ab	movl	%eax,(%esp)
000050ae	calll	0x000111d5	; symbol stub for: _CGImageGetHeight
000050b3	movl	%eax,0xe8(%ebp)
000050b6	cvtsi2ss	0xe8(%ebp),%xmm1
000050bb	cvtsi2ss	0xe4(%ebp),%xmm2
000050c0	movl	$0x00000080,%eax
000050c5	movl	%eax,%edx
000050c7	subl	0xe8(%ebp),%edx
000050ca	movl	%edx,%eax
000050cc	shrl	$0x1f,%eax
000050cf	addl	%edx,%eax
000050d1	sarl	%eax
000050d3	cvtsi2ss	%eax,%xmm3
000050d7	movl	$0x00000080,%eax
000050dc	movl	%eax,%edx
000050de	subl	0xe4(%ebp),%edx
000050e1	movl	%edx,%eax
000050e3	shrl	$0x1f,%eax
000050e6	addl	%edx,%eax
000050e8	sarl	%eax
000050ea	cvtsi2ss	%eax,%xmm0
000050ee	leal	0xd4(%ebp),%eax
000050f1	movss	%xmm1,0x10(%esp)
000050f7	movss	%xmm2,0x0c(%esp)
000050fd	movss	%xmm3,0x08(%esp)
00005103	movss	%xmm0,0x04(%esp)
00005109	movl	%eax,(%esp)
0000510c	calll	_CGRectMake
00005111	subl	$0x04,%esp
00005114	movl	$0x00000080,0x04(%esp)
0000511c	movl	$0x00000080,(%esp)
00005123	calll	_MyCreateBitmapContext
00005128	movl	%eax,0xec(%ebp)
0000512b	leal	0x0000a66b(%ebx),%eax
00005131	movl	(%eax),%edx
00005133	movl	0x08(%ebp),%eax
00005136	movl	%eax,0x14(%esp)
0000513a	movl	0xd4(%ebp),%eax
0000513d	movl	%eax,0x04(%esp)
00005141	movl	0xd8(%ebp),%eax
00005144	movl	%eax,0x08(%esp)
00005148	movl	0xdc(%ebp),%eax
0000514b	movl	%eax,0x0c(%esp)
0000514f	movl	0xe0(%ebp),%eax
00005152	movl	%eax,0x10(%esp)
00005156	movl	0xec(%ebp),%eax
00005159	movl	%eax,(%esp)
0000515c	call	*%edx
0000515e	cmpl	$__mh_bundle_header,0x0c(%ebp)
00005162	je	0x000051db
00005164	leal	0xc4(%ebp),%edx
00005167	leal	0x00009e6f(%ebx),%eax
0000516d	movl	(%eax),%eax
0000516f	movl	%eax,0x10(%esp)
00005173	leal	0x00009e6f(%ebx),%eax
00005179	movl	(%eax),%eax
0000517b	movl	%eax,0x0c(%esp)
0000517f	leal	0x00009e73(%ebx),%eax
00005185	movl	(%eax),%eax
00005187	movl	%eax,0x08(%esp)
0000518b	leal	0x00009e73(%ebx),%eax
00005191	movl	(%eax),%eax
00005193	movl	%eax,0x04(%esp)
00005197	movl	%edx,(%esp)
0000519a	calll	_CGRectMake
0000519f	subl	$0x04,%esp
000051a2	movl	0x0c(%ebp),%eax
000051a5	movl	%eax,0x18(%esp)
000051a9	movl	$__mh_bundle_header,0x14(%esp)
000051b1	movl	$__mh_bundle_header,0x10(%esp)
000051b9	movl	$__mh_bundle_header,0x0c(%esp)
000051c1	movl	$0x0000000b,0x08(%esp)
000051c9	leal	0xc4(%ebp),%eax
000051cc	movl	%eax,0x04(%esp)
000051d0	movl	0xec(%ebp),%eax
000051d3	movl	%eax,(%esp)
000051d6	calll	0x0001134c	; symbol stub for: _PlotIconRefInContext
000051db	movl	0xec(%ebp),%eax
000051de	movl	%eax,(%esp)
000051e1	calll	0x000111a8	; symbol stub for: _CGBitmapContextCreateImage
000051e6	movl	%eax,0xf0(%ebp)
000051e9	movl	0xec(%ebp),%eax
000051ec	movl	%eax,(%esp)
000051ef	calll	0x000111ad	; symbol stub for: _CGBitmapContextGetData
000051f4	movl	%eax,0xf4(%ebp)
000051f7	cmpl	$__mh_bundle_header,0xf4(%ebp)
000051fb	je	0x00005208
000051fd	movl	0xf4(%ebp),%eax
00005200	movl	%eax,(%esp)
00005203	calll	0x0001140f	; symbol stub for: _free
00005208	movl	0xec(%ebp),%eax
0000520b	movl	%eax,(%esp)
0000520e	calll	0x000111c1	; symbol stub for: _CGContextRelease
00005213	movl	0xf0(%ebp),%eax
00005216	movl	0xfc(%ebp),%ebx
00005219	leave
0000521a	ret
_CGRectMake:
0000521b	pushl	%ebp
0000521c	movl	%esp,%ebp
0000521e	subl	$0x18,%esp
00005221	movl	0x08(%ebp),%edx
00005224	movl	0x0c(%ebp),%eax
00005227	movl	%eax,0xe8(%ebp)
0000522a	movl	0x10(%ebp),%eax
0000522d	movl	%eax,0xec(%ebp)
00005230	movl	0x14(%ebp),%eax
00005233	movl	%eax,0xf0(%ebp)
00005236	movl	0x18(%ebp),%eax
00005239	movl	%eax,0xf4(%ebp)
0000523c	movl	0xe8(%ebp),%eax
0000523f	movl	%eax,(%edx)
00005241	movl	0xec(%ebp),%eax
00005244	movl	%eax,0x04(%edx)
00005247	movl	0xf0(%ebp),%eax
0000524a	movl	%eax,0x08(%edx)
0000524d	movl	0xf4(%ebp),%eax
00005250	movl	%eax,0x0c(%edx)
00005253	movl	%edx,%eax
00005255	leave
00005256	retl	$0x0004
_DropboxCGContextDrawImage:
00005259	pushl	%ebp
0000525a	movl	%esp,%ebp
0000525c	pushl	%ebx
0000525d	subl	$0x00000094,%esp
00005263	calll	0x00005268
00005268	popl	%ebx
00005269	leal	0x0000a4b8(%ebx),%eax
0000526f	movl	%eax,(%esp)
00005272	calll	0x000114a0	; symbol stub for: _pthread_mutex_lock
00005277	movl	%eax,0xe0(%ebp)
0000527a	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000527e	setne	%al
00005281	movzbl	%al,%eax
00005284	testl	%eax,%eax
00005286	je	0x000052d6
00005288	movl	0xe0(%ebp),%eax
0000528b	movl	%eax,0x1c(%esp)
0000528f	movl	$0x00000068,0x18(%esp)
00005297	leal	0x00008b7c(%ebx),%eax
0000529d	movl	%eax,0x14(%esp)
000052a1	movl	$__mh_bundle_header,0x10(%esp)
000052a9	leal	0x00008d45(%ebx),%eax
000052af	movl	%eax,0x0c(%esp)
000052b3	leal	0x00008d50(%ebx),%eax
000052b9	movl	%eax,0x08(%esp)
000052bd	movl	$__mh_bundle_header,0x04(%esp)
000052c5	movl	$0x3f2a3f2a,(%esp)
000052cc	calll	0x00011220	; symbol stub for: _DebugAssert
000052d1	jmp	0x00005487
000052d6	leal	0x0000a4a0(%ebx),%eax
000052dc	movl	(%eax),%edx
000052de	movl	0x1c(%ebp),%eax
000052e1	movl	%eax,0x04(%esp)
000052e5	movl	%edx,(%esp)
000052e8	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
000052ed	movl	%eax,0xdc(%ebp)
000052f0	leal	0x0000a4b8(%ebx),%eax
000052f6	movl	%eax,(%esp)
000052f9	calll	0x000114a5	; symbol stub for: _pthread_mutex_unlock
000052fe	movl	%eax,0xe4(%ebp)
00005301	cmpl	$__mh_bundle_header,0xe4(%ebp)
00005305	setne	%al
00005308	movzbl	%al,%eax
0000530b	testl	%eax,%eax
0000530d	je	0x0000535d
0000530f	movl	0xe4(%ebp),%eax
00005312	movl	%eax,0x1c(%esp)
00005316	movl	$0x0000006a,0x18(%esp)
0000531e	leal	0x00008b7c(%ebx),%eax
00005324	movl	%eax,0x14(%esp)
00005328	movl	$__mh_bundle_header,0x10(%esp)
00005330	leal	0x00008d45(%ebx),%eax
00005336	movl	%eax,0x0c(%esp)
0000533a	leal	0x00008d94(%ebx),%eax
00005340	movl	%eax,0x08(%esp)
00005344	movl	$__mh_bundle_header,0x04(%esp)
0000534c	movl	$0x3f2a3f2a,(%esp)
00005353	calll	0x00011220	; symbol stub for: _DebugAssert
00005358	jmp	0x00005487
0000535d	cmpl	$__mh_bundle_header,0xdc(%ebp)
00005361	je	0x00005452
00005367	leal	0x8c(%ebp),%eax
0000536a	movl	%eax,0x04(%esp)
0000536e	movl	0xdc(%ebp),%eax
00005371	movl	%eax,(%esp)
00005374	calll	0x00011194	; symbol stub for: _CFURLGetFSRef
00005379	leal	0x0000bdb8(%ebx),%eax
0000537f	movl	(%eax),%eax
00005381	movl	(%eax),%edx
00005383	leal	0x8c(%ebp),%eax
00005386	movl	%eax,(%esp)
00005389	call	*%edx
0000538b	movl	%eax,0xe8(%ebp)
0000538e	leal	0x0000a4a4(%ebx),%eax
00005394	movl	(%eax),%edx
00005396	movl	0xe8(%ebp),%eax
00005399	movl	%eax,0x04(%esp)
0000539d	movl	%edx,(%esp)
000053a0	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
000053a5	movl	%eax,0xec(%ebp)
000053a8	cmpl	$__mh_bundle_header,0xec(%ebp)
000053ac	jne	0x000053fb
000053ae	leal	0x0000bdc0(%ebx),%eax
000053b4	movl	(%eax),%eax
000053b6	movl	%eax,0x0c(%esp)
000053ba	leal	0x0000bdbc(%ebx),%eax
000053c0	movl	(%eax),%eax
000053c2	movl	%eax,0x08(%esp)
000053c6	movl	$__mh_bundle_header,0x04(%esp)
000053ce	movl	$__mh_bundle_header,(%esp)
000053d5	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
000053da	movl	%eax,0xec(%ebp)
000053dd	leal	0x0000a4a4(%ebx),%eax
000053e3	movl	(%eax),%edx
000053e5	movl	0xec(%ebp),%eax
000053e8	movl	%eax,0x08(%esp)
000053ec	movl	0xe8(%ebp),%eax
000053ef	movl	%eax,0x04(%esp)
000053f3	movl	%edx,(%esp)
000053f6	calll	0x000110f9	; symbol stub for: _CFDictionaryAddValue
000053fb	movl	0x1c(%ebp),%eax
000053fe	movl	%eax,0x04(%esp)
00005402	movl	0xec(%ebp),%eax
00005405	movl	%eax,(%esp)
00005408	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
0000540d	movl	%eax,0xf0(%ebp)
00005410	cmpl	$__mh_bundle_header,0xf0(%ebp)
00005414	je	0x0000541e
00005416	movl	0xf0(%ebp),%eax
00005419	movl	%eax,0x1c(%ebp)
0000541c	jmp	0x00005452
0000541e	movl	0xe8(%ebp),%eax
00005421	movl	%eax,0x04(%esp)
00005425	movl	0x1c(%ebp),%eax
00005428	movl	%eax,(%esp)
0000542b	calll	0x0000508d
00005430	movl	%eax,0xf4(%ebp)
00005433	movl	0xf4(%ebp),%eax
00005436	movl	%eax,0x08(%esp)
0000543a	movl	0x1c(%ebp),%eax
0000543d	movl	%eax,0x04(%esp)
00005441	movl	0xec(%ebp),%eax
00005444	movl	%eax,(%esp)
00005447	calll	0x0001111c	; symbol stub for: _CFDictionarySetValue
0000544c	movl	0xf4(%ebp),%eax
0000544f	movl	%eax,0x1c(%ebp)
00005452	leal	0x0000a49c(%ebx),%eax
00005458	movl	(%eax),%edx
0000545a	movl	0x1c(%ebp),%eax
0000545d	movl	%eax,0x14(%esp)
00005461	movl	0x0c(%ebp),%eax
00005464	movl	%eax,0x04(%esp)
00005468	movl	0x10(%ebp),%eax
0000546b	movl	%eax,0x08(%esp)
0000546f	movl	0x14(%ebp),%eax
00005472	movl	%eax,0x0c(%esp)
00005476	movl	0x18(%ebp),%eax
00005479	movl	%eax,0x10(%esp)
0000547d	movl	0x08(%ebp),%eax
00005480	movl	%eax,(%esp)
00005483	call	*%edx
00005485	jmp	0x000054b7
00005487	leal	0x0000bd9c(%ebx),%eax
0000548d	movl	(%eax),%eax
0000548f	leal	0x000000b0(%eax),%eax
00005495	movl	%eax,0x0c(%esp)
00005499	movl	$0x0000001b,0x08(%esp)
000054a1	movl	$0x00000001,0x04(%esp)
000054a9	leal	0x00008dda(%ebx),%eax
000054af	movl	%eax,(%esp)
000054b2	calll	0x00011419	; symbol stub for: _fwrite
000054b7	addl	$0x00000094,%esp
000054bd	popl	%ebx
000054be	leave
000054bf	ret
_DropboxQLThumbnailCopyImage:
000054c0	pushl	%ebp
000054c1	movl	%esp,%ebp
000054c3	pushl	%ebx
000054c4	subl	$0x74,%esp
000054c7	calll	0x000054cc
000054cc	popl	%ebx
000054cd	movl	$0x00000001,0xd8(%ebp)
000054d4	leal	0x0000a234(%ebx),%eax
000054da	movl	(%eax),%edx
000054dc	movl	0x08(%ebp),%eax
000054df	movl	%eax,(%esp)
000054e2	call	*%edx
000054e4	movl	%eax,0xdc(%ebp)
000054e7	cmpl	$__mh_bundle_header,0xdc(%ebp)
000054eb	jne	0x000054f9
000054ed	movl	$__mh_bundle_header,0xb4(%ebp)
000054f4	jmp	0x00005791
000054f9	movl	0x08(%ebp),%eax
000054fc	movl	%eax,(%esp)
000054ff	calll	0x0001135b	; symbol stub for: _QLThumbnailCopyOptions
00005504	movl	%eax,0xe0(%ebp)
00005507	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000550b	je	0x0000554d
0000550d	movl	$__mh_bundle_header,0xc0(%ebp)
00005514	leal	0xc0(%ebp),%eax
00005517	movl	%eax,0x08(%esp)
0000551b	leal	0x00009bc0(%ebx),%eax
00005521	movl	%eax,0x04(%esp)
00005525	movl	0xe0(%ebp),%eax
00005528	movl	%eax,(%esp)
0000552b	calll	0x00011112	; symbol stub for: _CFDictionaryGetValueIfPresent
00005530	movl	0xc0(%ebp),%eax
00005533	testl	%eax,%eax
00005535	je	0x0000554d
00005537	movl	0xc0(%ebp),%eax
0000553a	movl	%eax,(%esp)
0000553d	calll	0x000110d1	; symbol stub for: _CFBooleanGetValue
00005542	testb	%al,%al
00005544	je	0x0000554d
00005546	movl	$__mh_bundle_header,0xd8(%ebp)
0000554d	cmpl	$__mh_bundle_header,0xd8(%ebp)
00005551	je	0x0000555e
00005553	movl	0xdc(%ebp),%eax
00005556	movl	%eax,0xb4(%ebp)
00005559	jmp	0x00005791
0000555e	movl	$__mh_bundle_header,0xe4(%ebp)
00005565	movl	0xdc(%ebp),%eax
00005568	movl	%eax,(%esp)
0000556b	calll	0x000111da	; symbol stub for: _CGImageGetWidth
00005570	movl	%eax,0xe8(%ebp)
00005573	movl	0xdc(%ebp),%eax
00005576	movl	%eax,(%esp)
00005579	calll	0x000111d5	; symbol stub for: _CGImageGetHeight
0000557e	movl	%eax,0xec(%ebp)
00005581	cvtsi2ss	0xec(%ebp),%xmm1
00005586	cvtsi2ss	0xe8(%ebp),%xmm2
0000558b	movl	$0x00000080,%eax
00005590	movl	%eax,%edx
00005592	subl	0xec(%ebp),%edx
00005595	movl	%edx,%eax
00005597	shrl	$0x1f,%eax
0000559a	addl	%edx,%eax
0000559c	sarl	%eax
0000559e	cvtsi2ss	%eax,%xmm3
000055a2	movl	$0x00000080,%eax
000055a7	movl	%eax,%edx
000055a9	subl	0xe8(%ebp),%edx
000055ac	movl	%edx,%eax
000055ae	shrl	$0x1f,%eax
000055b1	addl	%edx,%eax
000055b3	sarl	%eax
000055b5	cvtsi2ss	%eax,%xmm0
000055b9	leal	0xc4(%ebp),%eax
000055bc	movss	%xmm1,0x10(%esp)
000055c2	movss	%xmm2,0x0c(%esp)
000055c8	movss	%xmm3,0x08(%esp)
000055ce	movss	%xmm0,0x04(%esp)
000055d4	movl	%eax,(%esp)
000055d7	calll	0x0000521b
000055dc	subl	$0x04,%esp
000055df	movl	$0x00000080,0x04(%esp)
000055e7	movl	$0x00000080,(%esp)
000055ee	calll	_MyCreateBitmapContext
000055f3	movl	%eax,0xf0(%ebp)
000055f6	leal	_MyReleaseBitmapContext(%ebx),%eax
000055fc	movl	(%eax),%edx
000055fe	movl	0xdc(%ebp),%eax
00005601	movl	%eax,0x14(%esp)
00005605	movl	0xc4(%ebp),%eax
00005608	movl	%eax,0x04(%esp)
0000560c	movl	0xc8(%ebp),%eax
0000560f	movl	%eax,0x08(%esp)
00005613	movl	0xcc(%ebp),%eax
00005616	movl	%eax,0x0c(%esp)
0000561a	movl	0xd0(%ebp),%eax
0000561d	movl	%eax,0x10(%esp)
00005621	movl	0xf0(%ebp),%eax
00005624	movl	%eax,(%esp)
00005627	call	*%edx
00005629	movl	0xdc(%ebp),%eax
0000562c	movl	%eax,(%esp)
0000562f	calll	0x00011149	; symbol stub for: _CFRelease
00005634	movl	0xf0(%ebp),%eax
00005637	movl	%eax,(%esp)
0000563a	calll	0x000111a8	; symbol stub for: _CGBitmapContextCreateImage
0000563f	movl	%eax,0xe4(%ebp)
00005642	movl	0xf0(%ebp),%eax
00005645	movl	%eax,(%esp)
00005648	calll	_MyReleaseBitmapContext
0000564d	movl	0x08(%ebp),%eax
00005650	movl	%eax,(%esp)
00005653	calll	0x00011356	; symbol stub for: _QLThumbnailCopyDocumentURL
00005658	movl	%eax,0xf4(%ebp)
0000565b	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000565f	sete	%al
00005662	movzbl	%al,%eax
00005665	testl	%eax,%eax
00005667	je	0x000056b8
00005669	movl	$__mh_bundle_header,0x1c(%esp)
00005671	movl	$0x000000a1,0x18(%esp)
00005679	leal	0x00008918(%ebx),%eax
0000567f	movl	%eax,0x14(%esp)
00005683	movl	$__mh_bundle_header,0x10(%esp)
0000568b	leal	0x0000867d(%ebx),%eax
00005691	movl	%eax,0x0c(%esp)
00005695	leal	0x00008b9c(%ebx),%eax
0000569b	movl	%eax,0x08(%esp)
0000569f	movl	$__mh_bundle_header,0x04(%esp)
000056a7	movl	$0x3f2a3f2a,(%esp)
000056ae	calll	0x00011220	; symbol stub for: _DebugAssert
000056b3	jmp	0x0000575a
000056b8	leal	0x0000a254(%ebx),%eax
000056be	movl	%eax,(%esp)
000056c1	calll	0x000114a0	; symbol stub for: _pthread_mutex_lock
000056c6	movl	%eax,0xd4(%ebp)
000056c9	leal	0x0000a23c(%ebx),%eax
000056cf	movl	(%eax),%edx
000056d1	movl	0xf4(%ebp),%eax
000056d4	movl	%eax,0x08(%esp)
000056d8	movl	0xe4(%ebp),%eax
000056db	movl	%eax,0x04(%esp)
000056df	movl	%edx,(%esp)
000056e2	calll	0x0001111c	; symbol stub for: _CFDictionarySetValue
000056e7	leal	0x0000a254(%ebx),%eax
000056ed	movl	%eax,(%esp)
000056f0	calll	0x000114a5	; symbol stub for: _pthread_mutex_unlock
000056f5	movl	%eax,0xd4(%ebp)
000056f8	cmpl	$__mh_bundle_header,0xd4(%ebp)
000056fc	setne	%al
000056ff	movzbl	%al,%eax
00005702	testl	%eax,%eax
00005704	je	0x00005752
00005706	movl	$__mh_bundle_header,0x1c(%esp)
0000570e	movl	$0x000000a7,0x18(%esp)
00005716	leal	0x00008918(%ebx),%eax
0000571c	movl	%eax,0x14(%esp)
00005720	movl	$__mh_bundle_header,0x10(%esp)
00005728	leal	0x0000867d(%ebx),%eax
0000572e	movl	%eax,0x0c(%esp)
00005732	leal	0x00008bb9(%ebx),%eax
00005738	movl	%eax,0x08(%esp)
0000573c	movl	$__mh_bundle_header,0x04(%esp)
00005744	movl	$0x3f2a3f2a,(%esp)
0000574b	calll	0x00011220	; symbol stub for: _DebugAssert
00005750	jmp	0x0000575a
00005752	movl	0xe4(%ebp),%eax
00005755	movl	%eax,0xb4(%ebp)
00005758	jmp	0x00005791
0000575a	leal	0x0000bb38(%ebx),%eax
00005760	movl	(%eax),%eax
00005762	leal	0x000000b0(%eax),%eax
00005768	movl	%eax,0x0c(%esp)
0000576c	movl	$0x0000003a,0x08(%esp)
00005774	movl	$0x00000001,0x04(%esp)
0000577c	leal	0x00008bd8(%ebx),%eax
00005782	movl	%eax,(%esp)
00005785	calll	0x00011419	; symbol stub for: _fwrite
0000578a	movl	$__mh_bundle_header,0xb4(%ebp)
00005791	movl	0xb4(%ebp),%eax
00005794	movl	0xfc(%ebp),%ebx
00005797	leave
00005798	ret
_DeallocDropboxPluginType:
00005799	pushl	%ebp
0000579a	movl	%esp,%ebp
0000579c	subl	$0x28,%esp
0000579f	movl	0x08(%ebp),%eax
000057a2	movl	0x04(%eax),%eax
000057a5	movl	%eax,0xf4(%ebp)
000057a8	movl	0x08(%ebp),%eax
000057ab	addl	$0x0c,%eax
000057ae	movl	%eax,(%esp)
000057b1	calll	_CMHelperDispose
000057b6	movl	0x08(%ebp),%eax
000057b9	movl	0x28(%eax),%eax
000057bc	testl	%eax,%eax
000057be	je	0x000057ce
000057c0	movl	0x08(%ebp),%eax
000057c3	movl	0x28(%eax),%eax
000057c6	movl	%eax,(%esp)
000057c9	calll	0x00011149	; symbol stub for: _CFRelease
000057ce	movl	0x08(%ebp),%eax
000057d1	movl	%eax,(%esp)
000057d4	calll	0x0001140f	; symbol stub for: _free
000057d9	cmpl	$__mh_bundle_header,0xf4(%ebp)
000057dd	je	0x000057f5
000057df	movl	0xf4(%ebp),%eax
000057e2	movl	%eax,(%esp)
000057e5	calll	0x0001113a	; symbol stub for: _CFPlugInRemoveInstanceForFactory
000057ea	movl	0xf4(%ebp),%eax
000057ed	movl	%eax,(%esp)
000057f0	calll	0x00011149	; symbol stub for: _CFRelease
000057f5	leave
000057f6	ret
_ClearVerbMap:
000057f7	pushl	%ebp
000057f8	movl	%esp,%ebp
000057fa	pushl	%ebx
000057fb	subl	$0x24,%esp
000057fe	calll	0x00005803
00005803	popl	%ebx
00005804	jmp	0x00005838
00005806	leal	0x00009f49(%ebx),%eax
0000580c	movl	(%eax),%eax
0000580e	movl	%eax,0xf4(%ebp)
00005811	movl	0xf4(%ebp),%eax
00005814	movl	0x08(%eax),%edx
00005817	leal	0x00009f49(%ebx),%eax
0000581d	movl	%edx,(%eax)
0000581f	movl	0xf4(%ebp),%eax
00005822	movl	0x04(%eax),%eax
00005825	movl	%eax,(%esp)
00005828	calll	0x0001140f	; symbol stub for: _free
0000582d	movl	0xf4(%ebp),%eax
00005830	movl	%eax,(%esp)
00005833	calll	0x0001140f	; symbol stub for: _free
00005838	leal	0x00009f49(%ebx),%eax
0000583e	movl	(%eax),%eax
00005840	testl	%eax,%eax
00005842	jne	0x00005806
00005844	addl	$0x24,%esp
00005847	popl	%ebx
00005848	leave
00005849	ret
_AllocDropboxPluginType:
0000584a	pushl	%ebp
0000584b	movl	%esp,%ebp
0000584d	pushl	%ebx
0000584e	subl	$0x24,%esp
00005851	calll	0x00005856
00005856	popl	%ebx
00005857	movl	$0x0000002c,(%esp)
0000585e	calll	0x00011450	; symbol stub for: _malloc
00005863	movl	%eax,0xf4(%ebp)
00005866	movl	0xf4(%ebp),%edx
00005869	leal	0x00009c46(%ebx),%eax
0000586f	movl	%eax,(%edx)
00005871	movl	0x08(%ebp),%eax
00005874	movl	%eax,(%esp)
00005877	calll	0x0001114e	; symbol stub for: _CFRetain
0000587c	movl	%eax,%edx
0000587e	movl	0xf4(%ebp),%eax
00005881	movl	%edx,0x04(%eax)
00005884	movl	0x08(%ebp),%eax
00005887	movl	%eax,(%esp)
0000588a	calll	0x00011135	; symbol stub for: _CFPlugInAddInstanceForFactory
0000588f	leal	0x00009846(%ebx),%eax
00005895	movl	%eax,(%esp)
00005898	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000589d	movl	%eax,%edx
0000589f	movl	0xf4(%ebp),%eax
000058a2	movl	%edx,0x28(%eax)
000058a5	movl	0xf4(%ebp),%edx
000058a8	addl	$0x0c,%edx
000058ab	leal	0x0000888a(%ebx),%eax
000058b1	movl	%eax,0x04(%esp)
000058b5	movl	%edx,(%esp)
000058b8	calll	_CMHelperInitialise
000058bd	leal	0x00009efa(%ebx),%eax
000058c3	movzbl	(%eax),%eax
000058c6	testb	%al,%al
000058c8	jne	0x000058d8
000058ca	calll	0x00001ca3
000058cf	leal	0x00009efa(%ebx),%eax
000058d5	movb	$0x01,(%eax)
000058d8	movl	$__mh_bundle_header,0x04(%esp)
000058e0	leal	0x0000b7da(%ebx),%eax
000058e6	movl	(%eax),%eax
000058e8	movl	%eax,(%esp)
000058eb	calll	_DropboxIconOverlaySetProvider
000058f0	movl	0xf4(%ebp),%eax
000058f3	movl	$0x00000001,0x08(%eax)
000058fa	movl	0xf4(%ebp),%eax
000058fd	addl	$0x24,%esp
00005900	popl	%ebx
00005901	leave
00005902	ret
_DropboxPluginFactory:
00005903	pushl	%ebp
00005904	movl	%esp,%ebp
00005906	subl	$0x78,%esp
00005909	calll	_ShouldLoadContextMenus
0000590e	testb	%al,%al
00005910	je	0x00005a58
00005916	movl	$0x000000bc,0x40(%esp)
0000591e	movl	$__mh_bundle_header,0x3c(%esp)
00005926	movl	$0x000000b3,0x38(%esp)
0000592e	movl	$0x00000065,0x34(%esp)
00005936	movl	$0x00000030,0x30(%esp)
0000593e	movl	$__mh_bundle_header,0x2c(%esp)
00005946	movl	$0x000000a7,0x28(%esp)
0000594e	movl	$0x00000080,0x24(%esp)
00005956	movl	$0x000000d5,0x20(%esp)
0000595e	movl	$0x00000011,0x1c(%esp)
00005966	movl	$0x00000066,0x18(%esp)
0000596e	movl	$0x0000003e,0x14(%esp)
00005976	movl	$0x000000e9,0x10(%esp)
0000597e	movl	$0x00000022,0x0c(%esp)
00005986	movl	$0x00000065,0x08(%esp)
0000598e	movl	$0x0000002f,0x04(%esp)
00005996	movl	$__mh_bundle_header,(%esp)
0000599d	calll	0x0001119e	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
000059a2	movl	%eax,0x04(%esp)
000059a6	movl	0x0c(%ebp),%eax
000059a9	movl	%eax,(%esp)
000059ac	calll	0x00011121	; symbol stub for: _CFEqual
000059b1	testb	%al,%al
000059b3	je	0x00005a58
000059b9	movl	$0x00000044,0x40(%esp)
000059c1	movl	$0x00000038,0x3c(%esp)
000059c9	movl	$0x000000fc,0x38(%esp)
000059d1	movl	$0x00000057,0x34(%esp)
000059d9	movl	$0x000000c2,0x30(%esp)
000059e1	movl	$0x00000084,0x2c(%esp)
000059e9	movl	$0x00000044,0x28(%esp)
000059f1	movl	$0x00000088,0x24(%esp)
000059f9	movl	$0x000000e2,0x20(%esp)
00005a01	movl	$0x0000004e,0x1c(%esp)
00005a09	movl	$0x00000026,0x18(%esp)
00005a11	movl	$0x0000008d,0x14(%esp)
00005a19	movl	$0x000000c7,0x10(%esp)
00005a21	movl	$0x0000004b,0x0c(%esp)
00005a29	movl	$0x00000017,0x08(%esp)
00005a31	movl	$0x00000027,0x04(%esp)
00005a39	movl	$__mh_bundle_header,(%esp)
00005a40	calll	0x0001119e	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
00005a45	movl	%eax,(%esp)
00005a48	calll	0x0000584a
00005a4d	movl	%eax,0xf4(%ebp)
00005a50	movl	0xf4(%ebp),%eax
00005a53	movl	%eax,0xe4(%ebp)
00005a56	jmp	0x00005a5f
00005a58	movl	$__mh_bundle_header,0xe4(%ebp)
00005a5f	movl	0xe4(%ebp),%eax
00005a62	leave
00005a63	ret
_SVNPluginQueryInterface:
00005a64	pushl	%ebp
00005a65	movl	%esp,%ebp
00005a67	pushl	%ebx
00005a68	subl	$0x74,%esp
00005a6b	calll	0x00005a70
00005a70	popl	%ebx
00005a71	movl	0x0c(%ebp),%eax
00005a74	movl	%eax,0x04(%esp)
00005a78	movl	0x10(%ebp),%eax
00005a7b	movl	%eax,0x08(%esp)
00005a7f	movl	0x14(%ebp),%eax
00005a82	movl	%eax,0x0c(%esp)
00005a86	movl	0x18(%ebp),%eax
00005a89	movl	%eax,0x10(%esp)
00005a8d	movl	$__mh_bundle_header,(%esp)
00005a94	calll	0x00011199	; symbol stub for: _CFUUIDCreateFromUUIDBytes
00005a99	movl	%eax,0xf4(%ebp)
00005a9c	movl	$0x000000bc,0x40(%esp)
00005aa4	movl	$__mh_bundle_header,0x3c(%esp)
00005aac	movl	$0x000000b3,0x38(%esp)
00005ab4	movl	$0x00000065,0x34(%esp)
00005abc	movl	$0x00000030,0x30(%esp)
00005ac4	movl	$__mh_bundle_header,0x2c(%esp)
00005acc	movl	$0x000000ab,0x28(%esp)
00005ad4	movl	$0x000000be,0x24(%esp)
00005adc	movl	$0x000000d5,0x20(%esp)
00005ae4	movl	$0x00000011,0x1c(%esp)
00005aec	movl	$0x00000066,0x18(%esp)
00005af4	movl	$0x0000003e,0x14(%esp)
00005afc	movl	$0x00000062,0x10(%esp)
00005b04	movl	$0x0000007b,0x0c(%esp)
00005b0c	movl	$0x00000099,0x08(%esp)
00005b14	movl	$0x00000032,0x04(%esp)
00005b1c	movl	$__mh_bundle_header,(%esp)
00005b23	calll	0x0001119e	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
00005b28	movl	%eax,0x04(%esp)
00005b2c	movl	0xf4(%ebp),%eax
00005b2f	movl	%eax,(%esp)
00005b32	calll	0x00011121	; symbol stub for: _CFEqual
00005b37	testb	%al,%al
00005b39	je	0x00005b65
00005b3b	movl	0x08(%ebp),%eax
00005b3e	movl	%eax,(%esp)
00005b41	calll	_SVNPluginAddRef
00005b46	movl	0x1c(%ebp),%edx
00005b49	movl	0x08(%ebp),%eax
00005b4c	movl	%eax,(%edx)
00005b4e	movl	0xf4(%ebp),%eax
00005b51	movl	%eax,(%esp)
00005b54	calll	0x00011149	; symbol stub for: _CFRelease
00005b59	movl	$__mh_bundle_header,0xe4(%ebp)
00005b60	jmp	0x00005c4c
00005b65	leal	0x0000b5bc(%ebx),%eax
00005b6b	movl	(%eax),%eax
00005b6d	movl	(%eax),%eax
00005b6f	movl	$0x00000046,0x40(%esp)
00005b77	movl	$__mh_bundle_header,0x3c(%esp)
00005b7f	movl	$__mh_bundle_header,0x38(%esp)
00005b87	movl	$__mh_bundle_header,0x34(%esp)
00005b8f	movl	$__mh_bundle_header,0x30(%esp)
00005b97	movl	$__mh_bundle_header,0x2c(%esp)
00005b9f	movl	$__mh_bundle_header,0x28(%esp)
00005ba7	movl	$0x000000c0,0x24(%esp)
00005baf	movl	$__mh_bundle_header,0x20(%esp)
00005bb7	movl	$__mh_bundle_header,0x1c(%esp)
00005bbf	movl	$__mh_bundle_header,0x18(%esp)
00005bc7	movl	$__mh_bundle_header,0x14(%esp)
00005bcf	movl	$__mh_bundle_header,0x10(%esp)
00005bd7	movl	$__mh_bundle_header,0x0c(%esp)
00005bdf	movl	$__mh_bundle_header,0x08(%esp)
00005be7	movl	$__mh_bundle_header,0x04(%esp)
00005bef	movl	%eax,(%esp)
00005bf2	calll	0x0001119e	; symbol stub for: _CFUUIDGetConstantUUIDWithBytes
00005bf7	movl	%eax,0x04(%esp)
00005bfb	movl	0xf4(%ebp),%eax
00005bfe	movl	%eax,(%esp)
00005c01	calll	0x00011121	; symbol stub for: _CFEqual
00005c06	testb	%al,%al
00005c08	je	0x00005c31
00005c0a	movl	0x08(%ebp),%eax
00005c0d	movl	%eax,(%esp)
00005c10	calll	_SVNPluginAddRef
00005c15	movl	0x1c(%ebp),%edx
00005c18	movl	0x08(%ebp),%eax
00005c1b	movl	%eax,(%edx)
00005c1d	movl	0xf4(%ebp),%eax
00005c20	movl	%eax,(%esp)
00005c23	calll	0x00011149	; symbol stub for: _CFRelease
00005c28	movl	$__mh_bundle_header,0xe4(%ebp)
00005c2f	jmp	0x00005c4c
00005c31	movl	0x1c(%ebp),%eax
00005c34	movl	$__mh_bundle_header,(%eax)
00005c3a	movl	0xf4(%ebp),%eax
00005c3d	movl	%eax,(%esp)
00005c40	calll	0x00011149	; symbol stub for: _CFRelease
00005c45	movl	$0x80000004,0xe4(%ebp)
00005c4c	movl	0xe4(%ebp),%eax
00005c4f	addl	$0x74,%esp
00005c52	popl	%ebx
00005c53	leave
00005c54	ret
_SVNPluginAddRef:
00005c55	pushl	%ebp
00005c56	movl	%esp,%ebp
00005c58	subl	$0x08,%esp
00005c5b	movl	0x08(%ebp),%edx
00005c5e	movl	0x08(%ebp),%eax
00005c61	movl	0x08(%eax),%eax
00005c64	incl	%eax
00005c65	movl	%eax,0x08(%edx)
00005c68	movl	0x08(%ebp),%eax
00005c6b	movl	0x08(%eax),%eax
00005c6e	leave
00005c6f	ret
_SVNPluginRelease:
00005c70	pushl	%ebp
00005c71	movl	%esp,%ebp
00005c73	subl	$0x28,%esp
00005c76	movl	0x08(%ebp),%edx
00005c79	movl	0x08(%ebp),%eax
00005c7c	movl	0x08(%eax),%eax
00005c7f	decl	%eax
00005c80	movl	%eax,0x08(%edx)
00005c83	movl	0x08(%ebp),%eax
00005c86	movl	0x08(%eax),%eax
00005c89	testl	%eax,%eax
00005c8b	jne	0x00005ca1
00005c8d	movl	0x08(%ebp),%eax
00005c90	movl	%eax,(%esp)
00005c93	calll	0x00005799
00005c98	movl	$__mh_bundle_header,0xf4(%ebp)
00005c9f	jmp	0x00005caa
00005ca1	movl	0x08(%ebp),%eax
00005ca4	movl	0x08(%eax),%eax
00005ca7	movl	%eax,0xf4(%ebp)
00005caa	movl	0xf4(%ebp),%eax
00005cad	leave
00005cae	ret
_getPathStringFromFSRef:
00005caf	pushl	%ebp
00005cb0	movl	%esp,%ebp
00005cb2	subl	$0x38,%esp
00005cb5	movb	$__mh_bundle_header,0xef(%ebp)
00005cb9	movl	0x08(%ebp),%eax
00005cbc	movl	%eax,0x04(%esp)
00005cc0	movl	$__mh_bundle_header,(%esp)
00005cc7	calll	0x0001118a	; symbol stub for: _CFURLCreateFromFSRef
00005ccc	movl	%eax,0xf0(%ebp)
00005ccf	cmpl	$__mh_bundle_header,0xf0(%ebp)
00005cd3	je	0x00005d62
00005cd9	movl	$__mh_bundle_header,0x04(%esp)
00005ce1	movl	0xf0(%ebp),%eax
00005ce4	movl	%eax,(%esp)
00005ce7	calll	0x00011185	; symbol stub for: _CFURLCopyFileSystemPath
00005cec	movl	%eax,0xf4(%ebp)
00005cef	cmpl	$__mh_bundle_header,0xf4(%ebp)
00005cf3	je	0x00005d57
00005cf5	movl	0xf4(%ebp),%eax
00005cf8	movl	%eax,(%esp)
00005cfb	calll	0x00011180	; symbol stub for: _CFStringGetLength
00005d00	movl	%eax,0x04(%esp)
00005d04	movl	$__mh_bundle_header,(%esp)
00005d0b	calll	_CFRangeMake
00005d10	movl	%eax,0xe4(%ebp)
00005d13	movl	%edx,0xe8(%ebp)
00005d16	movl	0x0c(%ebp),%eax
00005d19	movl	%eax,0x0c(%esp)
00005d1d	movl	0xe4(%ebp),%eax
00005d20	movl	0xe8(%ebp),%edx
00005d23	movl	%eax,0x04(%esp)
00005d27	movl	%edx,0x08(%esp)
00005d2b	movl	0xf4(%ebp),%eax
00005d2e	movl	%eax,(%esp)
00005d31	calll	0x00011176	; symbol stub for: _CFStringGetCharacters
00005d36	movl	0xf4(%ebp),%eax
00005d39	movl	%eax,(%esp)
00005d3c	calll	0x00011180	; symbol stub for: _CFStringGetLength
00005d41	movl	%eax,%edx
00005d43	movl	0x10(%ebp),%eax
00005d46	movl	%edx,(%eax)
00005d48	movl	0xf4(%ebp),%eax
00005d4b	movl	%eax,(%esp)
00005d4e	calll	0x00011149	; symbol stub for: _CFRelease
00005d53	movb	$0x01,0xef(%ebp)
00005d57	movl	0xf0(%ebp),%eax
00005d5a	movl	%eax,(%esp)
00005d5d	calll	0x00011149	; symbol stub for: _CFRelease
00005d62	movzbl	0xef(%ebp),%eax
00005d66	leave
00005d67	ret
_CFRangeMake:
00005d68	pushl	%ebp
00005d69	movl	%esp,%ebp
00005d6b	subl	$0x18,%esp
00005d6e	movl	0x08(%ebp),%eax
00005d71	movl	%eax,0xf0(%ebp)
00005d74	movl	0x0c(%ebp),%eax
00005d77	movl	%eax,0xf4(%ebp)
00005d7a	movl	0xf0(%ebp),%eax
00005d7d	movl	0xf4(%ebp),%edx
00005d80	leave
00005d81	ret
_getPathStringFromAlias:
00005d82	pushl	%ebp
00005d83	movl	%esp,%ebp
00005d85	pushl	%ebx
00005d86	subl	$0x000000a4,%esp
00005d8c	calll	0x00005d91
00005d91	popl	%ebx
00005d92	movl	0x08(%ebp),%eax
00005d95	movl	%eax,(%esp)
00005d98	calll	0x00011063	; symbol stub for: _AEGetDescDataSize
00005d9d	movl	%eax,0xe4(%ebp)
00005da0	movb	$__mh_bundle_header,0x93(%ebp)
00005da4	movw	$__mh_bundle_header,0xee(%ebp)
00005daa	movl	0xe4(%ebp),%eax
00005dad	movl	%eax,(%esp)
00005db0	calll	0x00011342	; symbol stub for: _NewHandle
00005db5	movl	%eax,0xe8(%ebp)
00005db8	cmpl	$__mh_bundle_header,0xe8(%ebp)
00005dbc	jne	0x00005dca
00005dbe	movl	$__mh_bundle_header,0x84(%ebp)
00005dc5	jmp	0x00005f1b
00005dca	movl	0xe8(%ebp),%eax
00005dcd	movl	(%eax),%edx
00005dcf	movl	0xe4(%ebp),%eax
00005dd2	movl	%eax,0x08(%esp)
00005dd6	movl	%edx,0x04(%esp)
00005dda	movl	0x08(%ebp),%eax
00005ddd	movl	%eax,(%esp)
00005de0	calll	0x0001105e	; symbol stub for: _AEGetDescData
00005de5	movw	%ax,0xee(%ebp)
00005de9	movswl	0xee(%ebp),%eax
00005ded	movl	%eax,0xf0(%ebp)
00005df0	cmpl	$__mh_bundle_header,0xf0(%ebp)
00005df4	setne	%al
00005df7	movzbl	%al,%eax
00005dfa	testl	%eax,%eax
00005dfc	je	0x00005e4c
00005dfe	movl	0xf0(%ebp),%eax
00005e01	movl	%eax,0x1c(%esp)
00005e05	movl	$0x00000144,0x18(%esp)
00005e0d	leal	0x0000836b(%ebx),%eax
00005e13	movl	%eax,0x14(%esp)
00005e17	movl	$__mh_bundle_header,0x10(%esp)
00005e1f	leal	0x000083a7(%ebx),%eax
00005e25	movl	%eax,0x0c(%esp)
00005e29	leal	0x000083c3(%ebx),%eax
00005e2f	movl	%eax,0x08(%esp)
00005e33	movl	$__mh_bundle_header,0x04(%esp)
00005e3b	movl	$0x3f2a3f2a,(%esp)
00005e42	calll	0x00011220	; symbol stub for: _DebugAssert
00005e47	jmp	0x00005f02
00005e4c	leal	0x93(%ebp),%eax
00005e4f	movl	%eax,0x0c(%esp)
00005e53	leal	0x94(%ebp),%eax
00005e56	movl	%eax,0x08(%esp)
00005e5a	movl	0xe8(%ebp),%eax
00005e5d	movl	%eax,0x04(%esp)
00005e61	movl	$__mh_bundle_header,(%esp)
00005e68	calll	0x00011252	; symbol stub for: _FSResolveAlias
00005e6d	movw	%ax,0xee(%ebp)
00005e71	movswl	0xee(%ebp),%eax
00005e75	movl	%eax,0xf4(%ebp)
00005e78	cmpl	$__mh_bundle_header,0xf4(%ebp)
00005e7c	setne	%al
00005e7f	movzbl	%al,%eax
00005e82	testl	%eax,%eax
00005e84	je	0x00005ed1
00005e86	movl	0xf4(%ebp),%eax
00005e89	movl	%eax,0x1c(%esp)
00005e8d	movl	$0x00000148,0x18(%esp)
00005e95	leal	0x0000836b(%ebx),%eax
00005e9b	movl	%eax,0x14(%esp)
00005e9f	movl	$__mh_bundle_header,0x10(%esp)
00005ea7	leal	0x000083a7(%ebx),%eax
00005ead	movl	%eax,0x0c(%esp)
00005eb1	leal	0x000083c3(%ebx),%eax
00005eb7	movl	%eax,0x08(%esp)
00005ebb	movl	$__mh_bundle_header,0x04(%esp)
00005ec3	movl	$0x3f2a3f2a,(%esp)
00005eca	calll	0x00011220	; symbol stub for: _DebugAssert
00005ecf	jmp	0x00005f02
00005ed1	movl	0x10(%ebp),%eax
00005ed4	movl	%eax,0x08(%esp)
00005ed8	movl	0x0c(%ebp),%eax
00005edb	movl	%eax,0x04(%esp)
00005edf	leal	0x94(%ebp),%eax
00005ee2	movl	%eax,(%esp)
00005ee5	calll	0x00005caf
00005eea	testb	%al,%al
00005eec	jne	0x00005f02
00005eee	movl	0xe8(%ebp),%eax
00005ef1	movl	%eax,(%esp)
00005ef4	calll	0x0001122f	; symbol stub for: _DisposeHandle
00005ef9	movl	$__mh_bundle_header,0x84(%ebp)
00005f00	jmp	0x00005f1b
00005f02	movl	0xe8(%ebp),%eax
00005f05	movl	%eax,(%esp)
00005f08	calll	0x0001122f	; symbol stub for: _DisposeHandle
00005f0d	cmpw	$__mh_bundle_header,0xee(%ebp)
00005f12	sete	%al
00005f15	movzbl	%al,%eax
00005f18	movl	%eax,0x84(%ebp)
00005f1b	movl	0x84(%ebp),%eax
00005f1e	addl	$0x000000a4,%esp
00005f24	popl	%ebx
00005f25	leave
00005f26	ret
_addCommandToMenu:
00005f27	pushl	%ebp
00005f28	movl	%esp,%ebp
00005f2a	pushl	%ebx
00005f2b	subl	$0x44,%esp
00005f2e	calll	0x00005f33
00005f33	popl	%ebx
00005f34	movl	$0x6e756c6c,0xe2(%ebp)
00005f3b	movl	$__mh_bundle_header,0xe6(%ebp)
00005f42	movw	$__mh_bundle_header,0xea(%ebp)
00005f48	leal	0xe2(%ebp),%eax
00005f4b	movl	%eax,0x0c(%esp)
00005f4f	movl	$0x00000001,0x08(%esp)
00005f57	movl	$__mh_bundle_header,0x04(%esp)
00005f5f	movl	$__mh_bundle_header,(%esp)
00005f66	calll	0x00011054	; symbol stub for: _AECreateList
00005f6b	movw	%ax,0xea(%ebp)
00005f6f	movswl	0xea(%ebp),%eax
00005f73	movl	%eax,0xec(%ebp)
00005f76	cmpl	$__mh_bundle_header,0xec(%ebp)
00005f7a	setne	%al
00005f7d	movzbl	%al,%eax
00005f80	testl	%eax,%eax
00005f82	je	0x00005fd2
00005f84	movl	0xec(%ebp),%eax
00005f87	movl	%eax,0x1c(%esp)
00005f8b	movl	$0x0000015a,0x18(%esp)
00005f93	leal	0x000081c9(%ebx),%eax
00005f99	movl	%eax,0x14(%esp)
00005f9d	movl	$__mh_bundle_header,0x10(%esp)
00005fa5	leal	0x00008241(%ebx),%eax
00005fab	movl	%eax,0x0c(%esp)
00005faf	leal	0x00008221(%ebx),%eax
00005fb5	movl	%eax,0x08(%esp)
00005fb9	movl	$__mh_bundle_header,0x04(%esp)
00005fc1	movl	$0x3f2a3f2a,(%esp)
00005fc8	calll	0x00011220	; symbol stub for: _DebugAssert
00005fcd	jmp	0x0000614d
00005fd2	movl	0x0c(%ebp),%eax
00005fd5	movl	%eax,(%esp)
00005fd8	calll	0x000114eb	; symbol stub for: _strlen
00005fdd	movl	%eax,0x10(%esp)
00005fe1	movl	0x0c(%ebp),%eax
00005fe4	movl	%eax,0x0c(%esp)
00005fe8	movl	$0x75746638,0x08(%esp)
00005ff0	movl	$0x706e616d,0x04(%esp)
00005ff8	leal	0xe2(%ebp),%eax
00005ffb	movl	%eax,(%esp)
00005ffe	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
00006003	movw	%ax,0xea(%ebp)
00006007	movswl	0xea(%ebp),%eax
0000600b	movl	%eax,0xf0(%ebp)
0000600e	cmpl	$__mh_bundle_header,0xf0(%ebp)
00006012	setne	%al
00006015	movzbl	%al,%eax
00006018	testl	%eax,%eax
0000601a	je	0x0000606a
0000601c	movl	0xf0(%ebp),%eax
0000601f	movl	%eax,0x1c(%esp)
00006023	movl	$0x0000015d,0x18(%esp)
0000602b	leal	0x000081c9(%ebx),%eax
00006031	movl	%eax,0x14(%esp)
00006035	movl	$__mh_bundle_header,0x10(%esp)
0000603d	leal	0x00008260(%ebx),%eax
00006043	movl	%eax,0x0c(%esp)
00006047	leal	0x00008221(%ebx),%eax
0000604d	movl	%eax,0x08(%esp)
00006051	movl	$__mh_bundle_header,0x04(%esp)
00006059	movl	$0x3f2a3f2a,(%esp)
00006060	calll	0x00011220	; symbol stub for: _DebugAssert
00006065	jmp	0x00006142
0000606a	movl	0x10(%ebp),%eax
0000606d	cmpl	$0xff,%eax
00006070	je	0x00006104
00006076	movl	$0x00000004,0x10(%esp)
0000607e	leal	0x10(%ebp),%eax
00006081	movl	%eax,0x0c(%esp)
00006085	movl	$0x6c6f6e67,0x08(%esp)
0000608d	movl	$0x636d6364,0x04(%esp)
00006095	leal	0xe2(%ebp),%eax
00006098	movl	%eax,(%esp)
0000609b	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
000060a0	movw	%ax,0xea(%ebp)
000060a4	movswl	0xea(%ebp),%eax
000060a8	movl	%eax,0xf4(%ebp)
000060ab	cmpl	$__mh_bundle_header,0xf4(%ebp)
000060af	setne	%al
000060b2	movzbl	%al,%eax
000060b5	testl	%eax,%eax
000060b7	je	0x00006104
000060b9	movl	0xf4(%ebp),%eax
000060bc	movl	%eax,0x1c(%esp)
000060c0	movl	$0x00000163,0x18(%esp)
000060c8	leal	0x000081c9(%ebx),%eax
000060ce	movl	%eax,0x14(%esp)
000060d2	movl	$__mh_bundle_header,0x10(%esp)
000060da	leal	0x00008260(%ebx),%eax
000060e0	movl	%eax,0x0c(%esp)
000060e4	leal	0x00008221(%ebx),%eax
000060ea	movl	%eax,0x08(%esp)
000060ee	movl	$__mh_bundle_header,0x04(%esp)
000060f6	movl	$0x3f2a3f2a,(%esp)
000060fd	calll	0x00011220	; symbol stub for: _DebugAssert
00006102	jmp	0x00006142
00006104	cmpl	$__mh_bundle_header,0x14(%ebp)
00006108	je	0x00006124
0000610a	movl	0x14(%ebp),%eax
0000610d	movl	%eax,0x08(%esp)
00006111	movl	$0x636d7362,0x04(%esp)
00006119	leal	0xe2(%ebp),%eax
0000611c	movl	%eax,(%esp)
0000611f	calll	0x00011086	; symbol stub for: _AEPutParamDesc
00006124	leal	0xe2(%ebp),%eax
00006127	movl	%eax,0x08(%esp)
0000612b	movl	$__mh_bundle_header,0x04(%esp)
00006133	movl	0x08(%ebp),%eax
00006136	movl	%eax,(%esp)
00006139	calll	0x00011081	; symbol stub for: _AEPutDesc
0000613e	movw	%ax,0xea(%ebp)
00006142	leal	0xe2(%ebp),%eax
00006145	movl	%eax,(%esp)
00006148	calll	0x00011059	; symbol stub for: _AEDisposeDesc
0000614d	movswl	0xea(%ebp),%eax
00006151	addl	$0x44,%esp
00006154	popl	%ebx
00006155	leave
00006156	ret
_parseMenu:
00006157	pushl	%ebp
00006158	movl	%esp,%ebp
0000615a	pushl	%ebx
0000615b	subl	$0x54,%esp
0000615e	calll	0x00006163
00006163	popl	%ebx
00006164	movl	0x08(%ebp),%eax
00006167	movl	%eax,0xd4(%ebp)
0000616a	movb	$__mh_bundle_header,0xe7(%ebp)
0000616e	movl	0x10(%ebp),%eax
00006171	movl	%eax,0x0c(%esp)
00006175	movl	$__mh_bundle_header,0x08(%esp)
0000617d	movl	$__mh_bundle_header,0x04(%esp)
00006185	movl	$__mh_bundle_header,(%esp)
0000618c	calll	0x00011054	; symbol stub for: _AECreateList
00006191	jmp	0x000063d1
00006196	leal	0x00008046(%ebx),%eax
0000619c	movl	%eax,0x04(%esp)
000061a0	leal	0xd4(%ebp),%eax
000061a3	movl	%eax,(%esp)
000061a6	calll	0x000114f5	; symbol stub for: _strsep
000061ab	movl	%eax,0xd8(%ebp)
000061ae	movl	0xd4(%ebp),%eax
000061b1	movl	%eax,%edx
000061b3	movl	0xd8(%ebp),%eax
000061b6	movl	%edx,%ecx
000061b8	subl	%eax,%ecx
000061ba	movl	%ecx,%eax
000061bc	movl	%eax,0x08(%esp)
000061c0	movl	0xd8(%ebp),%eax
000061c3	movl	%eax,0x04(%esp)
000061c7	movl	0xd8(%ebp),%eax
000061ca	movl	%eax,(%esp)
000061cd	calll	0x00002f13
000061d2	movl	0xd8(%ebp),%eax
000061d5	movl	%eax,0xe8(%ebp)
000061d8	leal	0x00008046(%ebx),%eax
000061de	movl	%eax,0x04(%esp)
000061e2	leal	0xd4(%ebp),%eax
000061e5	movl	%eax,(%esp)
000061e8	calll	0x000114f5	; symbol stub for: _strsep
000061ed	movl	%eax,0xdc(%ebp)
000061f0	leal	0x00008048(%ebx),%eax
000061f6	movl	%eax,0x04(%esp)
000061fa	leal	0xd4(%ebp),%eax
000061fd	movl	%eax,(%esp)
00006200	calll	0x000114f5	; symbol stub for: _strsep
00006205	movl	%eax,0xd8(%ebp)
00006208	movl	0xd4(%ebp),%eax
0000620b	testl	%eax,%eax
0000620d	jne	0x0000621f
0000620f	movl	0xd8(%ebp),%eax
00006212	movl	%eax,(%esp)
00006215	calll	0x000114eb	; symbol stub for: _strlen
0000621a	movl	%eax,0xe0(%ebp)
0000621d	jmp	0x00006230
0000621f	movl	0xd4(%ebp),%eax
00006222	movl	%eax,%edx
00006224	movl	0xd8(%ebp),%eax
00006227	movl	%edx,%ecx
00006229	subl	%eax,%ecx
0000622b	movl	%ecx,%eax
0000622d	movl	%eax,0xe0(%ebp)
00006230	movl	0xe0(%ebp),%eax
00006233	incl	%eax
00006234	movl	%eax,0x08(%esp)
00006238	movl	0xd8(%ebp),%eax
0000623b	movl	%eax,0x04(%esp)
0000623f	movl	0xd8(%ebp),%eax
00006242	movl	%eax,(%esp)
00006245	calll	0x00002f13
0000624a	movl	0xd8(%ebp),%eax
0000624d	movl	%eax,0xec(%ebp)
00006250	movl	0xd8(%ebp),%edx
00006253	movl	0xdc(%ebp),%eax
00006256	movl	%edx,%ecx
00006258	subl	%eax,%ecx
0000625a	movl	%ecx,%eax
0000625c	movl	%eax,0x08(%esp)
00006260	movl	0xdc(%ebp),%eax
00006263	movl	%eax,0x04(%esp)
00006267	movl	0xdc(%ebp),%eax
0000626a	movl	%eax,(%esp)
0000626d	calll	0x00002f13
00006272	movl	%eax,0xf0(%ebp)
00006275	movl	$0x0000007e,0x04(%esp)
0000627d	movl	0xdc(%ebp),%eax
00006280	movl	%eax,(%esp)
00006283	calll	0x000114d7	; symbol stub for: _strchr
00006288	testl	%eax,%eax
0000628a	je	0x000062f5
0000628c	leal	0xcc(%ebp),%eax
0000628f	movl	%eax,0x08(%esp)
00006293	movl	0xf0(%ebp),%eax
00006296	movl	%eax,0x04(%esp)
0000629a	movl	0xdc(%ebp),%eax
0000629d	movl	%eax,(%esp)
000062a0	calll	0x00006157
000062a5	testb	%al,%al
000062a7	je	0x000062de
000062a9	leal	0xcc(%ebp),%eax
000062ac	movl	%eax,0x0c(%esp)
000062b0	movl	$0xffffffff,0x08(%esp)
000062b8	movl	0xe8(%ebp),%eax
000062bb	movl	%eax,0x04(%esp)
000062bf	movl	0x10(%ebp),%eax
000062c2	movl	%eax,(%esp)
000062c5	calll	0x00005f27
000062ca	movb	$0x01,0xe7(%ebp)
000062ce	leal	0xcc(%ebp),%eax
000062d1	movl	%eax,(%esp)
000062d4	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000062d9	jmp	0x000063d1
000062de	leal	0xcc(%ebp),%eax
000062e1	movl	%eax,(%esp)
000062e4	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000062e9	movl	$__mh_bundle_header,0xc0(%ebp)
000062f0	jmp	0x000063f6
000062f5	movl	$0x0000000c,(%esp)
000062fc	calll	0x00011450	; symbol stub for: _malloc
00006301	movl	%eax,0xf4(%ebp)
00006304	cmpl	$__mh_bundle_header,0xf4(%ebp)
00006308	je	0x000063ba
0000630e	leal	0x000095e9(%ebx),%eax
00006314	movl	(%eax),%eax
00006316	testl	%eax,%eax
00006318	je	0x0000632a
0000631a	leal	0x000095e9(%ebx),%eax
00006320	movl	(%eax),%eax
00006322	movl	(%eax),%eax
00006324	incl	%eax
00006325	movl	%eax,0xc4(%ebp)
00006328	jmp	0x00006331
0000632a	movl	$0x000000c9,0xc4(%ebp)
00006331	movl	0xf4(%ebp),%eax
00006334	movl	0xc4(%ebp),%edx
00006337	movl	%edx,(%eax)
00006339	movl	0xec(%ebp),%eax
0000633c	movl	%eax,(%esp)
0000633f	calll	0x000114e1	; symbol stub for: _strdup
00006344	movl	%eax,%edx
00006346	movl	0xf4(%ebp),%eax
00006349	movl	%edx,0x04(%eax)
0000634c	movl	0xf4(%ebp),%eax
0000634f	movl	0x04(%eax),%eax
00006352	testl	%eax,%eax
00006354	jne	0x00006378
00006356	leal	0x0000804a(%ebx),%eax
0000635c	movl	%eax,(%esp)
0000635f	calll	_dbtrace
00006364	movl	0xf4(%ebp),%eax
00006367	movl	%eax,(%esp)
0000636a	calll	0x0001140f	; symbol stub for: _free
0000636f	movl	$__mh_bundle_header,0xc0(%ebp)
00006376	jmp	0x000063f6
00006378	leal	0x000095e9(%ebx),%eax
0000637e	movl	(%eax),%edx
00006380	movl	0xf4(%ebp),%eax
00006383	movl	%edx,0x08(%eax)
00006386	leal	0x000095e9(%ebx),%edx
0000638c	movl	0xf4(%ebp),%eax
0000638f	movl	%eax,(%edx)
00006391	movl	0xf4(%ebp),%eax
00006394	movl	(%eax),%eax
00006396	movl	$__mh_bundle_header,0x0c(%esp)
0000639e	movl	%eax,0x08(%esp)
000063a2	movl	0xe8(%ebp),%eax
000063a5	movl	%eax,0x04(%esp)
000063a9	movl	0x10(%ebp),%eax
000063ac	movl	%eax,(%esp)
000063af	calll	0x00005f27
000063b4	movb	$0x01,0xe7(%ebp)
000063b8	jmp	0x000063d1
000063ba	leal	0x00008069(%ebx),%eax
000063c0	movl	%eax,(%esp)
000063c3	calll	_dbtrace
000063c8	movl	$__mh_bundle_header,0xc0(%ebp)
000063cf	jmp	0x000063f6
000063d1	movl	0xd4(%ebp),%eax
000063d4	testl	%eax,%eax
000063d6	je	0x000063ef
000063d8	movl	0xd4(%ebp),%eax
000063db	movl	%eax,%edx
000063dd	movl	0x08(%ebp),%eax
000063e0	movl	%edx,%ecx
000063e2	subl	%eax,%ecx
000063e4	movl	%ecx,%eax
000063e6	cmpl	0x0c(%ebp),%eax
000063e9	jl	0x00006196
000063ef	movzbl	0xe7(%ebp),%eax
000063f3	movl	%eax,0xc0(%ebp)
000063f6	movl	0xc0(%ebp),%eax
000063f9	addl	$0x54,%esp
000063fc	popl	%ebx
000063fd	leave
000063fe	ret
_SVNPluginExamineContextDoAE:
000063ff	pushl	%ebp
00006400	movl	%esp,%ebp
00006402	pushl	%ebx
00006403	subl	$0x00000c74,%esp
00006409	calll	0x0000640e
0000640e	popl	%ebx
0000640f	movl	0x08(%ebp),%eax
00006412	movl	%eax,0xe8(%ebp)
00006415	cmpl	$__mh_bundle_header,0xe8(%ebp)
00006419	je	0x0000642b
0000641b	leal	0x0000911a(%ebx),%eax
00006421	movzbl	(%eax),%eax
00006424	xorl	$0x01,%eax
00006427	testb	%al,%al
00006429	jne	0x00006434
0000642b	calll	_ShouldLoadContextMenus
00006430	testb	%al,%al
00006432	jne	0x00006443
00006434	movl	$0xffffffff,0xfffff3b4(%ebp)
0000643e	jmp	0x000065c3
00006443	leal	0xfffff3dc(%ebp),%eax
00006449	movl	%eax,0x04(%esp)
0000644d	movl	0x0c(%ebp),%eax
00006450	movl	%eax,(%esp)
00006453	calll	0x00011045	; symbol stub for: _AECountItems
00006458	movw	%ax,0xf2(%ebp)
0000645c	movl	$0x00000001,0xf4(%ebp)
00006463	jmp	0x00006521
00006468	leal	0xfffff3d0(%ebp),%eax
0000646e	movl	%eax,0x10(%esp)
00006472	leal	0xfffff3cc(%ebp),%eax
00006478	movl	%eax,0x0c(%esp)
0000647c	movl	$0x616c6973,0x08(%esp)
00006484	movl	0xf4(%ebp),%eax
00006487	movl	%eax,0x04(%esp)
0000648b	movl	0x0c(%ebp),%eax
0000648e	movl	%eax,(%esp)
00006491	calll	0x00011068	; symbol stub for: _AEGetNthDesc
00006496	movw	%ax,0xf2(%ebp)
0000649a	cmpw	$__mh_bundle_header,0xf2(%ebp)
0000649f	jne	0x0000651e
000064a1	leal	0xfffff3d8(%ebp),%eax
000064a7	movl	%eax,0x08(%esp)
000064ab	leal	0xfffff7e4(%ebp),%eax
000064b1	movl	%eax,0x04(%esp)
000064b5	leal	0xfffff3d0(%ebp),%eax
000064bb	movl	%eax,(%esp)
000064be	calll	0x00005d82
000064c3	testb	%al,%al
000064c5	je	0x0000651e
000064c7	movl	0xfffff3dc(%ebp),%eax
000064cd	cmpl	%eax,0xf4(%ebp)
000064d0	jge	0x000064e9
000064d2	movl	0xfffff3d8(%ebp),%eax
000064d8	movw	$0x007c,0xfffff7e4(%ebp,%eax,2)
000064e2	incl	%eax
000064e3	movl	%eax,0xfffff3d8(%ebp)
000064e9	movl	0xfffff3d8(%ebp),%edx
000064ef	movl	$0x00000401,0x10(%esp)
000064f7	leal	0xfffff3e2(%ebp),%eax
000064fd	movl	%eax,0x0c(%esp)
00006501	movl	%edx,0x08(%esp)
00006505	leal	0xfffff7e4(%ebp),%eax
0000650b	movl	%eax,0x04(%esp)
0000650f	movl	$0x00000003,(%esp)
00006516	calll	0x00001af2
0000651b	movl	%eax,0xec(%ebp)
0000651e	incl	0xf4(%ebp)
00006521	movl	0xfffff3dc(%ebp),%eax
00006527	cmpl	%eax,0xf4(%ebp)
0000652a	jle	0x00006468
00006530	cmpl	$__mh_bundle_header,0xec(%ebp)
00006534	jle	0x0000659e
00006536	calll	0x000057f7
0000653b	movl	0xec(%ebp),%eax
0000653e	movb	$__mh_bundle_header,0xfffff3e2(%ebp,%eax)
00006546	leal	0xfffff3c4(%ebp),%eax
0000654c	movl	%eax,0x08(%esp)
00006550	movl	0xec(%ebp),%eax
00006553	movl	%eax,0x04(%esp)
00006557	leal	0xfffff3e2(%ebp),%eax
0000655d	movl	%eax,(%esp)
00006560	calll	0x00006157
00006565	testb	%al,%al
00006567	je	0x00006590
00006569	leal	0xfffff3c4(%ebp),%eax
0000656f	movl	%eax,0x0c(%esp)
00006573	movl	$0xffffffff,0x08(%esp)
0000657b	leal	0x000076be(%ebx),%eax
00006581	movl	%eax,0x04(%esp)
00006585	movl	0x10(%ebp),%eax
00006588	movl	%eax,(%esp)
0000658b	calll	0x00005f27
00006590	leal	0xfffff3c4(%ebp),%eax
00006596	movl	%eax,(%esp)
00006599	calll	0x00011059	; symbol stub for: _AEDisposeDesc
0000659e	cmpw	$__mh_bundle_header,0xf2(%ebp)
000065a3	jne	0x000065b9
000065a5	cmpl	$__mh_bundle_header,0xe8(%ebp)
000065a9	je	0x000065b9
000065ab	movl	0xe8(%ebp),%eax
000065ae	addl	$0x0c,%eax
000065b1	movl	%eax,(%esp)
000065b4	calll	_CMHelperStart
000065b9	movswl	0xf2(%ebp),%eax
000065bd	movl	%eax,0xfffff3b4(%ebp)
000065c3	movl	0xfffff3b4(%ebp),%eax
000065c9	addl	$0x00000c74,%esp
000065cf	popl	%ebx
000065d0	leave
000065d1	ret
_SVNPluginExamineContext:
000065d2	pushl	%ebp
000065d3	movl	%esp,%ebp
000065d5	subl	$0x28,%esp
000065d8	movl	0x10(%ebp),%eax
000065db	movl	%eax,0x08(%esp)
000065df	movl	0x0c(%ebp),%eax
000065e2	movl	%eax,0x04(%esp)
000065e6	movl	0x08(%ebp),%eax
000065e9	movl	%eax,(%esp)
000065ec	calll	0x000063ff
000065f1	movl	%eax,0xf4(%ebp)
000065f4	movl	0xf4(%ebp),%eax
000065f7	leave
000065f8	ret
_SVNPluginHandleSelectionAE:
000065f9	pushl	%ebp
000065fa	movl	%esp,%ebp
000065fc	pushl	%ebx
000065fd	subl	$0x00000844,%esp
00006603	calll	0x00006608
00006608	popl	%ebx
00006609	movw	$__mh_bundle_header,0xea(%ebp)
0000660f	leal	0x00009144(%ebx),%eax
00006615	movl	(%eax),%eax
00006617	movl	%eax,0xec(%ebp)
0000661a	jmp	0x000066e4
0000661f	movl	0xec(%ebp),%eax
00006622	movl	(%eax),%eax
00006624	cmpl	0x10(%ebp),%eax
00006627	jne	0x000066db
0000662d	movl	0xec(%ebp),%eax
00006630	movl	0x04(%eax),%eax
00006633	movl	$0x08000100,0x08(%esp)
0000663b	movl	%eax,0x04(%esp)
0000663f	movl	$__mh_bundle_header,(%esp)
00006646	calll	0x0001115d	; symbol stub for: _CFStringCreateWithCString
0000664b	movl	%eax,0xf0(%ebp)
0000664e	cmpl	$__mh_bundle_header,0xf0(%ebp)
00006652	je	0x000066ee
00006658	movl	0xf0(%ebp),%eax
0000665b	movl	%eax,(%esp)
0000665e	calll	0x00011180	; symbol stub for: _CFStringGetLength
00006663	movl	%eax,0x04(%esp)
00006667	movl	$__mh_bundle_header,(%esp)
0000666e	calll	0x00005d68
00006673	movl	%eax,0xe0(%ebp)
00006676	movl	%edx,0xe4(%ebp)
00006679	leal	0xfffff7e0(%ebp),%eax
0000667f	movl	%eax,0x0c(%esp)
00006683	movl	0xe0(%ebp),%eax
00006686	movl	0xe4(%ebp),%edx
00006689	movl	%eax,0x04(%esp)
0000668d	movl	%edx,0x08(%esp)
00006691	movl	0xf0(%ebp),%eax
00006694	movl	%eax,(%esp)
00006697	calll	0x00011176	; symbol stub for: _CFStringGetCharacters
0000669c	leal	0xfffff7e0(%ebp),%eax
000066a2	movl	0xe4(%ebp),%edx
000066a5	movl	$0x000007ff,0x10(%esp)
000066ad	movl	%eax,0x0c(%esp)
000066b1	movl	%edx,0x08(%esp)
000066b5	leal	0xfffff7e0(%ebp),%eax
000066bb	movl	%eax,0x04(%esp)
000066bf	movl	$0x00000004,(%esp)
000066c6	calll	0x00001af2
000066cb	movl	%eax,0xf4(%ebp)
000066ce	movl	0xf0(%ebp),%eax
000066d1	movl	%eax,(%esp)
000066d4	calll	0x00011149	; symbol stub for: _CFRelease
000066d9	jmp	0x000066ee
000066db	movl	0xec(%ebp),%eax
000066de	movl	0x08(%eax),%eax
000066e1	movl	%eax,0xec(%ebp)
000066e4	cmpl	$__mh_bundle_header,0xec(%ebp)
000066e8	jne	0x0000661f
000066ee	movswl	0xea(%ebp),%eax
000066f2	addl	$0x00000844,%esp
000066f8	popl	%ebx
000066f9	leave
000066fa	ret
_DropboxIconOverlayProvider:
000066fb	pushl	%ebp
000066fc	movl	%esp,%ebp
000066fe	subl	$0x000017a8,%esp
00006704	movl	$__mh_bundle_header,0xf0(%ebp)
0000670b	leal	0xfffff04c(%ebp),%eax
00006711	movl	%eax,0x08(%esp)
00006715	leal	0xfffff050(%ebp),%eax
0000671b	movl	%eax,0x04(%esp)
0000671f	movl	0x08(%ebp),%eax
00006722	movl	%eax,(%esp)
00006725	calll	0x00005caf
0000672a	testb	%al,%al
0000672c	je	0x000067bc
00006732	movl	0xfffff04c(%ebp),%edx
00006738	movl	$0x000007cf,0x10(%esp)
00006740	leal	0xffffe87c(%ebp),%eax
00006746	movl	%eax,0x0c(%esp)
0000674a	movl	%edx,0x08(%esp)
0000674e	leal	0xfffff050(%ebp),%eax
00006754	movl	%eax,0x04(%esp)
00006758	movl	$0x00000001,(%esp)
0000675f	calll	0x00001af2
00006764	movl	%eax,0xfffff04c(%ebp)
0000676a	movl	0xfffff04c(%ebp),%eax
00006770	testl	%eax,%eax
00006772	js	0x000067bc
00006774	movl	0xfffff04c(%ebp),%eax
0000677a	movb	$__mh_bundle_header,0xffffe87c(%ebp,%eax)
00006782	movl	$0x08000100,0x08(%esp)
0000678a	leal	0xffffe87c(%ebp),%eax
00006790	movl	%eax,0x04(%esp)
00006794	movl	$__mh_bundle_header,(%esp)
0000679b	calll	0x0001115d	; symbol stub for: _CFStringCreateWithCString
000067a0	movl	%eax,0xf4(%ebp)
000067a3	movl	0xf4(%ebp),%eax
000067a6	movl	%eax,(%esp)
000067a9	calll	_DropboxIconOverlayIconRefFromIconFile
000067ae	movl	%eax,0xf0(%ebp)
000067b1	movl	0xf4(%ebp),%eax
000067b4	movl	%eax,(%esp)
000067b7	calll	0x00011149	; symbol stub for: _CFRelease
000067bc	movl	0xf0(%ebp),%eax
000067bf	leave
000067c0	ret
_SVNPluginHandleSelection:
000067c1	pushl	%ebp
000067c2	movl	%esp,%ebp
000067c4	subl	$0x18,%esp
000067c7	movl	0x10(%ebp),%eax
000067ca	movl	%eax,0x08(%esp)
000067ce	movl	0x0c(%ebp),%eax
000067d1	movl	%eax,0x04(%esp)
000067d5	movl	0x08(%ebp),%eax
000067d8	movl	%eax,(%esp)
000067db	calll	0x000065f9
000067e0	leave
000067e1	ret
_SVNPluginPostMenuCleanup:
000067e2	pushl	%ebp
000067e3	movl	%esp,%ebp
000067e5	subl	$0x28,%esp
000067e8	movl	0x08(%ebp),%eax
000067eb	movl	%eax,0xf4(%ebp)
000067ee	movl	0xf4(%ebp),%eax
000067f1	addl	$0x0c,%eax
000067f4	movl	%eax,(%esp)
000067f7	calll	_CMHelperStop
000067fc	leave
000067fd	ret
_myrand:
000067fe	pushl	%ebp
000067ff	movl	%esp,%ebp
00006801	subl	$0x08,%esp
00006804	movl	0x08(%ebp),%eax
00006807	movl	(%eax),%eax
00006809	imull	$0x41c64e6d,%eax,%eax
0000680f	leal	0x00003039(%eax),%edx
00006815	movl	0x08(%ebp),%eax
00006818	movl	%edx,(%eax)
0000681a	movl	0x08(%ebp),%eax
0000681d	movl	(%eax),%eax
0000681f	leave
00006820	ret
_htole:
00006821	pushl	%ebp
00006822	movl	%esp,%ebp
00006824	subl	$0x28,%esp
00006827	movl	$0xcafebabe,0xf0(%ebp)
0000682e	leal	0xf0(%ebp),%eax
00006831	movzbl	(%eax),%eax
00006834	cmpb	$0xbe,%al
00006836	jne	0x00006840
00006838	movl	0x08(%ebp),%eax
0000683b	movl	%eax,0xe4(%ebp)
0000683e	jmp	0x00006874
00006840	movl	$__mh_bundle_header,0xf4(%ebp)
00006847	jmp	0x00006868
00006849	leal	0xec(%ebp),%edx
0000684c	movl	0xf4(%ebp),%eax
0000684f	leal	(%edx,%eax),%ecx
00006852	leal	0x08(%ebp),%edx
00006855	movl	$0x00000003,%eax
0000685a	subl	0xf4(%ebp),%eax
0000685d	leal	(%edx,%eax),%eax
00006860	movzbl	(%eax),%eax
00006863	movb	%al,(%ecx)
00006865	incl	0xf4(%ebp)
00006868	cmpl	$0x03,0xf4(%ebp)
0000686c	jbe	0x00006849
0000686e	movl	0xec(%ebp),%eax
00006871	movl	%eax,0xe4(%ebp)
00006874	movl	0xe4(%ebp),%eax
00006877	leave
00006878	ret
_makeparentdirs:
00006879	pushl	%ebp
0000687a	movl	%esp,%ebp
0000687c	subl	$0x00000088,%esp
00006882	movl	$__mh_bundle_header,0xf0(%ebp)
00006889	movl	0x08(%ebp),%eax
0000688c	movl	%eax,0xf4(%ebp)
0000688f	jmp	0x000068cf
00006891	leal	0x90(%ebp),%eax
00006894	movl	%eax,0x04(%esp)
00006898	movl	0xf4(%ebp),%eax
0000689b	movl	%eax,(%esp)
0000689e	calll	0x000114d2	; symbol stub for: _stat
000068a3	testl	%eax,%eax
000068a5	jns	0x000068cf
000068a7	calll	0x0001139c	; symbol stub for: ___error
000068ac	movl	(%eax),%eax
000068ae	cmpl	$0x02,%eax
000068b1	jne	0x000068c8
000068b3	movl	$0x000001ed,0x04(%esp)
000068bb	movl	0xf4(%ebp),%eax
000068be	movl	%eax,(%esp)
000068c1	calll	0x00011478	; symbol stub for: _mkdir
000068c6	jmp	0x000068cf
000068c8	movl	$0x00000001,0xf0(%ebp)
000068cf	movl	0xf4(%ebp),%eax
000068d2	movl	%eax,(%esp)
000068d5	calll	0x000113f1	; symbol stub for: _dirname
000068da	movl	%eax,0xf4(%ebp)
000068dd	movl	0xf4(%ebp),%eax
000068e0	incl	%eax
000068e1	movzbl	(%eax),%eax
000068e4	testb	%al,%al
000068e6	jne	0x00006891
000068e8	movl	0xf0(%ebp),%eax
000068eb	leave
000068ec	ret
_dbtrace_init_low:
000068ed	pushl	%ebp
000068ee	movl	%esp,%ebp
000068f0	pushl	%esi
000068f1	pushl	%ebx
000068f2	subl	$0x50,%esp
000068f5	calll	0x000068fa
000068fa	popl	%ebx
000068fb	leal	0x000078f7(%ebx),%eax
00006901	movl	%eax,0xd8(%ebp)
00006904	leal	0x00008e96(%ebx),%eax
0000690a	movl	%eax,0xdc(%ebp)
0000690d	leal	0x00007902(%ebx),%eax
00006913	movl	%eax,0xe0(%ebp)
00006916	leal	0x00008e9a(%ebx),%eax
0000691c	movl	%eax,0xe4(%ebp)
0000691f	movl	$__mh_bundle_header,0x04(%esp)
00006927	leal	0x00008e66(%ebx),%eax
0000692d	movl	%eax,(%esp)
00006930	calll	0x0001149b	; symbol stub for: _pthread_mutex_init
00006935	testl	%eax,%eax
00006937	je	0x00006945
00006939	movl	$0x00000001,0xd4(%ebp)
00006940	jmp	0x00006a07
00006945	movl	0x08(%ebp),%eax
00006948	movl	%eax,(%esp)
0000694b	calll	0x000114eb	; symbol stub for: _strlen
00006950	movl	%eax,0xec(%ebp)
00006953	movl	$__mh_bundle_header,0xe8(%ebp)
0000695a	jmp	0x000069f6
0000695f	movl	0xe8(%ebp),%eax
00006962	movl	0xdc(%ebp,%eax,8),%esi
00006966	movl	0xe8(%ebp),%eax
00006969	movl	0xd8(%ebp,%eax,8),%eax
0000696d	movl	%eax,(%esp)
00006970	calll	0x000114eb	; symbol stub for: _strlen
00006975	addl	0xec(%ebp),%eax
00006978	incl	%eax
00006979	movl	%eax,0xf0(%ebp)
0000697c	movl	0xf0(%ebp),%eax
0000697f	movl	%eax,(%esp)
00006982	calll	0x00011450	; symbol stub for: _malloc
00006987	movl	%eax,(%esi)
00006989	movl	(%esi),%eax
0000698b	testl	%eax,%eax
0000698d	je	0x000069c8
0000698f	movl	0xe8(%ebp),%eax
00006992	movl	0xd8(%ebp,%eax,8),%edx
00006996	movl	0xe8(%ebp),%eax
00006999	movl	0xdc(%ebp,%eax,8),%eax
0000699d	movl	(%eax),%ecx
0000699f	movl	%edx,0x10(%esp)
000069a3	movl	0x08(%ebp),%eax
000069a6	movl	%eax,0x0c(%esp)
000069aa	leal	0x00007133(%ebx),%eax
000069b0	movl	%eax,0x08(%esp)
000069b4	movl	0xf0(%ebp),%eax
000069b7	movl	%eax,0x04(%esp)
000069bb	movl	%ecx,(%esp)
000069be	calll	0x000114c8	; symbol stub for: _snprintf
000069c3	incl	0xe8(%ebp)
000069c6	jmp	0x000069f6
000069c8	movl	$__mh_bundle_header,0xf4(%ebp)
000069cf	jmp	0x000069e5
000069d1	movl	0xe8(%ebp),%eax
000069d4	movl	0xdc(%ebp,%eax,8),%eax
000069d8	movl	(%eax),%eax
000069da	movl	%eax,(%esp)
000069dd	calll	0x0001140f	; symbol stub for: _free
000069e2	incl	0xf4(%ebp)
000069e5	movl	0xf4(%ebp),%eax
000069e8	cmpl	0xe8(%ebp),%eax
000069eb	jb	0x000069d1
000069ed	movl	$0x00000001,0xd4(%ebp)
000069f4	jmp	0x00006a07
000069f6	cmpl	$0x01,0xe8(%ebp)
000069fa	jbe	0x0000695f
00006a00	movl	$__mh_bundle_header,0xd4(%ebp)
00006a07	movl	0xd4(%ebp),%eax
00006a0a	addl	$0x50,%esp
00006a0d	popl	%ebx
00006a0e	popl	%esi
00006a0f	leave
00006a10	ret
_dbtrace_init:
00006a11	pushl	%ebp
00006a12	movl	%esp,%ebp
00006a14	pushl	%ebx
00006a15	subl	$0x64,%esp
00006a18	calll	0x00006a1d
00006a1d	popl	%ebx
00006a1e	leal	0x00006fe3(%ebx),%eax
00006a24	movl	%eax,(%esp)
00006a27	calll	0x0001141e	; symbol stub for: _getenv
00006a2c	movl	%eax,0xe8(%ebp)
00006a2f	cmpl	$__mh_bundle_header,0xe8(%ebp)
00006a33	je	0x00006ae4
00006a39	leal	0x000077e7(%ebx),%edx
00006a3f	movl	(%edx),%eax
00006a41	movl	%eax,0xd1(%ebp)
00006a44	movl	0x04(%edx),%eax
00006a47	movl	%eax,0xd5(%ebp)
00006a4a	movl	0x08(%edx),%eax
00006a4d	movl	%eax,0xd9(%ebp)
00006a50	movl	0x0c(%edx),%eax
00006a53	movl	%eax,0xdd(%ebp)
00006a56	movl	0x10(%edx),%eax
00006a59	movl	%eax,0xe1(%ebp)
00006a5c	movzwl	0x14(%edx),%eax
00006a60	movw	%ax,0xe5(%ebp)
00006a64	movzbl	0x16(%edx),%eax
00006a68	movb	%al,0xe7(%ebp)
00006a6b	movl	0xe8(%ebp),%eax
00006a6e	movl	%eax,(%esp)
00006a71	calll	0x000114eb	; symbol stub for: _strlen
00006a76	addl	$0x17,%eax
00006a79	movl	%eax,0xec(%ebp)
00006a7c	movl	0xec(%ebp),%eax
00006a7f	movl	%eax,(%esp)
00006a82	calll	0x00011450	; symbol stub for: _malloc
00006a87	movl	%eax,0xf0(%ebp)
00006a8a	cmpl	$__mh_bundle_header,0xf0(%ebp)
00006a8e	je	0x00006adb
00006a90	leal	0xd1(%ebp),%eax
00006a93	movl	%eax,0x10(%esp)
00006a97	movl	0xe8(%ebp),%eax
00006a9a	movl	%eax,0x0c(%esp)
00006a9e	leal	0x00007010(%ebx),%eax
00006aa4	movl	%eax,0x08(%esp)
00006aa8	movl	0xec(%ebp),%eax
00006aab	movl	%eax,0x04(%esp)
00006aaf	movl	0xf0(%ebp),%eax
00006ab2	movl	%eax,(%esp)
00006ab5	calll	0x000114c8	; symbol stub for: _snprintf
00006aba	movl	0xf0(%ebp),%eax
00006abd	movl	%eax,(%esp)
00006ac0	calll	0x000068ed
00006ac5	movl	%eax,0xf4(%ebp)
00006ac8	movl	0xf0(%ebp),%eax
00006acb	movl	%eax,(%esp)
00006ace	calll	0x0001140f	; symbol stub for: _free
00006ad3	movl	0xf4(%ebp),%eax
00006ad6	movl	%eax,0xc4(%ebp)
00006ad9	jmp	0x00006aeb
00006adb	movl	$0xffffffff,0xc4(%ebp)
00006ae2	jmp	0x00006aeb
00006ae4	movl	$0xffffffff,0xc4(%ebp)
00006aeb	movl	0xc4(%ebp),%eax
00006aee	addl	$0x64,%esp
00006af1	popl	%ebx
00006af2	leave
00006af3	ret
_dbtrace:
00006af4	pushl	%ebp
00006af5	movl	%esp,%ebp
00006af7	pushl	%esi
00006af8	pushl	%ebx
00006af9	subl	$0x00000090,%esp
00006aff	calll	0x00006b04
00006b04	popl	%ebx
00006b05	leal	0x00008c5c(%ebx),%eax
00006b0b	movl	%eax,(%esp)
00006b0e	calll	0x000114a0	; symbol stub for: _pthread_mutex_lock
00006b13	testl	%eax,%eax
00006b15	jne	0x00006eb1
00006b1b	leal	0x00008c8c(%ebx),%eax
00006b21	movl	(%eax),%edx
00006b23	leal	0xffffff78(%ebp),%eax
00006b29	movl	%eax,0x04(%esp)
00006b2d	movl	%edx,(%esp)
00006b30	calll	0x000114d2	; symbol stub for: _stat
00006b35	testl	%eax,%eax
00006b37	jne	0x00006b71
00006b39	leal	0x00008c8c(%ebx),%eax
00006b3f	movl	(%eax),%eax
00006b41	movl	%eax,(%esp)
00006b44	calll	0x00011504	; symbol stub for: _unlink
00006b49	leal	0x00008c8c(%ebx),%eax
00006b4f	movl	(%eax),%eax
00006b51	testl	%eax,%eax
00006b53	je	0x00006b71
00006b55	leal	0x00008c88(%ebx),%eax
00006b5b	movl	(%eax),%eax
00006b5d	movl	%eax,(%esp)
00006b60	calll	0x000113f6	; symbol stub for: _fclose
00006b65	leal	0x00008c88(%ebx),%eax
00006b6b	movl	$__mh_bundle_header,(%eax)
00006b71	leal	0x00008c88(%ebx),%eax
00006b77	movl	(%eax),%eax
00006b79	testl	%eax,%eax
00006b7b	jne	0x00006c32
00006b81	movl	$__mh_bundle_header,(%esp)
00006b88	calll	0x000114fa	; symbol stub for: _time
00006b8d	movl	%eax,0xec(%ebp)
00006b90	leal	0x00008c90(%ebx),%eax
00006b96	movl	(%eax),%edx
00006b98	movl	0xec(%ebp),%eax
00006b9b	movl	%eax,0x08(%esp)
00006b9f	movl	%edx,0x04(%esp)
00006ba3	leal	0xd8(%ebp),%eax
00006ba6	movl	%eax,(%esp)
00006ba9	calll	0x000113b5	; symbol stub for: _asprintf
00006bae	testl	%eax,%eax
00006bb0	js	0x00006ea3
00006bb6	movl	0xd8(%ebp),%eax
00006bb9	movl	%eax,(%esp)
00006bbc	calll	0x00006879
00006bc1	movl	0xd8(%ebp),%edx
00006bc4	leal	0x00007717(%ebx),%eax
00006bca	movl	%eax,0x04(%esp)
00006bce	movl	%edx,(%esp)
00006bd1	calll	0x00011405	; symbol stub for: _fopen
00006bd6	movl	%eax,%edx
00006bd8	leal	0x00008c88(%ebx),%eax
00006bde	movl	%edx,(%eax)
00006be0	movl	0xd8(%ebp),%eax
00006be3	movl	%eax,(%esp)
00006be6	calll	0x0001140f	; symbol stub for: _free
00006beb	leal	0x00008c88(%ebx),%eax
00006bf1	movl	(%eax),%eax
00006bf3	testl	%eax,%eax
00006bf5	je	0x00006ea3
00006bfb	leal	0x00008c98(%ebx),%edx
00006c01	movl	0xec(%ebp),%eax
00006c04	movl	%eax,(%edx)
00006c06	leal	0x00008c98(%ebx),%eax
00006c0c	movl	%eax,(%esp)
00006c0f	calll	0x000067fe
00006c14	movl	%eax,(%esp)
00006c17	calll	0x00006821
00006c1c	movl	%eax,%edx
00006c1e	leal	0x00008c94(%ebx),%eax
00006c24	movl	%edx,(%eax)
00006c26	leal	0x00008ca0(%ebx),%eax
00006c2c	movl	$__mh_bundle_header,(%eax)
00006c32	leal	0x0c(%ebp),%eax
00006c35	movl	%eax,0xe0(%ebp)
00006c38	movl	0xe0(%ebp),%eax
00006c3b	movl	%eax,0x08(%esp)
00006c3f	movl	0x08(%ebp),%eax
00006c42	movl	%eax,0x04(%esp)
00006c46	leal	0xdc(%ebp),%eax
00006c49	movl	%eax,(%esp)
00006c4c	calll	0x00011509	; symbol stub for: _vasprintf
00006c51	movl	%eax,0xe8(%ebp)
00006c54	movl	0xdc(%ebp),%eax
00006c57	movl	%eax,0xe4(%ebp)
00006c5a	cmpl	$__mh_bundle_header,0xe8(%ebp)
00006c5e	js	0x00006e98
00006c64	leal	0x00008ca0(%ebx),%eax
00006c6a	movl	(%eax),%eax
00006c6c	testl	%eax,%eax
00006c6e	je	0x00006db5
00006c74	movl	0xe8(%ebp),%ecx
00006c77	leal	0x00008ca0(%ebx),%eax
00006c7d	movl	(%eax),%edx
00006c7f	movl	$0x00000004,%eax
00006c84	subl	%edx,%eax
00006c86	cmpl	%eax,%ecx
00006c88	jae	0x00006ce0
00006c8a	movl	0xe8(%ebp),%ecx
00006c8d	movl	0xdc(%ebp),%esi
00006c90	leal	0x00008ca0(%ebx),%eax
00006c96	movl	(%eax),%eax
00006c98	movl	%eax,%edx
00006c9a	leal	0x00008c9c(%ebx),%eax
00006ca0	leal	(%edx,%eax),%eax
00006ca3	movl	%ecx,0x08(%esp)
00006ca7	movl	%esi,0x04(%esp)
00006cab	movl	%eax,(%esp)
00006cae	calll	0x0001145a	; symbol stub for: _memcpy
00006cb3	leal	0x00008ca0(%ebx),%eax
00006cb9	movl	(%eax),%edx
00006cbb	movl	0xe8(%ebp),%eax
00006cbe	addl	%eax,%edx
00006cc0	leal	0x00008ca0(%ebx),%eax
00006cc6	movl	%edx,(%eax)
00006cc8	movl	0xdc(%ebp),%edx
00006ccb	movl	0xe8(%ebp),%eax
00006cce	leal	(%edx,%eax),%eax
00006cd1	movl	%eax,0xdc(%ebp)
00006cd4	movl	$__mh_bundle_header,0xe8(%ebp)
00006cdb	jmp	0x00006db5
00006ce0	leal	0x00008ca0(%ebx),%eax
00006ce6	movl	(%eax),%edx
00006ce8	movl	$0x00000004,%eax
00006ced	movl	%eax,%ecx
00006cef	subl	%edx,%ecx
00006cf1	movl	0xdc(%ebp),%esi
00006cf4	leal	0x00008ca0(%ebx),%eax
00006cfa	movl	(%eax),%eax
00006cfc	movl	%eax,%edx
00006cfe	leal	0x00008c9c(%ebx),%eax
00006d04	leal	(%edx,%eax),%eax
00006d07	movl	%ecx,0x08(%esp)
00006d0b	movl	%esi,0x04(%esp)
00006d0f	movl	%eax,(%esp)
00006d12	calll	0x0001145a	; symbol stub for: _memcpy
00006d17	leal	0x00008c9c(%ebx),%eax
00006d1d	movl	(%eax),%edx
00006d1f	leal	0x00008c94(%ebx),%eax
00006d25	movl	(%eax),%eax
00006d27	xorl	%eax,%edx
00006d29	leal	0x00008c9c(%ebx),%eax
00006d2f	movl	%edx,(%eax)
00006d31	leal	0x00008c88(%ebx),%eax
00006d37	movl	(%eax),%eax
00006d39	movl	%eax,0x0c(%esp)
00006d3d	movl	$0x00000001,0x08(%esp)
00006d45	movl	$0x00000004,0x04(%esp)
00006d4d	leal	0x00008c9c(%ebx),%eax
00006d53	movl	%eax,(%esp)
00006d56	calll	0x00011419	; symbol stub for: _fwrite
00006d5b	leal	0x00008ca0(%ebx),%eax
00006d61	movl	(%eax),%edx
00006d63	movl	$0x00000004,%eax
00006d68	subl	%edx,%eax
00006d6a	movl	%eax,%edx
00006d6c	movl	0xdc(%ebp),%eax
00006d6f	leal	(%edx,%eax),%eax
00006d72	movl	%eax,0xdc(%ebp)
00006d75	movl	0xe8(%ebp),%edx
00006d78	leal	0x00008ca0(%ebx),%eax
00006d7e	movl	(%eax),%eax
00006d80	leal	(%edx,%eax),%eax
00006d83	subl	$0x04,%eax
00006d86	movl	%eax,0xe8(%ebp)
00006d89	leal	0x00008ca0(%ebx),%eax
00006d8f	movl	$__mh_bundle_header,(%eax)
00006d95	leal	0x00008c98(%ebx),%eax
00006d9b	movl	%eax,(%esp)
00006d9e	calll	0x000067fe
00006da3	movl	%eax,(%esp)
00006da6	calll	0x00006821
00006dab	movl	%eax,%edx
00006dad	leal	0x00008c94(%ebx),%eax
00006db3	movl	%edx,(%eax)
00006db5	movl	0xe8(%ebp),%eax
00006db8	cmpl	$0x03,%eax
00006dbb	jbe	0x00006e48
00006dc1	movl	0xdc(%ebp),%eax
00006dc4	movl	%eax,0xf0(%ebp)
00006dc7	movl	0xe8(%ebp),%eax
00006dca	movl	%eax,0xf4(%ebp)
00006dcd	movl	0xdc(%ebp),%eax
00006dd0	movl	%eax,%ecx
00006dd2	movl	0xdc(%ebp),%eax
00006dd5	movl	(%eax),%edx
00006dd7	leal	0x00008c94(%ebx),%eax
00006ddd	movl	(%eax),%eax
00006ddf	xorl	%edx,%eax
00006de1	movl	%eax,(%ecx)
00006de3	movl	0xe8(%ebp),%eax
00006de6	subl	$0x04,%eax
00006de9	movl	%eax,0xe8(%ebp)
00006dec	movl	0xdc(%ebp),%eax
00006def	addl	$0x04,%eax
00006df2	movl	%eax,0xdc(%ebp)
00006df5	leal	0x00008c98(%ebx),%eax
00006dfb	movl	%eax,(%esp)
00006dfe	calll	0x000067fe
00006e03	movl	%eax,(%esp)
00006e06	calll	0x00006821
00006e0b	movl	%eax,%edx
00006e0d	leal	0x00008c94(%ebx),%eax
00006e13	movl	%edx,(%eax)
00006e15	movl	0xe8(%ebp),%eax
00006e18	cmpl	$0x03,%eax
00006e1b	ja	0x00006dcd
00006e1d	leal	0x00008c88(%ebx),%eax
00006e23	movl	(%eax),%ecx
00006e25	movl	0xe8(%ebp),%edx
00006e28	movl	0xf4(%ebp),%eax
00006e2b	subl	%edx,%eax
00006e2d	movl	%ecx,0x0c(%esp)
00006e31	movl	$0x00000001,0x08(%esp)
00006e39	movl	%eax,0x04(%esp)
00006e3d	movl	0xf0(%ebp),%eax
00006e40	movl	%eax,(%esp)
00006e43	calll	0x00011419	; symbol stub for: _fwrite
00006e48	cmpl	$__mh_bundle_header,0xe8(%ebp)
00006e4c	je	0x00006e88
00006e4e	movl	0xe8(%ebp),%eax
00006e51	movl	0xdc(%ebp),%edx
00006e54	movl	%eax,0x08(%esp)
00006e58	movl	%edx,0x04(%esp)
00006e5c	leal	0x00008c9c(%ebx),%eax
00006e62	movl	%eax,(%esp)
00006e65	calll	0x0001145a	; symbol stub for: _memcpy
00006e6a	movl	0xe8(%ebp),%edx
00006e6d	leal	0x00008ca0(%ebx),%eax
00006e73	movl	%edx,(%eax)
00006e75	movl	0xdc(%ebp),%edx
00006e78	movl	0xe8(%ebp),%eax
00006e7b	leal	(%edx,%eax),%eax
00006e7e	movl	%eax,0xdc(%ebp)
00006e81	movl	$__mh_bundle_header,0xe8(%ebp)
00006e88	leal	0x00008c88(%ebx),%eax
00006e8e	movl	(%eax),%eax
00006e90	movl	%eax,(%esp)
00006e93	calll	0x00011400	; symbol stub for: _fflush
00006e98	movl	0xe4(%ebp),%eax
00006e9b	movl	%eax,(%esp)
00006e9e	calll	0x0001140f	; symbol stub for: _free
00006ea3	leal	0x00008c5c(%ebx),%eax
00006ea9	movl	%eax,(%esp)
00006eac	calll	0x000114a5	; symbol stub for: _pthread_mutex_unlock
00006eb1	addl	$0x00000090,%esp
00006eb7	popl	%ebx
00006eb8	popl	%esi
00006eb9	leave
00006eba	ret
_myMD5:
00006ebb	pushl	%ebp
00006ebc	movl	%esp,%ebp
00006ebe	subl	$0x78,%esp
00006ec1	leal	0x9c(%ebp),%eax
00006ec4	movl	%eax,(%esp)
00006ec7	calll	0x000110a9	; symbol stub for: _CC_MD5_Init
00006ecc	movl	0x0c(%ebp),%eax
00006ecf	movl	%eax,0x08(%esp)
00006ed3	movl	0x08(%ebp),%eax
00006ed6	movl	%eax,0x04(%esp)
00006eda	leal	0x9c(%ebp),%eax
00006edd	movl	%eax,(%esp)
00006ee0	calll	0x000110ae	; symbol stub for: _CC_MD5_Update
00006ee5	leal	0x9c(%ebp),%eax
00006ee8	movl	%eax,0x04(%esp)
00006eec	movl	0x10(%ebp),%eax
00006eef	movl	%eax,(%esp)
00006ef2	calll	0x000110a4	; symbol stub for: _CC_MD5_Final
00006ef7	movl	0x10(%ebp),%eax
00006efa	leave
00006efb	ret
_DBLog:
00006efc	pushl	%ebp
00006efd	movl	%esp,%ebp
00006eff	pushl	%esi
00006f00	pushl	%ebx
00006f01	subl	$0x50,%esp
00006f04	calll	0x00006f09
00006f09	popl	%ebx
00006f0a	leal	0x0c(%ebp),%eax
00006f0d	movl	%eax,0xe4(%ebp)
00006f10	leal	0x00009123(%ebx),%eax
00006f16	movl	(%eax),%eax
00006f18	movl	%eax,%edx
00006f1a	leal	0x0000911f(%ebx),%eax
00006f20	movl	(%eax),%eax
00006f22	movl	%eax,0x04(%esp)
00006f26	movl	%edx,(%esp)
00006f29	calll	0x00011487	; symbol stub for: _objc_msgSend
00006f2e	movl	%eax,%esi
00006f30	movl	0xe4(%ebp),%edx
00006f33	leal	0x0000911b(%ebx),%eax
00006f39	movl	(%eax),%ecx
00006f3b	movl	%edx,0x0c(%esp)
00006f3f	movl	0x08(%ebp),%eax
00006f42	movl	%eax,0x08(%esp)
00006f46	movl	%ecx,0x04(%esp)
00006f4a	movl	%esi,(%esp)
00006f4d	calll	0x00011487	; symbol stub for: _objc_msgSend
00006f52	movl	%eax,%edx
00006f54	leal	0x00009117(%ebx),%eax
00006f5a	movl	(%eax),%eax
00006f5c	movl	%eax,0x04(%esp)
00006f60	movl	%edx,(%esp)
00006f63	calll	0x00011487	; symbol stub for: _objc_msgSend
00006f68	movl	%eax,0xe8(%ebp)
00006f6b	leal	0x00008633(%ebx),%eax
00006f71	movl	(%eax),%eax
00006f73	cmpl	$0xff,%eax
00006f76	jne	0x00006fed
00006f78	leal	0x00007315(%ebx),%eax
00006f7e	movl	%eax,(%esp)
00006f81	calll	0x0001141e	; symbol stub for: _getenv
00006f86	movl	%eax,0xf4(%ebp)
00006f89	cmpl	$__mh_bundle_header,0xf4(%ebp)
00006f8d	je	0x00006fe1
00006f8f	movl	0xf4(%ebp),%eax
00006f92	movl	%eax,(%esp)
00006f95	calll	0x000114eb	; symbol stub for: _strlen
00006f9a	movl	%eax,%edx
00006f9c	leal	0xd4(%ebp),%eax
00006f9f	movl	%eax,0x08(%esp)
00006fa3	movl	%edx,0x04(%esp)
00006fa7	movl	0xf4(%ebp),%eax
00006faa	movl	%eax,(%esp)
00006fad	calll	0x00006ebb
00006fb2	movl	$0x00000010,0x08(%esp)
00006fba	leal	0x00008623(%ebx),%eax
00006fc0	movl	%eax,0x04(%esp)
00006fc4	leal	0xd4(%ebp),%eax
00006fc7	movl	%eax,(%esp)
00006fca	calll	0x00011455	; symbol stub for: _memcmp
00006fcf	testl	%eax,%eax
00006fd1	sete	%al
00006fd4	movzbl	%al,%edx
00006fd7	leal	0x00008633(%ebx),%eax
00006fdd	movl	%edx,(%eax)
00006fdf	jmp	0x00006fed
00006fe1	leal	0x00008633(%ebx),%eax
00006fe7	movl	$__mh_bundle_header,(%eax)
00006fed	leal	0x00008633(%ebx),%eax
00006ff3	movl	(%eax),%eax
00006ff5	testl	%eax,%eax
00006ff7	je	0x0000700e
00006ff9	leal	0x000081a3(%ebx),%edx
00006fff	movl	0xe8(%ebp),%eax
00007002	movl	%eax,0x04(%esp)
00007006	movl	%edx,(%esp)
00007009	calll	0x00011338	; symbol stub for: _NSLog
0000700e	leal	0x00009127(%ebx),%eax
00007014	movl	(%eax),%eax
00007016	movl	%eax,%ecx
00007018	leal	0x00009113(%ebx),%eax
0000701e	movl	(%eax),%edx
00007020	leal	0x00007ff7(%ebx),%eax
00007026	movsd	(%eax),%xmm0
0000702a	movsd	%xmm0,0x08(%esp)
00007030	movl	%edx,0x04(%esp)
00007034	movl	%ecx,(%esp)
00007037	calll	0x00011487	; symbol stub for: _objc_msgSend
0000703c	movl	%eax,%edx
0000703e	leal	0x00009117(%ebx),%eax
00007044	movl	(%eax),%eax
00007046	movl	%eax,0x04(%esp)
0000704a	movl	%edx,(%esp)
0000704d	calll	0x00011487	; symbol stub for: _objc_msgSend
00007052	movl	%eax,0xec(%ebp)
00007055	leal	0x00009123(%ebx),%eax
0000705b	movl	(%eax),%eax
0000705d	movl	%eax,%edx
0000705f	leal	0x000081b3(%ebx),%ecx
00007065	leal	0x0000910f(%ebx),%eax
0000706b	movl	(%eax),%esi
0000706d	movl	0xe8(%ebp),%eax
00007070	movl	%eax,0x10(%esp)
00007074	movl	0xec(%ebp),%eax
00007077	movl	%eax,0x0c(%esp)
0000707b	movl	%ecx,0x08(%esp)
0000707f	movl	%esi,0x04(%esp)
00007083	movl	%edx,(%esp)
00007086	calll	0x00011487	; symbol stub for: _objc_msgSend
0000708b	movl	%eax,%edx
0000708d	leal	0x00009117(%ebx),%eax
00007093	movl	(%eax),%eax
00007095	movl	%eax,0x04(%esp)
00007099	movl	%edx,(%esp)
0000709c	calll	0x00011487	; symbol stub for: _objc_msgSend
000070a1	movl	%eax,0xf0(%ebp)
000070a4	movl	0xf0(%ebp),%edx
000070a7	leal	0x0000910b(%ebx),%eax
000070ad	movl	(%eax),%eax
000070af	movl	$0x00000004,0x08(%esp)
000070b7	movl	%eax,0x04(%esp)
000070bb	movl	%edx,(%esp)
000070be	calll	0x00011487	; symbol stub for: _objc_msgSend
000070c3	movl	%eax,(%esp)
000070c6	calll	0x00006af4
000070cb	movl	0xec(%ebp),%edx
000070ce	leal	0x00009107(%ebx),%eax
000070d4	movl	(%eax),%eax
000070d6	movl	%eax,0x04(%esp)
000070da	movl	%edx,(%esp)
000070dd	calll	0x00011487	; symbol stub for: _objc_msgSend
000070e2	movl	0xe8(%ebp),%edx
000070e5	leal	0x00009107(%ebx),%eax
000070eb	movl	(%eax),%eax
000070ed	movl	%eax,0x04(%esp)
000070f1	movl	%edx,(%esp)
000070f4	calll	0x00011487	; symbol stub for: _objc_msgSend
000070f9	movl	0xf0(%ebp),%edx
000070fc	leal	0x00009107(%ebx),%eax
00007102	movl	(%eax),%eax
00007104	movl	%eax,0x04(%esp)
00007108	movl	%edx,(%esp)
0000710b	calll	0x00011487	; symbol stub for: _objc_msgSend
00007110	addl	$0x50,%esp
00007113	popl	%ebx
00007114	popl	%esi
00007115	leave
00007116	ret
_help_reverse_class:
00007117	pushl	%ebp
00007118	movl	%esp,%ebp
0000711a	pushl	%edi
0000711b	pushl	%esi
0000711c	pushl	%ebx
0000711d	subl	$0x00001acc,%esp
00007123	calll	0x00007128
00007128	popl	%ebx
00007129	movl	0x0c(%ebp),%eax
0000712c	movb	%al,0xffffe564(%ebp)
00007132	cmpl	$__mh_bundle_header,0x08(%ebp)
00007136	jne	0x0000714b
00007138	leal	0x00007fa4(%ebx),%eax
0000713e	movl	%eax,(%esp)
00007141	calll	0x00011338	; symbol stub for: _NSLog
00007146	jmp	0x00007914
0000714b	leal	0xffffff6c(%ebp),%eax
00007151	movl	%eax,0x04(%esp)
00007155	movl	0x08(%ebp),%eax
00007158	movl	%eax,(%esp)
0000715b	calll	0x000113ce	; symbol stub for: _class_copyIvarList
00007160	movl	%eax,0xffffff70(%ebp)
00007166	leal	0x00008f0c(%ebx),%eax
0000716c	movl	(%eax),%eax
0000716e	movl	%eax,%ecx
00007170	movl	0xffffff6c(%ebp),%edx
00007176	leal	0x00008ee4(%ebx),%eax
0000717c	movl	(%eax),%eax
0000717e	movl	%edx,0x08(%esp)
00007182	movl	%eax,0x04(%esp)
00007186	movl	%ecx,(%esp)
00007189	calll	0x00011487	; symbol stub for: _objc_msgSend
0000718e	movl	%eax,0xffffff74(%ebp)
00007194	movl	$__mh_bundle_header,0x98(%ebp)
0000719b	jmp	0x00007206
0000719d	movl	0x98(%ebp),%eax
000071a0	shll	$0x02,%eax
000071a3	addl	0xffffff70(%ebp),%eax
000071a9	movl	(%eax),%eax
000071ab	movl	%eax,(%esp)
000071ae	calll	0x00011441	; symbol stub for: _ivar_getName
000071b3	movl	%eax,0x9c(%ebp)
000071b6	movl	0xffffff74(%ebp),%esi
000071bc	leal	0x00008f04(%ebx),%eax
000071c2	movl	(%eax),%eax
000071c4	movl	%eax,%ecx
000071c6	leal	0x00008ee0(%ebx),%eax
000071cc	movl	(%eax),%edx
000071ce	movl	$0x00000004,0x0c(%esp)
000071d6	movl	0x9c(%ebp),%eax
000071d9	movl	%eax,0x08(%esp)
000071dd	movl	%edx,0x04(%esp)
000071e1	movl	%ecx,(%esp)
000071e4	calll	0x00011487	; symbol stub for: _objc_msgSend
000071e9	movl	%eax,%edx
000071eb	leal	0x00008edc(%ebx),%eax
000071f1	movl	(%eax),%eax
000071f3	movl	%edx,0x08(%esp)
000071f7	movl	%eax,0x04(%esp)
000071fb	movl	%esi,(%esp)
000071fe	calll	0x00011487	; symbol stub for: _objc_msgSend
00007203	incl	0x98(%ebp)
00007206	movl	0x98(%ebp),%edx
00007209	movl	0xffffff6c(%ebp),%eax
0000720f	cmpl	%eax,%edx
00007211	jb	0x0000719d
00007213	movl	0xffffff70(%ebp),%eax
00007219	movl	%eax,(%esp)
0000721c	calll	0x0001140f	; symbol stub for: _free
00007221	leal	0xffffff6c(%ebp),%eax
00007227	movl	%eax,0x04(%esp)
0000722b	movl	0x08(%ebp),%eax
0000722e	movl	%eax,(%esp)
00007231	calll	0x000113d8	; symbol stub for: _class_copyPropertyList
00007236	movl	%eax,0xffffff78(%ebp)
0000723c	leal	0x00008f0c(%ebx),%eax
00007242	movl	(%eax),%eax
00007244	movl	%eax,%ecx
00007246	movl	0xffffff6c(%ebp),%edx
0000724c	leal	0x00008ee4(%ebx),%eax
00007252	movl	(%eax),%eax
00007254	movl	%edx,0x08(%esp)
00007258	movl	%eax,0x04(%esp)
0000725c	movl	%ecx,(%esp)
0000725f	calll	0x00011487	; symbol stub for: _objc_msgSend
00007264	movl	%eax,0xffffff7c(%ebp)
0000726a	movl	$__mh_bundle_header,0xa0(%ebp)
00007271	jmp	0x000072dc
00007273	movl	0xa0(%ebp),%eax
00007276	shll	$0x02,%eax
00007279	addl	0xffffff78(%ebp),%eax
0000727f	movl	(%eax),%eax
00007281	movl	%eax,(%esp)
00007284	calll	0x00011496	; symbol stub for: _property_getName
00007289	movl	%eax,0xa4(%ebp)
0000728c	movl	0xffffff7c(%ebp),%esi
00007292	leal	0x00008f04(%ebx),%eax
00007298	movl	(%eax),%eax
0000729a	movl	%eax,%ecx
0000729c	leal	0x00008ee0(%ebx),%eax
000072a2	movl	(%eax),%edx
000072a4	movl	$0x00000004,0x0c(%esp)
000072ac	movl	0xa4(%ebp),%eax
000072af	movl	%eax,0x08(%esp)
000072b3	movl	%edx,0x04(%esp)
000072b7	movl	%ecx,(%esp)
000072ba	calll	0x00011487	; symbol stub for: _objc_msgSend
000072bf	movl	%eax,%edx
000072c1	leal	0x00008edc(%ebx),%eax
000072c7	movl	(%eax),%eax
000072c9	movl	%edx,0x08(%esp)
000072cd	movl	%eax,0x04(%esp)
000072d1	movl	%esi,(%esp)
000072d4	calll	0x00011487	; symbol stub for: _objc_msgSend
000072d9	incl	0xa0(%ebp)
000072dc	movl	0xa0(%ebp),%edx
000072df	movl	0xffffff6c(%ebp),%eax
000072e5	cmpl	%eax,%edx
000072e7	jb	0x00007273
000072e9	movl	0xffffff78(%ebp),%eax
000072ef	movl	%eax,(%esp)
000072f2	calll	0x0001140f	; symbol stub for: _free
000072f7	leal	0xffffff6c(%ebp),%eax
000072fd	movl	%eax,0x04(%esp)
00007301	movl	0x08(%ebp),%eax
00007304	movl	%eax,(%esp)
00007307	calll	0x000113d3	; symbol stub for: _class_copyMethodList
0000730c	movl	%eax,0x80(%ebp)
0000730f	leal	0x00008f0c(%ebx),%eax
00007315	movl	(%eax),%eax
00007317	movl	%eax,%ecx
00007319	movl	0xffffff6c(%ebp),%edx
0000731f	leal	0x00008ee4(%ebx),%eax
00007325	movl	(%eax),%eax
00007327	movl	%edx,0x08(%esp)
0000732b	movl	%eax,0x04(%esp)
0000732f	movl	%ecx,(%esp)
00007332	calll	0x00011487	; symbol stub for: _objc_msgSend
00007337	movl	%eax,0x84(%ebp)
0000733a	movl	$__mh_bundle_header,0xa8(%ebp)
00007341	jmp	0x00007568
00007346	cmpb	$__mh_bundle_header,0xffffe564(%ebp)
0000734d	jne	0x000073c2
0000734f	movl	0xa8(%ebp),%eax
00007352	shll	$0x02,%eax
00007355	addl	0x80(%ebp),%eax
00007358	movl	(%eax),%eax
0000735a	movl	%eax,(%esp)
0000735d	calll	0x00011469	; symbol stub for: _method_getName
00007362	movl	%eax,0xac(%ebp)
00007365	movl	0xac(%ebp),%eax
00007368	movl	%eax,(%esp)
0000736b	calll	0x000114b4	; symbol stub for: _sel_getName
00007370	movl	%eax,0xb0(%ebp)
00007373	movl	0x84(%ebp),%esi
00007376	leal	0x00008f04(%ebx),%eax
0000737c	movl	(%eax),%eax
0000737e	movl	%eax,%ecx
00007380	leal	0x00008ee0(%ebx),%eax
00007386	movl	(%eax),%edx
00007388	movl	$0x00000004,0x0c(%esp)
00007390	movl	0xb0(%ebp),%eax
00007393	movl	%eax,0x08(%esp)
00007397	movl	%edx,0x04(%esp)
0000739b	movl	%ecx,(%esp)
0000739e	calll	0x00011487	; symbol stub for: _objc_msgSend
000073a3	movl	%eax,%edx
000073a5	leal	0x00008edc(%ebx),%eax
000073ab	movl	(%eax),%eax
000073ad	movl	%edx,0x08(%esp)
000073b1	movl	%eax,0x04(%esp)
000073b5	movl	%esi,(%esp)
000073b8	calll	0x00011487	; symbol stub for: _objc_msgSend
000073bd	jmp	0x00007565
000073c2	leal	0xffffe56c(%ebp),%edx
000073c8	movl	$0x00001000,%eax
000073cd	movl	%eax,0x08(%esp)
000073d1	movl	$__mh_bundle_header,0x04(%esp)
000073d9	movl	%edx,(%esp)
000073dc	calll	0x0001145f	; symbol stub for: _memset
000073e1	leal	0xfffffd6c(%ebp),%edx
000073e7	movl	$0x00000200,%eax
000073ec	movl	%eax,0x08(%esp)
000073f0	movl	$__mh_bundle_header,0x04(%esp)
000073f8	movl	%edx,(%esp)
000073fb	calll	0x0001145f	; symbol stub for: _memset
00007400	leal	0xfffff56c(%ebp),%edx
00007406	movl	$0x00000800,%eax
0000740b	movl	%eax,0x08(%esp)
0000740f	movl	$__mh_bundle_header,0x04(%esp)
00007417	movl	%edx,(%esp)
0000741a	calll	0x0001145f	; symbol stub for: _memset
0000741f	movl	0xa8(%ebp),%eax
00007422	shll	$0x02,%eax
00007425	addl	0x80(%ebp),%eax
00007428	movl	(%eax),%eax
0000742a	movl	%eax,(%esp)
0000742d	calll	0x00011469	; symbol stub for: _method_getName
00007432	movl	%eax,0xb8(%ebp)
00007435	movl	0xb8(%ebp),%eax
00007438	movl	%eax,(%esp)
0000743b	calll	0x000114b4	; symbol stub for: _sel_getName
00007440	movl	%eax,0xbc(%ebp)
00007443	movl	0xa8(%ebp),%eax
00007446	shll	$0x02,%eax
00007449	addl	0x80(%ebp),%eax
0000744c	movl	(%eax),%edx
0000744e	movl	$0x00000200,0x08(%esp)
00007456	leal	0xfffffd6c(%ebp),%eax
0000745c	movl	%eax,0x04(%esp)
00007460	movl	%edx,(%esp)
00007463	calll	0x00011473	; symbol stub for: _method_getReturnType
00007468	movl	0xa8(%ebp),%eax
0000746b	shll	$0x02,%eax
0000746e	addl	0x80(%ebp),%eax
00007471	movl	(%eax),%eax
00007473	movl	%eax,(%esp)
00007476	calll	0x0001146e	; symbol stub for: _method_getNumberOfArguments
0000747b	movl	%eax,0xb4(%ebp)
0000747e	movl	$__mh_bundle_header,0xc0(%ebp)
00007485	jmp	0x000074d5
00007487	movl	0xc0(%ebp),%edx
0000748a	movl	0xa8(%ebp),%eax
0000748d	shll	$0x02,%eax
00007490	addl	0x80(%ebp),%eax
00007493	movl	(%eax),%eax
00007495	movl	%edx,0x04(%esp)
00007499	movl	%eax,(%esp)
0000749c	calll	0x00011464	; symbol stub for: _method_copyArgumentType
000074a1	movl	%eax,0xc4(%ebp)
000074a4	cmpl	$__mh_bundle_header,0xc4(%ebp)
000074a8	je	0x000074d2
000074aa	movl	$0x00000800,0x08(%esp)
000074b2	movl	0xc4(%ebp),%eax
000074b5	movl	%eax,0x04(%esp)
000074b9	leal	0xfffff56c(%ebp),%eax
000074bf	movl	%eax,(%esp)
000074c2	calll	0x000114f0	; symbol stub for: _strncat
000074c7	movl	0xc4(%ebp),%eax
000074ca	movl	%eax,(%esp)
000074cd	calll	0x0001140f	; symbol stub for: _free
000074d2	incl	0xc0(%ebp)
000074d5	movl	0xc0(%ebp),%eax
000074d8	cmpl	0xb4(%ebp),%eax
000074db	jb	0x00007487
000074dd	leal	0xfffff56c(%ebp),%eax
000074e3	movl	%eax,0x14(%esp)
000074e7	movl	0xbc(%ebp),%eax
000074ea	movl	%eax,0x10(%esp)
000074ee	leal	0xfffffd6c(%ebp),%eax
000074f4	movl	%eax,0x0c(%esp)
000074f8	leal	0x0000711d(%ebx),%eax
000074fe	movl	%eax,0x08(%esp)
00007502	movl	$0x00001000,0x04(%esp)
0000750a	leal	0xffffe56c(%ebp),%eax
00007510	movl	%eax,(%esp)
00007513	calll	0x000114c8	; symbol stub for: _snprintf
00007518	movl	0x84(%ebp),%esi
0000751b	leal	0x00008f04(%ebx),%eax
00007521	movl	(%eax),%eax
00007523	movl	%eax,%ecx
00007525	leal	0x00008ee0(%ebx),%eax
0000752b	movl	(%eax),%edx
0000752d	movl	$0x00000004,0x0c(%esp)
00007535	leal	0xffffe56c(%ebp),%eax
0000753b	movl	%eax,0x08(%esp)
0000753f	movl	%edx,0x04(%esp)
00007543	movl	%ecx,(%esp)
00007546	calll	0x00011487	; symbol stub for: _objc_msgSend
0000754b	movl	%eax,%edx
0000754d	leal	0x00008edc(%ebx),%eax
00007553	movl	(%eax),%eax
00007555	movl	%edx,0x08(%esp)
00007559	movl	%eax,0x04(%esp)
0000755d	movl	%esi,(%esp)
00007560	calll	0x00011487	; symbol stub for: _objc_msgSend
00007565	incl	0xa8(%ebp)
00007568	movl	0xa8(%ebp),%edx
0000756b	movl	0xffffff6c(%ebp),%eax
00007571	cmpl	%eax,%edx
00007573	jb	0x00007346
00007579	movl	0x80(%ebp),%eax
0000757c	movl	%eax,(%esp)
0000757f	calll	0x0001140f	; symbol stub for: _free
00007584	movl	0x08(%ebp),%eax
00007587	movl	%eax,(%esp)
0000758a	calll	0x0001148c	; symbol stub for: _object_getClass
0000758f	movl	%eax,%edx
00007591	leal	0xffffff6c(%ebp),%eax
00007597	movl	%eax,0x04(%esp)
0000759b	movl	%edx,(%esp)
0000759e	calll	0x000113d3	; symbol stub for: _class_copyMethodList
000075a3	movl	%eax,0x88(%ebp)
000075a6	leal	0x00008f0c(%ebx),%eax
000075ac	movl	(%eax),%eax
000075ae	movl	%eax,%ecx
000075b0	movl	0xffffff6c(%ebp),%edx
000075b6	leal	0x00008ee4(%ebx),%eax
000075bc	movl	(%eax),%eax
000075be	movl	%edx,0x08(%esp)
000075c2	movl	%eax,0x04(%esp)
000075c6	movl	%ecx,(%esp)
000075c9	calll	0x00011487	; symbol stub for: _objc_msgSend
000075ce	movl	%eax,0x8c(%ebp)
000075d1	movl	$__mh_bundle_header,0xc8(%ebp)
000075d8	jmp	0x000077ff
000075dd	cmpb	$__mh_bundle_header,0xffffe564(%ebp)
000075e4	jne	0x00007659
000075e6	movl	0xc8(%ebp),%eax
000075e9	shll	$0x02,%eax
000075ec	addl	0x88(%ebp),%eax
000075ef	movl	(%eax),%eax
000075f1	movl	%eax,(%esp)
000075f4	calll	0x00011469	; symbol stub for: _method_getName
000075f9	movl	%eax,0xcc(%ebp)
000075fc	movl	0xcc(%ebp),%eax
000075ff	movl	%eax,(%esp)
00007602	calll	0x000114b4	; symbol stub for: _sel_getName
00007607	movl	%eax,0xd0(%ebp)
0000760a	movl	0x8c(%ebp),%esi
0000760d	leal	0x00008f04(%ebx),%eax
00007613	movl	(%eax),%eax
00007615	movl	%eax,%ecx
00007617	leal	0x00008ee0(%ebx),%eax
0000761d	movl	(%eax),%edx
0000761f	movl	$0x00000004,0x0c(%esp)
00007627	movl	0xd0(%ebp),%eax
0000762a	movl	%eax,0x08(%esp)
0000762e	movl	%edx,0x04(%esp)
00007632	movl	%ecx,(%esp)
00007635	calll	0x00011487	; symbol stub for: _objc_msgSend
0000763a	movl	%eax,%edx
0000763c	leal	0x00008edc(%ebx),%eax
00007642	movl	(%eax),%eax
00007644	movl	%edx,0x08(%esp)
00007648	movl	%eax,0x04(%esp)
0000764c	movl	%esi,(%esp)
0000764f	calll	0x00011487	; symbol stub for: _objc_msgSend
00007654	jmp	0x000077fc
00007659	leal	0xffffe56c(%ebp),%edx
0000765f	movl	$0x00001000,%eax
00007664	movl	%eax,0x08(%esp)
00007668	movl	$__mh_bundle_header,0x04(%esp)
00007670	movl	%edx,(%esp)
00007673	calll	0x0001145f	; symbol stub for: _memset
00007678	leal	0xfffffd6c(%ebp),%edx
0000767e	movl	$0x00000200,%eax
00007683	movl	%eax,0x08(%esp)
00007687	movl	$__mh_bundle_header,0x04(%esp)
0000768f	movl	%edx,(%esp)
00007692	calll	0x0001145f	; symbol stub for: _memset
00007697	leal	0xfffff56c(%ebp),%edx
0000769d	movl	$0x00000800,%eax
000076a2	movl	%eax,0x08(%esp)
000076a6	movl	$__mh_bundle_header,0x04(%esp)
000076ae	movl	%edx,(%esp)
000076b1	calll	0x0001145f	; symbol stub for: _memset
000076b6	movl	0xc8(%ebp),%eax
000076b9	shll	$0x02,%eax
000076bc	addl	0x88(%ebp),%eax
000076bf	movl	(%eax),%eax
000076c1	movl	%eax,(%esp)
000076c4	calll	0x00011469	; symbol stub for: _method_getName
000076c9	movl	%eax,0xd8(%ebp)
000076cc	movl	0xd8(%ebp),%eax
000076cf	movl	%eax,(%esp)
000076d2	calll	0x000114b4	; symbol stub for: _sel_getName
000076d7	movl	%eax,0xdc(%ebp)
000076da	movl	0xc8(%ebp),%eax
000076dd	shll	$0x02,%eax
000076e0	addl	0x88(%ebp),%eax
000076e3	movl	(%eax),%edx
000076e5	movl	$0x00000200,0x08(%esp)
000076ed	leal	0xfffffd6c(%ebp),%eax
000076f3	movl	%eax,0x04(%esp)
000076f7	movl	%edx,(%esp)
000076fa	calll	0x00011473	; symbol stub for: _method_getReturnType
000076ff	movl	0xc8(%ebp),%eax
00007702	shll	$0x02,%eax
00007705	addl	0x88(%ebp),%eax
00007708	movl	(%eax),%eax
0000770a	movl	%eax,(%esp)
0000770d	calll	0x0001146e	; symbol stub for: _method_getNumberOfArguments
00007712	movl	%eax,0xd4(%ebp)
00007715	movl	$__mh_bundle_header,0xe0(%ebp)
0000771c	jmp	0x0000776c
0000771e	movl	0xe0(%ebp),%edx
00007721	movl	0xc8(%ebp),%eax
00007724	shll	$0x02,%eax
00007727	addl	0x88(%ebp),%eax
0000772a	movl	(%eax),%eax
0000772c	movl	%edx,0x04(%esp)
00007730	movl	%eax,(%esp)
00007733	calll	0x00011464	; symbol stub for: _method_copyArgumentType
00007738	movl	%eax,0xe4(%ebp)
0000773b	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000773f	je	0x00007769
00007741	movl	$0x00000800,0x08(%esp)
00007749	movl	0xe4(%ebp),%eax
0000774c	movl	%eax,0x04(%esp)
00007750	leal	0xfffff56c(%ebp),%eax
00007756	movl	%eax,(%esp)
00007759	calll	0x000114f0	; symbol stub for: _strncat
0000775e	movl	0xe4(%ebp),%eax
00007761	movl	%eax,(%esp)
00007764	calll	0x0001140f	; symbol stub for: _free
00007769	incl	0xe0(%ebp)
0000776c	movl	0xe0(%ebp),%eax
0000776f	cmpl	0xd4(%ebp),%eax
00007772	jb	0x0000771e
00007774	leal	0xfffff56c(%ebp),%eax
0000777a	movl	%eax,0x14(%esp)
0000777e	movl	0xdc(%ebp),%eax
00007781	movl	%eax,0x10(%esp)
00007785	leal	0xfffffd6c(%ebp),%eax
0000778b	movl	%eax,0x0c(%esp)
0000778f	leal	0x0000711d(%ebx),%eax
00007795	movl	%eax,0x08(%esp)
00007799	movl	$0x00001000,0x04(%esp)
000077a1	leal	0xffffe56c(%ebp),%eax
000077a7	movl	%eax,(%esp)
000077aa	calll	0x000114c8	; symbol stub for: _snprintf
000077af	movl	0x8c(%ebp),%esi
000077b2	leal	0x00008f04(%ebx),%eax
000077b8	movl	(%eax),%eax
000077ba	movl	%eax,%ecx
000077bc	leal	0x00008ee0(%ebx),%eax
000077c2	movl	(%eax),%edx
000077c4	movl	$0x00000004,0x0c(%esp)
000077cc	leal	0xffffe56c(%ebp),%eax
000077d2	movl	%eax,0x08(%esp)
000077d6	movl	%edx,0x04(%esp)
000077da	movl	%ecx,(%esp)
000077dd	calll	0x00011487	; symbol stub for: _objc_msgSend
000077e2	movl	%eax,%edx
000077e4	leal	0x00008edc(%ebx),%eax
000077ea	movl	(%eax),%eax
000077ec	movl	%edx,0x08(%esp)
000077f0	movl	%eax,0x04(%esp)
000077f4	movl	%esi,(%esp)
000077f7	calll	0x00011487	; symbol stub for: _objc_msgSend
000077fc	incl	0xc8(%ebp)
000077ff	movl	0xc8(%ebp),%edx
00007802	movl	0xffffff6c(%ebp),%eax
00007808	cmpl	%eax,%edx
0000780a	jb	0x000075dd
00007810	leal	0x00008f10(%ebx),%eax
00007816	movl	(%eax),%eax
00007818	movl	%eax,%esi
0000781a	leal	0x00007fb4(%ebx),%edx
00007820	leal	0x00007fc4(%ebx),%ecx
00007826	leal	0x00007fd4(%ebx),%edi
0000782c	leal	0x00007fe4(%ebx),%eax
00007832	movl	%eax,0xffffe558(%ebp)
00007838	movl	0xffffff74(%ebp),%eax
0000783e	movl	%eax,0xffffe55c(%ebp)
00007844	leal	0x00008ed8(%ebx),%eax
0000784a	movl	(%eax),%eax
0000784c	movl	%eax,0xffffe560(%ebp)
00007852	movl	$__mh_bundle_header,0x28(%esp)
0000785a	movl	%edx,0x24(%esp)
0000785e	movl	0x8c(%ebp),%eax
00007861	movl	%eax,0x20(%esp)
00007865	movl	%ecx,0x1c(%esp)
00007869	movl	0x84(%ebp),%eax
0000786c	movl	%eax,0x18(%esp)
00007870	movl	%edi,0x14(%esp)
00007874	movl	0xffffff7c(%ebp),%eax
0000787a	movl	%eax,0x10(%esp)
0000787e	movl	0xffffe558(%ebp),%eax
00007884	movl	%eax,0x0c(%esp)
00007888	movl	0xffffe55c(%ebp),%eax
0000788e	movl	%eax,0x08(%esp)
00007892	movl	0xffffe560(%ebp),%eax
00007898	movl	%eax,0x04(%esp)
0000789c	movl	%esi,(%esp)
0000789f	calll	0x00011487	; symbol stub for: _objc_msgSend
000078a4	movl	%eax,0x90(%ebp)
000078a7	movl	0x08(%ebp),%eax
000078aa	movl	%eax,(%esp)
000078ad	calll	0x000113dd	; symbol stub for: _class_getName
000078b2	movl	%eax,%edx
000078b4	leal	0x00007ff4(%ebx),%ecx
000078ba	movl	0x90(%ebp),%eax
000078bd	movl	%eax,0x08(%esp)
000078c1	movl	%edx,0x04(%esp)
000078c5	movl	%ecx,(%esp)
000078c8	calll	0x00011338	; symbol stub for: _NSLog
000078cd	movl	0x08(%ebp),%eax
000078d0	movl	%eax,(%esp)
000078d3	calll	0x000113e2	; symbol stub for: _class_getSuperclass
000078d8	movl	%eax,0x94(%ebp)
000078db	movl	0x94(%ebp),%eax
000078de	movl	%eax,(%esp)
000078e1	calll	0x000113dd	; symbol stub for: _class_getName
000078e6	movl	%eax,%edx
000078e8	leal	0x00007154(%ebx),%eax
000078ee	movl	%eax,0x04(%esp)
000078f2	movl	%edx,(%esp)
000078f5	calll	0x000114dc	; symbol stub for: _strcmp
000078fa	testl	%eax,%eax
000078fc	je	0x00007914
000078fe	movsbl	0xffffe564(%ebp),%eax
00007905	movl	%eax,0x04(%esp)
00007909	movl	0x94(%ebp),%eax
0000790c	movl	%eax,(%esp)
0000790f	calll	0x00007117
00007914	addl	$0x00001acc,%esp
0000791a	popl	%ebx
0000791b	popl	%esi
0000791c	popl	%edi
0000791d	leave
0000791e	ret
_CMHelperLoadIconSuiteFromPath:
0000791f	pushl	%ebp
00007920	movl	%esp,%ebp
00007922	subl	$0x00000088,%esp
00007928	movl	$__mh_bundle_header,0x9c(%ebp)
0000792f	movl	$__mh_bundle_header,0x0c(%esp)
00007937	movl	$__mh_bundle_header,0x08(%esp)
0000793f	movl	0x08(%ebp),%eax
00007942	movl	%eax,0x04(%esp)
00007946	movl	$__mh_bundle_header,(%esp)
0000794d	calll	0x0001118f	; symbol stub for: _CFURLCreateWithFileSystemPath
00007952	movl	%eax,0xf4(%ebp)
00007955	cmpl	$__mh_bundle_header,0xf4(%ebp)
00007959	jne	0x00007964
0000795b	movl	$__mh_bundle_header,0x94(%ebp)
00007962	jmp	0x000079c6
00007964	leal	0xa4(%ebp),%eax
00007967	movl	%eax,0x04(%esp)
0000796b	movl	0xf4(%ebp),%eax
0000796e	movl	%eax,(%esp)
00007971	calll	0x00011194	; symbol stub for: _CFURLGetFSRef
00007976	testb	%al,%al
00007978	je	0x000079b5
0000797a	leal	0xa0(%ebp),%eax
0000797d	movl	%eax,0x04(%esp)
00007981	leal	0xa4(%ebp),%eax
00007984	movl	%eax,(%esp)
00007987	calll	0x00011360	; symbol stub for: _ReadIconFromFSRef
0000798c	testl	%eax,%eax
0000798e	jne	0x000079b5
00007990	movl	0xa0(%ebp),%edx
00007993	leal	0x9c(%ebp),%eax
00007996	movl	%eax,0x08(%esp)
0000799a	movl	$0x0000ff00,0x04(%esp)
000079a2	movl	%edx,(%esp)
000079a5	calll	0x0001131a	; symbol stub for: _IconFamilyToIconSuite
000079aa	movl	0xa0(%ebp),%eax
000079ad	movl	%eax,(%esp)
000079b0	calll	0x0001122f	; symbol stub for: _DisposeHandle
000079b5	movl	0xf4(%ebp),%eax
000079b8	movl	%eax,(%esp)
000079bb	calll	0x00011149	; symbol stub for: _CFRelease
000079c0	movl	0x9c(%ebp),%eax
000079c3	movl	%eax,0x94(%ebp)
000079c6	movl	0x94(%ebp),%eax
000079c9	leave
000079ca	ret
_CMHelperGetIconSuiteFromPathWithCache:
000079cb	pushl	%ebp
000079cc	movl	%esp,%ebp
000079ce	subl	$0x28,%esp
000079d1	movl	0x08(%ebp),%eax
000079d4	movl	0x18(%eax),%edx
000079d7	movl	0x0c(%ebp),%eax
000079da	movl	%eax,0x04(%esp)
000079de	movl	%edx,(%esp)
000079e1	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
000079e6	movl	%eax,0xf4(%ebp)
000079e9	cmpl	$__mh_bundle_header,0xf4(%ebp)
000079ed	jne	0x00007a1f
000079ef	movl	0x0c(%ebp),%eax
000079f2	movl	%eax,(%esp)
000079f5	calll	0x0000791f
000079fa	movl	%eax,0xf4(%ebp)
000079fd	cmpl	$__mh_bundle_header,0xf4(%ebp)
00007a01	je	0x00007a1f
00007a03	movl	0x08(%ebp),%eax
00007a06	movl	0x18(%eax),%edx
00007a09	movl	0xf4(%ebp),%eax
00007a0c	movl	%eax,0x08(%esp)
00007a10	movl	0x0c(%ebp),%eax
00007a13	movl	%eax,0x04(%esp)
00007a17	movl	%edx,(%esp)
00007a1a	calll	0x000110f9	; symbol stub for: _CFDictionaryAddValue
00007a1f	movl	0xf4(%ebp),%eax
00007a22	leave
00007a23	ret
_CMPutCFStringKeyPtr:
00007a24	pushl	%ebp
00007a25	movl	%esp,%ebp
00007a27	subl	$0x58,%esp
00007a2a	movl	$__mh_bundle_header,0xf0(%ebp)
00007a31	movl	0x10(%ebp),%eax
00007a34	movl	%eax,(%esp)
00007a37	calll	0x00011180	; symbol stub for: _CFStringGetLength
00007a3c	movl	%eax,0x04(%esp)
00007a40	movl	$__mh_bundle_header,(%esp)
00007a47	calll	_CFRangeMake
00007a4c	movl	%eax,0xe4(%ebp)
00007a4f	movl	%edx,0xe8(%ebp)
00007a52	movl	0x10(%ebp),%eax
00007a55	movl	%eax,(%esp)
00007a58	calll	0x0001117b	; symbol stub for: _CFStringGetCharactersPtr
00007a5d	movl	%eax,0xec(%ebp)
00007a60	cmpl	$__mh_bundle_header,0xec(%ebp)
00007a64	jne	0x00007aab
00007a66	movl	0xe8(%ebp),%eax
00007a69	addl	%eax,%eax
00007a6b	movl	%eax,(%esp)
00007a6e	calll	0x00011347	; symbol stub for: _NewPtr
00007a73	movl	%eax,0xf0(%ebp)
00007a76	movl	0xf0(%ebp),%eax
00007a79	movl	%eax,0xec(%ebp)
00007a7c	cmpl	$__mh_bundle_header,0xf0(%ebp)
00007a80	jne	0x00007a8b
00007a82	movl	$0x00000001,0xd4(%ebp)
00007a89	jmp	0x00007af0
00007a8b	movl	0xf0(%ebp),%eax
00007a8e	movl	%eax,0x0c(%esp)
00007a92	movl	0xe4(%ebp),%eax
00007a95	movl	0xe8(%ebp),%edx
00007a98	movl	%eax,0x04(%esp)
00007a9c	movl	%edx,0x08(%esp)
00007aa0	movl	0x10(%ebp),%eax
00007aa3	movl	%eax,(%esp)
00007aa6	calll	0x00011176	; symbol stub for: _CFStringGetCharacters
00007aab	movl	0xe8(%ebp),%eax
00007aae	addl	%eax,%eax
00007ab0	movl	%eax,0x10(%esp)
00007ab4	movl	0xec(%ebp),%eax
00007ab7	movl	%eax,0x0c(%esp)
00007abb	movl	$0x75747874,0x08(%esp)
00007ac3	movl	0x0c(%ebp),%eax
00007ac6	movl	%eax,0x04(%esp)
00007aca	movl	0x08(%ebp),%eax
00007acd	movl	%eax,(%esp)
00007ad0	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
00007ad5	cwtl
00007ad6	movl	%eax,0xf4(%ebp)
00007ad9	cmpl	$__mh_bundle_header,0xf0(%ebp)
00007add	je	0x00007aea
00007adf	movl	0xf0(%ebp),%eax
00007ae2	movl	%eax,(%esp)
00007ae5	calll	0x00011243	; symbol stub for: _DisposePtr
00007aea	movl	0xf4(%ebp),%eax
00007aed	movl	%eax,0xd4(%ebp)
00007af0	movl	0xd4(%ebp),%eax
00007af3	leave
00007af4	ret
_CFRangeMake:
00007af5	pushl	%ebp
00007af6	movl	%esp,%ebp
00007af8	subl	$0x18,%esp
00007afb	movl	0x08(%ebp),%eax
00007afe	movl	%eax,0xf0(%ebp)
00007b01	movl	0x0c(%ebp),%eax
00007b04	movl	%eax,0xf4(%ebp)
00007b07	movl	0xf0(%ebp),%eax
00007b0a	movl	0xf4(%ebp),%edx
00007b0d	leave
00007b0e	ret
_CMHelperMenuEventHandler:
00007b0f	pushl	%ebp
00007b10	movl	%esp,%ebp
00007b12	pushl	%esi
00007b13	pushl	%ebx
00007b14	subl	$0x00000160,%esp
00007b1a	calll	0x00007b1f
00007b1f	popl	%ebx
00007b20	movl	0x10(%ebp),%eax
00007b23	movl	%eax,0xd0(%ebp)
00007b26	leal	0xcc(%ebp),%eax
00007b29	movl	%eax,0x18(%esp)
00007b2d	movl	$__mh_bundle_header,0x14(%esp)
00007b35	movl	$0x00000004,0x10(%esp)
00007b3d	movl	$__mh_bundle_header,0x0c(%esp)
00007b45	movl	$0x6d656e75,0x08(%esp)
00007b4d	movl	$0x2d2d2d2d,0x04(%esp)
00007b55	movl	0x0c(%ebp),%eax
00007b58	movl	%eax,(%esp)
00007b5b	calll	0x00011275	; symbol stub for: _GetEventParameter
00007b60	movl	%eax,0xd4(%ebp)
00007b63	cmpl	$__mh_bundle_header,0xd4(%ebp)
00007b67	jne	0x00007dd2
00007b6d	movl	0x0c(%ebp),%eax
00007b70	movl	%eax,(%esp)
00007b73	calll	0x00011270	; symbol stub for: _GetEventKind
00007b78	cmpl	$0x09,%eax
00007b7b	jne	0x00007dd2
00007b81	movl	0xcc(%ebp),%eax
00007b84	movl	%eax,(%esp)
00007b87	calll	0x0001120c	; symbol stub for: _CountMenuItems
00007b8c	movzwl	%ax,%eax
00007b8f	movl	%eax,0xe0(%ebp)
00007b92	movl	0xe0(%ebp),%eax
00007b95	movzwl	%ax,%edx
00007b98	movl	0xcc(%ebp),%ecx
00007b9b	leal	0xc8(%ebp),%eax
00007b9e	movl	%eax,0x08(%esp)
00007ba2	movl	%edx,0x04(%esp)
00007ba6	movl	%ecx,(%esp)
00007ba9	calll	0x00011293	; symbol stub for: _GetMenuItemAttributes
00007bae	movl	0xe0(%ebp),%eax
00007bb1	movzwl	%ax,%edx
00007bb4	movl	0xcc(%ebp),%ecx
00007bb7	leal	0xfffffebf(%ebp),%eax
00007bbd	movl	%eax,0x08(%esp)
00007bc1	movl	%edx,0x04(%esp)
00007bc5	movl	%ecx,(%esp)
00007bc8	calll	0x0001129d	; symbol stub for: _GetMenuItemText
00007bcd	movl	0xc8(%ebp),%eax
00007bd0	andl	$0x00000080,%eax
00007bd5	testl	%eax,%eax
00007bd7	je	0x00007dd2
00007bdd	movl	$__mh_bundle_header,0x08(%esp)
00007be5	leal	0xfffffebf(%ebp),%eax
00007beb	movl	%eax,0x04(%esp)
00007bef	movl	$__mh_bundle_header,(%esp)
00007bf6	calll	0x00011171	; symbol stub for: _CFStringCreateWithPascalString
00007bfb	movl	%eax,0xd8(%ebp)
00007bfe	movl	0xd0(%ebp),%eax
00007c01	movl	0x14(%eax),%edx
00007c04	movl	0xd8(%ebp),%eax
00007c07	movl	%eax,0x04(%esp)
00007c0b	movl	%edx,(%esp)
00007c0e	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
00007c13	movl	%eax,0xe8(%ebp)
00007c16	movl	0xd8(%ebp),%eax
00007c19	movl	%eax,(%esp)
00007c1c	calll	0x00011149	; symbol stub for: _CFRelease
00007c21	cmpl	$__mh_bundle_header,0xe8(%ebp)
00007c25	je	0x00007dd2
00007c2b	movl	0xe0(%ebp),%eax
00007c2e	movzwl	%ax,%eax
00007c31	movl	0xcc(%ebp),%edx
00007c34	movl	%eax,0x04(%esp)
00007c38	movl	%edx,(%esp)
00007c3b	calll	0x00011225	; symbol stub for: _DeleteMenuItem
00007c40	decl	0xe0(%ebp)
00007c43	movl	0xe8(%ebp),%eax
00007c46	movl	%eax,(%esp)
00007c49	calll	0x000110c2	; symbol stub for: _CFArrayGetCount
00007c4e	movl	%eax,0xe4(%ebp)
00007c51	movl	$0x00000001,0xdc(%ebp)
00007c58	jmp	0x00007dc6
00007c5d	movl	0xdc(%ebp),%eax
00007c60	cmpl	0xe4(%ebp),%eax
00007c63	jg	0x00007dc3
00007c69	movl	0xdc(%ebp),%eax
00007c6c	decl	%eax
00007c6d	movl	%eax,0x04(%esp)
00007c71	movl	0xe8(%ebp),%eax
00007c74	movl	%eax,(%esp)
00007c77	calll	0x000110c7	; symbol stub for: _CFArrayGetValueAtIndex
00007c7c	movl	%eax,0xf4(%ebp)
00007c7f	cmpl	$__mh_bundle_header,0xf4(%ebp)
00007c83	je	0x00007dc3
00007c89	leal	0x0000760d(%ebx),%eax
00007c8f	movl	%eax,0x04(%esp)
00007c93	movl	0xf4(%ebp),%eax
00007c96	movl	%eax,(%esp)
00007c99	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
00007c9e	movl	%eax,0xec(%ebp)
00007ca1	cmpl	$__mh_bundle_header,0xec(%ebp)
00007ca5	je	0x00007d07
00007ca7	movl	$__mh_bundle_header,0xc4(%ebp)
00007cae	leal	0xc4(%ebp),%esi
00007cb1	movl	$0x00000004,0x04(%esp)
00007cb9	movl	$__mh_bundle_header,(%esp)
00007cc0	calll	0x00007af5
00007cc5	movl	%esi,0x0c(%esp)
00007cc9	movl	%eax,0x04(%esp)
00007ccd	movl	%edx,0x08(%esp)
00007cd1	movl	0xec(%ebp),%eax
00007cd4	movl	%eax,(%esp)
00007cd7	calll	0x000110f4	; symbol stub for: _CFDataGetBytes
00007cdc	movl	0xc4(%ebp),%eax
00007cdf	testl	%eax,%eax
00007ce1	je	0x00007d07
00007ce3	movl	0xc4(%ebp),%edx
00007ce6	movl	0xdc(%ebp),%eax
00007ce9	movzwl	%ax,%eax
00007cec	movl	0xcc(%ebp),%ecx
00007cef	movl	%edx,0x0c(%esp)
00007cf3	movl	$0x00000005,0x08(%esp)
00007cfb	movl	%eax,0x04(%esp)
00007cff	movl	%ecx,(%esp)
00007d02	calll	0x00011392	; symbol stub for: _SetMenuItemIconHandle
00007d07	leal	0x0000761d(%ebx),%eax
00007d0d	movl	%eax,0x04(%esp)
00007d11	movl	0xf4(%ebp),%eax
00007d14	movl	%eax,(%esp)
00007d17	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
00007d1c	movl	%eax,0xf0(%ebp)
00007d1f	cmpl	$__mh_bundle_header,0xf0(%ebp)
00007d23	je	0x00007d67
00007d25	leal	0xc0(%ebp),%eax
00007d28	movl	%eax,0x08(%esp)
00007d2c	movl	$0x00000003,0x04(%esp)
00007d34	movl	0xf0(%ebp),%eax
00007d37	movl	%eax,(%esp)
00007d3a	calll	0x00011130	; symbol stub for: _CFNumberGetValue
00007d3f	testb	%al,%al
00007d41	je	0x00007d67
00007d43	movl	0xc0(%ebp),%ecx
00007d46	movl	0xdc(%ebp),%eax
00007d49	movzwl	%ax,%eax
00007d4c	movl	0xcc(%ebp),%edx
00007d4f	movl	$__mh_bundle_header,0x0c(%esp)
00007d57	movl	%ecx,0x08(%esp)
00007d5b	movl	%eax,0x04(%esp)
00007d5f	movl	%edx,(%esp)
00007d62	calll	0x000111e9	; symbol stub for: _ChangeMenuItemAttributes
00007d67	leal	0x0000762d(%ebx),%eax
00007d6d	movl	%eax,0x04(%esp)
00007d71	movl	0xf4(%ebp),%eax
00007d74	movl	%eax,(%esp)
00007d77	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
00007d7c	movl	%eax,0xf0(%ebp)
00007d7f	cmpl	$__mh_bundle_header,0xf0(%ebp)
00007d83	je	0x00007dc3
00007d85	leal	0xbf(%ebp),%eax
00007d88	movl	%eax,0x08(%esp)
00007d8c	movl	$0x00000001,0x04(%esp)
00007d94	movl	0xf0(%ebp),%eax
00007d97	movl	%eax,(%esp)
00007d9a	calll	0x00011130	; symbol stub for: _CFNumberGetValue
00007d9f	testb	%al,%al
00007da1	je	0x00007dc3
00007da3	movzbl	0xbf(%ebp),%eax
00007da7	movzbl	%al,%ecx
00007daa	movl	0xdc(%ebp),%eax
00007dad	movzwl	%ax,%eax
00007db0	movl	0xcc(%ebp),%edx
00007db3	movl	%ecx,0x08(%esp)
00007db7	movl	%eax,0x04(%esp)
00007dbb	movl	%edx,(%esp)
00007dbe	calll	0x00011397	; symbol stub for: _SetMenuItemModifiers
00007dc3	incl	0xdc(%ebp)
00007dc6	movl	0xdc(%ebp),%eax
00007dc9	cmpl	0xe0(%ebp),%eax
00007dcc	jle	0x00007c5d
00007dd2	movl	$0xffffd96e,%eax
00007dd7	addl	$0x00000160,%esp
00007ddd	popl	%ebx
00007dde	popl	%esi
00007ddf	leave
00007de0	ret
_InstallCMHelperMenuEventHandler:
00007de1	pushl	%ebp
00007de2	movl	%esp,%ebp
00007de4	subl	$0x38,%esp
00007de7	movl	0x08(%ebp),%eax
00007dea	movl	0x04(%eax),%eax
00007ded	testl	%eax,%eax
00007def	jne	0x00007e3c
00007df1	calll	0x0001125c	; symbol stub for: _GetApplicationEventTarget
00007df6	movl	%eax,0xf4(%ebp)
00007df9	movl	$0x6d656e75,0xec(%ebp)
00007e00	movl	$0x00000009,0xf0(%ebp)
00007e07	movl	0x08(%ebp),%edx
00007e0a	addl	$0x04,%edx
00007e0d	movl	0x08(%ebp),%eax
00007e10	movl	0x08(%eax),%ecx
00007e13	movl	%edx,0x14(%esp)
00007e17	movl	0x08(%ebp),%eax
00007e1a	movl	%eax,0x10(%esp)
00007e1e	leal	0xec(%ebp),%eax
00007e21	movl	%eax,0x0c(%esp)
00007e25	movl	$0x00000001,0x08(%esp)
00007e2d	movl	%ecx,0x04(%esp)
00007e31	movl	0xf4(%ebp),%eax
00007e34	movl	%eax,(%esp)
00007e37	calll	0x00011324	; symbol stub for: _InstallEventHandler
00007e3c	leave
00007e3d	ret
_RemoveCMHelperMenuEventHandler:
00007e3e	pushl	%ebp
00007e3f	movl	%esp,%ebp
00007e41	subl	$0x18,%esp
00007e44	movl	0x08(%ebp),%eax
00007e47	movl	0x04(%eax),%eax
00007e4a	testl	%eax,%eax
00007e4c	je	0x00007e5c
00007e4e	movl	0x08(%ebp),%eax
00007e51	movl	0x04(%eax),%eax
00007e54	movl	%eax,(%esp)
00007e57	calll	0x0001136f	; symbol stub for: _RemoveEventHandler
00007e5c	movl	0x08(%ebp),%eax
00007e5f	movl	$__mh_bundle_header,0x04(%eax)
00007e66	leave
00007e67	ret
_CMHelperFreeIconCallback:
00007e68	pushl	%ebp
00007e69	movl	%esp,%ebp
00007e6b	subl	$0x18,%esp
00007e6e	movl	0x0c(%ebp),%eax
00007e71	movl	$0x00000001,0x04(%esp)
00007e79	movl	%eax,(%esp)
00007e7c	calll	0x00011234	; symbol stub for: _DisposeIconSuite
00007e81	leave
00007e82	ret
_CMHelperInitialise:
00007e83	pushl	%ebp
00007e84	movl	%esp,%ebp
00007e86	pushl	%ebx
00007e87	subl	$0x34,%esp
00007e8a	calll	0x00007e8f
00007e8f	popl	%ebx
00007e90	movl	0x08(%ebp),%eax
00007e93	movl	$__mh_bundle_header,(%eax)
00007e99	movl	0x08(%ebp),%eax
00007e9c	movl	$__mh_bundle_header,0x04(%eax)
00007ea3	movl	0x08(%ebp),%edx
00007ea6	leal	0xfffffc80(%ebx),%eax
00007eac	movl	%eax,0x08(%edx)
00007eaf	movl	0x08(%ebp),%eax
00007eb2	movl	$__mh_bundle_header,0x10(%eax)
00007eb9	movl	0x08(%ebp),%edx
00007ebc	movl	0x0c(%ebp),%eax
00007ebf	movl	%eax,0x0c(%edx)
00007ec2	leal	0x00009199(%ebx),%eax
00007ec8	movl	(%eax),%eax
00007eca	movl	%eax,0x0c(%esp)
00007ece	leal	0x00009195(%ebx),%eax
00007ed4	movl	(%eax),%eax
00007ed6	movl	%eax,0x08(%esp)
00007eda	movl	$__mh_bundle_header,0x04(%esp)
00007ee2	movl	$__mh_bundle_header,(%esp)
00007ee9	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
00007eee	movl	%eax,%edx
00007ef0	movl	0x08(%ebp),%eax
00007ef3	movl	%edx,0x14(%eax)
00007ef6	movl	$__mh_bundle_header,0xe4(%ebp)
00007efd	movl	$__mh_bundle_header,0xe8(%ebp)
00007f04	movl	$__mh_bundle_header,0xec(%ebp)
00007f0b	movl	$__mh_bundle_header,0xf0(%ebp)
00007f12	movl	$__mh_bundle_header,0xf4(%ebp)
00007f19	leal	0xffffffd9(%ebx),%eax
00007f1f	movl	%eax,0xec(%ebp)
00007f22	leal	0xe4(%ebp),%eax
00007f25	movl	%eax,0x0c(%esp)
00007f29	leal	0x00009195(%ebx),%eax
00007f2f	movl	(%eax),%eax
00007f31	movl	%eax,0x08(%esp)
00007f35	movl	$__mh_bundle_header,0x04(%esp)
00007f3d	movl	$__mh_bundle_header,(%esp)
00007f44	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
00007f49	movl	%eax,%edx
00007f4b	movl	0x08(%ebp),%eax
00007f4e	movl	%edx,0x18(%eax)
00007f51	addl	$0x34,%esp
00007f54	popl	%ebx
00007f55	leave
00007f56	ret
_CMHelperDispose:
00007f57	pushl	%ebp
00007f58	movl	%esp,%ebp
00007f5a	subl	$0x18,%esp
00007f5d	movl	0x08(%ebp),%eax
00007f60	movl	%eax,(%esp)
00007f63	calll	0x00007e3e
00007f68	movl	0x08(%ebp),%eax
00007f6b	movl	0x14(%eax),%eax
00007f6e	movl	%eax,(%esp)
00007f71	calll	0x00011149	; symbol stub for: _CFRelease
00007f76	movl	0x08(%ebp),%eax
00007f79	movl	0x18(%eax),%eax
00007f7c	movl	%eax,(%esp)
00007f7f	calll	0x00011149	; symbol stub for: _CFRelease
00007f84	leave
00007f85	ret
_CMHelperStart:
00007f86	pushl	%ebp
00007f87	movl	%esp,%ebp
00007f89	subl	$0x18,%esp
00007f8c	movl	0x08(%ebp),%eax
00007f8f	movl	(%eax),%eax
00007f91	leal	0x01(%eax),%edx
00007f94	movl	0x08(%ebp),%eax
00007f97	movl	%edx,(%eax)
00007f99	movl	0x08(%ebp),%eax
00007f9c	movl	(%eax),%eax
00007f9e	cmpl	$0x01,%eax
00007fa1	jne	0x00007fae
00007fa3	movl	0x08(%ebp),%eax
00007fa6	movl	%eax,(%esp)
00007fa9	calll	0x00007de1
00007fae	leave
00007faf	ret
_CMHelperStop:
00007fb0	pushl	%ebp
00007fb1	movl	%esp,%ebp
00007fb3	subl	$0x18,%esp
00007fb6	movl	0x08(%ebp),%eax
00007fb9	movl	(%eax),%eax
00007fbb	leal	0xff(%eax),%edx
00007fbe	movl	0x08(%ebp),%eax
00007fc1	movl	%edx,(%eax)
00007fc3	movl	0x08(%ebp),%eax
00007fc6	movl	(%eax),%eax
00007fc8	testl	%eax,%eax
00007fca	jg	0x00007fee
00007fcc	movl	0x08(%ebp),%eax
00007fcf	movl	%eax,(%esp)
00007fd2	calll	0x00007e3e
00007fd7	movl	0x08(%ebp),%eax
00007fda	movl	0x14(%eax),%eax
00007fdd	movl	%eax,(%esp)
00007fe0	calll	0x00011117	; symbol stub for: _CFDictionaryRemoveAllValues
00007fe5	movl	0x08(%ebp),%eax
00007fe8	movl	$__mh_bundle_header,(%eax)
00007fee	leave
00007fef	ret
_CMHelperAddCommand:
00007ff0	pushl	%ebp
00007ff1	movl	%esp,%ebp
00007ff3	subl	$0x28,%esp
00007ff6	movl	$__mh_bundle_header,0x14(%esp)
00007ffe	movl	0x18(%ebp),%eax
00008001	movl	%eax,0x10(%esp)
00008005	movl	0x14(%ebp),%eax
00008008	movl	%eax,0x0c(%esp)
0000800c	movl	0x10(%ebp),%eax
0000800f	movl	%eax,0x08(%esp)
00008013	movl	0x0c(%ebp),%eax
00008016	movl	%eax,0x04(%esp)
0000801a	movl	0x08(%ebp),%eax
0000801d	movl	%eax,(%esp)
00008020	calll	_CMHelperAddCommandWithModifiers
00008025	leave
00008026	ret
_CMHelperAddCommandWithModifiers:
00008027	pushl	%ebp
00008028	movl	%esp,%ebp
0000802a	pushl	%ebx
0000802b	subl	$0x74,%esp
0000802e	calll	0x00008033
00008033	popl	%ebx
00008034	movl	0x1c(%ebp),%eax
00008037	movb	%al,0xb4(%ebp)
0000803a	movl	$__mh_bundle_header,0xdc(%ebp)
00008041	movl	$0x6e756c6c,0xd4(%ebp)
00008048	movl	$__mh_bundle_header,0xd8(%ebp)
0000804f	movl	0x08(%ebp),%edx
00008052	addl	$0x04,%edx
00008055	leal	0xd0(%ebp),%eax
00008058	movl	%eax,0x04(%esp)
0000805c	movl	%edx,(%esp)
0000805f	calll	0x00011045	; symbol stub for: _AECountItems
00008064	jmp	0x0000807c
00008066	movl	0x08(%ebp),%eax
00008069	movl	0x10(%eax),%eax
0000806c	movl	$__mh_bundle_header,0x04(%esp)
00008074	movl	%eax,(%esp)
00008077	calll	0x000110b3	; symbol stub for: _CFArrayAppendValue
0000807c	movl	0x08(%ebp),%eax
0000807f	movl	0x10(%eax),%eax
00008082	movl	%eax,(%esp)
00008085	calll	0x000110c2	; symbol stub for: _CFArrayGetCount
0000808a	movl	%eax,%edx
0000808c	movl	0xd0(%ebp),%eax
0000808f	cmpl	%eax,%edx
00008091	jl	0x00008066
00008093	leal	0x000070f9(%ebx),%eax
00008099	movl	%eax,0xc4(%ebp)
0000809c	leal	0x00007119(%ebx),%eax
000080a2	movl	%eax,0xc8(%ebp)
000080a5	leal	0x00007109(%ebx),%eax
000080ab	movl	%eax,0xcc(%ebp)
000080ae	leal	0x18(%ebp),%eax
000080b1	movl	$0x00000004,0x08(%esp)
000080b9	movl	%eax,0x04(%esp)
000080bd	movl	$__mh_bundle_header,(%esp)
000080c4	calll	0x000110ef	; symbol stub for: _CFDataCreate
000080c9	movl	%eax,0xb8(%ebp)
000080cc	leal	0xb4(%ebp),%eax
000080cf	movl	%eax,0x08(%esp)
000080d3	movl	$0x00000001,0x04(%esp)
000080db	movl	$__mh_bundle_header,(%esp)
000080e2	calll	0x0001112b	; symbol stub for: _CFNumberCreate
000080e7	movl	%eax,0xbc(%ebp)
000080ea	leal	0x14(%ebp),%eax
000080ed	movl	%eax,0x08(%esp)
000080f1	movl	$0x00000003,0x04(%esp)
000080f9	movl	$__mh_bundle_header,(%esp)
00008100	calll	0x0001112b	; symbol stub for: _CFNumberCreate
00008105	movl	%eax,0xc0(%ebp)
00008108	leal	0xc4(%ebp),%edx
0000810b	leal	0x00008ff5(%ebx),%eax
00008111	movl	(%eax),%eax
00008113	movl	%eax,0x14(%esp)
00008117	leal	0x00008ff1(%ebx),%eax
0000811d	movl	(%eax),%eax
0000811f	movl	%eax,0x10(%esp)
00008123	movl	$0x00000003,0x0c(%esp)
0000812b	leal	0xb8(%ebp),%eax
0000812e	movl	%eax,0x08(%esp)
00008132	movl	%edx,0x04(%esp)
00008136	movl	$__mh_bundle_header,(%esp)
0000813d	calll	0x00011103	; symbol stub for: _CFDictionaryCreate
00008142	movl	%eax,0xe0(%ebp)
00008145	movl	$__mh_bundle_header,0xe4(%ebp)
0000814c	jmp	0x00008160
0000814e	movl	0xe4(%ebp),%eax
00008151	movl	0xb8(%ebp,%eax,4),%eax
00008155	movl	%eax,(%esp)
00008158	calll	0x00011149	; symbol stub for: _CFRelease
0000815d	incl	0xe4(%ebp)
00008160	cmpl	$0x02,0xe4(%ebp)
00008164	jle	0x0000814e
00008166	movl	0x08(%ebp),%eax
00008169	movl	0x10(%eax),%edx
0000816c	movl	0xe0(%ebp),%eax
0000816f	movl	%eax,0x04(%esp)
00008173	movl	%edx,(%esp)
00008176	calll	0x000110b3	; symbol stub for: _CFArrayAppendValue
0000817b	leal	0xd4(%ebp),%eax
0000817e	movl	%eax,0x0c(%esp)
00008182	movl	$0x00000001,0x08(%esp)
0000818a	movl	$__mh_bundle_header,0x04(%esp)
00008192	movl	$__mh_bundle_header,(%esp)
00008199	calll	0x00011054	; symbol stub for: _AECreateList
0000819e	cwtl
0000819f	movl	%eax,0xdc(%ebp)
000081a2	movl	0xdc(%ebp),%eax
000081a5	movl	%eax,0xe8(%ebp)
000081a8	cmpl	$__mh_bundle_header,0xe8(%ebp)
000081ac	setne	%al
000081af	movzbl	%al,%eax
000081b2	testl	%eax,%eax
000081b4	je	0x00008204
000081b6	movl	0xe8(%ebp),%eax
000081b9	movl	%eax,0x1c(%esp)
000081bd	movl	$0x0000014d,0x18(%esp)
000081c5	leal	0x00006369(%ebx),%eax
000081cb	movl	%eax,0x14(%esp)
000081cf	movl	$__mh_bundle_header,0x10(%esp)
000081d7	leal	0x000063a0(%ebx),%eax
000081dd	movl	%eax,0x0c(%esp)
000081e1	leal	0x000063bd(%ebx),%eax
000081e7	movl	%eax,0x08(%esp)
000081eb	movl	$__mh_bundle_header,0x04(%esp)
000081f3	movl	$0x3f2a3f2a,(%esp)
000081fa	calll	0x00011220	; symbol stub for: _DebugAssert
000081ff	jmp	0x000083c1
00008204	movl	0x0c(%ebp),%eax
00008207	movl	%eax,0x08(%esp)
0000820b	movl	$0x706e616d,0x04(%esp)
00008213	leal	0xd4(%ebp),%eax
00008216	movl	%eax,(%esp)
00008219	calll	0x00007a24
0000821e	movl	%eax,0xdc(%ebp)
00008221	movl	0xdc(%ebp),%eax
00008224	movl	%eax,0xec(%ebp)
00008227	cmpl	$__mh_bundle_header,0xec(%ebp)
0000822b	setne	%al
0000822e	movzbl	%al,%eax
00008231	testl	%eax,%eax
00008233	je	0x00008283
00008235	movl	0xec(%ebp),%eax
00008238	movl	%eax,0x1c(%esp)
0000823c	movl	$0x00000151,0x18(%esp)
00008244	leal	0x00006369(%ebx),%eax
0000824a	movl	%eax,0x14(%esp)
0000824e	movl	$__mh_bundle_header,0x10(%esp)
00008256	leal	0x000063a0(%ebx),%eax
0000825c	movl	%eax,0x0c(%esp)
00008260	leal	0x000063bd(%ebx),%eax
00008266	movl	%eax,0x08(%esp)
0000826a	movl	$__mh_bundle_header,0x04(%esp)
00008272	movl	$0x3f2a3f2a,(%esp)
00008279	calll	0x00011220	; symbol stub for: _DebugAssert
0000827e	jmp	0x000083c1
00008283	movl	$0x00000004,0x10(%esp)
0000828b	leal	0x10(%ebp),%eax
0000828e	movl	%eax,0x0c(%esp)
00008292	movl	$0x6c6f6e67,0x08(%esp)
0000829a	movl	$0x636d6364,0x04(%esp)
000082a2	leal	0xd4(%ebp),%eax
000082a5	movl	%eax,(%esp)
000082a8	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
000082ad	cwtl
000082ae	movl	%eax,0xdc(%ebp)
000082b1	movl	0xdc(%ebp),%eax
000082b4	movl	%eax,0xf0(%ebp)
000082b7	cmpl	$__mh_bundle_header,0xf0(%ebp)
000082bb	setne	%al
000082be	movzbl	%al,%eax
000082c1	testl	%eax,%eax
000082c3	je	0x00008313
000082c5	movl	0xf0(%ebp),%eax
000082c8	movl	%eax,0x1c(%esp)
000082cc	movl	$0x00000155,0x18(%esp)
000082d4	leal	0x00006369(%ebx),%eax
000082da	movl	%eax,0x14(%esp)
000082de	movl	$__mh_bundle_header,0x10(%esp)
000082e6	leal	0x000063a0(%ebx),%eax
000082ec	movl	%eax,0x0c(%esp)
000082f0	leal	0x000063bd(%ebx),%eax
000082f6	movl	%eax,0x08(%esp)
000082fa	movl	$__mh_bundle_header,0x04(%esp)
00008302	movl	$0x3f2a3f2a,(%esp)
00008309	calll	0x00011220	; symbol stub for: _DebugAssert
0000830e	jmp	0x000083c1
00008313	movl	$0x00000004,0x10(%esp)
0000831b	leal	0x14(%ebp),%eax
0000831e	movl	%eax,0x0c(%esp)
00008322	movl	$0x6c6f6e67,0x08(%esp)
0000832a	movl	$0x636d6174,0x04(%esp)
00008332	leal	0xd4(%ebp),%eax
00008335	movl	%eax,(%esp)
00008338	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
0000833d	cwtl
0000833e	movl	%eax,0xdc(%ebp)
00008341	movl	0xdc(%ebp),%eax
00008344	movl	%eax,0xf4(%ebp)
00008347	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000834b	setne	%al
0000834e	movzbl	%al,%eax
00008351	testl	%eax,%eax
00008353	je	0x000083a0
00008355	movl	0xf4(%ebp),%eax
00008358	movl	%eax,0x1c(%esp)
0000835c	movl	$0x00000158,0x18(%esp)
00008364	leal	0x00006369(%ebx),%eax
0000836a	movl	%eax,0x14(%esp)
0000836e	movl	$__mh_bundle_header,0x10(%esp)
00008376	leal	0x000063a0(%ebx),%eax
0000837c	movl	%eax,0x0c(%esp)
00008380	leal	0x000063bd(%ebx),%eax
00008386	movl	%eax,0x08(%esp)
0000838a	movl	$__mh_bundle_header,0x04(%esp)
00008392	movl	$0x3f2a3f2a,(%esp)
00008399	calll	0x00011220	; symbol stub for: _DebugAssert
0000839e	jmp	0x000083c1
000083a0	movl	0x08(%ebp),%edx
000083a3	addl	$0x04,%edx
000083a6	leal	0xd4(%ebp),%eax
000083a9	movl	%eax,0x08(%esp)
000083ad	movl	$__mh_bundle_header,0x04(%esp)
000083b5	movl	%edx,(%esp)
000083b8	calll	0x00011081	; symbol stub for: _AEPutDesc
000083bd	cwtl
000083be	movl	%eax,0xdc(%ebp)
000083c1	leal	0xd4(%ebp),%eax
000083c4	movl	%eax,(%esp)
000083c7	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000083cc	movl	0xdc(%ebp),%eax
000083cf	addl	$0x74,%esp
000083d2	popl	%ebx
000083d3	leave
000083d4	ret
_CMHelperCreateSubmenu:
000083d5	pushl	%ebp
000083d6	movl	%esp,%ebp
000083d8	pushl	%ebx
000083d9	subl	$0x44,%esp
000083dc	calll	0x000083e1
000083e1	popl	%ebx
000083e2	movl	0x0c(%ebp),%edx
000083e5	movl	0x08(%ebp),%eax
000083e8	movl	%eax,(%edx)
000083ea	movl	0x0c(%ebp),%eax
000083ed	addl	$0x04,%eax
000083f0	movl	%eax,0x0c(%esp)
000083f4	movl	$__mh_bundle_header,0x08(%esp)
000083fc	movl	$__mh_bundle_header,0x04(%esp)
00008404	movl	$__mh_bundle_header,(%esp)
0000840b	calll	0x00011054	; symbol stub for: _AECreateList
00008410	cwtl
00008411	movl	%eax,0xf4(%ebp)
00008414	cmpl	$__mh_bundle_header,0xf4(%ebp)
00008418	je	0x00008422
0000841a	movl	0xf4(%ebp),%eax
0000841d	movl	%eax,0xe4(%ebp)
00008420	jmp	0x0000849a
00008422	movl	0x08(%ebp),%eax
00008425	movl	0x10(%eax),%eax
00008428	leal	0x01(%eax),%edx
0000842b	movl	0x08(%ebp),%eax
0000842e	movl	%edx,0x10(%eax)
00008431	movl	0x08(%ebp),%eax
00008434	movl	0x10(%eax),%ecx
00008437	movl	0x08(%ebp),%eax
0000843a	movl	0x0c(%eax),%eax
0000843d	leal	0x00006d7b(%ebx),%edx
00008443	movl	%ecx,0x10(%esp)
00008447	movl	%eax,0x0c(%esp)
0000844b	movl	%edx,0x08(%esp)
0000844f	movl	$__mh_bundle_header,0x04(%esp)
00008457	movl	$__mh_bundle_header,(%esp)
0000845e	calll	0x0001116c	; symbol stub for: _CFStringCreateWithFormat
00008463	movl	%eax,%edx
00008465	movl	0x0c(%ebp),%eax
00008468	movl	%edx,0x0c(%eax)
0000846b	leal	0x00008c53(%ebx),%eax
00008471	movl	(%eax),%eax
00008473	movl	%eax,0x08(%esp)
00008477	movl	$__mh_bundle_header,0x04(%esp)
0000847f	movl	$__mh_bundle_header,(%esp)
00008486	calll	0x000110b8	; symbol stub for: _CFArrayCreateMutable
0000848b	movl	%eax,%edx
0000848d	movl	0x0c(%ebp),%eax
00008490	movl	%edx,0x10(%eax)
00008493	movl	$__mh_bundle_header,0xe4(%ebp)
0000849a	movl	0xe4(%ebp),%eax
0000849d	addl	$0x44,%esp
000084a0	popl	%ebx
000084a1	leave
000084a2	ret
_CMHelperDisposeSubmenu:
000084a3	pushl	%ebp
000084a4	movl	%esp,%ebp
000084a6	subl	$0x18,%esp
000084a9	movl	0x08(%ebp),%eax
000084ac	addl	$0x04,%eax
000084af	movl	%eax,(%esp)
000084b2	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000084b7	movl	0x08(%ebp),%eax
000084ba	movl	0x10(%eax),%eax
000084bd	movl	%eax,(%esp)
000084c0	calll	0x00011149	; symbol stub for: _CFRelease
000084c5	movl	0x08(%ebp),%eax
000084c8	movl	0x0c(%eax),%eax
000084cb	movl	%eax,(%esp)
000084ce	calll	0x00011149	; symbol stub for: _CFRelease
000084d3	movl	$__mh_bundle_header,%eax
000084d8	leave
000084d9	ret
_CMHelperInsertSubmenu:
000084da	pushl	%ebp
000084db	movl	%esp,%ebp
000084dd	pushl	%ebx
000084de	subl	$0x44,%esp
000084e1	calll	0x000084e6
000084e6	popl	%ebx
000084e7	movl	$0x6e756c6c,0xe4(%ebp)
000084ee	movl	$__mh_bundle_header,0xe8(%ebp)
000084f5	leal	0x00008b1e(%ebx),%eax
000084fb	movl	(%eax),%eax
000084fd	leal	0x000000b0(%eax),%eax
00008503	movl	%eax,0x0c(%esp)
00008507	movl	$0x00000017,0x08(%esp)
0000850f	movl	$0x00000001,0x04(%esp)
00008517	leal	0x00005f3d(%ebx),%eax
0000851d	movl	%eax,(%esp)
00008520	calll	0x00011419	; symbol stub for: _fwrite
00008525	movl	0x10(%ebp),%eax
00008528	movl	%eax,(%esp)
0000852b	calll	0x00011153	; symbol stub for: _CFShow
00008530	movl	0x08(%ebp),%eax
00008533	movl	0x10(%eax),%ecx
00008536	movl	0x08(%ebp),%eax
00008539	movl	0x0c(%eax),%edx
0000853c	movl	0x08(%ebp),%eax
0000853f	movl	(%eax),%eax
00008541	movl	0x14(%eax),%eax
00008544	movl	%ecx,0x08(%esp)
00008548	movl	%edx,0x04(%esp)
0000854c	movl	%eax,(%esp)
0000854f	calll	0x000110f9	; symbol stub for: _CFDictionaryAddValue
00008554	leal	0xe4(%ebp),%eax
00008557	movl	%eax,0x0c(%esp)
0000855b	movl	$0x00000001,0x08(%esp)
00008563	movl	$__mh_bundle_header,0x04(%esp)
0000856b	movl	$__mh_bundle_header,(%esp)
00008572	calll	0x00011054	; symbol stub for: _AECreateList
00008577	cwtl
00008578	movl	%eax,0xec(%ebp)
0000857b	movl	0xec(%ebp),%eax
0000857e	movl	%eax,0xf0(%ebp)
00008581	cmpl	$__mh_bundle_header,0xf0(%ebp)
00008585	setne	%al
00008588	movzbl	%al,%eax
0000858b	testl	%eax,%eax
0000858d	je	0x000085dd
0000858f	movl	0xf0(%ebp),%eax
00008592	movl	%eax,0x1c(%esp)
00008596	movl	$0x0000018e,0x18(%esp)
0000859e	leal	0x00005eb6(%ebx),%eax
000085a4	movl	%eax,0x14(%esp)
000085a8	movl	$__mh_bundle_header,0x10(%esp)
000085b0	leal	0x00005f55(%ebx),%eax
000085b6	movl	%eax,0x0c(%esp)
000085ba	leal	0x00005c6e(%ebx),%eax
000085c0	movl	%eax,0x08(%esp)
000085c4	movl	$__mh_bundle_header,0x04(%esp)
000085cc	movl	$0x3f2a3f2a,(%esp)
000085d3	calll	0x00011220	; symbol stub for: _DebugAssert
000085d8	jmp	0x0000872a
000085dd	movl	0x08(%ebp),%eax
000085e0	movl	0x0c(%eax),%eax
000085e3	movl	%eax,0x08(%esp)
000085e7	movl	$0x706e616d,0x04(%esp)
000085ef	leal	0xe4(%ebp),%eax
000085f2	movl	%eax,(%esp)
000085f5	calll	0x00007a24
000085fa	movl	$0x00000080,0xe0(%ebp)
00008601	movl	$0x00000004,0x10(%esp)
00008609	leal	0xe0(%ebp),%eax
0000860c	movl	%eax,0x0c(%esp)
00008610	movl	$0x6c6f6e67,0x08(%esp)
00008618	movl	$0x636d6174,0x04(%esp)
00008620	leal	0xe4(%ebp),%eax
00008623	movl	%eax,(%esp)
00008626	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
0000862b	movl	0x08(%ebp),%edx
0000862e	addl	$0x04,%edx
00008631	leal	0xe4(%ebp),%eax
00008634	movl	%eax,0x08(%esp)
00008638	movl	$__mh_bundle_header,0x04(%esp)
00008640	movl	%edx,(%esp)
00008643	calll	0x00011081	; symbol stub for: _AEPutDesc
00008648	leal	0xe4(%ebp),%eax
0000864b	movl	%eax,(%esp)
0000864e	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00008653	leal	0xe4(%ebp),%eax
00008656	movl	%eax,0x0c(%esp)
0000865a	movl	$0x00000001,0x08(%esp)
00008662	movl	$__mh_bundle_header,0x04(%esp)
0000866a	movl	$__mh_bundle_header,(%esp)
00008671	calll	0x00011054	; symbol stub for: _AECreateList
00008676	cwtl
00008677	movl	%eax,0xec(%ebp)
0000867a	movl	0xec(%ebp),%eax
0000867d	movl	%eax,0xf4(%ebp)
00008680	cmpl	$__mh_bundle_header,0xf4(%ebp)
00008684	setne	%al
00008687	movzbl	%al,%eax
0000868a	testl	%eax,%eax
0000868c	je	0x000086d9
0000868e	movl	0xf4(%ebp),%eax
00008691	movl	%eax,0x1c(%esp)
00008695	movl	$0x00000196,0x18(%esp)
0000869d	leal	0x00005eb6(%ebx),%eax
000086a3	movl	%eax,0x14(%esp)
000086a7	movl	$__mh_bundle_header,0x10(%esp)
000086af	leal	0x00005f55(%ebx),%eax
000086b5	movl	%eax,0x0c(%esp)
000086b9	leal	0x00005c6e(%ebx),%eax
000086bf	movl	%eax,0x08(%esp)
000086c3	movl	$__mh_bundle_header,0x04(%esp)
000086cb	movl	$0x3f2a3f2a,(%esp)
000086d2	calll	0x00011220	; symbol stub for: _DebugAssert
000086d7	jmp	0x0000872a
000086d9	movl	0x10(%ebp),%eax
000086dc	movl	%eax,0x08(%esp)
000086e0	movl	$0x706e616d,0x04(%esp)
000086e8	leal	0xe4(%ebp),%eax
000086eb	movl	%eax,(%esp)
000086ee	calll	0x00007a24
000086f3	movl	0x08(%ebp),%eax
000086f6	addl	$0x04,%eax
000086f9	movl	%eax,0x08(%esp)
000086fd	movl	$0x636d7362,0x04(%esp)
00008705	leal	0xe4(%ebp),%eax
00008708	movl	%eax,(%esp)
0000870b	calll	0x00011086	; symbol stub for: _AEPutParamDesc
00008710	leal	0xe4(%ebp),%eax
00008713	movl	%eax,0x08(%esp)
00008717	movl	$__mh_bundle_header,0x04(%esp)
0000871f	movl	0x0c(%ebp),%eax
00008722	movl	%eax,(%esp)
00008725	calll	0x00011081	; symbol stub for: _AEPutDesc
0000872a	leal	0xe4(%ebp),%eax
0000872d	movl	%eax,(%esp)
00008730	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00008735	movl	0xec(%ebp),%eax
00008738	addl	$0x44,%esp
0000873b	popl	%ebx
0000873c	leave
0000873d	ret
_CMHelperAECreateMenu:
0000873e	pushl	%ebp
0000873f	movl	%esp,%ebp
00008741	subl	$0x18,%esp
00008744	movl	0x08(%ebp),%eax
00008747	movl	%eax,0x0c(%esp)
0000874b	movl	$__mh_bundle_header,0x08(%esp)
00008753	movl	$__mh_bundle_header,0x04(%esp)
0000875b	movl	$__mh_bundle_header,(%esp)
00008762	calll	0x00011054	; symbol stub for: _AECreateList
00008767	cwtl
00008768	leave
00008769	ret
_CMHelperAECreateSubmenuCommand:
0000876a	pushl	%ebp
0000876b	movl	%esp,%ebp
0000876d	subl	$0x38,%esp
00008770	movl	0x08(%ebp),%eax
00008773	movl	%eax,0x0c(%esp)
00008777	movl	$0x00000001,0x08(%esp)
0000877f	movl	$__mh_bundle_header,0x04(%esp)
00008787	movl	$__mh_bundle_header,(%esp)
0000878e	calll	0x00011054	; symbol stub for: _AECreateList
00008793	cwtl
00008794	movl	%eax,0xf4(%ebp)
00008797	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000879b	je	0x000087a5
0000879d	movl	0xf4(%ebp),%eax
000087a0	movl	%eax,0xe4(%ebp)
000087a3	jmp	0x000087f9
000087a5	movl	0x0c(%ebp),%eax
000087a8	movl	%eax,0x08(%esp)
000087ac	movl	$0x706e616d,0x04(%esp)
000087b4	movl	0x08(%ebp),%eax
000087b7	movl	%eax,(%esp)
000087ba	calll	0x00007a24
000087bf	movl	%eax,0xf4(%ebp)
000087c2	cmpl	$__mh_bundle_header,0xf4(%ebp)
000087c6	jne	0x000087e2
000087c8	movl	0x10(%ebp),%eax
000087cb	movl	%eax,0x08(%esp)
000087cf	movl	$0x636d7362,0x04(%esp)
000087d7	movl	0x08(%ebp),%eax
000087da	movl	%eax,(%esp)
000087dd	calll	0x00011086	; symbol stub for: _AEPutParamDesc
000087e2	cmpl	$__mh_bundle_header,0xf4(%ebp)
000087e6	je	0x000087f3
000087e8	movl	0x08(%ebp),%eax
000087eb	movl	%eax,(%esp)
000087ee	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000087f3	movl	0xf4(%ebp),%eax
000087f6	movl	%eax,0xe4(%ebp)
000087f9	movl	0xe4(%ebp),%eax
000087fc	leave
000087fd	ret
_CMHelperAEAddSubmenuCommand:
000087fe	pushl	%ebp
000087ff	movl	%esp,%ebp
00008801	subl	$0x38,%esp
00008804	movl	0x10(%ebp),%eax
00008807	movl	%eax,0x08(%esp)
0000880b	movl	0x0c(%ebp),%eax
0000880e	movl	%eax,0x04(%esp)
00008812	leal	0xec(%ebp),%eax
00008815	movl	%eax,(%esp)
00008818	calll	0x0000876a
0000881d	movl	%eax,0xf4(%ebp)
00008820	cmpl	$__mh_bundle_header,0xf4(%ebp)
00008824	je	0x0000882e
00008826	movl	0xf4(%ebp),%eax
00008829	movl	%eax,0xe4(%ebp)
0000882c	jmp	0x0000885d
0000882e	leal	0xec(%ebp),%eax
00008831	movl	%eax,0x08(%esp)
00008835	movl	$__mh_bundle_header,0x04(%esp)
0000883d	movl	0x08(%ebp),%eax
00008840	movl	%eax,(%esp)
00008843	calll	0x00011081	; symbol stub for: _AEPutDesc
00008848	cwtl
00008849	movl	%eax,0xf4(%ebp)
0000884c	leal	0xec(%ebp),%eax
0000884f	movl	%eax,(%esp)
00008852	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00008857	movl	0xf4(%ebp),%eax
0000885a	movl	%eax,0xe4(%ebp)
0000885d	movl	0xe4(%ebp),%eax
00008860	leave
00008861	ret
_CMHelperAECreateCommandWithModifiers:
00008862	pushl	%ebp
00008863	movl	%esp,%ebp
00008865	subl	$0x48,%esp
00008868	movl	0x1c(%ebp),%eax
0000886b	movb	%al,0xe4(%ebp)
0000886e	movzbl	0xe4(%ebp),%eax
00008872	movw	%ax,0xf2(%ebp)
00008876	movl	0x08(%ebp),%eax
00008879	movl	%eax,0x0c(%esp)
0000887d	movl	$0x00000001,0x08(%esp)
00008885	movl	$__mh_bundle_header,0x04(%esp)
0000888d	movl	$__mh_bundle_header,(%esp)
00008894	calll	0x00011054	; symbol stub for: _AECreateList
00008899	cwtl
0000889a	movl	%eax,0xf4(%ebp)
0000889d	cmpl	$__mh_bundle_header,0xf4(%ebp)
000088a1	je	0x000088ae
000088a3	movl	0xf4(%ebp),%eax
000088a6	movl	%eax,0xe0(%ebp)
000088a9	jmp	0x000089a7
000088ae	movl	0x0c(%ebp),%eax
000088b1	movl	%eax,0x08(%esp)
000088b5	movl	$0x706e616d,0x04(%esp)
000088bd	movl	0x08(%ebp),%eax
000088c0	movl	%eax,(%esp)
000088c3	calll	0x00007a24
000088c8	movl	%eax,0xf4(%ebp)
000088cb	cmpl	$__mh_bundle_header,0xf4(%ebp)
000088cf	jne	0x000088ff
000088d1	movl	$0x00000004,0x10(%esp)
000088d9	leal	0x10(%ebp),%eax
000088dc	movl	%eax,0x0c(%esp)
000088e0	movl	$0x6c6f6e67,0x08(%esp)
000088e8	movl	$0x636d6364,0x04(%esp)
000088f0	movl	0x08(%ebp),%eax
000088f3	movl	%eax,(%esp)
000088f6	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
000088fb	cwtl
000088fc	movl	%eax,0xf4(%ebp)
000088ff	cmpl	$__mh_bundle_header,0xf4(%ebp)
00008903	jne	0x00008933
00008905	movl	$0x00000004,0x10(%esp)
0000890d	leal	0x14(%ebp),%eax
00008910	movl	%eax,0x0c(%esp)
00008914	movl	$0x6c6f6e67,0x08(%esp)
0000891c	movl	$0x636d6174,0x04(%esp)
00008924	movl	0x08(%ebp),%eax
00008927	movl	%eax,(%esp)
0000892a	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
0000892f	cwtl
00008930	movl	%eax,0xf4(%ebp)
00008933	cmpl	$__mh_bundle_header,0xf4(%ebp)
00008937	jne	0x00008967
00008939	movl	$0x00000002,0x10(%esp)
00008941	leal	0xf2(%ebp),%eax
00008944	movl	%eax,0x0c(%esp)
00008948	movl	$0x73686f72,0x08(%esp)
00008950	movl	$0x434d6d64,0x04(%esp)
00008958	movl	0x08(%ebp),%eax
0000895b	movl	%eax,(%esp)
0000895e	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
00008963	cwtl
00008964	movl	%eax,0xf4(%ebp)
00008967	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000896b	jne	0x00008990
0000896d	cmpl	$__mh_bundle_header,0x18(%ebp)
00008971	je	0x00008990
00008973	movl	0x18(%ebp),%eax
00008976	movl	%eax,0x08(%esp)
0000897a	movl	$0x434d6963,0x04(%esp)
00008982	movl	0x08(%ebp),%eax
00008985	movl	%eax,(%esp)
00008988	calll	0x00007a24
0000898d	movl	%eax,0xf4(%ebp)
00008990	cmpl	$__mh_bundle_header,0xf4(%ebp)
00008994	je	0x000089a1
00008996	movl	0x08(%ebp),%eax
00008999	movl	%eax,(%esp)
0000899c	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000089a1	movl	0xf4(%ebp),%eax
000089a4	movl	%eax,0xe0(%ebp)
000089a7	movl	0xe0(%ebp),%eax
000089aa	leave
000089ab	ret
_CMHelperAECreateCommand:
000089ac	pushl	%ebp
000089ad	movl	%esp,%ebp
000089af	subl	$0x28,%esp
000089b2	movl	$__mh_bundle_header,0x14(%esp)
000089ba	movl	0x18(%ebp),%eax
000089bd	movl	%eax,0x10(%esp)
000089c1	movl	0x14(%ebp),%eax
000089c4	movl	%eax,0x0c(%esp)
000089c8	movl	0x10(%ebp),%eax
000089cb	movl	%eax,0x08(%esp)
000089cf	movl	0x0c(%ebp),%eax
000089d2	movl	%eax,0x04(%esp)
000089d6	movl	0x08(%ebp),%eax
000089d9	movl	%eax,(%esp)
000089dc	calll	0x00008862
000089e1	leave
000089e2	ret
_CMHelperAEAddCommandWithModifiers:
000089e3	pushl	%ebp
000089e4	movl	%esp,%ebp
000089e6	subl	$0x48,%esp
000089e9	movl	0x1c(%ebp),%eax
000089ec	movb	%al,0xe4(%ebp)
000089ef	movzbl	0xe4(%ebp),%eax
000089f3	movl	%eax,0x14(%esp)
000089f7	movl	0x18(%ebp),%eax
000089fa	movl	%eax,0x10(%esp)
000089fe	movl	0x14(%ebp),%eax
00008a01	movl	%eax,0x0c(%esp)
00008a05	movl	0x10(%ebp),%eax
00008a08	movl	%eax,0x08(%esp)
00008a0c	movl	0x0c(%ebp),%eax
00008a0f	movl	%eax,0x04(%esp)
00008a13	leal	0xec(%ebp),%eax
00008a16	movl	%eax,(%esp)
00008a19	calll	0x00008862
00008a1e	movl	%eax,0xf4(%ebp)
00008a21	cmpl	$__mh_bundle_header,0xf4(%ebp)
00008a25	je	0x00008a2f
00008a27	movl	0xf4(%ebp),%eax
00008a2a	movl	%eax,0xe0(%ebp)
00008a2d	jmp	0x00008a5e
00008a2f	leal	0xec(%ebp),%eax
00008a32	movl	%eax,0x08(%esp)
00008a36	movl	$__mh_bundle_header,0x04(%esp)
00008a3e	movl	0x08(%ebp),%eax
00008a41	movl	%eax,(%esp)
00008a44	calll	0x00011081	; symbol stub for: _AEPutDesc
00008a49	cwtl
00008a4a	movl	%eax,0xf4(%ebp)
00008a4d	leal	0xec(%ebp),%eax
00008a50	movl	%eax,(%esp)
00008a53	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00008a58	movl	0xf4(%ebp),%eax
00008a5b	movl	%eax,0xe0(%ebp)
00008a5e	movl	0xe0(%ebp),%eax
00008a61	leave
00008a62	ret
_CMHelperAEAddCommand:
00008a63	pushl	%ebp
00008a64	movl	%esp,%ebp
00008a66	subl	$0x28,%esp
00008a69	movl	$__mh_bundle_header,0x14(%esp)
00008a71	movl	0x18(%ebp),%eax
00008a74	movl	%eax,0x10(%esp)
00008a78	movl	0x14(%ebp),%eax
00008a7b	movl	%eax,0x0c(%esp)
00008a7f	movl	0x10(%ebp),%eax
00008a82	movl	%eax,0x08(%esp)
00008a86	movl	0x0c(%ebp),%eax
00008a89	movl	%eax,0x04(%esp)
00008a8d	movl	0x08(%ebp),%eax
00008a90	movl	%eax,(%esp)
00008a93	calll	0x000089e3
00008a98	leave
00008a99	ret
_CMHelperImportAEInternal:
00008a9a	pushl	%ebp
00008a9b	movl	%esp,%ebp
00008a9d	pushl	%ebx
00008a9e	subl	$0x000004a4,%esp
00008aa4	calll	0x00008aa9
00008aa9	popl	%ebx
00008aaa	leal	0xe0(%ebp),%eax
00008aad	movl	%eax,0x04(%esp)
00008ab1	movl	0x10(%ebp),%eax
00008ab4	movl	%eax,(%esp)
00008ab7	calll	0x00011045	; symbol stub for: _AECountItems
00008abc	cwtl
00008abd	movl	%eax,0xe4(%ebp)
00008ac0	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008ac4	je	0x00008ad4
00008ac6	movl	0xe4(%ebp),%eax
00008ac9	movl	%eax,0xfffffb84(%ebp)
00008acf	jmp	0x00008ec2
00008ad4	movl	$0x00000001,0xe8(%ebp)
00008adb	jmp	0x00008ead
00008ae0	leal	0xd8(%ebp),%eax
00008ae3	movl	%eax,0x10(%esp)
00008ae7	leal	0xd4(%ebp),%eax
00008aea	movl	%eax,0x0c(%esp)
00008aee	movl	$0x2a2a2a2a,0x08(%esp)
00008af6	movl	0xe8(%ebp),%eax
00008af9	movl	%eax,0x04(%esp)
00008afd	movl	0x10(%ebp),%eax
00008b00	movl	%eax,(%esp)
00008b03	calll	0x00011068	; symbol stub for: _AEGetNthDesc
00008b08	cwtl
00008b09	movl	%eax,0xe4(%ebp)
00008b0c	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008b10	jne	0x00008eb9
00008b16	leal	0xa4(%ebp),%eax
00008b19	movl	%eax,0x0c(%esp)
00008b1d	movl	$0x6c697374,0x08(%esp)
00008b25	movl	$0x636d7362,0x04(%esp)
00008b2d	leal	0xd8(%ebp),%eax
00008b30	movl	%eax,(%esp)
00008b33	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
00008b38	cwtl
00008b39	movl	%eax,0xe4(%ebp)
00008b3c	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008b40	jne	0x00008c8a
00008b46	leal	0x90(%ebp),%eax
00008b49	movl	%eax,0x04(%esp)
00008b4d	movl	0x08(%ebp),%eax
00008b50	movl	%eax,(%esp)
00008b53	calll	0x000083d5
00008b58	leal	0xa4(%ebp),%eax
00008b5b	movl	%eax,0x08(%esp)
00008b5f	leal	0x90(%ebp),%eax
00008b62	movl	%eax,0x04(%esp)
00008b66	movl	0x08(%ebp),%eax
00008b69	movl	%eax,(%esp)
00008b6c	calll	0x00008a9a
00008b71	movl	%eax,0xe4(%ebp)
00008b74	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008b78	jne	0x00008c6a
00008b7e	movl	0xa0(%ebp),%edx
00008b81	movl	0x9c(%ebp),%ecx
00008b84	movl	0x08(%ebp),%eax
00008b87	movl	0x14(%eax),%eax
00008b8a	movl	%edx,0x08(%esp)
00008b8e	movl	%ecx,0x04(%esp)
00008b92	movl	%eax,(%esp)
00008b95	calll	0x000110f9	; symbol stub for: _CFDictionaryAddValue
00008b9a	leal	0x88(%ebp),%eax
00008b9d	movl	%eax,0x0c(%esp)
00008ba1	movl	$0x00000001,0x08(%esp)
00008ba9	movl	$__mh_bundle_header,0x04(%esp)
00008bb1	movl	$__mh_bundle_header,(%esp)
00008bb8	calll	0x00011054	; symbol stub for: _AECreateList
00008bbd	cwtl
00008bbe	movl	%eax,0xe4(%ebp)
00008bc1	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008bc5	jne	0x00008c37
00008bc7	movl	0x9c(%ebp),%eax
00008bca	movl	%eax,0x08(%esp)
00008bce	movl	$0x706e616d,0x04(%esp)
00008bd6	leal	0x88(%ebp),%eax
00008bd9	movl	%eax,(%esp)
00008bdc	calll	0x00007a24
00008be1	movl	$0x00000080,0xc8(%ebp)
00008be8	movl	$0x00000004,0x10(%esp)
00008bf0	leal	0xc8(%ebp),%eax
00008bf3	movl	%eax,0x0c(%esp)
00008bf7	movl	$0x6c6f6e67,0x08(%esp)
00008bff	movl	$0x636d6174,0x04(%esp)
00008c07	leal	0x88(%ebp),%eax
00008c0a	movl	%eax,(%esp)
00008c0d	calll	0x0001108b	; symbol stub for: _AEPutParamPtr
00008c12	leal	0x88(%ebp),%eax
00008c15	movl	%eax,0x08(%esp)
00008c19	movl	$__mh_bundle_header,0x04(%esp)
00008c21	leal	0xa4(%ebp),%eax
00008c24	movl	%eax,(%esp)
00008c27	calll	0x00011081	; symbol stub for: _AEPutDesc
00008c2c	leal	0x88(%ebp),%eax
00008c2f	movl	%eax,(%esp)
00008c32	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00008c37	leal	0xa4(%ebp),%eax
00008c3a	movl	%eax,0x08(%esp)
00008c3e	movl	$0x636d7362,0x04(%esp)
00008c46	leal	0xd8(%ebp),%eax
00008c49	movl	%eax,(%esp)
00008c4c	calll	0x00011086	; symbol stub for: _AEPutParamDesc
00008c51	leal	0xd8(%ebp),%eax
00008c54	movl	%eax,0x08(%esp)
00008c58	movl	0xe8(%ebp),%eax
00008c5b	movl	%eax,0x04(%esp)
00008c5f	movl	0x10(%ebp),%eax
00008c62	movl	%eax,(%esp)
00008c65	calll	0x00011081	; symbol stub for: _AEPutDesc
00008c6a	leal	0x90(%ebp),%eax
00008c6d	movl	%eax,(%esp)
00008c70	calll	0x000084a3
00008c75	leal	0xa4(%ebp),%eax
00008c78	movl	%eax,(%esp)
00008c7b	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00008c80	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008c84	jne	0x00008eb9
00008c8a	leal	0xd0(%ebp),%eax
00008c8d	movl	%eax,0x18(%esp)
00008c91	movl	$0x00000400,0x14(%esp)
00008c99	leal	0xfffffb88(%ebp),%eax
00008c9f	movl	%eax,0x10(%esp)
00008ca3	movl	$__mh_bundle_header,0x0c(%esp)
00008cab	movl	$0x75747874,0x08(%esp)
00008cb3	movl	$0x434d6963,0x04(%esp)
00008cbb	leal	0xd8(%ebp),%eax
00008cbe	movl	%eax,(%esp)
00008cc1	calll	0x00011072	; symbol stub for: _AEGetParamPtr
00008cc6	cwtl
00008cc7	movl	%eax,0xe4(%ebp)
00008cca	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008cce	je	0x00008cd9
00008cd0	movl	$__mh_bundle_header,0xcc(%ebp)
00008cd7	jmp	0x00008d1b
00008cd9	movl	0xd0(%ebp),%eax
00008cdc	shrl	%eax
00008cde	movl	%eax,0x08(%esp)
00008ce2	leal	0xfffffb88(%ebp),%eax
00008ce8	movl	%eax,0x04(%esp)
00008cec	movl	$__mh_bundle_header,(%esp)
00008cf3	calll	0x00011162	; symbol stub for: _CFStringCreateWithCharacters
00008cf8	movl	%eax,0xf0(%ebp)
00008cfb	movl	0xf0(%ebp),%eax
00008cfe	movl	%eax,0x04(%esp)
00008d02	movl	0x08(%ebp),%eax
00008d05	movl	%eax,(%esp)
00008d08	calll	0x000079cb
00008d0d	movl	%eax,0xcc(%ebp)
00008d10	movl	0xf0(%ebp),%eax
00008d13	movl	%eax,(%esp)
00008d16	calll	0x00011149	; symbol stub for: _CFRelease
00008d1b	movl	$__mh_bundle_header,0x18(%esp)
00008d23	movl	$0x00000002,0x14(%esp)
00008d2b	leal	0xc6(%ebp),%eax
00008d2e	movl	%eax,0x10(%esp)
00008d32	movl	$__mh_bundle_header,0x0c(%esp)
00008d3a	movl	$0x73686f72,0x08(%esp)
00008d42	movl	$0x434d6d64,0x04(%esp)
00008d4a	leal	0xd8(%ebp),%eax
00008d4d	movl	%eax,(%esp)
00008d50	calll	0x00011072	; symbol stub for: _AEGetParamPtr
00008d55	cwtl
00008d56	movl	%eax,0xe4(%ebp)
00008d59	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008d5d	je	0x00008d65
00008d5f	movw	$__mh_bundle_header,0xc6(%ebp)
00008d65	movl	$__mh_bundle_header,0x18(%esp)
00008d6d	movl	$0x00000004,0x14(%esp)
00008d75	leal	0xc8(%ebp),%eax
00008d78	movl	%eax,0x10(%esp)
00008d7c	movl	$__mh_bundle_header,0x0c(%esp)
00008d84	movl	$0x6c6f6e67,0x08(%esp)
00008d8c	movl	$0x636d6174,0x04(%esp)
00008d94	leal	0xd8(%ebp),%eax
00008d97	movl	%eax,(%esp)
00008d9a	calll	0x00011072	; symbol stub for: _AEGetParamPtr
00008d9f	cwtl
00008da0	movl	%eax,0xe4(%ebp)
00008da3	cmpl	$__mh_bundle_header,0xe4(%ebp)
00008da7	je	0x00008db0
00008da9	movl	$__mh_bundle_header,0xc8(%ebp)
00008db0	leal	0x00006683(%ebx),%eax
00008db6	movl	%eax,0xb8(%ebp)
00008db9	leal	0x000066a3(%ebx),%eax
00008dbf	movl	%eax,0xbc(%ebp)
00008dc2	leal	0x00006693(%ebx),%eax
00008dc8	movl	%eax,0xc0(%ebp)
00008dcb	leal	0xcc(%ebp),%eax
00008dce	movl	$0x00000004,0x08(%esp)
00008dd6	movl	%eax,0x04(%esp)
00008dda	movl	$__mh_bundle_header,(%esp)
00008de1	calll	0x000110ef	; symbol stub for: _CFDataCreate
00008de6	movl	%eax,0xac(%ebp)
00008de9	leal	0xc6(%ebp),%eax
00008dec	movl	%eax,0x08(%esp)
00008df0	movl	$0x00000001,0x04(%esp)
00008df8	movl	$__mh_bundle_header,(%esp)
00008dff	calll	0x0001112b	; symbol stub for: _CFNumberCreate
00008e04	movl	%eax,0xb0(%ebp)
00008e07	leal	0xc8(%ebp),%eax
00008e0a	movl	%eax,0x08(%esp)
00008e0e	movl	$0x00000003,0x04(%esp)
00008e16	movl	$__mh_bundle_header,(%esp)
00008e1d	calll	0x0001112b	; symbol stub for: _CFNumberCreate
00008e22	movl	%eax,0xb4(%ebp)
00008e25	leal	0xb8(%ebp),%edx
00008e28	leal	0x0000857f(%ebx),%eax
00008e2e	movl	(%eax),%eax
00008e30	movl	%eax,0x14(%esp)
00008e34	leal	0x0000857b(%ebx),%eax
00008e3a	movl	(%eax),%eax
00008e3c	movl	%eax,0x10(%esp)
00008e40	movl	$0x00000003,0x0c(%esp)
00008e48	leal	0xac(%ebp),%eax
00008e4b	movl	%eax,0x08(%esp)
00008e4f	movl	%edx,0x04(%esp)
00008e53	movl	$__mh_bundle_header,(%esp)
00008e5a	calll	0x00011103	; symbol stub for: _CFDictionaryCreate
00008e5f	movl	%eax,0xf4(%ebp)
00008e62	movl	$__mh_bundle_header,0xec(%ebp)
00008e69	jmp	0x00008e7d
00008e6b	movl	0xec(%ebp),%eax
00008e6e	movl	0xac(%ebp,%eax,4),%eax
00008e72	movl	%eax,(%esp)
00008e75	calll	0x00011149	; symbol stub for: _CFRelease
00008e7a	incl	0xec(%ebp)
00008e7d	cmpl	$0x02,0xec(%ebp)
00008e81	jle	0x00008e6b
00008e83	movl	0x0c(%ebp),%eax
00008e86	movl	0x10(%eax),%edx
00008e89	movl	0xf4(%ebp),%eax
00008e8c	movl	%eax,0x04(%esp)
00008e90	movl	%edx,(%esp)
00008e93	calll	0x000110b3	; symbol stub for: _CFArrayAppendValue
00008e98	leal	0xd8(%ebp),%eax
00008e9b	movl	%eax,(%esp)
00008e9e	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00008ea3	movl	$__mh_bundle_header,0xe4(%ebp)
00008eaa	incl	0xe8(%ebp)
00008ead	movl	0xe0(%ebp),%eax
00008eb0	cmpl	%eax,0xe8(%ebp)
00008eb3	jle	0x00008ae0
00008eb9	movl	0xe4(%ebp),%eax
00008ebc	movl	%eax,0xfffffb84(%ebp)
00008ec2	movl	0xfffffb84(%ebp),%eax
00008ec8	addl	$0x000004a4,%esp
00008ece	popl	%ebx
00008ecf	leave
00008ed0	ret
_CMHelperImportAE:
00008ed1	pushl	%ebp
00008ed2	movl	%esp,%ebp
00008ed4	subl	$0x38,%esp
00008ed7	leal	0xe0(%ebp),%eax
00008eda	movl	%eax,0x04(%esp)
00008ede	movl	0x08(%ebp),%eax
00008ee1	movl	%eax,(%esp)
00008ee4	calll	0x000083d5
00008ee9	movl	0x0c(%ebp),%eax
00008eec	movl	%eax,0x08(%esp)
00008ef0	leal	0xe0(%ebp),%eax
00008ef3	movl	%eax,0x04(%esp)
00008ef7	movl	0x08(%ebp),%eax
00008efa	movl	%eax,(%esp)
00008efd	calll	0x00008a9a
00008f02	movl	%eax,0xf4(%ebp)
00008f05	leal	0xe0(%ebp),%eax
00008f08	movl	%eax,(%esp)
00008f0b	calll	0x000084a3
00008f10	movl	0xf4(%ebp),%eax
00008f13	leave
00008f14	ret
_CMHelperDumpAEInternal:
00008f15	pushl	%ebp
00008f16	movl	%esp,%ebp
00008f18	pushl	%ebx
00008f19	subl	$0x00000454,%esp
00008f1f	calll	0x00008f24
00008f24	popl	%ebx
00008f25	leal	0xe8(%ebp),%eax
00008f28	movl	%eax,0x04(%esp)
00008f2c	movl	0x08(%ebp),%eax
00008f2f	movl	%eax,(%esp)
00008f32	calll	0x00011045	; symbol stub for: _AECountItems
00008f37	cwtl
00008f38	movl	%eax,0xec(%ebp)
00008f3b	cmpl	$__mh_bundle_header,0xec(%ebp)
00008f3f	je	0x00008f4f
00008f41	movl	0xec(%ebp),%eax
00008f44	movl	%eax,0xfffffbd4(%ebp)
00008f4a	jmp	0x00009103
00008f4f	movl	$0x00000001,0xf0(%ebp)
00008f56	jmp	0x000090ee
00008f5b	leal	0xe0(%ebp),%eax
00008f5e	movl	%eax,0x10(%esp)
00008f62	leal	0xdc(%ebp),%eax
00008f65	movl	%eax,0x0c(%esp)
00008f69	movl	$0x2a2a2a2a,0x08(%esp)
00008f71	movl	0xf0(%ebp),%eax
00008f74	movl	%eax,0x04(%esp)
00008f78	movl	0x08(%ebp),%eax
00008f7b	movl	%eax,(%esp)
00008f7e	calll	0x00011068	; symbol stub for: _AEGetNthDesc
00008f83	cwtl
00008f84	movl	%eax,0xec(%ebp)
00008f87	cmpl	$__mh_bundle_header,0xec(%ebp)
00008f8b	jne	0x000090fa
00008f91	leal	0xcc(%ebp),%eax
00008f94	movl	%eax,0x18(%esp)
00008f98	movl	$0x000003e6,0x14(%esp)
00008fa0	leal	0xfffffbe4(%ebp),%eax
00008fa6	movl	%eax,0x10(%esp)
00008faa	movl	$__mh_bundle_header,0x0c(%esp)
00008fb2	movl	$0x54455854,0x08(%esp)
00008fba	movl	$0x706e616d,0x04(%esp)
00008fc2	leal	0xe0(%ebp),%eax
00008fc5	movl	%eax,(%esp)
00008fc8	calll	0x00011072	; symbol stub for: _AEGetParamPtr
00008fcd	cwtl
00008fce	movl	%eax,0xec(%ebp)
00008fd1	cmpl	$__mh_bundle_header,0xec(%ebp)
00008fd5	jne	0x0000901c
00008fd7	movl	0xcc(%ebp),%eax
00008fda	movb	$__mh_bundle_header,0xfffffbe4(%ebp,%eax)
00008fe2	movl	$__mh_bundle_header,0xf4(%ebp)
00008fe9	jmp	0x00008ffc
00008feb	leal	0x0000551e(%ebx),%eax
00008ff1	movl	%eax,(%esp)
00008ff4	calll	0x00011491	; symbol stub for: _printf
00008ff9	incl	0xf4(%ebp)
00008ffc	movl	0xf4(%ebp),%eax
00008fff	cmpl	0x0c(%ebp),%eax
00009002	jl	0x00008feb
00009004	leal	0xfffffbe4(%ebp),%eax
0000900a	movl	%eax,0x04(%esp)
0000900e	leal	0x00005521(%ebx),%eax
00009014	movl	%eax,(%esp)
00009017	calll	0x00011491	; symbol stub for: _printf
0000901c	leal	0xd0(%ebp),%eax
0000901f	movl	%eax,0x0c(%esp)
00009023	movl	$0x6c697374,0x08(%esp)
0000902b	movl	$0x636d7362,0x04(%esp)
00009033	leal	0xe0(%ebp),%eax
00009036	movl	%eax,(%esp)
00009039	calll	0x0001106d	; symbol stub for: _AEGetParamDesc
0000903e	cwtl
0000903f	movl	%eax,0xec(%ebp)
00009042	cmpl	$__mh_bundle_header,0xec(%ebp)
00009046	jne	0x00009074
00009048	movl	$0x0000000a,(%esp)
0000904f	calll	0x000114aa	; symbol stub for: _putchar
00009054	movl	0x0c(%ebp),%eax
00009057	incl	%eax
00009058	movl	%eax,0x04(%esp)
0000905c	leal	0xd0(%ebp),%eax
0000905f	movl	%eax,(%esp)
00009062	calll	0x00008f15
00009067	leal	0xd0(%ebp),%eax
0000906a	movl	%eax,(%esp)
0000906d	calll	0x00011059	; symbol stub for: _AEDisposeDesc
00009072	jmp	0x000090cd
00009074	movl	$__mh_bundle_header,0x18(%esp)
0000907c	movl	$0x00000004,0x14(%esp)
00009084	leal	0xd8(%ebp),%eax
00009087	movl	%eax,0x10(%esp)
0000908b	movl	$__mh_bundle_header,0x0c(%esp)
00009093	movl	$0x6c6f6e67,0x08(%esp)
0000909b	movl	$0x636d6364,0x04(%esp)
000090a3	leal	0xe0(%ebp),%eax
000090a6	movl	%eax,(%esp)
000090a9	calll	0x00011072	; symbol stub for: _AEGetParamPtr
000090ae	cwtl
000090af	movl	%eax,0xec(%ebp)
000090b2	cmpl	$__mh_bundle_header,0xec(%ebp)
000090b6	jne	0x000090cd
000090b8	movl	0xd8(%ebp),%eax
000090bb	movl	%eax,0x04(%esp)
000090bf	leal	0x00005526(%ebx),%eax
000090c5	movl	%eax,(%esp)
000090c8	calll	0x00011491	; symbol stub for: _printf
000090cd	movl	$0x0000000a,(%esp)
000090d4	calll	0x000114aa	; symbol stub for: _putchar
000090d9	leal	0xe0(%ebp),%eax
000090dc	movl	%eax,(%esp)
000090df	calll	0x00011059	; symbol stub for: _AEDisposeDesc
000090e4	movl	$__mh_bundle_header,0xec(%ebp)
000090eb	incl	0xf0(%ebp)
000090ee	movl	0xe8(%ebp),%eax
000090f1	cmpl	%eax,0xf0(%ebp)
000090f4	jle	0x00008f5b
000090fa	movl	0xec(%ebp),%eax
000090fd	movl	%eax,0xfffffbd4(%ebp)
00009103	movl	0xfffffbd4(%ebp),%eax
00009109	addl	$0x00000454,%esp
0000910f	popl	%ebx
00009110	leave
00009111	ret
_CMHelperDumpAE:
00009112	pushl	%ebp
00009113	movl	%esp,%ebp
00009115	subl	$0x18,%esp
00009118	movl	$__mh_bundle_header,0x04(%esp)
00009120	movl	0x08(%ebp),%eax
00009123	movl	%eax,(%esp)
00009126	calll	0x00008f15
0000912b	leave
0000912c	ret
0000912d	nop
0000912e	nop
0000912f	nop
_mach_override:
00009130	pushl	%ebp
00009131	movl	%esp,%ebp
00009133	pushl	%ebx
00009134	subl	$0x24,%esp
00009137	calll	0x0000913c
0000913c	popl	%ebx
0000913d	cmpl	$__mh_bundle_header,0x08(%ebp)
00009141	sete	%al
00009144	movzbl	%al,%eax
00009147	testl	%eax,%eax
00009149	je	0x00009175
0000914b	leal	0x00005314(%ebx),%eax
00009151	movl	%eax,0x0c(%esp)
00009155	movl	$0x00000088,0x08(%esp)
0000915d	leal	0x00005330(%ebx),%eax
00009163	movl	%eax,0x04(%esp)
00009167	leal	0x0000536c(%ebx),%eax
0000916d	movl	%eax,(%esp)
00009170	calll	___eprintf
00009175	movl	0x08(%ebp),%eax
00009178	movzbl	(%eax),%eax
0000917b	testb	%al,%al
0000917d	sete	%al
00009180	movzbl	%al,%eax
00009183	testl	%eax,%eax
00009185	je	0x000091b1
00009187	leal	0x0000538c(%ebx),%eax
0000918d	movl	%eax,0x0c(%esp)
00009191	movl	$0x00000089,0x08(%esp)
00009199	leal	0x00005330(%ebx),%eax
0000919f	movl	%eax,0x04(%esp)
000091a3	leal	0x0000536c(%ebx),%eax
000091a9	movl	%eax,(%esp)
000091ac	calll	___eprintf
000091b1	cmpl	$__mh_bundle_header,0x10(%ebp)
000091b5	sete	%al
000091b8	movzbl	%al,%eax
000091bb	testl	%eax,%eax
000091bd	je	0x000091e9
000091bf	leal	0x000053b1(%ebx),%eax
000091c5	movl	%eax,0x0c(%esp)
000091c9	movl	$0x0000008a,0x08(%esp)
000091d1	leal	0x00005330(%ebx),%eax
000091d7	movl	%eax,0x04(%esp)
000091db	leal	0x0000536c(%ebx),%eax
000091e1	movl	%eax,(%esp)
000091e4	calll	___eprintf
000091e9	cmpl	$__mh_bundle_header,0x0c(%ebp)
000091ed	je	0x00009212
000091ef	leal	0xf4(%ebp),%eax
000091f2	movl	$__mh_bundle_header,0x0c(%esp)
000091fa	movl	%eax,0x08(%esp)
000091fe	movl	0x0c(%ebp),%eax
00009201	movl	%eax,0x04(%esp)
00009205	movl	0x08(%ebp),%eax
00009208	movl	%eax,(%esp)
0000920b	calll	0x000113ab	; symbol stub for: __dyld_lookup_and_bind_with_hint
00009210	jmp	0x0000922c
00009212	leal	0xf4(%ebp),%eax
00009215	movl	$__mh_bundle_header,0x08(%esp)
0000921d	movl	%eax,0x04(%esp)
00009221	movl	0x08(%ebp),%eax
00009224	movl	%eax,(%esp)
00009227	calll	0x000113a6	; symbol stub for: __dyld_lookup_and_bind
0000922c	movl	0xf4(%ebp),%edx
0000922f	movl	0x14(%ebp),%eax
00009232	movl	%eax,0x08(%esp)
00009236	movl	0x10(%ebp),%eax
00009239	movl	%eax,0x04(%esp)
0000923d	movl	%edx,(%esp)
00009240	calll	_mach_override_ptr
00009245	addl	$0x24,%esp
00009248	popl	%ebx
00009249	leave
0000924a	ret
_mach_override_ptr:
0000924b	pushl	%ebp
0000924c	movl	%esp,%ebp
0000924e	pushl	%edi
0000924f	pushl	%esi
00009250	pushl	%ebx
00009251	subl	$0x7c,%esp
00009254	calll	0x00009259
00009259	popl	%ebx
0000925a	cmpl	$__mh_bundle_header,0x08(%ebp)
0000925e	sete	%al
00009261	movzbl	%al,%eax
00009264	testl	%eax,%eax
00009266	je	0x00009292
00009268	leal	0x000052ac(%ebx),%eax
0000926e	movl	%eax,0x0c(%esp)
00009272	movl	$0x000000a4,0x08(%esp)
0000927a	leal	0x00005213(%ebx),%eax
00009280	movl	%eax,0x04(%esp)
00009284	leal	0x0000524f(%ebx),%eax
0000928a	movl	%eax,(%esp)
0000928d	calll	___eprintf
00009292	cmpl	$__mh_bundle_header,0x0c(%ebp)
00009296	sete	%al
00009299	movzbl	%al,%eax
0000929c	testl	%eax,%eax
0000929e	je	0x000092ca
000092a0	leal	0x00005294(%ebx),%eax
000092a6	movl	%eax,0x0c(%esp)
000092aa	movl	$0x000000a5,0x08(%esp)
000092b2	leal	0x00005213(%ebx),%eax
000092b8	movl	%eax,0x04(%esp)
000092bc	leal	0x0000524f(%ebx),%eax
000092c2	movl	%eax,(%esp)
000092c5	calll	___eprintf
000092ca	movl	0x08(%ebp),%eax
000092cd	movl	%eax,0xd8(%ebp)
000092d0	movl	$__mh_bundle_header,0xdc(%ebp)
000092d7	movl	$__mh_bundle_header,0xd4(%ebp)
000092de	movl	$__mh_bundle_header,0xb8(%ebp)
000092e5	movl	$__mh_bundle_header,0xbc(%ebp)
000092ec	movl	0xd8(%ebp),%edx
000092ef	leal	0xc4(%ebp),%eax
000092f2	movl	%eax,0x0c(%esp)
000092f6	leal	0xd4(%ebp),%eax
000092f9	movl	%eax,0x08(%esp)
000092fd	leal	0xb8(%ebp),%eax
00009300	movl	%eax,0x04(%esp)
00009304	movl	%edx,(%esp)
00009307	calll	_eatKnownInstructions
0000930c	movb	%al,0xe3(%ebp)
0000930f	movl	0xd4(%ebp),%eax
00009312	cmpl	$0x10,%eax
00009315	jle	0x0000931b
00009317	movb	$__mh_bundle_header,0xe3(%ebp)
0000931b	cmpb	$__mh_bundle_header,0xe3(%ebp)
0000931f	jne	0x00009328
00009321	movl	$0xf8000001,0xdc(%ebp)
00009328	cmpl	$__mh_bundle_header,0xdc(%ebp)
0000932c	jne	0x000093a0
0000932e	movl	0xd8(%ebp),%eax
00009331	movl	%eax,%edx
00009333	leal	0x00007ddf(%ebx),%eax
00009339	movl	(%eax),%eax
0000933b	movl	(%eax),%eax
0000933d	movl	$0x00000017,0x10(%esp)
00009345	movl	$__mh_bundle_header,0x0c(%esp)
0000934d	movl	$0x00000004,0x08(%esp)
00009355	movl	%edx,0x04(%esp)
00009359	movl	%eax,(%esp)
0000935c	calll	0x0001151d	; symbol stub for: _vm_protect
00009361	movl	%eax,0xdc(%ebp)
00009364	cmpl	$__mh_bundle_header,0xdc(%ebp)
00009368	je	0x000093a0
0000936a	movl	0xd8(%ebp),%eax
0000936d	movl	%eax,%edx
0000936f	leal	0x00007ddf(%ebx),%eax
00009375	movl	(%eax),%eax
00009377	movl	(%eax),%eax
00009379	movl	$0x00000013,0x10(%esp)
00009381	movl	$__mh_bundle_header,0x0c(%esp)
00009389	movl	$0x00000004,0x08(%esp)
00009391	movl	%edx,0x04(%esp)
00009395	movl	%eax,(%esp)
00009398	calll	0x0001151d	; symbol stub for: _vm_protect
0000939d	movl	%eax,0xdc(%ebp)
000093a0	movl	$__mh_bundle_header,0xb4(%ebp)
000093a7	cmpl	$__mh_bundle_header,0xdc(%ebp)
000093ab	jne	0x000093c3
000093ad	movl	$0x00000001,0x04(%esp)
000093b5	leal	0xb4(%ebp),%eax
000093b8	movl	%eax,(%esp)
000093bb	calll	_allocateBranchIsland
000093c0	movl	%eax,0xdc(%ebp)
000093c3	cmpl	$__mh_bundle_header,0xdc(%ebp)
000093c7	jne	0x000093e6
000093c9	movl	0xb4(%ebp),%eax
000093cc	movl	$__mh_bundle_header,0x08(%esp)
000093d4	movl	0x0c(%ebp),%edx
000093d7	movl	%edx,0x04(%esp)
000093db	movl	%eax,(%esp)
000093de	calll	_setBranchIslandTarget_i386
000093e3	movl	%eax,0xdc(%ebp)
000093e6	cmpl	$__mh_bundle_header,0xdc(%ebp)
000093ea	jne	0x0000947e
000093f0	movl	0xb4(%ebp),%eax
000093f3	movl	%eax,%edx
000093f5	movl	0xd8(%ebp),%eax
000093f8	movl	%edx,%ecx
000093fa	subl	%eax,%ecx
000093fc	movl	%ecx,%eax
000093fe	subl	$0x05,%eax
00009401	movl	%eax,0xe4(%ebp)
00009404	movl	0xe4(%ebp),%eax
00009407	movl	%eax,(%esp)
0000940a	calll	__OSSwapInt32
0000940f	movl	%eax,0xe4(%ebp)
00009412	movl	0xb8(%ebp),%esi
00009415	movl	0xbc(%ebp),%edi
00009418	movl	%esi,%eax
0000941a	orb	$__mh_bundle_header,%ah
0000941d	movl	%edi,%edx
0000941f	orl	$0xe9000000,%edx
00009425	movl	%eax,0xb8(%ebp)
00009428	movl	%edx,0xbc(%ebp)
0000942b	movl	0xe4(%ebp),%eax
0000942e	movl	%eax,%esi
00009430	movl	%eax,%edi
00009432	sarl	$0x1f,%edi
00009435	movl	%esi,%eax
00009437	andb	$0xff,%ah
0000943a	movl	%edi,%edx
0000943c	andl	$__mh_bundle_header,%edx
0000943f	movl	%eax,%esi
00009441	movl	%edx,%edi
00009443	shldl	$0x18,%esi,%edi
00009447	shll	$0x18,%esi
0000944a	movl	%esi,0xa0(%ebp)
0000944d	movl	%edi,0xa4(%ebp)
00009450	movl	0xb8(%ebp),%esi
00009453	movl	0xbc(%ebp),%edi
00009456	movl	0xa0(%ebp),%eax
00009459	orl	%esi,%eax
0000945b	movl	0xa4(%ebp),%edx
0000945e	orl	%edi,%edx
00009460	movl	%eax,0xb8(%ebp)
00009463	movl	%edx,0xbc(%ebp)
00009466	movl	0xb8(%ebp),%eax
00009469	movl	0xbc(%ebp),%edx
0000946c	movl	%eax,(%esp)
0000946f	movl	%edx,0x04(%esp)
00009473	calll	__OSSwapInt64
00009478	movl	%eax,0xb8(%ebp)
0000947b	movl	%edx,0xbc(%ebp)
0000947e	movl	$__mh_bundle_header,0xb0(%ebp)
00009485	cmpl	$__mh_bundle_header,0xdc(%ebp)
00009489	jne	0x000094b5
0000948b	cmpl	$__mh_bundle_header,0x10(%ebp)
0000948f	je	0x000094b5
00009491	movl	$__mh_bundle_header,0x04(%esp)
00009499	leal	0xb0(%ebp),%eax
0000949c	movl	%eax,(%esp)
0000949f	calll	_allocateBranchIsland
000094a4	movl	%eax,0xdc(%ebp)
000094a7	cmpl	$__mh_bundle_header,0xdc(%ebp)
000094ab	jne	0x000094b5
000094ad	movl	0xb0(%ebp),%edx
000094b0	movl	0x10(%ebp),%eax
000094b3	movl	%edx,(%eax)
000094b5	cmpl	$__mh_bundle_header,0xdc(%ebp)
000094b9	jne	0x00009502
000094bb	movl	0xb0(%ebp),%eax
000094be	testl	%eax,%eax
000094c0	je	0x000094e3
000094c2	movl	0xd8(%ebp),%edx
000094c5	movl	0xd4(%ebp),%eax
000094c8	addl	%eax,%edx
000094ca	movl	0xb0(%ebp),%ecx
000094cd	leal	0xc4(%ebp),%eax
000094d0	movl	%eax,0x08(%esp)
000094d4	movl	%edx,0x04(%esp)
000094d8	movl	%ecx,(%esp)
000094db	calll	_setBranchIslandTarget_i386
000094e0	movl	%eax,0xdc(%ebp)
000094e3	cmpl	$__mh_bundle_header,0xdc(%ebp)
000094e7	jne	0x00009502
000094e9	movl	0xb8(%ebp),%eax
000094ec	movl	0xbc(%ebp),%edx
000094ef	movl	0xd8(%ebp),%ecx
000094f2	movl	%eax,0x04(%esp)
000094f6	movl	%edx,0x08(%esp)
000094fa	movl	%ecx,(%esp)
000094fd	calll	_atomic_mov64
00009502	cmpl	$__mh_bundle_header,0xdc(%ebp)
00009506	je	0x0000952c
00009508	movl	0xb0(%ebp),%eax
0000950b	testl	%eax,%eax
0000950d	je	0x0000951a
0000950f	movl	0xb0(%ebp),%eax
00009512	movl	%eax,(%esp)
00009515	calll	_freeBranchIsland
0000951a	movl	0xb4(%ebp),%eax
0000951d	testl	%eax,%eax
0000951f	je	0x0000952c
00009521	movl	0xb4(%ebp),%eax
00009524	movl	%eax,(%esp)
00009527	calll	_freeBranchIsland
0000952c	movl	0xdc(%ebp),%eax
0000952f	addl	$0x7c,%esp
00009532	popl	%ebx
00009533	popl	%esi
00009534	popl	%edi
00009535	leave
00009536	ret
__OSSwapInt32:
00009537	pushl	%ebp
00009538	movl	%esp,%ebp
0000953a	subl	$0x08,%esp
0000953d	movl	0x08(%ebp),%eax
00009540	bswap	%eax
00009542	movl	%eax,0x08(%ebp)
00009545	movl	0x08(%ebp),%eax
00009548	leave
00009549	ret
__OSSwapInt64:
0000954a	pushl	%ebp
0000954b	movl	%esp,%ebp
0000954d	subl	$0x18,%esp
00009550	movl	0x08(%ebp),%eax
00009553	movl	%eax,0xf0(%ebp)
00009556	movl	0x0c(%ebp),%eax
00009559	movl	%eax,0xf4(%ebp)
0000955c	movl	0xf0(%ebp),%eax
0000955f	movl	0xf4(%ebp),%edx
00009562	bswap	%eax
00009564	bswap	%edx
00009566	xchgl	%edx,%eax
00009567	movl	%eax,0xf0(%ebp)
0000956a	movl	%edx,0xf4(%ebp)
0000956d	movl	0xf0(%ebp),%eax
00009570	movl	0xf4(%ebp),%edx
00009573	leave
00009574	ret
_allocateBranchIsland:
00009575	pushl	%ebp
00009576	movl	%esp,%ebp
00009578	pushl	%ebx
00009579	subl	$0x34,%esp
0000957c	calll	0x00009581
00009581	popl	%ebx
00009582	cmpl	$__mh_bundle_header,0x08(%ebp)
00009586	sete	%al
00009589	movzbl	%al,%eax
0000958c	testl	%eax,%eax
0000958e	je	0x000095ba
00009590	leal	0x00004f9c(%ebx),%eax
00009596	movl	%eax,0x0c(%esp)
0000959a	movl	$0x00000142,0x08(%esp)
000095a2	leal	0x00004eeb(%ebx),%eax
000095a8	movl	%eax,0x04(%esp)
000095ac	leal	0x00004f27(%ebx),%eax
000095b2	movl	%eax,(%esp)
000095b5	calll	___eprintf
000095ba	movl	$__mh_bundle_header,0xe0(%ebp)
000095c1	cmpl	$__mh_bundle_header,0x0c(%ebp)
000095c5	je	0x000096da
000095cb	calll	0x0001144b	; symbol stub for: _mach_host_self
000095d0	leal	0xdc(%ebp),%edx
000095d3	movl	%edx,0x04(%esp)
000095d7	movl	%eax,(%esp)
000095da	calll	0x00011432	; symbol stub for: _host_page_size
000095df	movl	%eax,0xe0(%ebp)
000095e2	cmpl	$__mh_bundle_header,0xe0(%ebp)
000095e6	jne	0x00009700
000095ec	movl	0xdc(%ebp),%eax
000095ef	cmpl	$0x1b,%eax
000095f2	setbe	%al
000095f5	movzbl	%al,%eax
000095f8	testl	%eax,%eax
000095fa	je	0x00009626
000095fc	leal	0x00004fa3(%ebx),%eax
00009602	movl	%eax,0x0c(%esp)
00009606	movl	$0x0000014a,0x08(%esp)
0000960e	leal	0x00004eeb(%ebx),%eax
00009614	movl	%eax,0x04(%esp)
00009618	leal	0x00004f27(%ebx),%eax
0000961e	movl	%eax,(%esp)
00009621	calll	___eprintf
00009626	movl	$0xfeffffff,0xe4(%ebp)
0000962d	movl	0xdc(%ebp),%eax
00009630	subl	$0x02000000,%eax
00009635	movl	%eax,0xe8(%ebp)
00009638	movl	0xe4(%ebp),%eax
0000963b	movl	%eax,0xd8(%ebp)
0000963e	movl	$__mh_bundle_header,0xec(%ebp)
00009645	leal	0x00007ab7(%ebx),%eax
0000964b	movl	(%eax),%eax
0000964d	movl	(%eax),%eax
0000964f	movl	%eax,0xf0(%ebp)
00009652	jmp	0x0000969f
00009654	movl	0xdc(%ebp),%eax
00009657	movl	$__mh_bundle_header,0x0c(%esp)
0000965f	movl	%eax,0x08(%esp)
00009663	leal	0xd8(%ebp),%eax
00009666	movl	%eax,0x04(%esp)
0000966a	movl	0xf0(%ebp),%eax
0000966d	movl	%eax,(%esp)
00009670	calll	0x00011513	; symbol stub for: _vm_allocate
00009675	movl	%eax,0xe0(%ebp)
00009678	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000967c	jne	0x00009687
0000967e	movl	$0x00000001,0xec(%ebp)
00009685	jmp	0x0000969f
00009687	cmpl	$0x03,0xe0(%ebp)
0000968b	jne	0x0000969f
0000968d	movl	0xd8(%ebp),%eax
00009690	movl	0xdc(%ebp),%edx
00009693	addl	%edx,%eax
00009695	movl	%eax,0xd8(%ebp)
00009698	movl	$__mh_bundle_header,0xe0(%ebp)
0000969f	cmpl	$__mh_bundle_header,0xe0(%ebp)
000096a3	jne	0x000096b3
000096a5	cmpl	$__mh_bundle_header,0xec(%ebp)
000096a9	jne	0x000096b3
000096ab	movl	0xd8(%ebp),%eax
000096ae	cmpl	0xe8(%ebp),%eax
000096b1	jne	0x00009654
000096b3	cmpl	$__mh_bundle_header,0xec(%ebp)
000096b7	je	0x000096c5
000096b9	movl	0xd8(%ebp),%eax
000096bc	movl	%eax,%edx
000096be	movl	0x08(%ebp),%eax
000096c1	movl	%edx,(%eax)
000096c3	jmp	0x00009700
000096c5	cmpl	$__mh_bundle_header,0xec(%ebp)
000096c9	jne	0x00009700
000096cb	cmpl	$__mh_bundle_header,0xe0(%ebp)
000096cf	jne	0x00009700
000096d1	movl	$0x00000003,0xe0(%ebp)
000096d8	jmp	0x00009700
000096da	movl	$0x0000001c,(%esp)
000096e1	calll	0x00011450	; symbol stub for: _malloc
000096e6	movl	%eax,0xf4(%ebp)
000096e9	cmpl	$__mh_bundle_header,0xf4(%ebp)
000096ed	je	0x000096f9
000096ef	movl	0xf4(%ebp),%edx
000096f2	movl	0x08(%ebp),%eax
000096f5	movl	%edx,(%eax)
000096f7	jmp	0x00009700
000096f9	movl	$0x00000003,0xe0(%ebp)
00009700	cmpl	$__mh_bundle_header,0xe0(%ebp)
00009704	jne	0x00009711
00009706	movl	0x08(%ebp),%eax
00009709	movl	(%eax),%edx
0000970b	movl	0x0c(%ebp),%eax
0000970e	movl	%eax,0x18(%edx)
00009711	movl	0xe0(%ebp),%eax
00009714	addl	$0x34,%esp
00009717	popl	%ebx
00009718	leave
00009719	ret
_freeBranchIsland:
0000971a	pushl	%ebp
0000971b	movl	%esp,%ebp
0000971d	pushl	%ebx
0000971e	subl	$0x24,%esp
00009721	calll	0x00009726
00009726	popl	%ebx
00009727	cmpl	$__mh_bundle_header,0x08(%ebp)
0000972b	sete	%al
0000972e	movzbl	%al,%eax
00009731	testl	%eax,%eax
00009733	je	0x0000975f
00009735	leal	0x00004df7(%ebx),%eax
0000973b	movl	%eax,0x0c(%esp)
0000973f	movl	$0x00000178,0x08(%esp)
00009747	leal	0x00004d46(%ebx),%eax
0000974d	movl	%eax,0x04(%esp)
00009751	leal	0x00004d82(%ebx),%eax
00009757	movl	%eax,(%esp)
0000975a	calll	___eprintf
0000975f	movl	0x08(%ebp),%eax
00009762	movl	(%eax),%edx
00009764	leal	0x00005e1a(%ebx),%eax
0000976a	movzbl	(%eax),%eax
0000976d	movsbl	%al,%eax
00009770	cmpl	%eax,%edx
00009772	setne	%al
00009775	movzbl	%al,%eax
00009778	testl	%eax,%eax
0000977a	je	0x000097a6
0000977c	leal	0x00004e22(%ebx),%eax
00009782	movl	%eax,0x0c(%esp)
00009786	movl	$0x00000179,0x08(%esp)
0000978e	leal	0x00004d46(%ebx),%eax
00009794	movl	%eax,0x04(%esp)
00009798	leal	0x00004d82(%ebx),%eax
0000979e	movl	%eax,(%esp)
000097a1	calll	___eprintf
000097a6	movl	0x08(%ebp),%eax
000097a9	movl	0x18(%eax),%eax
000097ac	testl	%eax,%eax
000097ae	sete	%al
000097b1	movzbl	%al,%eax
000097b4	testl	%eax,%eax
000097b6	je	0x000097e2
000097b8	leal	0x00004e5b(%ebx),%eax
000097be	movl	%eax,0x0c(%esp)
000097c2	movl	$0x0000017a,0x08(%esp)
000097ca	leal	0x00004d46(%ebx),%eax
000097d0	movl	%eax,0x04(%esp)
000097d4	leal	0x00004d82(%ebx),%eax
000097da	movl	%eax,(%esp)
000097dd	calll	___eprintf
000097e2	movl	$__mh_bundle_header,0xf4(%ebp)
000097e9	movl	0x08(%ebp),%eax
000097ec	movl	0x18(%eax),%eax
000097ef	testl	%eax,%eax
000097f1	je	0x00009871
000097f3	calll	0x0001144b	; symbol stub for: _mach_host_self
000097f8	leal	0xf0(%ebp),%edx
000097fb	movl	%edx,0x04(%esp)
000097ff	movl	%eax,(%esp)
00009802	calll	0x00011432	; symbol stub for: _host_page_size
00009807	movl	%eax,0xf4(%ebp)
0000980a	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000980e	jne	0x0000987c
00009810	movl	0xf0(%ebp),%eax
00009813	cmpl	$0x1b,%eax
00009816	setbe	%al
00009819	movzbl	%al,%eax
0000981c	testl	%eax,%eax
0000981e	je	0x0000984a
00009820	leal	0x00004dfe(%ebx),%eax
00009826	movl	%eax,0x0c(%esp)
0000982a	movl	$0x00000182,0x08(%esp)
00009832	leal	0x00004d46(%ebx),%eax
00009838	movl	%eax,0x04(%esp)
0000983c	leal	0x00004d82(%ebx),%eax
00009842	movl	%eax,(%esp)
00009845	calll	___eprintf
0000984a	movl	0xf0(%ebp),%ecx
0000984d	movl	0x08(%ebp),%eax
00009850	movl	%eax,%edx
00009852	leal	0x00007912(%ebx),%eax
00009858	movl	(%eax),%eax
0000985a	movl	(%eax),%eax
0000985c	movl	%ecx,0x08(%esp)
00009860	movl	%edx,0x04(%esp)
00009864	movl	%eax,(%esp)
00009867	calll	0x00011518	; symbol stub for: _vm_deallocate
0000986c	movl	%eax,0xf4(%ebp)
0000986f	jmp	0x0000987c
00009871	movl	0x08(%ebp),%eax
00009874	movl	%eax,(%esp)
00009877	calll	0x0001140f	; symbol stub for: _free
0000987c	movl	0xf4(%ebp),%eax
0000987f	addl	$0x24,%esp
00009882	popl	%ebx
00009883	leave
00009884	ret
_setBranchIslandTarget_i386:
00009885	pushl	%ebp
00009886	movl	%esp,%ebp
00009888	pushl	%ebx
00009889	subl	$0x24,%esp
0000988c	calll	0x00009891
00009891	popl	%ebx
00009892	movl	0x08(%ebp),%eax
00009895	movl	$0x00000015,0x08(%esp)
0000989d	movl	%eax,0x04(%esp)
000098a1	leal	_getPathStringFromFSRef(%ebx),%eax
000098a7	movl	%eax,(%esp)
000098aa	calll	0x000113ba	; symbol stub for: _bcopy
000098af	cmpl	$__mh_bundle_header,0x10(%ebp)
000098b3	je	0x000098cf
000098b5	movl	0x08(%ebp),%eax
000098b8	movl	$0x00000010,0x08(%esp)
000098c0	movl	%eax,0x04(%esp)
000098c4	movl	0x10(%ebp),%eax
000098c7	movl	%eax,(%esp)
000098ca	calll	0x000113ba	; symbol stub for: _bcopy
000098cf	movl	0x0c(%ebp),%edx
000098d2	movl	0x08(%ebp),%eax
000098d5	addl	$0x15,%eax
000098d8	movl	%edx,%ecx
000098da	subl	%eax,%ecx
000098dc	movl	%ecx,%eax
000098de	movl	%eax,0xf4(%ebp)
000098e1	movl	0x08(%ebp),%eax
000098e4	addl	$0x11,%eax
000098e7	movl	%eax,%edx
000098e9	movl	0xf4(%ebp),%eax
000098ec	movl	%eax,(%edx)
000098ee	movl	0x08(%ebp),%eax
000098f1	movl	$0x00000002,0x08(%esp)
000098f9	movl	$0x00000015,0x04(%esp)
00009901	movl	%eax,(%esp)
00009904	calll	0x00011482	; symbol stub for: _msync
00009909	movl	$__mh_bundle_header,%eax
0000990e	addl	$0x24,%esp
00009911	popl	%ebx
00009912	leave
00009913	ret
_codeMatchesInstruction:
00009914	pushl	%ebp
00009915	movl	%esp,%ebp
00009917	subl	$0x18,%esp
0000991a	movb	$0x01,0xef(%ebp)
0000991e	movl	$__mh_bundle_header,0xf0(%ebp)
00009925	jmp	0x00009968
00009927	movl	0xf0(%ebp),%edx
0000992a	movl	0x0c(%ebp),%eax
0000992d	movzbl	0x04(%eax,%edx),%eax
00009932	movb	%al,0xf5(%ebp)
00009935	movl	0xf0(%ebp),%edx
00009938	movl	0x0c(%ebp),%eax
0000993b	movzbl	0x13(%edx,%eax),%eax
00009940	movb	%al,0xf6(%ebp)
00009943	movl	0xf0(%ebp),%eax
00009946	addl	0x08(%ebp),%eax
00009949	movzbl	(%eax),%eax
0000994c	movb	%al,0xf7(%ebp)
0000994f	movzbl	0xf5(%ebp),%eax
00009953	andb	0xf7(%ebp),%al
00009956	cmpb	0xf6(%ebp),%al
00009959	sete	%al
0000995c	movb	%al,0xef(%ebp)
0000995f	cmpb	$__mh_bundle_header,0xef(%ebp)
00009963	je	0x00009974
00009965	incl	0xf0(%ebp)
00009968	movl	0xf0(%ebp),%eax
0000996b	movl	0x0c(%ebp),%edx
0000996e	movl	(%edx),%edx
00009970	cmpl	%edx,%eax
00009972	jb	0x00009927
00009974	movzbl	0xef(%ebp),%eax
00009978	leave
00009979	ret
_eatKnownInstructions:
0000997a	pushl	%ebp
0000997b	movl	%esp,%ebp
0000997d	pushl	%edi
0000997e	pushl	%esi
0000997f	pushl	%ebx
00009980	subl	$0x5c,%esp
00009983	calll	0x00009988
00009988	popl	%ebx
00009989	movb	$0x01,0xc3(%ebp)
0000998d	movl	$__mh_bundle_header,0xc4(%ebp)
00009994	movl	0x08(%ebp),%eax
00009997	movl	%eax,0xc8(%ebp)
0000999a	movl	$0x00000005,0xcc(%ebp)
000099a1	cmpl	$__mh_bundle_header,0x10(%ebp)
000099a5	je	0x00009a0d
000099a7	movl	0x10(%ebp),%eax
000099aa	movl	$__mh_bundle_header,(%eax)
000099b0	jmp	0x00009a0d
000099b2	movb	$__mh_bundle_header,0xd3(%ebp)
000099b6	leal	0x00005bd8(%ebx),%eax
000099bc	movl	%eax,0xd4(%ebp)
000099bf	movl	0xd4(%ebp),%eax
000099c2	movl	%eax,0x04(%esp)
000099c6	movl	0xc8(%ebp),%eax
000099c9	movl	%eax,(%esp)
000099cc	calll	0x00009914
000099d1	movb	%al,0xd3(%ebp)
000099d4	cmpb	$__mh_bundle_header,0xd3(%ebp)
000099d8	jne	0x000099e7
000099da	addl	$0x24,0xd4(%ebp)
000099de	movl	0xd4(%ebp),%eax
000099e1	movl	(%eax),%eax
000099e3	testl	%eax,%eax
000099e5	jne	0x000099bf
000099e7	cmpb	$__mh_bundle_header,0xd3(%ebp)
000099eb	jne	0x000099f3
000099ed	movb	$__mh_bundle_header,0xc3(%ebp)
000099f1	jmp	0x00009a13
000099f3	movl	0xd4(%ebp),%eax
000099f6	movl	(%eax),%eax
000099f8	movl	%eax,0xd8(%ebp)
000099fb	movl	0xd8(%ebp),%eax
000099fe	addl	%eax,0xc8(%ebp)
00009a01	movl	0xd8(%ebp),%eax
00009a04	subl	%eax,0xcc(%ebp)
00009a07	movl	0xd8(%ebp),%eax
00009a0a	addl	%eax,0xc4(%ebp)
00009a0d	cmpl	$__mh_bundle_header,0xcc(%ebp)
00009a11	jg	0x000099b2
00009a13	cmpl	$__mh_bundle_header,0x10(%ebp)
00009a17	je	0x00009a21
00009a19	movl	0x10(%ebp),%edx
00009a1c	movl	0xc4(%ebp),%eax
00009a1f	movl	%eax,(%edx)
00009a21	cmpl	$__mh_bundle_header,0x14(%ebp)
00009a25	je	0x00009a79
00009a27	cmpl	$0x0f,0xc4(%ebp)
00009a2b	setle	%al
00009a2e	movb	%al,0xdf(%ebp)
00009a31	cmpb	$__mh_bundle_header,0xdf(%ebp)
00009a35	je	0x00009a6d
00009a37	movl	$0x00000010,0x08(%esp)
00009a3f	movl	$0x00000090,0x04(%esp)
00009a47	movl	0x14(%ebp),%eax
00009a4a	movl	%eax,(%esp)
00009a4d	calll	0x0001145f	; symbol stub for: _memset
00009a52	movl	0xc4(%ebp),%eax
00009a55	movl	%eax,0x08(%esp)
00009a59	movl	0x14(%ebp),%eax
00009a5c	movl	%eax,0x04(%esp)
00009a60	movl	0x08(%ebp),%eax
00009a63	movl	%eax,(%esp)
00009a66	calll	0x000113ba	; symbol stub for: _bcopy
00009a6b	jmp	0x00009a79
00009a6d	movl	$__mh_bundle_header,0xac(%ebp)
00009a74	jmp	0x00009b0f
00009a79	cmpb	$__mh_bundle_header,0xc3(%ebp)
00009a7d	je	0x00009b08
00009a83	movl	0x08(%ebp),%eax
00009a86	movl	0x04(%eax),%edx
00009a89	movl	(%eax),%eax
00009a8b	movl	%eax,0xe0(%ebp)
00009a8e	movl	%edx,0xe4(%ebp)
00009a91	movl	0xe0(%ebp),%eax
00009a94	movl	0xe4(%ebp),%edx
00009a97	movl	%eax,(%esp)
00009a9a	movl	%edx,0x04(%esp)
00009a9e	calll	0x0000954a
00009aa3	movl	%eax,0xe0(%ebp)
00009aa6	movl	%edx,0xe4(%ebp)
00009aa9	movl	0xe0(%ebp),%eax
00009aac	andl	$0x00ffffff,%eax
00009ab1	movl	0xe4(%ebp),%edx
00009ab4	andl	$__mh_bundle_header,%edx
00009ab7	movl	%eax,0xe0(%ebp)
00009aba	movl	%edx,0xe4(%ebp)
00009abd	movl	0x0c(%ebp),%eax
00009ac0	movl	(%eax),%esi
00009ac2	movl	0x04(%eax),%edi
00009ac5	movl	%esi,%eax
00009ac7	andl	$0xff000000,%eax
00009acc	movl	%edi,%edx
00009ace	andb	$0xff,%dh
00009ad1	movl	0x0c(%ebp),%ecx
00009ad4	movl	%eax,(%ecx)
00009ad6	movl	%edx,0x04(%ecx)
00009ad9	movl	0x0c(%ebp),%eax
00009adc	movl	(%eax),%edx
00009ade	movl	0x04(%eax),%ecx
00009ae1	movl	%edx,0xb0(%ebp)
00009ae4	movl	%ecx,0xb4(%ebp)
00009ae7	movl	0xe0(%ebp),%esi
00009aea	andl	$0x00ffffff,%esi
00009af0	movl	0xe4(%ebp),%edi
00009af3	andl	$__mh_bundle_header,%edi
00009af6	movl	0xb0(%ebp),%eax
00009af9	orl	%esi,%eax
00009afb	movl	0xb4(%ebp),%edx
00009afe	orl	%edi,%edx
00009b00	movl	0x0c(%ebp),%ecx
00009b03	movl	%eax,(%ecx)
00009b05	movl	%edx,0x04(%ecx)
00009b08	movzbl	0xc3(%ebp),%ecx
00009b0c	movl	%ecx,0xac(%ebp)
00009b0f	movl	0xac(%ebp),%eax
00009b12	addl	$0x5c,%esp
00009b15	popl	%ebx
00009b16	popl	%esi
00009b17	popl	%edi
00009b18	leave
00009b19	ret
00009b1a	nop
_atomic_mov64:
00009b1c	pushl	%ebp
00009b1d	movl	%esp,%ebp
00009b1f	pushl	%esi
00009b20	pushl	%ebx
00009b21	pushl	%ecx
00009b22	pushl	%eax
00009b23	pushl	%edx
00009b24	movl	0x08(%ebp),%esi
00009b27	movl	0x0c(%ebp),%ebx
00009b2a	movl	0x10(%ebp),%ecx
00009b2d	movl	(%esi),%eax
00009b2f	movl	0x04(%esi),%edx
00009b32	lock/cmpxchg8b	(%esi)
00009b36	popl	%edx
00009b37	popl	%eax
00009b38	popl	%ecx
00009b39	popl	%ebx
00009b3a	popl	%esi
00009b3b	popl	%ebp
00009b3c	ret
_IconRefRetain:
00009b3d	pushl	%ebp
00009b3e	movl	%esp,%ebp
00009b40	subl	$0x18,%esp
00009b43	movl	0x0c(%ebp),%eax
00009b46	movl	%eax,(%esp)
00009b49	calll	0x0001109a	; symbol stub for: _AcquireIconRef
00009b4e	movl	0x0c(%ebp),%eax
00009b51	leave
00009b52	ret
_IconRefRelease:
00009b53	pushl	%ebp
00009b54	movl	%esp,%ebp
00009b56	subl	$0x18,%esp
00009b59	movl	0x0c(%ebp),%eax
00009b5c	movl	%eax,(%esp)
00009b5f	calll	0x0001136a	; symbol stub for: _ReleaseIconRef
00009b64	leave
00009b65	ret
_IconRefEqual:
00009b66	pushl	%ebp
00009b67	movl	%esp,%ebp
00009b69	subl	$0x08,%esp
00009b6c	movl	0x08(%ebp),%eax
00009b6f	cmpl	0x0c(%ebp),%eax
00009b72	sete	%al
00009b75	movzbl	%al,%eax
00009b78	leave
00009b79	ret
_DropboxIconOverlayCachedComposite:
00009b7a	pushl	%ebp
00009b7b	movl	%esp,%ebp
00009b7d	pushl	%ebx
00009b7e	subl	$0x24,%esp
00009b81	calll	0x00009b86
00009b86	popl	%ebx
00009b87	movl	0x10(%ebp),%eax
00009b8a	movl	$__mh_bundle_header,(%eax)
00009b90	leal	0x00005c36(%ebx),%eax
00009b96	movl	(%eax),%edx
00009b98	movl	0x0c(%ebp),%eax
00009b9b	movl	%eax,0x04(%esp)
00009b9f	movl	%edx,(%esp)
00009ba2	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
00009ba7	movl	%eax,0xf4(%ebp)
00009baa	cmpl	$__mh_bundle_header,0xf4(%ebp)
00009bae	jne	0x00009bf9
00009bb0	leal	0x0000594a(%ebx),%eax
00009bb6	movl	%eax,0x0c(%esp)
00009bba	leal	0x00005932(%ebx),%eax
00009bc0	movl	%eax,0x08(%esp)
00009bc4	movl	$__mh_bundle_header,0x04(%esp)
00009bcc	movl	$__mh_bundle_header,(%esp)
00009bd3	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
00009bd8	movl	%eax,0xf4(%ebp)
00009bdb	leal	0x00005c36(%ebx),%eax
00009be1	movl	(%eax),%edx
00009be3	movl	0xf4(%ebp),%eax
00009be6	movl	%eax,0x08(%esp)
00009bea	movl	0x0c(%ebp),%eax
00009bed	movl	%eax,0x04(%esp)
00009bf1	movl	%edx,(%esp)
00009bf4	calll	0x000110f9	; symbol stub for: _CFDictionaryAddValue
00009bf9	movl	0x10(%ebp),%eax
00009bfc	movl	%eax,0x08(%esp)
00009c00	movl	0x08(%ebp),%eax
00009c03	movl	%eax,0x04(%esp)
00009c07	movl	0xf4(%ebp),%eax
00009c0a	movl	%eax,(%esp)
00009c0d	calll	0x00011112	; symbol stub for: _CFDictionaryGetValueIfPresent
00009c12	testb	%al,%al
00009c14	je	0x00009c25
00009c16	movl	0x10(%ebp),%eax
00009c19	movl	(%eax),%eax
00009c1b	movl	%eax,(%esp)
00009c1e	calll	0x0001109a	; symbol stub for: _AcquireIconRef
00009c23	jmp	0x00009c85
00009c25	movl	$__mh_bundle_header,0xf0(%ebp)
00009c2c	leal	0xf0(%ebp),%eax
00009c2f	movl	%eax,0x08(%esp)
00009c33	movl	0x0c(%ebp),%eax
00009c36	movl	%eax,0x04(%esp)
00009c3a	movl	0x08(%ebp),%eax
00009c3d	movl	%eax,(%esp)
00009c40	calll	0x000111ee	; symbol stub for: _CompositeIconRef
00009c45	movl	0xf0(%ebp),%eax
00009c48	testl	%eax,%eax
00009c4a	je	0x00009c6a
00009c4c	movl	0x10(%ebp),%eax
00009c4f	movl	(%eax),%eax
00009c51	testl	%eax,%eax
00009c53	je	0x00009c62
00009c55	movl	0x10(%ebp),%eax
00009c58	movl	(%eax),%eax
00009c5a	movl	%eax,(%esp)
00009c5d	calll	0x0001136a	; symbol stub for: _ReleaseIconRef
00009c62	movl	0xf0(%ebp),%edx
00009c65	movl	0x10(%ebp),%eax
00009c68	movl	%edx,(%eax)
00009c6a	movl	0x10(%ebp),%eax
00009c6d	movl	(%eax),%eax
00009c6f	movl	%eax,0x08(%esp)
00009c73	movl	0x08(%ebp),%eax
00009c76	movl	%eax,0x04(%esp)
00009c7a	movl	0xf4(%ebp),%eax
00009c7d	movl	%eax,(%esp)
00009c80	calll	0x000110f9	; symbol stub for: _CFDictionaryAddValue
00009c85	movl	$__mh_bundle_header,%eax
00009c8a	addl	$0x24,%esp
00009c8d	popl	%ebx
00009c8e	leave
00009c8f	ret
_DropboxIconOverlayGetIconRefFromFileInfo:
00009c90	pushl	%ebp
00009c91	movl	%esp,%ebp
00009c93	pushl	%ebx
00009c94	subl	$0x44,%esp
00009c97	calll	0x00009c9c
00009c9c	popl	%ebx
00009c9d	leal	0x00005b18(%ebx),%eax
00009ca3	movl	(%eax),%edx
00009ca5	movl	0x24(%ebp),%eax
00009ca8	movl	%eax,0x1c(%esp)
00009cac	movl	0x20(%ebp),%eax
00009caf	movl	%eax,0x18(%esp)
00009cb3	movl	0x1c(%ebp),%eax
00009cb6	movl	%eax,0x14(%esp)
00009cba	movl	0x18(%ebp),%eax
00009cbd	movl	%eax,0x10(%esp)
00009cc1	movl	0x14(%ebp),%eax
00009cc4	movl	%eax,0x0c(%esp)
00009cc8	movl	0x10(%ebp),%eax
00009ccb	movl	%eax,0x08(%esp)
00009ccf	movl	0x0c(%ebp),%eax
00009cd2	movl	%eax,0x04(%esp)
00009cd6	movl	0x08(%ebp),%eax
00009cd9	movl	%eax,(%esp)
00009cdc	call	*%edx
00009cde	movl	%eax,0xec(%ebp)
00009ce1	cmpl	$__mh_bundle_header,0xec(%ebp)
00009ce5	je	0x00009cef
00009ce7	movl	0xec(%ebp),%eax
00009cea	movl	%eax,0xe4(%ebp)
00009ced	jmp	0x00009d66
00009cef	movl	0x1c(%ebp),%eax
00009cf2	andl	$0x01,%eax
00009cf5	testb	%al,%al
00009cf7	je	0x00009d02
00009cf9	movl	$__mh_bundle_header,0xe4(%ebp)
00009d00	jmp	0x00009d66
00009d02	leal	0x000059e4(%ebx),%eax
00009d08	movl	(%eax),%eax
00009d0a	testl	%eax,%eax
00009d0c	jne	0x00009d17
00009d0e	movl	$__mh_bundle_header,0xe4(%ebp)
00009d15	jmp	0x00009d66
00009d17	leal	0x000059e4(%ebx),%eax
00009d1d	movl	(%eax),%edx
00009d1f	movl	0x08(%ebp),%eax
00009d22	movl	%eax,(%esp)
00009d25	call	*%edx
00009d27	movl	%eax,0xf0(%ebp)
00009d2a	cmpl	$__mh_bundle_header,0xf0(%ebp)
00009d2e	je	0x00009d5f
00009d30	movl	0x20(%ebp),%eax
00009d33	movl	(%eax),%eax
00009d35	movl	%eax,0xf4(%ebp)
00009d38	movl	0x20(%ebp),%eax
00009d3b	movl	%eax,0x08(%esp)
00009d3f	movl	0xf0(%ebp),%eax
00009d42	movl	%eax,0x04(%esp)
00009d46	movl	0xf4(%ebp),%eax
00009d49	movl	%eax,(%esp)
00009d4c	calll	0x00009b7a
00009d51	movl	%eax,0xec(%ebp)
00009d54	movl	0xf4(%ebp),%eax
00009d57	movl	%eax,(%esp)
00009d5a	calll	0x0001136a	; symbol stub for: _ReleaseIconRef
00009d5f	movl	$__mh_bundle_header,0xe4(%ebp)
00009d66	movl	0xe4(%ebp),%eax
00009d69	addl	$0x44,%esp
00009d6c	popl	%ebx
00009d6d	leave
00009d6e	ret
_DropboxIconOverlayInitialize:
00009d6f	pushl	%ebp
00009d70	movl	%esp,%ebp
00009d72	pushl	%ebx
00009d73	subl	$0x44,%esp
00009d76	calll	0x00009d7b
00009d7b	popl	%ebx
00009d7c	movb	$__mh_bundle_header,0xef(%ebp)
00009d80	leal	0x000052b1(%ebx),%eax
00009d86	movl	$__mh_bundle_header,0x04(%esp)
00009d8e	movl	%eax,(%esp)
00009d91	calll	_getPreferenceBool
00009d96	testb	%al,%al
00009d98	je	0x00009da5
00009d9a	leal	0x0000729d(%ebx),%eax
00009da0	movl	(%eax),%eax
00009da2	movb	$0x01,(%eax)
00009da5	leal	0x000053f1(%ebx),%eax
00009dab	movl	$__mh_bundle_header,0x04(%esp)
00009db3	movl	%eax,(%esp)
00009db6	calll	_getPreferenceBool
00009dbb	testb	%al,%al
00009dbd	je	0x00009dc3
00009dbf	movb	$0x01,0xef(%ebp)
00009dc3	leal	0x00005a39(%ebx),%eax
00009dc9	movl	(%eax),%eax
00009dcb	testl	%eax,%eax
00009dcd	jne	0x0000a05d
00009dd3	calll	_ShouldLoadFullBlownHacks
00009dd8	testb	%al,%al
00009dda	je	0x0000a05d
00009de0	calll	_InitDropboxToolbarIntegration
00009de5	calll	0x00006a11
00009dea	leal	0xe0(%ebp),%eax
00009ded	movl	%eax,0x08(%esp)
00009df1	leal	0xe4(%ebp),%eax
00009df4	movl	%eax,0x04(%esp)
00009df8	leal	0xe8(%ebp),%eax
00009dfb	movl	%eax,(%esp)
00009dfe	calll	_GetSystemVersion
00009e03	movl	0xe0(%ebp),%eax
00009e06	movl	0xe4(%ebp),%edx
00009e09	movl	0xe8(%ebp),%ecx
00009e0c	movl	%eax,0x0c(%esp)
00009e10	movl	%edx,0x08(%esp)
00009e14	movl	%ecx,0x04(%esp)
00009e18	leal	0x00004828(%ebx),%eax
00009e1e	movl	%eax,(%esp)
00009e21	calll	_DEBUG_printf
00009e26	movl	$__mh_bundle_header,0x0c(%esp)
00009e2e	leal	0x000072a9(%ebx),%eax
00009e34	movl	(%eax),%eax
00009e36	movl	%eax,0x08(%esp)
00009e3a	movl	$__mh_bundle_header,0x04(%esp)
00009e42	movl	$__mh_bundle_header,(%esp)
00009e49	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
00009e4e	movl	%eax,%edx
00009e50	leal	0x00005a3d(%ebx),%eax
00009e56	movl	%edx,(%eax)
00009e58	leal	0x00005a3d(%ebx),%eax
00009e5e	movl	(%eax),%eax
00009e60	testl	%eax,%eax
00009e62	sete	%al
00009e65	movzbl	%al,%eax
00009e68	testl	%eax,%eax
00009e6a	je	0x00009ebb
00009e6c	movl	$__mh_bundle_header,0x1c(%esp)
00009e74	movl	$0x0000008a,0x18(%esp)
00009e7c	leal	0x00004845(%ebx),%eax
00009e82	movl	%eax,0x14(%esp)
00009e86	movl	$__mh_bundle_header,0x10(%esp)
00009e8e	leal	0x0000488b(%ebx),%eax
00009e94	movl	%eax,0x0c(%esp)
00009e98	leal	0x0000489d(%ebx),%eax
00009e9e	movl	%eax,0x08(%esp)
00009ea2	movl	$__mh_bundle_header,0x04(%esp)
00009eaa	movl	$0x3f2a3f2a,(%esp)
00009eb1	calll	0x00011220	; symbol stub for: _DebugAssert
00009eb6	jmp	0x0000a02d
00009ebb	leal	0x000072ad(%ebx),%eax
00009ec1	movl	(%eax),%eax
00009ec3	movl	%eax,0x0c(%esp)
00009ec7	leal	0x0000573d(%ebx),%eax
00009ecd	movl	%eax,0x08(%esp)
00009ed1	movl	$__mh_bundle_header,0x04(%esp)
00009ed9	movl	$__mh_bundle_header,(%esp)
00009ee0	calll	0x00011108	; symbol stub for: _CFDictionaryCreateMutable
00009ee5	movl	%eax,%edx
00009ee7	leal	0x00005a41(%ebx),%eax
00009eed	movl	%edx,(%eax)
00009eef	leal	0x00005a41(%ebx),%eax
00009ef5	movl	(%eax),%eax
00009ef7	testl	%eax,%eax
00009ef9	sete	%al
00009efc	movzbl	%al,%eax
00009eff	testl	%eax,%eax
00009f01	je	0x00009f52
00009f03	movl	$__mh_bundle_header,0x1c(%esp)
00009f0b	movl	$0x0000008f,0x18(%esp)
00009f13	leal	0x00004845(%ebx),%eax
00009f19	movl	%eax,0x14(%esp)
00009f1d	movl	$__mh_bundle_header,0x10(%esp)
00009f25	leal	0x0000488b(%ebx),%eax
00009f2b	movl	%eax,0x0c(%esp)
00009f2f	leal	0x000048c5(%ebx),%eax
00009f35	movl	%eax,0x08(%esp)
00009f39	movl	$__mh_bundle_header,0x04(%esp)
00009f41	movl	$0x3f2a3f2a,(%esp)
00009f48	calll	0x00011220	; symbol stub for: _DebugAssert
00009f4d	jmp	0x0000a02d
00009f52	movl	0xe4(%ebp),%eax
00009f55	cmpl	$0x04,%eax
00009f58	jbe	0x00009fa8
00009f5a	cmpb	$__mh_bundle_header,0xef(%ebp)
00009f5e	jne	0x00009fa8
00009f60	leal	0x00005401(%ebx),%eax
00009f66	movl	$0x00000001,0x04(%esp)
00009f6e	movl	%eax,(%esp)
00009f71	calll	_getPreferenceBool
00009f76	movb	%al,0xf6(%ebp)
00009f79	leal	0x00005411(%ebx),%eax
00009f7f	movl	$0x00000001,0x04(%esp)
00009f87	movl	%eax,(%esp)
00009f8a	calll	_getPreferenceBool
00009f8f	movb	%al,0xf7(%ebp)
00009f92	cmpb	$__mh_bundle_header,0xf6(%ebp)
00009f96	je	0x00009f9d
00009f98	calll	0x00004cdd
00009f9d	cmpb	$__mh_bundle_header,0xf7(%ebp)
00009fa1	je	0x00009fa8
00009fa3	calll	0x0000318a
00009fa8	leal	0x00005a39(%ebx),%eax
00009fae	movl	%eax,0x0c(%esp)
00009fb2	leal	0xffffff15(%ebx),%eax
00009fb8	movl	%eax,0x08(%esp)
00009fbc	movl	$__mh_bundle_header,0x04(%esp)
00009fc4	leal	0x00004915(%ebx),%eax
00009fca	movl	%eax,(%esp)
00009fcd	calll	0x00009130
00009fd2	movl	%eax,0xf0(%ebp)
00009fd5	cmpl	$__mh_bundle_header,0xf0(%ebp)
00009fd9	setne	%al
00009fdc	movzbl	%al,%eax
00009fdf	testl	%eax,%eax
00009fe1	je	0x0000a05d
00009fe3	movl	$__mh_bundle_header,0x1c(%esp)
00009feb	movl	$0x0000009b,0x18(%esp)
00009ff3	leal	0x00004845(%ebx),%eax
00009ff9	movl	%eax,0x14(%esp)
00009ffd	movl	$__mh_bundle_header,0x10(%esp)
0000a005	leal	0x0000488b(%ebx),%eax
0000a00b	movl	%eax,0x0c(%esp)
0000a00f	leal	0x00003e21(%ebx),%eax
0000a015	movl	%eax,0x08(%esp)
0000a019	movl	$__mh_bundle_header,0x04(%esp)
0000a021	movl	$0x3f2a3f2a,(%esp)
0000a028	calll	0x00011220	; symbol stub for: _DebugAssert
0000a02d	leal	0x00007289(%ebx),%eax
0000a033	movl	(%eax),%eax
0000a035	leal	0x000000b0(%eax),%eax
0000a03b	movl	%eax,0x0c(%esp)
0000a03f	movl	$0x0000003c,0x08(%esp)
0000a047	movl	$0x00000001,0x04(%esp)
0000a04f	leal	0x0000492d(%ebx),%eax
0000a055	movl	%eax,(%esp)
0000a058	calll	0x00011419	; symbol stub for: _fwrite
0000a05d	addl	$0x44,%esp
0000a060	popl	%ebx
0000a061	leave
0000a062	ret
_DropboxIconOverlaySetProvider:
0000a063	pushl	%ebp
0000a064	movl	%esp,%ebp
0000a066	pushl	%ebx
0000a067	subl	$0x04,%esp
0000a06a	calll	0x0000a06f
0000a06f	popl	%ebx
0000a070	cmpl	$__mh_bundle_header,0x08(%ebp)
0000a074	je	0x0000a07b
0000a076	calll	0x00009d6f
0000a07b	leal	0x00005611(%ebx),%edx
0000a081	movl	0x08(%ebp),%eax
0000a084	movl	%eax,(%edx)
0000a086	leal	0x00005615(%ebx),%edx
0000a08c	movl	0x0c(%ebp),%eax
0000a08f	movl	%eax,(%edx)
0000a091	addl	$0x04,%esp
0000a094	popl	%ebx
0000a095	leave
0000a096	ret
_DropboxIconOverlayIconRefFromIconFile:
0000a097	pushl	%ebp
0000a098	movl	%esp,%ebp
0000a09a	pushl	%ebx
0000a09b	subl	$0x34,%esp
0000a09e	calll	0x0000a0a3
0000a0a3	popl	%ebx
0000a0a4	leal	0x00005715(%ebx),%eax
0000a0aa	movl	(%eax),%edx
0000a0ac	movl	0x08(%ebp),%eax
0000a0af	movl	%eax,0x04(%esp)
0000a0b3	movl	%edx,(%esp)
0000a0b6	calll	0x0001110d	; symbol stub for: _CFDictionaryGetValue
0000a0bb	movl	%eax,0xf4(%ebp)
0000a0be	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a0c2	je	0x0000a0cc
0000a0c4	movl	0xf4(%ebp),%eax
0000a0c7	movl	%eax,0xe4(%ebp)
0000a0ca	jmp	0x0000a104
0000a0cc	movl	0x08(%ebp),%eax
0000a0cf	movl	%eax,(%esp)
0000a0d2	calll	_IconRefFromIconFileNoCache
0000a0d7	movl	%eax,0xf4(%ebp)
0000a0da	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a0de	je	0x0000a0fe
0000a0e0	leal	0x00005715(%ebx),%eax
0000a0e6	movl	(%eax),%edx
0000a0e8	movl	0xf4(%ebp),%eax
0000a0eb	movl	%eax,0x08(%esp)
0000a0ef	movl	0x08(%ebp),%eax
0000a0f2	movl	%eax,0x04(%esp)
0000a0f6	movl	%edx,(%esp)
0000a0f9	calll	0x000110f9	; symbol stub for: _CFDictionaryAddValue
0000a0fe	movl	0xf4(%ebp),%eax
0000a101	movl	%eax,0xe4(%ebp)
0000a104	movl	0xe4(%ebp),%eax
0000a107	addl	$0x34,%esp
0000a10a	popl	%ebx
0000a10b	leave
0000a10c	ret
_MyCreateBitmapContext:
0000a10d	pushl	%ebp
0000a10e	movl	%esp,%ebp
0000a110	pushl	%esi
0000a111	pushl	%ebx
0000a112	subl	$0x50,%esp
0000a115	calll	0x0000a11a
0000a11a	popl	%ebx
0000a11b	movl	$__mh_bundle_header,0xe4(%ebp)
0000a122	movl	0x08(%ebp),%eax
0000a125	shll	$0x02,%eax
0000a128	movl	%eax,0xf4(%ebp)
0000a12b	movl	0xf4(%ebp),%eax
0000a12e	imull	0x0c(%ebp),%eax
0000a132	movl	%eax,0xf0(%ebp)
0000a135	leal	0x00006f22(%ebx),%eax
0000a13b	movl	(%eax),%eax
0000a13d	movl	(%eax),%eax
0000a13f	movl	%eax,(%esp)
0000a142	calll	0x000111b2	; symbol stub for: _CGColorSpaceCreateWithName
0000a147	movl	%eax,0xe8(%ebp)
0000a14a	movl	0xf0(%ebp),%eax
0000a14d	movl	$0x00000001,0x04(%esp)
0000a155	movl	%eax,(%esp)
0000a158	calll	0x000113c9	; symbol stub for: _calloc
0000a15d	movl	%eax,0xec(%ebp)
0000a160	cmpl	$__mh_bundle_header,0xec(%ebp)
0000a164	jne	0x0000a1a2
0000a166	leal	0x00006eea(%ebx),%eax
0000a16c	movl	(%eax),%eax
0000a16e	leal	0x000000b0(%eax),%eax
0000a174	movl	%eax,0x0c(%esp)
0000a178	movl	$0x00000015,0x08(%esp)
0000a180	movl	$0x00000001,0x04(%esp)
0000a188	leal	0x000045e5(%ebx),%eax
0000a18e	movl	%eax,(%esp)
0000a191	calll	0x00011419	; symbol stub for: _fwrite
0000a196	movl	$__mh_bundle_header,0xd4(%ebp)
0000a19d	jmp	0x0000a22e
0000a1a2	movl	0xf4(%ebp),%edx
0000a1a5	movl	0x0c(%ebp),%ecx
0000a1a8	movl	0x08(%ebp),%esi
0000a1ab	movl	$0x00000001,0x18(%esp)
0000a1b3	movl	0xe8(%ebp),%eax
0000a1b6	movl	%eax,0x14(%esp)
0000a1ba	movl	%edx,0x10(%esp)
0000a1be	movl	$0x00000008,0x0c(%esp)
0000a1c6	movl	%ecx,0x08(%esp)
0000a1ca	movl	%esi,0x04(%esp)
0000a1ce	movl	0xec(%ebp),%eax
0000a1d1	movl	%eax,(%esp)
0000a1d4	calll	0x000111a3	; symbol stub for: _CGBitmapContextCreate
0000a1d9	movl	%eax,0xe4(%ebp)
0000a1dc	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000a1e0	jne	0x0000a21d
0000a1e2	movl	0xec(%ebp),%eax
0000a1e5	movl	%eax,(%esp)
0000a1e8	calll	0x0001140f	; symbol stub for: _free
0000a1ed	leal	0x00006eea(%ebx),%eax
0000a1f3	movl	(%eax),%eax
0000a1f5	leal	0x000000b0(%eax),%eax
0000a1fb	movl	%eax,0x0c(%esp)
0000a1ff	movl	$0x00000014,0x08(%esp)
0000a207	movl	$0x00000001,0x04(%esp)
0000a20f	leal	0x000045fb(%ebx),%eax
0000a215	movl	%eax,(%esp)
0000a218	calll	0x00011419	; symbol stub for: _fwrite
0000a21d	movl	0xe8(%ebp),%eax
0000a220	movl	%eax,(%esp)
0000a223	calll	0x000111b7	; symbol stub for: _CGColorSpaceRelease
0000a228	movl	0xe4(%ebp),%eax
0000a22b	movl	%eax,0xd4(%ebp)
0000a22e	movl	0xd4(%ebp),%eax
0000a231	addl	$0x50,%esp
0000a234	popl	%ebx
0000a235	popl	%esi
0000a236	leave
0000a237	ret
_MyReleaseBitmapContext:
0000a238	pushl	%ebp
0000a239	movl	%esp,%ebp
0000a23b	subl	$0x28,%esp
0000a23e	movl	0x08(%ebp),%eax
0000a241	movl	%eax,(%esp)
0000a244	calll	0x000111ad	; symbol stub for: _CGBitmapContextGetData
0000a249	movl	%eax,0xf4(%ebp)
0000a24c	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a250	je	0x0000a25d
0000a252	movl	0xf4(%ebp),%eax
0000a255	movl	%eax,(%esp)
0000a258	calll	0x0001140f	; symbol stub for: _free
0000a25d	movl	0x08(%ebp),%eax
0000a260	movl	%eax,(%esp)
0000a263	calll	0x000111c1	; symbol stub for: _CGContextRelease
0000a268	leave
0000a269	ret
_ShouldLoadContextMenus:
0000a26a	pushl	%ebp
0000a26b	movl	%esp,%ebp
0000a26d	pushl	%ebx
0000a26e	subl	$0x34,%esp
0000a271	calll	0x0000a276
0000a276	popl	%ebx
0000a277	calll	0x000110ea	; symbol stub for: _CFBundleGetMainBundle
0000a27c	movl	%eax,0xf0(%ebp)
0000a27f	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000a283	jne	0x0000a28e
0000a285	movl	$__mh_bundle_header,0xe0(%ebp)
0000a28c	jmp	0x0000a307
0000a28e	movl	0xf0(%ebp),%eax
0000a291	movl	%eax,(%esp)
0000a294	calll	0x000110e5	; symbol stub for: _CFBundleGetIdentifier
0000a299	movl	%eax,0xf4(%ebp)
0000a29c	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a2a0	je	0x0000a300
0000a2a2	leal	0x00004dc6(%ebx),%eax
0000a2a8	movl	$__mh_bundle_header,0x08(%esp)
0000a2b0	movl	%eax,0x04(%esp)
0000a2b4	movl	0xf4(%ebp),%eax
0000a2b7	movl	%eax,(%esp)
0000a2ba	calll	0x00011158	; symbol stub for: _CFStringCompare
0000a2bf	testl	%eax,%eax
0000a2c1	je	0x0000a2e4
0000a2c3	leal	0x00004f36(%ebx),%eax
0000a2c9	movl	$__mh_bundle_header,0x08(%esp)
0000a2d1	movl	%eax,0x04(%esp)
0000a2d5	movl	0xf4(%ebp),%eax
0000a2d8	movl	%eax,(%esp)
0000a2db	calll	0x00011158	; symbol stub for: _CFStringCompare
0000a2e0	testl	%eax,%eax
0000a2e2	jne	0x0000a2ed
0000a2e4	movl	$0x00000001,0xe4(%ebp)
0000a2eb	jmp	0x0000a2f4
0000a2ed	movl	$__mh_bundle_header,0xe4(%ebp)
0000a2f4	movzbl	0xe4(%ebp),%eax
0000a2f8	movzbl	%al,%eax
0000a2fb	movl	%eax,0xe0(%ebp)
0000a2fe	jmp	0x0000a307
0000a300	movl	$__mh_bundle_header,0xe0(%ebp)
0000a307	movl	0xe0(%ebp),%eax
0000a30a	addl	$0x34,%esp
0000a30d	popl	%ebx
0000a30e	leave
0000a30f	ret
_ShouldLoadFullBlownHacks:
0000a310	pushl	%ebp
0000a311	movl	%esp,%ebp
0000a313	pushl	%ebx
0000a314	subl	$0x34,%esp
0000a317	calll	0x0000a31c
0000a31c	popl	%ebx
0000a31d	calll	0x000110ea	; symbol stub for: _CFBundleGetMainBundle
0000a322	movl	%eax,0xf0(%ebp)
0000a325	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000a329	jne	0x0000a334
0000a32b	movl	$__mh_bundle_header,0xe4(%ebp)
0000a332	jmp	0x0000a379
0000a334	movl	0xf0(%ebp),%eax
0000a337	movl	%eax,(%esp)
0000a33a	calll	0x000110e5	; symbol stub for: _CFBundleGetIdentifier
0000a33f	movl	%eax,0xf4(%ebp)
0000a342	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a346	je	0x0000a372
0000a348	leal	0x00004d20(%ebx),%eax
0000a34e	movl	$__mh_bundle_header,0x08(%esp)
0000a356	movl	%eax,0x04(%esp)
0000a35a	movl	0xf4(%ebp),%eax
0000a35d	movl	%eax,(%esp)
0000a360	calll	0x00011158	; symbol stub for: _CFStringCompare
0000a365	testl	%eax,%eax
0000a367	sete	%al
0000a36a	movzbl	%al,%eax
0000a36d	movl	%eax,0xe4(%ebp)
0000a370	jmp	0x0000a379
0000a372	movl	$__mh_bundle_header,0xe4(%ebp)
0000a379	movl	0xe4(%ebp),%eax
0000a37c	addl	$0x34,%esp
0000a37f	popl	%ebx
0000a380	leave
0000a381	ret
_GetSystemVersion:
0000a382	pushl	%ebp
0000a383	movl	%esp,%ebp
0000a385	pushl	%ebx
0000a386	subl	$0x54,%esp
0000a389	calll	0x0000a38e
0000a38e	popl	%ebx
0000a38f	leal	0xe0(%ebp),%eax
0000a392	movl	%eax,0x04(%esp)
0000a396	movl	$0x73797376,(%esp)
0000a39d	calll	0x00011257	; symbol stub for: _Gestalt
0000a3a2	movw	%ax,0xe6(%ebp)
0000a3a6	movswl	0xe6(%ebp),%eax
0000a3aa	movl	%eax,0xe8(%ebp)
0000a3ad	cmpl	$__mh_bundle_header,0xe8(%ebp)
0000a3b1	setne	%al
0000a3b4	movzbl	%al,%eax
0000a3b7	testl	%eax,%eax
0000a3b9	je	0x0000a409
0000a3bb	movl	0xe8(%ebp),%eax
0000a3be	movl	%eax,0x1c(%esp)
0000a3c2	movl	$0x00000067,0x18(%esp)
0000a3ca	leal	0x000043b6(%ebx),%eax
0000a3d0	movl	%eax,0x14(%esp)
0000a3d4	movl	$__mh_bundle_header,0x10(%esp)
0000a3dc	leal	0x000040ad(%ebx),%eax
0000a3e2	movl	%eax,0x0c(%esp)
0000a3e6	leal	0x00003dc6(%ebx),%eax
0000a3ec	movl	%eax,0x08(%esp)
0000a3f0	movl	$__mh_bundle_header,0x04(%esp)
0000a3f8	movl	$0x3f2a3f2a,(%esp)
0000a3ff	calll	0x00011220	; symbol stub for: _DebugAssert
0000a404	jmp	0x0000a617
0000a409	movl	0xe0(%ebp),%eax
0000a40c	cmpl	$0x0000103f,%eax
0000a411	jg	0x0000a47a
0000a413	cmpl	$__mh_bundle_header,0x08(%ebp)
0000a417	je	0x0000a446
0000a419	movl	0xe0(%ebp),%eax
0000a41c	andl	$0x0000f000,%eax
0000a421	movl	%eax,%edx
0000a423	sarl	$0x0c,%edx
0000a426	movl	%edx,%eax
0000a428	shll	$0x02,%eax
0000a42b	addl	%edx,%eax
0000a42d	addl	%eax,%eax
0000a42f	movl	%eax,%edx
0000a431	movl	0xe0(%ebp),%eax
0000a434	andl	$0x00000f00,%eax
0000a439	sarl	$0x08,%eax
0000a43c	leal	(%edx,%eax),%eax
0000a43f	movl	%eax,%edx
0000a441	movl	0x08(%ebp),%eax
0000a444	movl	%edx,(%eax)
0000a446	cmpl	$__mh_bundle_header,0x0c(%ebp)
0000a44a	je	0x0000a45e
0000a44c	movl	0xe0(%ebp),%eax
0000a44f	andl	$0x000000f0,%eax
0000a454	sarl	$0x04,%eax
0000a457	movl	%eax,%edx
0000a459	movl	0x0c(%ebp),%eax
0000a45c	movl	%edx,(%eax)
0000a45e	cmpl	$__mh_bundle_header,0x10(%ebp)
0000a462	je	0x0000a644
0000a468	movl	0xe0(%ebp),%eax
0000a46b	movl	%eax,%edx
0000a46d	andl	$0x0f,%edx
0000a470	movl	0x10(%ebp),%eax
0000a473	movl	%edx,(%eax)
0000a475	jmp	0x0000a644
0000a47a	leal	0xdc(%ebp),%eax
0000a47d	movl	%eax,0x04(%esp)
0000a481	movl	$0x73797331,(%esp)
0000a488	calll	0x00011257	; symbol stub for: _Gestalt
0000a48d	movw	%ax,0xe6(%ebp)
0000a491	movswl	0xe6(%ebp),%eax
0000a495	movl	%eax,0xec(%ebp)
0000a498	cmpl	$__mh_bundle_header,0xec(%ebp)
0000a49c	setne	%al
0000a49f	movzbl	%al,%eax
0000a4a2	testl	%eax,%eax
0000a4a4	je	0x0000a4f4
0000a4a6	movl	0xec(%ebp),%eax
0000a4a9	movl	%eax,0x1c(%esp)
0000a4ad	movl	$0x00000072,0x18(%esp)
0000a4b5	leal	0x000043b6(%ebx),%eax
0000a4bb	movl	%eax,0x14(%esp)
0000a4bf	movl	$__mh_bundle_header,0x10(%esp)
0000a4c7	leal	0x000040ad(%ebx),%eax
0000a4cd	movl	%eax,0x0c(%esp)
0000a4d1	leal	0x00003dc6(%ebx),%eax
0000a4d7	movl	%eax,0x08(%esp)
0000a4db	movl	$__mh_bundle_header,0x04(%esp)
0000a4e3	movl	$0x3f2a3f2a,(%esp)
0000a4ea	calll	0x00011220	; symbol stub for: _DebugAssert
0000a4ef	jmp	0x0000a617
0000a4f4	leal	0xd8(%ebp),%eax
0000a4f7	movl	%eax,0x04(%esp)
0000a4fb	movl	$0x73797332,(%esp)
0000a502	calll	0x00011257	; symbol stub for: _Gestalt
0000a507	movw	%ax,0xe6(%ebp)
0000a50b	movswl	0xe6(%ebp),%eax
0000a50f	movl	%eax,0xf0(%ebp)
0000a512	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000a516	setne	%al
0000a519	movzbl	%al,%eax
0000a51c	testl	%eax,%eax
0000a51e	je	0x0000a56e
0000a520	movl	0xf0(%ebp),%eax
0000a523	movl	%eax,0x1c(%esp)
0000a527	movl	$0x00000074,0x18(%esp)
0000a52f	leal	0x000043b6(%ebx),%eax
0000a535	movl	%eax,0x14(%esp)
0000a539	movl	$__mh_bundle_header,0x10(%esp)
0000a541	leal	0x000040ad(%ebx),%eax
0000a547	movl	%eax,0x0c(%esp)
0000a54b	leal	0x00003dc6(%ebx),%eax
0000a551	movl	%eax,0x08(%esp)
0000a555	movl	$__mh_bundle_header,0x04(%esp)
0000a55d	movl	$0x3f2a3f2a,(%esp)
0000a564	calll	0x00011220	; symbol stub for: _DebugAssert
0000a569	jmp	0x0000a617
0000a56e	leal	0xd4(%ebp),%eax
0000a571	movl	%eax,0x04(%esp)
0000a575	movl	$0x73797333,(%esp)
0000a57c	calll	0x00011257	; symbol stub for: _Gestalt
0000a581	movw	%ax,0xe6(%ebp)
0000a585	movswl	0xe6(%ebp),%eax
0000a589	movl	%eax,0xf4(%ebp)
0000a58c	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a590	setne	%al
0000a593	movzbl	%al,%eax
0000a596	testl	%eax,%eax
0000a598	je	0x0000a5e5
0000a59a	movl	0xf4(%ebp),%eax
0000a59d	movl	%eax,0x1c(%esp)
0000a5a1	movl	$0x00000076,0x18(%esp)
0000a5a9	leal	0x000043b6(%ebx),%eax
0000a5af	movl	%eax,0x14(%esp)
0000a5b3	movl	$__mh_bundle_header,0x10(%esp)
0000a5bb	leal	0x000040ad(%ebx),%eax
0000a5c1	movl	%eax,0x0c(%esp)
0000a5c5	leal	0x00003dc6(%ebx),%eax
0000a5cb	movl	%eax,0x08(%esp)
0000a5cf	movl	$__mh_bundle_header,0x04(%esp)
0000a5d7	movl	$0x3f2a3f2a,(%esp)
0000a5de	calll	0x00011220	; symbol stub for: _DebugAssert
0000a5e3	jmp	0x0000a617
0000a5e5	cmpl	$__mh_bundle_header,0x08(%ebp)
0000a5e9	je	0x0000a5f5
0000a5eb	movl	0xdc(%ebp),%eax
0000a5ee	movl	%eax,%edx
0000a5f0	movl	0x08(%ebp),%eax
0000a5f3	movl	%edx,(%eax)
0000a5f5	cmpl	$__mh_bundle_header,0x0c(%ebp)
0000a5f9	je	0x0000a605
0000a5fb	movl	0xd8(%ebp),%eax
0000a5fe	movl	%eax,%edx
0000a600	movl	0x0c(%ebp),%eax
0000a603	movl	%edx,(%eax)
0000a605	cmpl	$__mh_bundle_header,0x10(%ebp)
0000a609	je	0x0000a644
0000a60b	movl	0xd4(%ebp),%eax
0000a60e	movl	%eax,%edx
0000a610	movl	0x10(%ebp),%eax
0000a613	movl	%edx,(%eax)
0000a615	jmp	0x0000a644
0000a617	cmpl	$__mh_bundle_header,0x08(%ebp)
0000a61b	je	0x0000a626
0000a61d	movl	0x08(%ebp),%eax
0000a620	movl	$0x0000000a,(%eax)
0000a626	cmpl	$__mh_bundle_header,0x0c(%ebp)
0000a62a	je	0x0000a635
0000a62c	movl	0x0c(%ebp),%eax
0000a62f	movl	$__mh_bundle_header,(%eax)
0000a635	cmpl	$__mh_bundle_header,0x10(%ebp)
0000a639	je	0x0000a644
0000a63b	movl	0x10(%ebp),%eax
0000a63e	movl	$__mh_bundle_header,(%eax)
0000a644	addl	$0x54,%esp
0000a647	popl	%ebx
0000a648	leave
0000a649	ret
_IconRefFromIconFileNoCache:
0000a64a	pushl	%ebp
0000a64b	movl	%esp,%ebp
0000a64d	subl	$0x00000088,%esp
0000a653	movl	$__mh_bundle_header,0x0c(%esp)
0000a65b	movl	$__mh_bundle_header,0x08(%esp)
0000a663	movl	0x08(%ebp),%eax
0000a666	movl	%eax,0x04(%esp)
0000a66a	movl	$__mh_bundle_header,(%esp)
0000a671	calll	0x0001118f	; symbol stub for: _CFURLCreateWithFileSystemPath
0000a676	movl	%eax,0xf0(%ebp)
0000a679	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000a67d	jne	0x0000a68b
0000a67f	movl	$__mh_bundle_header,0x94(%ebp)
0000a686	jmp	0x0000a71c
0000a68b	leal	0x98(%ebp),%eax
0000a68e	movl	%eax,0x04(%esp)
0000a692	movl	0xf0(%ebp),%eax
0000a695	movl	%eax,(%esp)
0000a698	calll	0x00011194	; symbol stub for: _CFURLGetFSRef
0000a69d	movb	%al,0xf7(%ebp)
0000a6a0	movl	0xf0(%ebp),%eax
0000a6a3	movl	%eax,(%esp)
0000a6a6	calll	0x00011149	; symbol stub for: _CFRelease
0000a6ab	cmpb	$__mh_bundle_header,0xf7(%ebp)
0000a6af	jne	0x0000a6ba
0000a6b1	movl	$__mh_bundle_header,0x94(%ebp)
0000a6b8	jmp	0x0000a71c
0000a6ba	leal	0xe8(%ebp),%eax
0000a6bd	movl	%eax,0x04(%esp)
0000a6c1	leal	0x98(%ebp),%eax
0000a6c4	movl	%eax,(%esp)
0000a6c7	calll	0x00011360	; symbol stub for: _ReadIconFromFSRef
0000a6cc	testl	%eax,%eax
0000a6ce	je	0x0000a6d9
0000a6d0	movl	$__mh_bundle_header,0x94(%ebp)
0000a6d7	jmp	0x0000a71c
0000a6d9	movl	$__mh_bundle_header,0xec(%ebp)
0000a6e0	movl	0xe8(%ebp),%eax
0000a6e3	movl	%eax,(%esp)
0000a6e6	calll	0x00011315	; symbol stub for: _HLock
0000a6eb	movl	0xe8(%ebp),%eax
0000a6ee	movl	(%eax),%eax
0000a6f0	movl	0x04(%eax),%edx
0000a6f3	movl	0xe8(%ebp),%eax
0000a6f6	movl	(%eax),%ecx
0000a6f8	leal	0xec(%ebp),%eax
0000a6fb	movl	%eax,0x08(%esp)
0000a6ff	movl	%edx,0x04(%esp)
0000a703	movl	%ecx,(%esp)
0000a706	calll	0x0001127a	; symbol stub for: _GetIconRefFromIconFamilyPtr
0000a70b	movl	0xe8(%ebp),%eax
0000a70e	movl	%eax,(%esp)
0000a711	calll	0x0001122f	; symbol stub for: _DisposeHandle
0000a716	movl	0xec(%ebp),%eax
0000a719	movl	%eax,0x94(%ebp)
0000a71c	movl	0x94(%ebp),%eax
0000a71f	leave
0000a720	ret
_getPreferenceBool:
0000a721	pushl	%ebp
0000a722	movl	%esp,%ebp
0000a724	pushl	%esi
0000a725	pushl	%ebx
0000a726	subl	$0x30,%esp
0000a729	calll	0x0000a72e
0000a72e	popl	%ebx
0000a72f	movl	0x0c(%ebp),%eax
0000a732	movb	%al,0xe4(%ebp)
0000a735	leal	0x00004db6(%ebx),%eax
0000a73b	movl	(%eax),%eax
0000a73d	movl	%eax,0x04(%esp)
0000a741	movl	0x08(%ebp),%eax
0000a744	movl	%eax,(%esp)
0000a747	calll	0x00011144	; symbol stub for: _CFPreferencesCopyAppValue
0000a74c	movl	%eax,0xf4(%ebp)
0000a74f	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a753	je	0x0000a78c
0000a755	movl	0xf4(%ebp),%eax
0000a758	movl	%eax,(%esp)
0000a75b	calll	0x00011126	; symbol stub for: _CFGetTypeID
0000a760	movl	%eax,%esi
0000a762	calll	0x000110cc	; symbol stub for: _CFBooleanGetTypeID
0000a767	cmpl	%eax,%esi
0000a769	jne	0x0000a78c
0000a76b	movl	0xf4(%ebp),%eax
0000a76e	movl	%eax,(%esp)
0000a771	calll	0x000110d1	; symbol stub for: _CFBooleanGetValue
0000a776	testb	%al,%al
0000a778	je	0x0000a783
0000a77a	movl	$0x00000001,0xe0(%ebp)
0000a781	jmp	0x0000a793
0000a783	movl	$__mh_bundle_header,0xe0(%ebp)
0000a78a	jmp	0x0000a793
0000a78c	movzbl	0xe4(%ebp),%eax
0000a790	movl	%eax,0xe0(%ebp)
0000a793	movl	0xe0(%ebp),%eax
0000a796	addl	$0x30,%esp
0000a799	popl	%ebx
0000a79a	popl	%esi
0000a79b	leave
0000a79c	ret
_getPreferenceInt:
0000a79d	pushl	%ebp
0000a79e	movl	%esp,%ebp
0000a7a0	pushl	%esi
0000a7a1	pushl	%ebx
0000a7a2	subl	$0x30,%esp
0000a7a5	calll	0x0000a7aa
0000a7aa	popl	%ebx
0000a7ab	movl	0x0c(%ebp),%eax
0000a7ae	movb	%al,0xe4(%ebp)
0000a7b1	leal	0x00004d3a(%ebx),%eax
0000a7b7	movl	(%eax),%eax
0000a7b9	movl	%eax,0x04(%esp)
0000a7bd	movl	0x08(%ebp),%eax
0000a7c0	movl	%eax,(%esp)
0000a7c3	calll	0x00011144	; symbol stub for: _CFPreferencesCopyAppValue
0000a7c8	movl	%eax,0xf4(%ebp)
0000a7cb	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000a7cf	je	0x0000a808
0000a7d1	movl	0xf4(%ebp),%eax
0000a7d4	movl	%eax,(%esp)
0000a7d7	calll	0x00011126	; symbol stub for: _CFGetTypeID
0000a7dc	movl	%eax,%esi
0000a7de	calll	0x000110cc	; symbol stub for: _CFBooleanGetTypeID
0000a7e3	cmpl	%eax,%esi
0000a7e5	jne	0x0000a808
0000a7e7	movl	0xf4(%ebp),%eax
0000a7ea	movl	%eax,(%esp)
0000a7ed	calll	0x000110d1	; symbol stub for: _CFBooleanGetValue
0000a7f2	testb	%al,%al
0000a7f4	je	0x0000a7ff
0000a7f6	movl	$0x00000001,0xe0(%ebp)
0000a7fd	jmp	0x0000a80f
0000a7ff	movl	$__mh_bundle_header,0xe0(%ebp)
0000a806	jmp	0x0000a80f
0000a808	movzbl	0xe4(%ebp),%eax
0000a80c	movl	%eax,0xe0(%ebp)
0000a80f	movl	0xe0(%ebp),%eax
0000a812	addl	$0x30,%esp
0000a815	popl	%ebx
0000a816	popl	%esi
0000a817	leave
0000a818	ret
_DEBUG_printf:
0000a819	pushl	%ebp
0000a81a	movl	%esp,%ebp
0000a81c	pushl	%ebx
0000a81d	subl	$0x24,%esp
0000a820	calll	0x0000a825
0000a825	popl	%ebx
0000a826	leal	0x0c(%ebp),%eax
0000a829	movl	%eax,0xf4(%ebp)
0000a82c	movl	0xf4(%ebp),%ecx
0000a82f	leal	0x000067df(%ebx),%eax
0000a835	movl	(%eax),%edx
0000a837	leal	0x000000b0(%edx),%edx
0000a83d	movl	%ecx,0x08(%esp)
0000a841	movl	0x08(%ebp),%eax
0000a844	movl	%eax,0x04(%esp)
0000a848	movl	%edx,(%esp)
0000a84b	calll	0x0001150e	; symbol stub for: _vfprintf
0000a850	addl	$0x24,%esp
0000a853	popl	%ebx
0000a854	leave
0000a855	ret
_CachedCheckIconRef:
0000a856	pushl	%ebp
0000a857	movl	%esp,%ebp
0000a859	pushl	%ebx
0000a85a	subl	$0x00000084,%esp
0000a860	calll	0x0000a865
0000a865	popl	%ebx
0000a866	leal	0x00004f5b(%ebx),%eax
0000a86c	movl	(%eax),%eax
0000a86e	testl	%eax,%eax
0000a870	jne	0x0000a921
0000a876	movl	$__mh_bundle_header,0xec(%ebp)
0000a87d	leal	0x00004957(%ebx),%eax
0000a883	movl	%eax,0xf4(%ebp)
0000a886	movl	$__mh_bundle_header,0x0c(%esp)
0000a88e	movl	$__mh_bundle_header,0x08(%esp)
0000a896	movl	0xf4(%ebp),%eax
0000a899	movl	%eax,0x04(%esp)
0000a89d	movl	$__mh_bundle_header,(%esp)
0000a8a4	calll	0x0001118f	; symbol stub for: _CFURLCreateWithFileSystemPath
0000a8a9	movl	%eax,0xf0(%ebp)
0000a8ac	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000a8b0	jne	0x0000a8bb
0000a8b2	movl	$__mh_bundle_header,0x94(%ebp)
0000a8b9	jmp	0x0000a92c
0000a8bb	leal	0x98(%ebp),%eax
0000a8be	movl	%eax,0x04(%esp)
0000a8c2	movl	0xf0(%ebp),%eax
0000a8c5	movl	%eax,(%esp)
0000a8c8	calll	0x00011194	; symbol stub for: _CFURLGetFSRef
0000a8cd	movzbl	%al,%eax
0000a8d0	movl	%eax,0xec(%ebp)
0000a8d3	leal	0xe8(%ebp),%eax
0000a8d6	movl	%eax,0x04(%esp)
0000a8da	leal	0x98(%ebp),%eax
0000a8dd	movl	%eax,(%esp)
0000a8e0	calll	0x00011360	; symbol stub for: _ReadIconFromFSRef
0000a8e5	movl	%eax,0xec(%ebp)
0000a8e8	movl	0xe8(%ebp),%eax
0000a8eb	movl	%eax,(%esp)
0000a8ee	calll	0x00011315	; symbol stub for: _HLock
0000a8f3	movl	0xe8(%ebp),%eax
0000a8f6	movl	(%eax),%eax
0000a8f8	movl	0x04(%eax),%edx
0000a8fb	movl	0xe8(%ebp),%eax
0000a8fe	movl	(%eax),%ecx
0000a900	leal	0x00004f5b(%ebx),%eax
0000a906	movl	%eax,0x08(%esp)
0000a90a	movl	%edx,0x04(%esp)
0000a90e	movl	%ecx,(%esp)
0000a911	calll	0x0001127a	; symbol stub for: _GetIconRefFromIconFamilyPtr
0000a916	movl	0xe8(%ebp),%eax
0000a919	movl	%eax,(%esp)
0000a91c	calll	0x0001122f	; symbol stub for: _DisposeHandle
0000a921	leal	0x00004f5b(%ebx),%eax
0000a927	movl	(%eax),%eax
0000a929	movl	%eax,0x94(%ebp)
0000a92c	movl	0x94(%ebp),%eax
0000a92f	addl	$0x00000084,%esp
0000a935	popl	%ebx
0000a936	leave
0000a937	ret
_EatMenuDescriptorWithExtremePrejudice:
0000a938	pushl	%ebp
0000a939	movl	%esp,%ebp
0000a93b	pushl	%ebx
0000a93c	subl	$0x54,%esp
0000a93f	calll	0x0000a944
0000a944	popl	%ebx
0000a945	leal	0x000048f8(%ebx),%edx
0000a94b	movl	0x14(%ebp),%eax
0000a94e	movl	%eax,0x04(%esp)
0000a952	movl	%edx,(%esp)
0000a955	calll	0x00006efc
0000a95a	movl	0x14(%ebp),%eax
0000a95d	movl	%eax,0xd0(%ebp)
0000a960	movl	$__mh_bundle_header,0xdc(%ebp)
0000a967	movl	$__mh_bundle_header,0xe0(%ebp)
0000a96e	movl	$0x00000001,0xe8(%ebp)
0000a975	movl	0x08(%ebp),%eax
0000a978	movl	(%eax),%eax
0000a97a	testl	%eax,%eax
0000a97c	jne	0x0000a9b1
0000a97e	movl	0x0c(%ebp),%eax
0000a981	movzwl	(%eax),%eax
0000a984	movw	%ax,0xee(%ebp)
0000a988	leal	0x01(%eax),%edx
0000a98b	movl	0x0c(%ebp),%eax
0000a98e	movw	%dx,(%eax)
0000a991	movswl	0xee(%ebp),%edx
0000a995	movl	0x08(%ebp),%eax
0000a998	movl	%eax,0x08(%esp)
0000a99c	movl	$__mh_bundle_header,0x04(%esp)
0000a9a4	movl	%edx,(%esp)
0000a9a7	calll	0x00011216	; symbol stub for: _CreateNewMenu
0000a9ac	jmp	0x0000abdb
0000a9b1	leal	0x00004d48(%ebx),%eax
0000a9b7	movzwl	(%eax),%eax
0000a9ba	movw	%ax,0xee(%ebp)
0000a9be	jmp	0x0000abdb
0000a9c3	movl	0xdc(%ebp),%eax
0000a9c6	movl	%eax,0xe0(%ebp)
0000a9c9	movl	$0x00000014,(%esp)
0000a9d0	calll	0x00011450	; symbol stub for: _malloc
0000a9d5	movl	%eax,0xdc(%ebp)
0000a9d8	movl	0x10(%ebp),%eax
0000a9db	movl	(%eax),%eax
0000a9dd	testl	%eax,%eax
0000a9df	jne	0x0000a9e9
0000a9e1	movl	0x10(%ebp),%edx
0000a9e4	movl	0xdc(%ebp),%eax
0000a9e7	movl	%eax,(%edx)
0000a9e9	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000a9ed	je	0x0000a9f8
0000a9ef	movl	0xe0(%ebp),%edx
0000a9f2	movl	0xdc(%ebp),%eax
0000a9f5	movl	%eax,0x10(%edx)
0000a9f8	movl	0xdc(%ebp),%edx
0000a9fb	movzwl	0xee(%ebp),%eax
0000a9ff	movw	%ax,(%edx)
0000aa02	movl	0xdc(%ebp),%edx
0000aa05	movl	0xe8(%ebp),%eax
0000aa08	movl	%eax,0x04(%edx)
0000aa0b	incl	0xe8(%ebp)
0000aa0e	movl	0xdc(%ebp),%eax
0000aa11	movl	$__mh_bundle_header,0x0c(%eax)
0000aa18	movl	0xdc(%ebp),%eax
0000aa1b	movl	$__mh_bundle_header,0x10(%eax)
0000aa22	leal	0x00003865(%ebx),%eax
0000aa28	movl	%eax,0x04(%esp)
0000aa2c	leal	0xd0(%ebp),%eax
0000aa2f	movl	%eax,(%esp)
0000aa32	calll	0x000114f5	; symbol stub for: _strsep
0000aa37	movl	%eax,0xd4(%ebp)
0000aa3a	movl	0xd0(%ebp),%eax
0000aa3d	movl	%eax,%edx
0000aa3f	movl	0xd4(%ebp),%eax
0000aa42	movl	%edx,%ecx
0000aa44	subl	%eax,%ecx
0000aa46	movl	%ecx,%eax
0000aa48	movl	%eax,0x08(%esp)
0000aa4c	movl	0xd4(%ebp),%eax
0000aa4f	movl	%eax,0x04(%esp)
0000aa53	movl	0xd4(%ebp),%eax
0000aa56	movl	%eax,(%esp)
0000aa59	calll	0x00002f13
0000aa5e	leal	0x000066cc(%ebx),%eax
0000aa64	movl	(%eax),%eax
0000aa66	movl	(%eax),%edx
0000aa68	movl	$0x08000100,0x08(%esp)
0000aa70	movl	0xd4(%ebp),%eax
0000aa73	movl	%eax,0x04(%esp)
0000aa77	movl	%edx,(%esp)
0000aa7a	calll	0x0001115d	; symbol stub for: _CFStringCreateWithCString
0000aa7f	movl	%eax,0xf0(%ebp)
0000aa82	leal	0x00003865(%ebx),%eax
0000aa88	movl	%eax,0x04(%esp)
0000aa8c	leal	0xd0(%ebp),%eax
0000aa8f	movl	%eax,(%esp)
0000aa92	calll	0x000114f5	; symbol stub for: _strsep
0000aa97	movl	%eax,0xd8(%ebp)
0000aa9a	leal	0x00003867(%ebx),%eax
0000aaa0	movl	%eax,0x04(%esp)
0000aaa4	leal	0xd0(%ebp),%eax
0000aaa7	movl	%eax,(%esp)
0000aaaa	calll	0x000114f5	; symbol stub for: _strsep
0000aaaf	movl	%eax,0xd4(%ebp)
0000aab2	movl	0xd0(%ebp),%eax
0000aab5	testl	%eax,%eax
0000aab7	jne	0x0000aac9
0000aab9	movl	0xd4(%ebp),%eax
0000aabc	movl	%eax,(%esp)
0000aabf	calll	0x000114eb	; symbol stub for: _strlen
0000aac4	movl	%eax,0xe4(%ebp)
0000aac7	jmp	0x0000aada
0000aac9	movl	0xd0(%ebp),%eax
0000aacc	movl	%eax,%edx
0000aace	movl	0xd4(%ebp),%eax
0000aad1	movl	%edx,%ecx
0000aad3	subl	%eax,%ecx
0000aad5	movl	%ecx,%eax
0000aad7	movl	%eax,0xe4(%ebp)
0000aada	movl	0xe4(%ebp),%eax
0000aadd	incl	%eax
0000aade	movl	%eax,(%esp)
0000aae1	calll	0x00011450	; symbol stub for: _malloc
0000aae6	movl	%eax,%edx
0000aae8	movl	0xdc(%ebp),%eax
0000aaeb	movl	%edx,0x08(%eax)
0000aaee	movl	0xe4(%ebp),%edx
0000aaf1	incl	%edx
0000aaf2	movl	0xdc(%ebp),%eax
0000aaf5	movl	0x08(%eax),%ecx
0000aaf8	movl	%edx,0x08(%esp)
0000aafc	movl	0xd4(%ebp),%eax
0000aaff	movl	%eax,0x04(%esp)
0000ab03	movl	%ecx,(%esp)
0000ab06	calll	0x00002f13
0000ab0b	movl	0xdc(%ebp),%eax
0000ab0e	movl	0x04(%eax),%edx
0000ab11	movl	0x08(%ebp),%eax
0000ab14	movl	(%eax),%ecx
0000ab16	leal	0xce(%ebp),%eax
0000ab19	movl	%eax,0x10(%esp)
0000ab1d	movl	%edx,0x0c(%esp)
0000ab21	movl	$__mh_bundle_header,0x08(%esp)
0000ab29	movl	0xf0(%ebp),%eax
0000ab2c	movl	%eax,0x04(%esp)
0000ab30	movl	%ecx,(%esp)
0000ab33	calll	0x0001109f	; symbol stub for: _AppendMenuItemTextWithCFString
0000ab38	movl	0xf0(%ebp),%eax
0000ab3b	movl	%eax,(%esp)
0000ab3e	calll	0x00011149	; symbol stub for: _CFRelease
0000ab43	movl	0xd4(%ebp),%edx
0000ab46	movl	0xd8(%ebp),%eax
0000ab49	movl	%edx,%ecx
0000ab4b	subl	%eax,%ecx
0000ab4d	movl	%ecx,%eax
0000ab4f	movl	%eax,0x08(%esp)
0000ab53	movl	0xd8(%ebp),%eax
0000ab56	movl	%eax,0x04(%esp)
0000ab5a	movl	0xd8(%ebp),%eax
0000ab5d	movl	%eax,(%esp)
0000ab60	calll	0x00002f13
0000ab65	movl	%eax,0xf4(%ebp)
0000ab68	movl	$0x0000007e,0x04(%esp)
0000ab70	movl	0xd8(%ebp),%eax
0000ab73	movl	%eax,(%esp)
0000ab76	calll	0x000114d7	; symbol stub for: _strchr
0000ab7b	testl	%eax,%eax
0000ab7d	je	0x0000abdb
0000ab7f	movl	$__mh_bundle_header,0xc8(%ebp)
0000ab86	movl	0xdc(%ebp),%edx
0000ab89	addl	$0x10,%edx
0000ab8c	movl	0xf4(%ebp),%eax
0000ab8f	movl	%eax,0x10(%esp)
0000ab93	movl	0xd8(%ebp),%eax
0000ab96	movl	%eax,0x0c(%esp)
0000ab9a	movl	%edx,0x08(%esp)
0000ab9e	movl	0x0c(%ebp),%eax
0000aba1	movl	%eax,0x04(%esp)
0000aba5	leal	0xc8(%ebp),%eax
0000aba8	movl	%eax,(%esp)
0000abab	calll	0x0000a938
0000abb0	movl	%eax,0xdc(%ebp)
0000abb3	movl	0xc8(%ebp),%edx
0000abb6	movzwl	0xce(%ebp),%eax
0000abba	movzwl	%ax,%ecx
0000abbd	movl	0x08(%ebp),%eax
0000abc0	movl	(%eax),%eax
0000abc2	movl	%edx,0x08(%esp)
0000abc6	movl	%ecx,0x04(%esp)
0000abca	movl	%eax,(%esp)
0000abcd	calll	0x0001138d	; symbol stub for: _SetMenuItemHierarchicalMenu
0000abd2	movl	0xc8(%ebp),%edx
0000abd5	movl	0xdc(%ebp),%eax
0000abd8	movl	%edx,0x0c(%eax)
0000abdb	movl	0xd0(%ebp),%eax
0000abde	movl	%eax,%edx
0000abe0	movl	0x14(%ebp),%eax
0000abe3	movl	%edx,%ecx
0000abe5	subl	%eax,%ecx
0000abe7	movl	%ecx,%eax
0000abe9	cmpl	0x18(%ebp),%eax
0000abec	jl	0x0000a9c3
0000abf2	movl	0xdc(%ebp),%eax
0000abf5	addl	$0x54,%esp
0000abf8	popl	%ebx
0000abf9	leave
0000abfa	ret
_EatMenuDescriptor:
0000abfb	pushl	%ebp
0000abfc	movl	%esp,%ebp
0000abfe	pushl	%ebx
0000abff	subl	$0x34,%esp
0000ac02	calll	0x0000ac07
0000ac07	popl	%ebx
0000ac08	leal	0x00004a85(%ebx),%eax
0000ac0e	movzwl	(%eax),%eax
0000ac11	incl	%eax
0000ac12	movw	%ax,0xf6(%ebp)
0000ac16	movl	0x0c(%ebp),%eax
0000ac19	movl	%eax,0x10(%esp)
0000ac1d	movl	0x08(%ebp),%eax
0000ac20	movl	%eax,0x0c(%esp)
0000ac24	leal	0x00004bdd(%ebx),%eax
0000ac2a	movl	%eax,0x08(%esp)
0000ac2e	leal	0xf6(%ebp),%eax
0000ac31	movl	%eax,0x04(%esp)
0000ac35	leal	0x00004bd9(%ebx),%eax
0000ac3b	movl	%eax,(%esp)
0000ac3e	calll	0x0000a938
0000ac43	addl	$0x34,%esp
0000ac46	popl	%ebx
0000ac47	leave
0000ac48	ret
_VerbResult:
0000ac49	pushl	%ebp
0000ac4a	movl	%esp,%ebp
0000ac4c	subl	$0x28,%esp
0000ac4f	movl	0x0c(%ebp),%eax
0000ac52	movw	%ax,0xe4(%ebp)
0000ac56	movl	$__mh_bundle_header,0xf4(%ebp)
0000ac5d	jmp	0x0000ac97
0000ac5f	movl	0x08(%ebp),%eax
0000ac62	movzwl	(%eax),%eax
0000ac65	cmpw	0xe4(%ebp),%ax
0000ac69	jne	0x0000ac81
0000ac6b	movl	0x08(%ebp),%eax
0000ac6e	movl	0x04(%eax),%eax
0000ac71	cmpl	0x10(%ebp),%eax
0000ac74	jne	0x0000ac81
0000ac76	movl	0x08(%ebp),%eax
0000ac79	movl	0x08(%eax),%eax
0000ac7c	movl	%eax,0xe0(%ebp)
0000ac7f	jmp	0x0000ac88
0000ac81	movl	$__mh_bundle_header,0xe0(%ebp)
0000ac88	movl	0xe0(%ebp),%eax
0000ac8b	movl	%eax,0xf4(%ebp)
0000ac8e	movl	0x08(%ebp),%eax
0000ac91	movl	0x10(%eax),%eax
0000ac94	movl	%eax,0x08(%ebp)
0000ac97	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000ac9b	jne	0x0000aca3
0000ac9d	cmpl	$__mh_bundle_header,0x08(%ebp)
0000aca1	jne	0x0000ac5f
0000aca3	movl	0xf4(%ebp),%eax
0000aca6	leave
0000aca7	ret
_FreeVerbList:
0000aca8	pushl	%ebp
0000aca9	movl	%esp,%ebp
0000acab	subl	$0x28,%esp
0000acae	jmp	0x0000acf0
0000acb0	movl	0x08(%ebp),%eax
0000acb3	movl	0x08(%eax),%eax
0000acb6	movl	%eax,(%esp)
0000acb9	calll	0x0001140f	; symbol stub for: _free
0000acbe	movl	0x08(%ebp),%eax
0000acc1	movl	0x0c(%eax),%eax
0000acc4	testl	%eax,%eax
0000acc6	je	0x0000acd6
0000acc8	movl	0x08(%ebp),%eax
0000accb	movl	0x0c(%eax),%eax
0000acce	movl	%eax,(%esp)
0000acd1	calll	0x00011239	; symbol stub for: _DisposeMenu
0000acd6	movl	0x08(%ebp),%eax
0000acd9	movl	%eax,0xf4(%ebp)
0000acdc	movl	0x08(%ebp),%eax
0000acdf	movl	0x10(%eax),%eax
0000ace2	movl	%eax,0x08(%ebp)
0000ace5	movl	0xf4(%ebp),%eax
0000ace8	movl	%eax,(%esp)
0000aceb	calll	0x0001140f	; symbol stub for: _free
0000acf0	cmpl	$__mh_bundle_header,0x08(%ebp)
0000acf4	jne	0x0000acb0
0000acf6	leave
0000acf7	ret
_RequestVerb:
0000acf8	pushl	%ebp
0000acf9	movl	%esp,%ebp
0000acfb	pushl	%ebx
0000acfc	subl	$0x00000444,%esp
0000ad02	calll	0x0000ad07
0000ad07	popl	%ebx
0000ad08	leal	0x00006309(%ebx),%eax
0000ad0e	movl	(%eax),%eax
0000ad10	movl	(%eax),%edx
0000ad12	movl	$0x08000100,0x08(%esp)
0000ad1a	movl	0x08(%ebp),%eax
0000ad1d	movl	%eax,0x04(%esp)
0000ad21	movl	%edx,(%esp)
0000ad24	calll	0x0001115d	; symbol stub for: _CFStringCreateWithCString
0000ad29	movl	%eax,0xec(%ebp)
0000ad2c	movl	$__mh_bundle_header,0xe4(%ebp)
0000ad33	movl	0xec(%ebp),%eax
0000ad36	movl	%eax,(%esp)
0000ad39	calll	0x00011180	; symbol stub for: _CFStringGetLength
0000ad3e	movl	%eax,0xe8(%ebp)
0000ad41	movl	0xe8(%ebp),%eax
0000ad44	addl	%eax,%eax
0000ad46	movl	%eax,(%esp)
0000ad49	calll	0x00011450	; symbol stub for: _malloc
0000ad4e	movl	%eax,0xf4(%ebp)
0000ad51	movl	0xf4(%ebp),%eax
0000ad54	movl	%eax,0x0c(%esp)
0000ad58	movl	0xe4(%ebp),%eax
0000ad5b	movl	0xe8(%ebp),%edx
0000ad5e	movl	%eax,0x04(%esp)
0000ad62	movl	%edx,0x08(%esp)
0000ad66	movl	0xec(%ebp),%eax
0000ad69	movl	%eax,(%esp)
0000ad6c	calll	0x00011176	; symbol stub for: _CFStringGetCharacters
0000ad71	movl	0xe8(%ebp),%edx
0000ad74	movl	$0x000003ff,0x10(%esp)
0000ad7c	leal	0xfffffbe4(%ebp),%eax
0000ad82	movl	%eax,0x0c(%esp)
0000ad86	movl	%edx,0x08(%esp)
0000ad8a	movl	0xf4(%ebp),%eax
0000ad8d	movl	%eax,0x04(%esp)
0000ad91	movl	$0x00000007,(%esp)
0000ad98	calll	0x00001af2
0000ad9d	movl	%eax,0xf0(%ebp)
0000ada0	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000ada4	js	0x0000adb1
0000ada6	movl	0xf0(%ebp),%eax
0000ada9	movb	$__mh_bundle_header,0xfffffbe4(%ebp,%eax)
0000adb1	movl	0xf4(%ebp),%eax
0000adb4	movl	%eax,(%esp)
0000adb7	calll	0x0001140f	; symbol stub for: _free
0000adbc	movl	0xec(%ebp),%eax
0000adbf	movl	%eax,(%esp)
0000adc2	calll	0x00011149	; symbol stub for: _CFRelease
0000adc7	addl	$0x00000444,%esp
0000adcd	popl	%ebx
0000adce	leave
0000adcf	ret
_RebuildMenu:
0000add0	pushl	%ebp
0000add1	movl	%esp,%ebp
0000add3	pushl	%ebx
0000add4	subl	$0x00000454,%esp
0000adda	calll	0x0000addf
0000addf	popl	%ebx
0000ade0	movl	$__mh_bundle_header,0xd8(%ebp)
0000ade7	movl	$__mh_bundle_header,0x04(%esp)
0000adef	leal	0xd8(%ebp),%eax
0000adf2	movl	%eax,(%esp)
0000adf5	calll	0x000023c7
0000adfa	movl	%eax,0xdc(%ebp)
0000adfd	movl	0xd8(%ebp),%eax
0000ae00	testl	%eax,%eax
0000ae02	jne	0x0000ae4f
0000ae04	leal	0x0000446d(%ebx),%eax
0000ae0a	movl	%eax,(%esp)
0000ae0d	calll	0x00006efc
0000ae12	movl	0xd8(%ebp),%eax
0000ae15	movl	%eax,0x04(%esp)
0000ae19	movl	0xdc(%ebp),%eax
0000ae1c	movl	%eax,(%esp)
0000ae1f	calll	0x00002e0b
0000ae24	movl	$0x00000001,0x04(%esp)
0000ae2c	leal	0xd8(%ebp),%eax
0000ae2f	movl	%eax,(%esp)
0000ae32	calll	0x000023c7
0000ae37	movl	%eax,0xdc(%ebp)
0000ae3a	movl	0xd8(%ebp),%eax
0000ae3d	testl	%eax,%eax
0000ae3f	jne	0x0000ae4f
0000ae41	leal	0x0000447d(%ebx),%eax
0000ae47	movl	%eax,(%esp)
0000ae4a	calll	0x00006efc
0000ae4f	movl	$__mh_bundle_header,0xe0(%ebp)
0000ae56	movl	$__mh_bundle_header,0xe4(%ebp)
0000ae5d	movl	$__mh_bundle_header,0xec(%ebp)
0000ae64	movl	$__mh_bundle_header,0xe8(%ebp)
0000ae6b	jmp	0x0000ae96
0000ae6d	movl	0xe8(%ebp),%eax
0000ae70	shll	$0x02,%eax
0000ae73	addl	0xdc(%ebp),%eax
0000ae76	movl	(%eax),%eax
0000ae78	testl	%eax,%eax
0000ae7a	je	0x0000ae93
0000ae7c	movl	0xe8(%ebp),%eax
0000ae7f	shll	$0x02,%eax
0000ae82	addl	0xdc(%ebp),%eax
0000ae85	movl	(%eax),%eax
0000ae87	movl	%eax,(%esp)
0000ae8a	calll	0x00011180	; symbol stub for: _CFStringGetLength
0000ae8f	incl	%eax
0000ae90	addl	%eax,0xe0(%ebp)
0000ae93	incl	0xe8(%ebp)
0000ae96	movl	0xd8(%ebp),%eax
0000ae99	cmpl	%eax,0xe8(%ebp)
0000ae9c	jl	0x0000ae6d
0000ae9e	movl	0xe0(%ebp),%eax
0000aea1	addl	%eax,%eax
0000aea3	movl	%eax,(%esp)
0000aea6	calll	0x00011450	; symbol stub for: _malloc
0000aeab	movl	%eax,0xf0(%ebp)
0000aeae	movl	$0xffffffff,0xf4(%ebp)
0000aeb5	movl	$__mh_bundle_header,0xe8(%ebp)
0000aebc	jmp	0x0000af7e
0000aec1	movl	0xe8(%ebp),%eax
0000aec4	shll	$0x02,%eax
0000aec7	addl	0xdc(%ebp),%eax
0000aeca	movl	(%eax),%eax
0000aecc	testl	%eax,%eax
0000aece	je	0x0000af7b
0000aed4	movl	0xe8(%ebp),%eax
0000aed7	shll	$0x02,%eax
0000aeda	addl	0xdc(%ebp),%eax
0000aedd	movl	(%eax),%eax
0000aedf	leal	0x000042cd(%ebx),%edx
0000aee5	movl	%eax,0x04(%esp)
0000aee9	movl	%edx,(%esp)
0000aeec	calll	0x00006efc
0000aef1	movl	$__mh_bundle_header,0xfffffbd0(%ebp)
0000aefb	movl	0xe8(%ebp),%eax
0000aefe	shll	$0x02,%eax
0000af01	addl	0xdc(%ebp),%eax
0000af04	movl	(%eax),%eax
0000af06	movl	%eax,(%esp)
0000af09	calll	0x00011180	; symbol stub for: _CFStringGetLength
0000af0e	movl	%eax,0xfffffbd4(%ebp)
0000af14	movl	0xec(%ebp),%eax
0000af17	addl	%eax,%eax
0000af19	movl	%eax,%edx
0000af1b	addl	0xf0(%ebp),%edx
0000af1e	movl	0xe8(%ebp),%eax
0000af21	shll	$0x02,%eax
0000af24	addl	0xdc(%ebp),%eax
0000af27	movl	(%eax),%ecx
0000af29	movl	%edx,0x0c(%esp)
0000af2d	movl	0xfffffbd0(%ebp),%eax
0000af33	movl	0xfffffbd4(%ebp),%edx
0000af39	movl	%eax,0x04(%esp)
0000af3d	movl	%edx,0x08(%esp)
0000af41	movl	%ecx,(%esp)
0000af44	calll	0x00011176	; symbol stub for: _CFStringGetCharacters
0000af49	movl	0xfffffbd4(%ebp),%eax
0000af4f	addl	%eax,0xec(%ebp)
0000af52	movl	0xec(%ebp),%eax
0000af55	movl	%eax,0xf4(%ebp)
0000af58	movl	0xec(%ebp),%eax
0000af5b	addl	%eax,%eax
0000af5d	addl	0xf0(%ebp),%eax
0000af60	movw	$0x007c,(%eax)
0000af65	incl	0xec(%ebp)
0000af68	cmpl	$0x00000400,0xec(%ebp)
0000af6f	jle	0x0000af7b
0000af71	movl	0xfffffbd4(%ebp),%eax
0000af77	incl	%eax
0000af78	subl	%eax,0xec(%ebp)
0000af7b	incl	0xe8(%ebp)
0000af7e	movl	0xd8(%ebp),%eax
0000af81	cmpl	%eax,0xe8(%ebp)
0000af84	jl	0x0000aec1
0000af8a	cmpl	$0xff,0xf4(%ebp)
0000af8e	jle	0x0000af9e
0000af90	movl	0xec(%ebp),%eax
0000af93	cmpl	0xf4(%ebp),%eax
0000af96	jle	0x0000af9e
0000af98	movl	0xf4(%ebp),%eax
0000af9b	movl	%eax,0xec(%ebp)
0000af9e	movl	$0x000003ff,0x10(%esp)
0000afa6	leal	0xfffffbd8(%ebp),%eax
0000afac	movl	%eax,0x0c(%esp)
0000afb0	movl	0xec(%ebp),%eax
0000afb3	movl	%eax,0x08(%esp)
0000afb7	movl	0xf0(%ebp),%eax
0000afba	movl	%eax,0x04(%esp)
0000afbe	movl	$0x00000006,(%esp)
0000afc5	calll	0x00001af2
0000afca	movl	%eax,0xe4(%ebp)
0000afcd	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000afd1	js	0x0000afde
0000afd3	movl	0xe4(%ebp),%eax
0000afd6	movb	$__mh_bundle_header,0xfffffbd8(%ebp,%eax)
0000afde	movl	0xf0(%ebp),%eax
0000afe1	movl	%eax,(%esp)
0000afe4	calll	0x0001140f	; symbol stub for: _free
0000afe9	movl	0xd8(%ebp),%eax
0000afec	movl	%eax,0x04(%esp)
0000aff0	movl	0xdc(%ebp),%eax
0000aff3	movl	%eax,(%esp)
0000aff6	calll	0x00002e0b
0000affb	movzbl	0xfffffbd8(%ebp),%eax
0000b002	movsbl	%al,%eax
0000b005	leal	0x0000448d(%ebx),%edx
0000b00b	movl	%eax,0x0c(%esp)
0000b00f	movl	0xe4(%ebp),%eax
0000b012	movl	%eax,0x08(%esp)
0000b016	leal	0xfffffbd8(%ebp),%eax
0000b01c	movl	%eax,0x04(%esp)
0000b020	movl	%edx,(%esp)
0000b023	calll	0x00006efc
0000b028	leal	0x00004a05(%ebx),%eax
0000b02e	movl	(%eax),%eax
0000b030	testl	%eax,%eax
0000b032	je	0x0000b050
0000b034	leal	0x00004a05(%ebx),%eax
0000b03a	movl	(%eax),%eax
0000b03c	movl	%eax,(%esp)
0000b03f	calll	0x0000aca8
0000b044	leal	0x00004a05(%ebx),%eax
0000b04a	movl	$__mh_bundle_header,(%eax)
0000b050	leal	0x00004a01(%ebx),%eax
0000b056	movl	(%eax),%eax
0000b058	movl	%eax,(%esp)
0000b05b	calll	0x0001120c	; symbol stub for: _CountMenuItems
0000b060	movzwl	%ax,%edx
0000b063	leal	0x00004a01(%ebx),%eax
0000b069	movl	(%eax),%eax
0000b06b	movl	%edx,0x08(%esp)
0000b06f	movl	$0x00000001,0x04(%esp)
0000b077	movl	%eax,(%esp)
0000b07a	calll	0x0001122a	; symbol stub for: _DeleteMenuItems
0000b07f	leal	0x00003af2(%ebx),%eax
0000b085	movl	%eax,0x04(%esp)
0000b089	leal	0xfffffbd8(%ebp),%eax
0000b08f	movl	%eax,(%esp)
0000b092	calll	0x000114dc	; symbol stub for: _strcmp
0000b097	testl	%eax,%eax
0000b099	je	0x0000b0ec
0000b09b	movl	0xe4(%ebp),%eax
0000b09e	movl	%eax,0x04(%esp)
0000b0a2	leal	0xfffffbd8(%ebp),%eax
0000b0a8	movl	%eax,(%esp)
0000b0ab	calll	0x0000abfb
0000b0b0	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000b0b4	jg	0x0000b120
0000b0b6	leal	0x00004725(%ebx),%eax
0000b0bc	movl	(%eax),%edx
0000b0be	leal	0x00004a01(%ebx),%eax
0000b0c4	movl	(%eax),%eax
0000b0c6	movl	$__mh_bundle_header,0x10(%esp)
0000b0ce	movl	$0x00000001,0x0c(%esp)
0000b0d6	movl	$0x00000001,0x08(%esp)
0000b0de	movl	%edx,0x04(%esp)
0000b0e2	movl	%eax,(%esp)
0000b0e5	calll	0x0001109f	; symbol stub for: _AppendMenuItemTextWithCFString
0000b0ea	jmp	0x0000b120
0000b0ec	leal	0x00004729(%ebx),%eax
0000b0f2	movl	(%eax),%edx
0000b0f4	leal	0x00004a01(%ebx),%eax
0000b0fa	movl	(%eax),%eax
0000b0fc	movl	$__mh_bundle_header,0x10(%esp)
0000b104	movl	$0x00000001,0x0c(%esp)
0000b10c	movl	$0x00000001,0x08(%esp)
0000b114	movl	%edx,0x04(%esp)
0000b118	movl	%eax,(%esp)
0000b11b	calll	0x0001109f	; symbol stub for: _AppendMenuItemTextWithCFString
0000b120	addl	$0x00000454,%esp
0000b126	popl	%ebx
0000b127	leave
0000b128	ret
_MenuEventHandler:
0000b129	pushl	%ebp
0000b12a	movl	%esp,%ebp
0000b12c	pushl	%esi
0000b12d	pushl	%ebx
0000b12e	subl	$0x40,%esp
0000b131	calll	0x0000b136
0000b136	popl	%ebx
0000b137	movl	$0xffffd96e,0xec(%ebp)
0000b13e	movl	0x0c(%ebp),%eax
0000b141	movl	%eax,(%esp)
0000b144	calll	0x0001126b	; symbol stub for: _GetEventClass
0000b149	cmpl	$0x6d656e75,%eax
0000b14e	jne	0x0000b1ec
0000b154	movl	0x0c(%ebp),%eax
0000b157	movl	%eax,(%esp)
0000b15a	calll	0x00011270	; symbol stub for: _GetEventKind
0000b15f	cmpl	$0x09,%eax
0000b162	jne	0x0000b1ec
0000b168	movl	0x0c(%ebp),%eax
0000b16b	movl	%eax,0x04(%esp)
0000b16f	movl	0x08(%ebp),%eax
0000b172	movl	%eax,(%esp)
0000b175	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000b17a	movl	%eax,0xec(%ebp)
0000b17d	movl	$__mh_bundle_header,0xe8(%ebp)
0000b184	leal	0xe8(%ebp),%eax
0000b187	movl	%eax,0x18(%esp)
0000b18b	movl	$__mh_bundle_header,0x14(%esp)
0000b193	movl	$0x00000004,0x10(%esp)
0000b19b	movl	$__mh_bundle_header,0x0c(%esp)
0000b1a3	movl	$0x6d656e75,0x08(%esp)
0000b1ab	movl	$0x2d2d2d2d,0x04(%esp)
0000b1b3	movl	0x0c(%ebp),%eax
0000b1b6	movl	%eax,(%esp)
0000b1b9	calll	0x00011275	; symbol stub for: _GetEventParameter
0000b1be	movl	%eax,0xf0(%ebp)
0000b1c1	movl	0xe8(%ebp),%edx
0000b1c4	leal	0x000046aa(%ebx),%eax
0000b1ca	movl	(%eax),%eax
0000b1cc	cmpl	%eax,%edx
0000b1ce	jne	0x0000b2f1
0000b1d4	leal	0x00004146(%ebx),%eax
0000b1da	movl	%eax,(%esp)
0000b1dd	calll	0x00006efc
0000b1e2	calll	0x0000add0
0000b1e7	jmp	0x0000b2f1
0000b1ec	movl	0x0c(%ebp),%eax
0000b1ef	movl	%eax,(%esp)
0000b1f2	calll	0x0001126b	; symbol stub for: _GetEventClass
0000b1f7	cmpl	$0x636d6473,%eax
0000b1fc	jne	0x0000b2f1
0000b202	movl	0x0c(%ebp),%eax
0000b205	movl	%eax,(%esp)
0000b208	calll	0x00011270	; symbol stub for: _GetEventKind
0000b20d	cmpl	$0x01,%eax
0000b210	jne	0x0000b2f1
0000b216	leal	0xda(%ebp),%eax
0000b219	movl	%eax,0x18(%esp)
0000b21d	movl	$__mh_bundle_header,0x14(%esp)
0000b225	movl	$0x0000000e,0x10(%esp)
0000b22d	movl	$__mh_bundle_header,0x0c(%esp)
0000b235	movl	$0x68636d64,0x08(%esp)
0000b23d	movl	$0x2d2d2d2d,0x04(%esp)
0000b245	movl	0x0c(%ebp),%eax
0000b248	movl	%eax,(%esp)
0000b24b	calll	0x00011275	; symbol stub for: _GetEventParameter
0000b250	movl	%eax,0xf0(%ebp)
0000b253	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000b257	setne	%al
0000b25a	movzbl	%al,%eax
0000b25d	testl	%eax,%eax
0000b25f	je	0x0000b2ad
0000b261	movl	$__mh_bundle_header,0x1c(%esp)
0000b269	movl	$0x00000154,0x18(%esp)
0000b271	leal	0x000037b6(%ebx),%eax
0000b277	movl	%eax,0x14(%esp)
0000b27b	movl	$__mh_bundle_header,0x10(%esp)
0000b283	leal	0x000037f7(%ebx),%eax
0000b289	movl	%eax,0x0c(%esp)
0000b28d	leal	0x00002736(%ebx),%eax
0000b293	movl	%eax,0x08(%esp)
0000b297	movl	$__mh_bundle_header,0x04(%esp)
0000b29f	movl	$0x3f2a3f2a,(%esp)
0000b2a6	calll	0x00011220	; symbol stub for: _DebugAssert
0000b2ab	jmp	0x0000b2f1
0000b2ad	movl	0xde(%ebp),%esi
0000b2b0	movl	0xe2(%ebp),%eax
0000b2b3	movl	%eax,(%esp)
0000b2b6	calll	0x0001128e	; symbol stub for: _GetMenuID
0000b2bb	movswl	%ax,%edx
0000b2be	leal	0x000046ae(%ebx),%eax
0000b2c4	movl	(%eax),%eax
0000b2c6	movl	%esi,0x08(%esp)
0000b2ca	movl	%edx,0x04(%esp)
0000b2ce	movl	%eax,(%esp)
0000b2d1	calll	0x0000ac49
0000b2d6	movl	%eax,0xf4(%ebp)
0000b2d9	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000b2dd	je	0x0000b2f1
0000b2df	movl	0xf4(%ebp),%eax
0000b2e2	movl	%eax,(%esp)
0000b2e5	calll	0x0000acf8
0000b2ea	movl	$__mh_bundle_header,0xec(%ebp)
0000b2f1	movl	0xec(%ebp),%eax
0000b2f4	addl	$0x40,%esp
0000b2f7	popl	%ebx
0000b2f8	popl	%esi
0000b2f9	leave
0000b2fa	ret
_DropboxButtonEventHandler:
0000b2fb	pushl	%ebp
0000b2fc	movl	%esp,%ebp
0000b2fe	pushl	%ebx
0000b2ff	subl	$0x00000094,%esp
0000b305	calll	0x0000b30a
0000b30a	popl	%ebx
0000b30b	movl	$0xffffd96e,0xec(%ebp)
0000b312	movl	0x0c(%ebp),%eax
0000b315	movl	%eax,(%esp)
0000b318	calll	0x00011270	; symbol stub for: _GetEventKind
0000b31d	movl	%eax,0x90(%ebp)
0000b320	cmpl	$0x69,0x90(%ebp)
0000b324	je	0x0000b342
0000b326	cmpl	$0x000000a1,0x90(%ebp)
0000b32d	je	0x0000b598
0000b333	cmpl	$0x0d,0x90(%ebp)
0000b337	je	0x0000b5dd
0000b33d	jmp	0x0000b834
0000b342	leal	0x000044ba(%ebx),%eax
0000b348	movl	(%eax),%eax
0000b34a	movl	%eax,(%esp)
0000b34d	calll	0x000111da	; symbol stub for: _CGImageGetWidth
0000b352	addl	$0x02,%eax
0000b355	movl	%eax,0x94(%ebp)
0000b358	cmpl	$__mh_bundle_header,0x94(%ebp)
0000b35c	js	0x0000b36a
0000b35e	cvtsi2ss	0x94(%ebp),%xmm0
0000b363	movss	%xmm0,0x98(%ebp)
0000b368	jmp	0x0000b387
0000b36a	movl	0x94(%ebp),%eax
0000b36d	shrl	%eax
0000b36f	movl	0x94(%ebp),%edx
0000b372	andl	$0x01,%edx
0000b375	orl	%edx,%eax
0000b377	cvtsi2ss	%eax,%xmm0
0000b37b	movaps	%xmm0,%xmm1
0000b37e	addss	%xmm0,%xmm1
0000b382	movss	%xmm1,0x98(%ebp)
0000b387	leal	0x000044ba(%ebx),%eax
0000b38d	movl	(%eax),%eax
0000b38f	movl	%eax,(%esp)
0000b392	calll	0x000111d5	; symbol stub for: _CGImageGetHeight
0000b397	movl	%eax,0x9c(%ebp)
0000b39a	cmpl	$__mh_bundle_header,0x9c(%ebp)
0000b39e	js	0x0000b3ac
0000b3a0	cvtsi2ss	0x9c(%ebp),%xmm0
0000b3a5	movss	%xmm0,0xa0(%ebp)
0000b3aa	jmp	0x0000b3c9
0000b3ac	movl	0x9c(%ebp),%eax
0000b3af	shrl	%eax
0000b3b1	movl	0x9c(%ebp),%edx
0000b3b4	andl	$0x01,%edx
0000b3b7	orl	%edx,%eax
0000b3b9	cvtsi2ss	%eax,%xmm0
0000b3bd	movaps	%xmm0,%xmm1
0000b3c0	addss	%xmm0,%xmm1
0000b3c4	movss	%xmm1,0xa0(%ebp)
0000b3c9	movss	0x98(%ebp),%xmm0
0000b3ce	movss	%xmm0,0xe4(%ebp)
0000b3d3	movss	0xa0(%ebp),%xmm1
0000b3d8	movss	%xmm1,0xe8(%ebp)
0000b3dd	leal	0x000044ba(%ebx),%eax
0000b3e3	movl	(%eax),%eax
0000b3e5	movl	%eax,(%esp)
0000b3e8	calll	0x000111da	; symbol stub for: _CGImageGetWidth
0000b3ed	addl	$0x02,%eax
0000b3f0	movl	%eax,0xa4(%ebp)
0000b3f3	cmpl	$__mh_bundle_header,0xa4(%ebp)
0000b3f7	js	0x0000b405
0000b3f9	cvtsi2ss	0xa4(%ebp),%xmm0
0000b3fe	movss	%xmm0,0xa8(%ebp)
0000b403	jmp	0x0000b422
0000b405	movl	0xa4(%ebp),%eax
0000b408	shrl	%eax
0000b40a	movl	0xa4(%ebp),%edx
0000b40d	andl	$0x01,%edx
0000b410	orl	%edx,%eax
0000b412	cvtsi2ss	%eax,%xmm0
0000b416	movaps	%xmm0,%xmm1
0000b419	addss	%xmm0,%xmm1
0000b41d	movss	%xmm1,0xa8(%ebp)
0000b422	leal	0x000044ba(%ebx),%eax
0000b428	movl	(%eax),%eax
0000b42a	movl	%eax,(%esp)
0000b42d	calll	0x000111d5	; symbol stub for: _CGImageGetHeight
0000b432	movl	%eax,0xac(%ebp)
0000b435	cmpl	$__mh_bundle_header,0xac(%ebp)
0000b439	js	0x0000b447
0000b43b	cvtsi2ss	0xac(%ebp),%xmm0
0000b440	movss	%xmm0,0xb0(%ebp)
0000b445	jmp	0x0000b464
0000b447	movl	0xac(%ebp),%eax
0000b44a	shrl	%eax
0000b44c	movl	0xac(%ebp),%edx
0000b44f	andl	$0x01,%edx
0000b452	orl	%edx,%eax
0000b454	cvtsi2ss	%eax,%xmm0
0000b458	movaps	%xmm0,%xmm1
0000b45b	addss	%xmm0,%xmm1
0000b45f	movss	%xmm1,0xb0(%ebp)
0000b464	movss	0xa8(%ebp),%xmm0
0000b469	movss	%xmm0,0xdc(%ebp)
0000b46e	movss	0xb0(%ebp),%xmm1
0000b473	movss	%xmm1,0xe0(%ebp)
0000b478	leal	0xe4(%ebp),%eax
0000b47b	movl	%eax,0x10(%esp)
0000b47f	movl	$0x00000008,0x0c(%esp)
0000b487	movl	$0x6869737a,0x08(%esp)
0000b48f	movl	$0x6d6e737a,0x04(%esp)
0000b497	movl	0x0c(%ebp),%eax
0000b49a	movl	%eax,(%esp)
0000b49d	calll	0x00011383	; symbol stub for: _SetEventParameter
0000b4a2	movl	%eax,0xf0(%ebp)
0000b4a5	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000b4a9	setne	%al
0000b4ac	movzbl	%al,%eax
0000b4af	testl	%eax,%eax
0000b4b1	je	0x0000b502
0000b4b3	movl	$__mh_bundle_header,0x1c(%esp)
0000b4bb	movl	$0x0000017c,0x18(%esp)
0000b4c3	leal	0x000035e2(%ebx),%eax
0000b4c9	movl	%eax,0x14(%esp)
0000b4cd	movl	$__mh_bundle_header,0x10(%esp)
0000b4d5	leal	0x0000363f(%ebx),%eax
0000b4db	movl	%eax,0x0c(%esp)
0000b4df	leal	0x00002562(%ebx),%eax
0000b4e5	movl	%eax,0x08(%esp)
0000b4e9	movl	$__mh_bundle_header,0x04(%esp)
0000b4f1	movl	$0x3f2a3f2a,(%esp)
0000b4f8	calll	0x00011220	; symbol stub for: _DebugAssert
0000b4fd	jmp	0x0000b834
0000b502	leal	0xdc(%ebp),%eax
0000b505	movl	%eax,0x10(%esp)
0000b509	movl	$0x00000008,0x0c(%esp)
0000b511	movl	$0x6869737a,0x08(%esp)
0000b519	movl	$0x6d78737a,0x04(%esp)
0000b521	movl	0x0c(%ebp),%eax
0000b524	movl	%eax,(%esp)
0000b527	calll	0x00011383	; symbol stub for: _SetEventParameter
0000b52c	movl	%eax,0xf0(%ebp)
0000b52f	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000b533	setne	%al
0000b536	movzbl	%al,%eax
0000b539	testl	%eax,%eax
0000b53b	je	0x0000b58c
0000b53d	movl	$__mh_bundle_header,0x1c(%esp)
0000b545	movl	$0x00000189,0x18(%esp)
0000b54d	leal	0x000035e2(%ebx),%eax
0000b553	movl	%eax,0x14(%esp)
0000b557	movl	$__mh_bundle_header,0x10(%esp)
0000b55f	leal	0x0000363f(%ebx),%eax
0000b565	movl	%eax,0x0c(%esp)
0000b569	leal	0x00002562(%ebx),%eax
0000b56f	movl	%eax,0x08(%esp)
0000b573	movl	$__mh_bundle_header,0x04(%esp)
0000b57b	movl	$0x3f2a3f2a,(%esp)
0000b582	calll	0x00011220	; symbol stub for: _DebugAssert
0000b587	jmp	0x0000b834
0000b58c	movl	$__mh_bundle_header,0xec(%ebp)
0000b593	jmp	0x0000b834
0000b598	movl	0x10(%ebp),%eax
0000b59b	movl	%eax,(%esp)
0000b59e	calll	0x0001132e	; symbol stub for: _IsControlEnabled
0000b5a3	testb	%al,%al
0000b5a5	je	0x0000b5b4
0000b5a7	leal	0x000044ba(%ebx),%eax
0000b5ad	movl	(%eax),%eax
0000b5af	movl	%eax,0xb4(%ebp)
0000b5b2	jmp	0x0000b5bf
0000b5b4	leal	0x000044c6(%ebx),%eax
0000b5ba	movl	(%eax),%eax
0000b5bc	movl	%eax,0xb4(%ebp)
0000b5bf	movl	0x10(%ebp),%eax
0000b5c2	movl	0xb4(%ebp),%edx
0000b5c5	movl	%edx,0x04(%esp)
0000b5c9	movl	%eax,(%esp)
0000b5cc	calll	0x000112c0	; symbol stub for: _HIImageViewSetImage
0000b5d1	movl	$__mh_bundle_header,0xec(%ebp)
0000b5d8	jmp	0x0000b834
0000b5dd	leal	0xd8(%ebp),%eax
0000b5e0	movl	%eax,(%esp)
0000b5e3	calll	0x00011202	; symbol stub for: _CopyThemeIdentifier
0000b5e8	movl	0xd8(%ebp),%eax
0000b5eb	leal	0x00003f82(%ebx),%edx
0000b5f1	movl	$0x00000004,0x08(%esp)
0000b5f9	movl	%eax,0x04(%esp)
0000b5fd	movl	%edx,(%esp)
0000b600	calll	0x00011158	; symbol stub for: _CFStringCompare
0000b605	testl	%eax,%eax
0000b607	jne	0x0000b622
0000b609	leal	0x000044c2(%ebx),%eax
0000b60f	movl	(%eax),%eax
0000b611	movl	0x10(%ebp),%edx
0000b614	movl	%eax,0x04(%esp)
0000b618	movl	%edx,(%esp)
0000b61b	calll	0x000112c0	; symbol stub for: _HIImageViewSetImage
0000b620	jmp	0x0000b639
0000b622	leal	0x000044be(%ebx),%eax
0000b628	movl	(%eax),%eax
0000b62a	movl	0x10(%ebp),%edx
0000b62d	movl	%eax,0x04(%esp)
0000b631	movl	%edx,(%esp)
0000b634	calll	0x000112c0	; symbol stub for: _HIImageViewSetImage
0000b639	movl	0xd8(%ebp),%eax
0000b63c	movl	%eax,(%esp)
0000b63f	calll	0x00011149	; symbol stub for: _CFRelease
0000b644	movl	0x10(%ebp),%edx
0000b647	leal	0xc8(%ebp),%eax
0000b64a	movl	%eax,0x04(%esp)
0000b64e	movl	%edx,(%esp)
0000b651	calll	0x0001130b	; symbol stub for: _HIViewGetBounds
0000b656	movl	%eax,0xf0(%ebp)
0000b659	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000b65d	setne	%al
0000b660	movzbl	%al,%eax
0000b663	testl	%eax,%eax
0000b665	je	0x0000b6b6
0000b667	movl	$__mh_bundle_header,0x1c(%esp)
0000b66f	movl	$0x000001ae,0x18(%esp)
0000b677	leal	0x000035e2(%ebx),%eax
0000b67d	movl	%eax,0x14(%esp)
0000b681	movl	$__mh_bundle_header,0x10(%esp)
0000b689	leal	0x00003687(%ebx),%eax
0000b68f	movl	%eax,0x0c(%esp)
0000b693	leal	0x00002562(%ebx),%eax
0000b699	movl	%eax,0x08(%esp)
0000b69d	movl	$__mh_bundle_header,0x04(%esp)
0000b6a5	movl	$0x3f2a3f2a,(%esp)
0000b6ac	calll	0x00011220	; symbol stub for: _DebugAssert
0000b6b1	jmp	0x0000b816
0000b6b6	calll	0x000112a7	; symbol stub for: _GetUserFocusWindow
0000b6bb	movl	%eax,0xf4(%ebp)
0000b6be	movl	0xf4(%ebp),%eax
0000b6c1	movl	%eax,(%esp)
0000b6c4	calll	0x00011310	; symbol stub for: _HIViewGetRoot
0000b6c9	movl	0x10(%ebp),%edx
0000b6cc	movl	%eax,0x08(%esp)
0000b6d0	movl	%edx,0x04(%esp)
0000b6d4	leal	0xc8(%ebp),%eax
0000b6d7	movl	%eax,(%esp)
0000b6da	calll	0x00011306	; symbol stub for: _HIViewConvertRect
0000b6df	movl	%eax,0xf0(%ebp)
0000b6e2	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000b6e6	setne	%al
0000b6e9	movzbl	%al,%eax
0000b6ec	testl	%eax,%eax
0000b6ee	je	0x0000b73f
0000b6f0	movl	$__mh_bundle_header,0x1c(%esp)
0000b6f8	movl	$0x000001bb,0x18(%esp)
0000b700	leal	0x000035e2(%ebx),%eax
0000b706	movl	%eax,0x14(%esp)
0000b70a	movl	$__mh_bundle_header,0x10(%esp)
0000b712	leal	0x00003687(%ebx),%eax
0000b718	movl	%eax,0x0c(%esp)
0000b71c	leal	0x00002562(%ebx),%eax
0000b722	movl	%eax,0x08(%esp)
0000b726	movl	$__mh_bundle_header,0x04(%esp)
0000b72e	movl	$0x3f2a3f2a,(%esp)
0000b735	calll	0x00011220	; symbol stub for: _DebugAssert
0000b73a	jmp	0x0000b816
0000b73f	leal	0xc0(%ebp),%eax
0000b742	movl	%eax,0x08(%esp)
0000b746	movl	$0x00000020,0x04(%esp)
0000b74e	movl	0xf4(%ebp),%eax
0000b751	movl	%eax,(%esp)
0000b754	calll	0x000112ac	; symbol stub for: _GetWindowBounds
0000b759	movl	%eax,0xf0(%ebp)
0000b75c	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000b760	setne	%al
0000b763	movzbl	%al,%eax
0000b766	testl	%eax,%eax
0000b768	je	0x0000b7b6
0000b76a	movl	$__mh_bundle_header,0x1c(%esp)
0000b772	movl	$0x000001c8,0x18(%esp)
0000b77a	leal	0x000035e2(%ebx),%eax
0000b780	movl	%eax,0x14(%esp)
0000b784	movl	$__mh_bundle_header,0x10(%esp)
0000b78c	leal	0x00003687(%ebx),%eax
0000b792	movl	%eax,0x0c(%esp)
0000b796	leal	0x00002562(%ebx),%eax
0000b79c	movl	%eax,0x08(%esp)
0000b7a0	movl	$__mh_bundle_header,0x04(%esp)
0000b7a8	movl	$0x3f2a3f2a,(%esp)
0000b7af	calll	0x00011220	; symbol stub for: _DebugAssert
0000b7b4	jmp	0x0000b816
0000b7b6	movzwl	0xc2(%ebp),%eax
0000b7ba	movl	%eax,%edx
0000b7bc	movss	0xc8(%ebp),%xmm0
0000b7c1	cvttss2si	%xmm0,%eax
0000b7c5	leal	(%edx,%eax),%eax
0000b7c8	movswl	%ax,%ecx
0000b7cb	movzwl	0xc0(%ebp),%eax
0000b7cf	movl	%eax,%edx
0000b7d1	movss	0xcc(%ebp),%xmm0
0000b7d6	cvttss2si	%xmm0,%eax
0000b7da	addl	%eax,%edx
0000b7dc	movss	0xd4(%ebp),%xmm0
0000b7e1	cvttss2si	%xmm0,%eax
0000b7e5	addl	%eax,%edx
0000b7e7	leal	0x000044ca(%ebx),%eax
0000b7ed	movzwl	(%eax),%eax
0000b7f0	leal	(%edx,%eax),%eax
0000b7f3	movswl	%ax,%edx
0000b7f6	leal	0x000044d6(%ebx),%eax
0000b7fc	movl	(%eax),%eax
0000b7fe	movl	$__mh_bundle_header,0x0c(%esp)
0000b806	movl	%ecx,0x08(%esp)
0000b80a	movl	%edx,0x04(%esp)
0000b80e	movl	%eax,(%esp)
0000b811	calll	0x00011351	; symbol stub for: _PopUpMenuSelect
0000b816	leal	0x000044ba(%ebx),%eax
0000b81c	movl	(%eax),%eax
0000b81e	movl	0x10(%ebp),%edx
0000b821	movl	%eax,0x04(%esp)
0000b825	movl	%edx,(%esp)
0000b828	calll	0x000112c0	; symbol stub for: _HIImageViewSetImage
0000b82d	movl	$__mh_bundle_header,0xec(%ebp)
0000b834	movl	0xec(%ebp),%eax
0000b837	addl	$0x00000094,%esp
0000b83d	popl	%ebx
0000b83e	leave
0000b83f	ret
_DropboxToolbarItemHandler:
0000b840	pushl	%ebp
0000b841	movl	%esp,%ebp
0000b843	pushl	%edi
0000b844	pushl	%esi
0000b845	pushl	%ebx
0000b846	subl	$0x5c,%esp
0000b849	calll	0x0000b84e
0000b84e	popl	%ebx
0000b84f	movl	$0xffffd96e,0xdc(%ebp)
0000b856	movl	0x10(%ebp),%eax
0000b859	movl	%eax,0xe4(%ebp)
0000b85c	movl	0x0c(%ebp),%eax
0000b85f	movl	%eax,(%esp)
0000b862	calll	0x0001126b	; symbol stub for: _GetEventClass
0000b867	movl	%eax,0xc0(%ebp)
0000b86a	cmpl	$0x68696f62,0xc0(%ebp)
0000b871	je	0x0000b885
0000b873	cmpl	$0x74626974,0xc0(%ebp)
0000b87a	je	0x0000ba32
0000b880	jmp	0x0000bbee
0000b885	movl	0x0c(%ebp),%eax
0000b888	movl	%eax,(%esp)
0000b88b	calll	0x00011270	; symbol stub for: _GetEventKind
0000b890	movl	%eax,0xc4(%ebp)
0000b893	cmpl	$0x02,0xc4(%ebp)
0000b897	je	0x0000b99e
0000b89d	cmpl	$0x03,0xc4(%ebp)
0000b8a1	je	0x0000ba1b
0000b8a7	cmpl	$0x01,0xc4(%ebp)
0000b8ab	je	0x0000b8b2
0000b8ad	jmp	0x0000bbee
0000b8b2	leal	0xd8(%ebp),%eax
0000b8b5	movl	%eax,0x18(%esp)
0000b8b9	movl	$__mh_bundle_header,0x14(%esp)
0000b8c1	movl	$0x00000004,0x10(%esp)
0000b8c9	movl	$__mh_bundle_header,0x0c(%esp)
0000b8d1	movl	$0x68696f62,0x08(%esp)
0000b8d9	movl	$0x68696f69,0x04(%esp)
0000b8e1	movl	0x0c(%ebp),%eax
0000b8e4	movl	%eax,(%esp)
0000b8e7	calll	0x00011275	; symbol stub for: _GetEventParameter
0000b8ec	movl	$0x00000004,(%esp)
0000b8f3	calll	0x00011450	; symbol stub for: _malloc
0000b8f8	movl	%eax,0xd4(%ebp)
0000b8fb	movl	0xd4(%ebp),%eax
0000b8fe	testl	%eax,%eax
0000b900	sete	%al
0000b903	movzbl	%al,%eax
0000b906	testl	%eax,%eax
0000b908	je	0x0000b960
0000b90a	movl	$__mh_bundle_header,0x1c(%esp)
0000b912	movl	$0x000001fd,0x18(%esp)
0000b91a	leal	0x0000309e(%ebx),%eax
0000b920	movl	%eax,0x14(%esp)
0000b924	movl	$__mh_bundle_header,0x10(%esp)
0000b92c	leal	0x0000315c(%ebx),%eax
0000b932	movl	%eax,0x0c(%esp)
0000b936	leal	0x0000316a(%ebx),%eax
0000b93c	movl	%eax,0x08(%esp)
0000b940	movl	$__mh_bundle_header,0x04(%esp)
0000b948	movl	$0x3f2a3f2a,(%esp)
0000b94f	calll	0x00011220	; symbol stub for: _DebugAssert
0000b954	movl	$0xffffff94,0xdc(%ebp)
0000b95b	jmp	0x0000bbee
0000b960	movl	0xd4(%ebp),%edx
0000b963	movl	0xd8(%ebp),%eax
0000b966	movl	%eax,(%edx)
0000b968	leal	0xd4(%ebp),%eax
0000b96b	movl	%eax,0x10(%esp)
0000b96f	movl	$0x00000004,0x0c(%esp)
0000b977	movl	$0x766f6964,0x08(%esp)
0000b97f	movl	$0x68696f69,0x04(%esp)
0000b987	movl	0x0c(%ebp),%eax
0000b98a	movl	%eax,(%esp)
0000b98d	calll	0x00011383	; symbol stub for: _SetEventParameter
0000b992	movl	$__mh_bundle_header,0xdc(%ebp)
0000b999	jmp	0x0000bbee
0000b99e	movl	0x0c(%ebp),%eax
0000b9a1	movl	%eax,0x04(%esp)
0000b9a5	movl	0x08(%ebp),%eax
0000b9a8	movl	%eax,(%esp)
0000b9ab	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000b9b0	testl	%eax,%eax
0000b9b2	jne	0x0000bbee
0000b9b8	leal	0x00003cb2(%ebx),%eax
0000b9be	movl	(%eax),%edx
0000b9c0	movl	0xe4(%ebp),%eax
0000b9c3	movl	(%eax),%eax
0000b9c5	movl	%edx,0x04(%esp)
0000b9c9	movl	%eax,(%esp)
0000b9cc	calll	0x000112f7	; symbol stub for: _HIToolbarItemSetLabel
0000b9d1	leal	0x00003cae(%ebx),%eax
0000b9d7	movl	(%eax),%edx
0000b9d9	leal	0x00003caa(%ebx),%eax
0000b9df	movl	(%eax),%ecx
0000b9e1	movl	0xe4(%ebp),%eax
0000b9e4	movl	(%eax),%eax
0000b9e6	movl	%edx,0x08(%esp)
0000b9ea	movl	%ecx,0x04(%esp)
0000b9ee	movl	%eax,(%esp)
0000b9f1	calll	0x000112f2	; symbol stub for: _HIToolbarItemSetHelpText
0000b9f6	leal	0x00003f92(%ebx),%eax
0000b9fc	movl	(%eax),%edx
0000b9fe	movl	0xe4(%ebp),%eax
0000ba01	movl	(%eax),%eax
0000ba03	movl	%edx,0x04(%esp)
0000ba07	movl	%eax,(%esp)
0000ba0a	calll	0x00011301	; symbol stub for: _HIToolbarItemSetMenu
0000ba0f	movl	$__mh_bundle_header,0xdc(%ebp)
0000ba16	jmp	0x0000bbee
0000ba1b	movl	0xe4(%ebp),%eax
0000ba1e	movl	%eax,(%esp)
0000ba21	calll	0x0001140f	; symbol stub for: _free
0000ba26	movl	$__mh_bundle_header,0xdc(%ebp)
0000ba2d	jmp	0x0000bbee
0000ba32	movl	0x0c(%ebp),%eax
0000ba35	movl	%eax,(%esp)
0000ba38	calll	0x00011270	; symbol stub for: _GetEventKind
0000ba3d	cmpl	$0x06,%eax
0000ba40	je	0x0000ba47
0000ba42	jmp	0x0000bbee
0000ba47	leal	0x00003f76(%ebx),%eax
0000ba4d	movl	(%eax),%edx
0000ba4f	leal	0xd0(%ebp),%eax
0000ba52	movl	%eax,0x04(%esp)
0000ba56	movl	%edx,(%esp)
0000ba59	calll	0x000112bb	; symbol stub for: _HIImageViewCreate
0000ba5e	movl	%eax,0xe0(%ebp)
0000ba61	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000ba65	setne	%al
0000ba68	movzbl	%al,%eax
0000ba6b	testl	%eax,%eax
0000ba6d	je	0x0000babe
0000ba6f	movl	$__mh_bundle_header,0x1c(%esp)
0000ba77	movl	$0x00000232,0x18(%esp)
0000ba7f	leal	0x0000309e(%ebx),%eax
0000ba85	movl	%eax,0x14(%esp)
0000ba89	movl	$__mh_bundle_header,0x10(%esp)
0000ba91	leal	0x00003192(%ebx),%eax
0000ba97	movl	%eax,0x0c(%esp)
0000ba9b	leal	0x0000201e(%ebx),%eax
0000baa1	movl	%eax,0x08(%esp)
0000baa5	movl	$__mh_bundle_header,0x04(%esp)
0000baad	movl	$0x3f2a3f2a,(%esp)
0000bab4	calll	0x00011220	; symbol stub for: _DebugAssert
0000bab9	jmp	0x0000bbee
0000babe	leal	0xd0(%ebp),%eax
0000bac1	movl	%eax,0x10(%esp)
0000bac5	movl	$0x00000004,0x0c(%esp)
0000bacd	movl	$0x6374726c,0x08(%esp)
0000bad5	movl	$0x6374726c,0x04(%esp)
0000badd	movl	0x0c(%ebp),%eax
0000bae0	movl	%eax,(%esp)
0000bae3	calll	0x00011383	; symbol stub for: _SetEventParameter
0000bae8	movl	%eax,0xe0(%ebp)
0000baeb	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000baef	setne	%al
0000baf2	movzbl	%al,%eax
0000baf5	testl	%eax,%eax
0000baf7	je	0x0000bb48
0000baf9	movl	$__mh_bundle_header,0x1c(%esp)
0000bb01	movl	$0x0000023f,0x18(%esp)
0000bb09	leal	0x0000309e(%ebx),%eax
0000bb0f	movl	%eax,0x14(%esp)
0000bb13	movl	$__mh_bundle_header,0x10(%esp)
0000bb1b	leal	0x00003192(%ebx),%eax
0000bb21	movl	%eax,0x0c(%esp)
0000bb25	leal	0x0000201e(%ebx),%eax
0000bb2b	movl	%eax,0x08(%esp)
0000bb2f	movl	$__mh_bundle_header,0x04(%esp)
0000bb37	movl	$0x3f2a3f2a,(%esp)
0000bb3e	calll	0x00011220	; symbol stub for: _DebugAssert
0000bb43	jmp	0x0000bbee
0000bb48	movl	0xd0(%ebp),%esi
0000bb4b	leal	0x00003cc2(%ebx),%eax
0000bb51	movl	(%eax),%edi
0000bb53	movl	0xd0(%ebp),%eax
0000bb56	movl	%eax,(%esp)
0000bb59	calll	0x00011261	; symbol stub for: _GetControlEventTarget
0000bb5e	movl	%eax,%edx
0000bb60	movl	$__mh_bundle_header,0x14(%esp)
0000bb68	movl	%esi,0x10(%esp)
0000bb6c	leal	0x00003732(%ebx),%eax
0000bb72	movl	%eax,0x0c(%esp)
0000bb76	movl	$0x00000003,0x08(%esp)
0000bb7e	movl	%edi,0x04(%esp)
0000bb82	movl	%edx,(%esp)
0000bb85	calll	0x00011324	; symbol stub for: _InstallEventHandler
0000bb8a	movl	%eax,0xe0(%ebp)
0000bb8d	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000bb91	setne	%al
0000bb94	movzbl	%al,%eax
0000bb97	testl	%eax,%eax
0000bb99	je	0x0000bbe7
0000bb9b	movl	$__mh_bundle_header,0x1c(%esp)
0000bba3	movl	$0x0000024d,0x18(%esp)
0000bbab	leal	0x0000309e(%ebx),%eax
0000bbb1	movl	%eax,0x14(%esp)
0000bbb5	movl	$__mh_bundle_header,0x10(%esp)
0000bbbd	leal	0x00003192(%ebx),%eax
0000bbc3	movl	%eax,0x0c(%esp)
0000bbc7	leal	0x0000201e(%ebx),%eax
0000bbcd	movl	%eax,0x08(%esp)
0000bbd1	movl	$__mh_bundle_header,0x04(%esp)
0000bbd9	movl	$0x3f2a3f2a,(%esp)
0000bbe0	calll	0x00011220	; symbol stub for: _DebugAssert
0000bbe5	jmp	0x0000bbee
0000bbe7	movl	$__mh_bundle_header,0xdc(%ebp)
0000bbee	movl	0xdc(%ebp),%eax
0000bbf1	addl	$0x5c,%esp
0000bbf4	popl	%ebx
0000bbf5	popl	%esi
0000bbf6	popl	%edi
0000bbf7	leave
0000bbf8	ret
_RegisterDropboxToolbarItemClass:
0000bbf9	pushl	%ebp
0000bbfa	movl	%esp,%ebp
0000bbfc	pushl	%esi
0000bbfd	pushl	%ebx
0000bbfe	subl	$0x20,%esp
0000bc01	calll	0x0000bc06
0000bc06	popl	%ebx
0000bc07	leal	0x0000390e(%ebx),%eax
0000bc0d	movl	(%eax),%edx
0000bc0f	leal	0x00003696(%ebx),%ecx
0000bc15	leal	0x000038ee(%ebx),%eax
0000bc1b	movl	(%eax),%esi
0000bc1d	movl	$__mh_bundle_header,0x1c(%esp)
0000bc25	movl	$__mh_bundle_header,0x18(%esp)
0000bc2d	leal	0x0000335a(%ebx),%eax
0000bc33	movl	%eax,0x14(%esp)
0000bc37	movl	$0x00000004,0x10(%esp)
0000bc3f	movl	%edx,0x0c(%esp)
0000bc43	movl	$__mh_bundle_header,0x08(%esp)
0000bc4b	movl	%ecx,0x04(%esp)
0000bc4f	movl	%esi,(%esp)
0000bc52	calll	0x000112cf	; symbol stub for: _HIObjectRegisterSubclass
0000bc57	addl	$0x20,%esp
0000bc5a	popl	%ebx
0000bc5b	popl	%esi
0000bc5c	leave
0000bc5d	ret
_CreateDropboxToolbarItem:
0000bc5e	pushl	%ebp
0000bc5f	movl	%esp,%ebp
0000bc61	pushl	%ebx
0000bc62	subl	$0x34,%esp
0000bc65	calll	0x0000bc6a
0000bc6a	popl	%ebx
0000bc6b	movl	$__mh_bundle_header,0xec(%ebp)
0000bc72	calll	0x00011266	; symbol stub for: _GetCurrentEventTime
0000bc77	leal	0xf0(%ebp),%eax
0000bc7a	movl	%eax,0x18(%esp)
0000bc7e	movl	$__mh_bundle_header,0x14(%esp)
0000bc86	fstpl	0x0c(%esp)
0000bc8a	movl	$0x00000002,0x08(%esp)
0000bc92	movl	$0x68696f62,0x04(%esp)
0000bc9a	movl	$__mh_bundle_header,(%esp)
0000bca1	calll	0x00011211	; symbol stub for: _CreateEvent
0000bca6	movl	%eax,0xf4(%ebp)
0000bca9	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000bcad	setne	%al
0000bcb0	movzbl	%al,%eax
0000bcb3	testl	%eax,%eax
0000bcb5	je	0x0000bd06
0000bcb7	movl	$__mh_bundle_header,0x1c(%esp)
0000bcbf	movl	$0x0000027b,0x18(%esp)
0000bcc7	leal	0x00002c82(%ebx),%eax
0000bccd	movl	%eax,0x14(%esp)
0000bcd1	movl	$__mh_bundle_header,0x10(%esp)
0000bcd9	leal	0x00002da2(%ebx),%eax
0000bcdf	movl	%eax,0x0c(%esp)
0000bce3	leal	0x00001c02(%ebx),%eax
0000bce9	movl	%eax,0x08(%esp)
0000bced	movl	$__mh_bundle_header,0x04(%esp)
0000bcf5	movl	$0x3f2a3f2a,(%esp)
0000bcfc	calll	0x00011220	; symbol stub for: _DebugAssert
0000bd01	jmp	0x0000be52
0000bd06	movl	0xf0(%ebp),%edx
0000bd09	leal	0x0000388a(%ebx),%eax
0000bd0f	movl	%eax,0x10(%esp)
0000bd13	movl	$0x00000004,0x0c(%esp)
0000bd1b	movl	$0x63667374,0x08(%esp)
0000bd23	movl	$0x74626969,0x04(%esp)
0000bd2b	movl	%edx,(%esp)
0000bd2e	calll	0x00011383	; symbol stub for: _SetEventParameter
0000bd33	movl	%eax,0xf4(%ebp)
0000bd36	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000bd3a	setne	%al
0000bd3d	movzbl	%al,%eax
0000bd40	testl	%eax,%eax
0000bd42	je	0x0000bd93
0000bd44	movl	$__mh_bundle_header,0x1c(%esp)
0000bd4c	movl	$0x00000288,0x18(%esp)
0000bd54	leal	0x00002c82(%ebx),%eax
0000bd5a	movl	%eax,0x14(%esp)
0000bd5e	movl	$__mh_bundle_header,0x10(%esp)
0000bd66	leal	0x00002dca(%ebx),%eax
0000bd6c	movl	%eax,0x0c(%esp)
0000bd70	leal	0x00001c02(%ebx),%eax
0000bd76	movl	%eax,0x08(%esp)
0000bd7a	movl	$__mh_bundle_header,0x04(%esp)
0000bd82	movl	$0x3f2a3f2a,(%esp)
0000bd89	calll	0x00011220	; symbol stub for: _DebugAssert
0000bd8e	jmp	0x0000be47
0000bd93	movl	$__mh_bundle_header,0xe8(%ebp)
0000bd9a	movl	0xf0(%ebp),%edx
0000bd9d	leal	0xe8(%ebp),%eax
0000bda0	movl	%eax,0x10(%esp)
0000bda4	movl	$0x00000004,0x0c(%esp)
0000bdac	movl	$0x6d61676e,0x08(%esp)
0000bdb4	movl	$0x61747472,0x04(%esp)
0000bdbc	movl	%edx,(%esp)
0000bdbf	calll	0x00011383	; symbol stub for: _SetEventParameter
0000bdc4	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000bdc8	setne	%al
0000bdcb	movzbl	%al,%eax
0000bdce	testl	%eax,%eax
0000bdd0	je	0x0000be1e
0000bdd2	movl	$__mh_bundle_header,0x1c(%esp)
0000bdda	movl	$0x00000297,0x18(%esp)
0000bde2	leal	0x00002c82(%ebx),%eax
0000bde8	movl	%eax,0x14(%esp)
0000bdec	movl	$__mh_bundle_header,0x10(%esp)
0000bdf4	leal	0x00002dca(%ebx),%eax
0000bdfa	movl	%eax,0x0c(%esp)
0000bdfe	leal	0x00001c02(%ebx),%eax
0000be04	movl	%eax,0x08(%esp)
0000be08	movl	$__mh_bundle_header,0x04(%esp)
0000be10	movl	$0x3f2a3f2a,(%esp)
0000be17	calll	0x00011220	; symbol stub for: _DebugAssert
0000be1c	jmp	0x0000be47
0000be1e	movl	0xf0(%ebp),%edx
0000be21	leal	0x0000388a(%ebx),%eax
0000be27	movl	(%eax),%ecx
0000be29	leal	0xec(%ebp),%eax
0000be2c	movl	%eax,0x08(%esp)
0000be30	movl	%edx,0x04(%esp)
0000be34	movl	%ecx,(%esp)
0000be37	calll	0x000112c5	; symbol stub for: _HIObjectCreate
0000be3c	testl	%eax,%eax
0000be3e	je	0x0000be47
0000be40	movl	$__mh_bundle_header,0xec(%ebp)
0000be47	movl	0xf0(%ebp),%eax
0000be4a	movl	%eax,(%esp)
0000be4d	calll	0x00011365	; symbol stub for: _ReleaseEvent
0000be52	movl	0xec(%ebp),%eax
0000be55	addl	$0x34,%esp
0000be58	popl	%ebx
0000be59	leave
0000be5a	ret
_DropboxToolbarDelegate:
0000be5b	pushl	%ebp
0000be5c	movl	%esp,%ebp
0000be5e	pushl	%ebx
0000be5f	subl	$0x74,%esp
0000be62	calll	0x0000be67
0000be67	popl	%ebx
0000be68	movl	$0xffffd96e,0xe0(%ebp)
0000be6f	movl	0x0c(%ebp),%eax
0000be72	movl	%eax,(%esp)
0000be75	calll	0x00011270	; symbol stub for: _GetEventKind
0000be7a	movl	%eax,0xb4(%ebp)
0000be7d	cmpl	$0x09,0xb4(%ebp)
0000be81	ja	0x0000c68e
0000be87	movl	0xb4(%ebp),%edx
0000be8a	shll	$0x02,%edx
0000be8d	leal	0x00000035(%ebx),%eax
0000be93	movl	(%edx,%eax),%eax
0000be96	addl	%ebx,%eax
0000be98	jmp	*%eax
0000be9a	nop
0000be9c	daa
0000be9d	orb	%al,(%eax)
0000be9f	addb	%bl,__mh_bundle_header(%ebp)
0000bea2	addb	%al,(%eax)
0000bea4	xchgl	%esi,%eax
0000bea5	addb	%al,(%eax)
0000bea7	addb	%dh,%ah
0000bea9	addl	%eax,(%eax)
0000beab	addb	%ah,(%edi)
0000bead	orb	%al,(%eax)
0000beaf	addb	%dh,%ah
0000beb1	addl	(%eax),%eax
0000beb3	addb	%dh,%ah
0000beb5	addl	$0x08270000,%eax
0000beba	addb	%al,(%eax)
0000bebc	daa
0000bebd	orb	%al,(%eax)
0000bebf	addb	%ah,(%ebx)
0000bec1	popl	%es
0000bec2	addb	%al,(%eax)
0000bec4	movl	0x0c(%ebp),%eax
0000bec7	movl	%eax,0x04(%esp)
0000becb	movl	0x08(%ebp),%eax
0000bece	movl	%eax,(%esp)
0000bed1	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000bed6	movl	%eax,0xe0(%ebp)
0000bed9	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000bedd	je	0x0000c68e
0000bee3	leal	0x00003445(%ebx),%edx
0000bee9	movl	0xe0(%ebp),%eax
0000beec	movl	%eax,0x04(%esp)
0000bef0	movl	%edx,(%esp)
0000bef3	calll	0x00006efc
0000bef8	jmp	0x0000c68e
0000befd	movl	0x0c(%ebp),%eax
0000bf00	movl	%eax,0x04(%esp)
0000bf04	movl	0x08(%ebp),%eax
0000bf07	movl	%eax,(%esp)
0000bf0a	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000bf0f	movl	%eax,0xe0(%ebp)
0000bf12	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000bf16	je	0x0000bf2d
0000bf18	leal	0x00003455(%ebx),%edx
0000bf1e	movl	0xe0(%ebp),%eax
0000bf21	movl	%eax,0x04(%esp)
0000bf25	movl	%edx,(%esp)
0000bf28	calll	0x00006efc
0000bf2d	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000bf31	setne	%al
0000bf34	movzbl	%al,%eax
0000bf37	testl	%eax,%eax
0000bf39	je	0x0000bf8a
0000bf3b	movl	$__mh_bundle_header,0x1c(%esp)
0000bf43	movl	$0x000002c0,0x18(%esp)
0000bf4b	leal	0x00002a85(%ebx),%eax
0000bf51	movl	%eax,0x14(%esp)
0000bf55	movl	$__mh_bundle_header,0x10(%esp)
0000bf5d	leal	0x00002c4f(%ebx),%eax
0000bf63	movl	%eax,0x0c(%esp)
0000bf67	leal	0x00002c65(%ebx),%eax
0000bf6d	movl	%eax,0x08(%esp)
0000bf71	movl	$__mh_bundle_header,0x04(%esp)
0000bf79	movl	$0x3f2a3f2a,(%esp)
0000bf80	calll	0x00011220	; symbol stub for: _DebugAssert
0000bf85	jmp	0x0000c68e
0000bf8a	leal	0xdc(%ebp),%eax
0000bf8d	movl	%eax,0x18(%esp)
0000bf91	movl	$__mh_bundle_header,0x14(%esp)
0000bf99	movl	$0x00000004,0x10(%esp)
0000bfa1	movl	$__mh_bundle_header,0x0c(%esp)
0000bfa9	movl	$0x63666d61,0x08(%esp)
0000bfb1	movl	$0x6d617272,0x04(%esp)
0000bfb9	movl	0x0c(%ebp),%eax
0000bfbc	movl	%eax,(%esp)
0000bfbf	calll	0x00011275	; symbol stub for: _GetEventParameter
0000bfc4	movl	%eax,0xe4(%ebp)
0000bfc7	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000bfcb	je	0x0000bfe2
0000bfcd	leal	0x00003465(%ebx),%edx
0000bfd3	movl	0xe4(%ebp),%eax
0000bfd6	movl	%eax,0x04(%esp)
0000bfda	movl	%edx,(%esp)
0000bfdd	calll	0x00006efc
0000bfe2	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000bfe6	setne	%al
0000bfe9	movzbl	%al,%eax
0000bfec	testl	%eax,%eax
0000bfee	je	0x0000c03f
0000bff0	movl	$__mh_bundle_header,0x1c(%esp)
0000bff8	movl	$0x000002d4,0x18(%esp)
0000c000	leal	0x00002a85(%ebx),%eax
0000c006	movl	%eax,0x14(%esp)
0000c00a	movl	$__mh_bundle_header,0x10(%esp)
0000c012	leal	0x00002c4f(%ebx),%eax
0000c018	movl	%eax,0x0c(%esp)
0000c01c	leal	0x00001a05(%ebx),%eax
0000c022	movl	%eax,0x08(%esp)
0000c026	movl	$__mh_bundle_header,0x04(%esp)
0000c02e	movl	$0x3f2a3f2a,(%esp)
0000c035	calll	0x00011220	; symbol stub for: _DebugAssert
0000c03a	jmp	0x0000c68e
0000c03f	leal	0x0000368d(%ebx),%eax
0000c045	movl	(%eax),%eax
0000c047	movl	0xdc(%ebp),%edx
0000c04a	movl	%eax,0x04(%esp)
0000c04e	movl	%edx,(%esp)
0000c051	calll	0x000110b3	; symbol stub for: _CFArrayAppendValue
0000c056	jmp	0x0000c68e
0000c05b	leal	0xd8(%ebp),%eax
0000c05e	movl	%eax,0x18(%esp)
0000c062	movl	$__mh_bundle_header,0x14(%esp)
0000c06a	movl	$0x00000004,0x10(%esp)
0000c072	movl	$__mh_bundle_header,0x0c(%esp)
0000c07a	movl	$0x63667374,0x08(%esp)
0000c082	movl	$0x74626969,0x04(%esp)
0000c08a	movl	0x0c(%ebp),%eax
0000c08d	movl	%eax,(%esp)
0000c090	calll	0x00011275	; symbol stub for: _GetEventParameter
0000c095	movl	%eax,0xe4(%ebp)
0000c098	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c09c	je	0x0000c0b3
0000c09e	leal	0x00003475(%ebx),%edx
0000c0a4	movl	0xe4(%ebp),%eax
0000c0a7	movl	%eax,0x04(%esp)
0000c0ab	movl	%edx,(%esp)
0000c0ae	calll	0x00006efc
0000c0b3	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c0b7	setne	%al
0000c0ba	movzbl	%al,%eax
0000c0bd	testl	%eax,%eax
0000c0bf	je	0x0000c110
0000c0c1	movl	$__mh_bundle_header,0x1c(%esp)
0000c0c9	movl	$0x000002ec,0x18(%esp)
0000c0d1	leal	0x00002a85(%ebx),%eax
0000c0d7	movl	%eax,0x14(%esp)
0000c0db	movl	$__mh_bundle_header,0x10(%esp)
0000c0e3	leal	0x00002c4f(%ebx),%eax
0000c0e9	movl	%eax,0x0c(%esp)
0000c0ed	leal	0x00001a05(%ebx),%eax
0000c0f3	movl	%eax,0x08(%esp)
0000c0f7	movl	$__mh_bundle_header,0x04(%esp)
0000c0ff	movl	$0x3f2a3f2a,(%esp)
0000c106	calll	0x00011220	; symbol stub for: _DebugAssert
0000c10b	jmp	0x0000c68e
0000c110	movl	0xd8(%ebp),%edx
0000c113	leal	0x0000368d(%ebx),%eax
0000c119	movl	(%eax),%eax
0000c11b	movl	$0x00000004,0x08(%esp)
0000c123	movl	%edx,0x04(%esp)
0000c127	movl	%eax,(%esp)
0000c12a	calll	0x00011158	; symbol stub for: _CFStringCompare
0000c12f	testl	%eax,%eax
0000c131	jne	0x0000c215
0000c137	calll	0x0000bc5e
0000c13c	movl	%eax,0xd4(%ebp)
0000c13f	movl	0xd4(%ebp),%eax
0000c142	testl	%eax,%eax
0000c144	je	0x0000c1fb
0000c14a	leal	0xd4(%ebp),%eax
0000c14d	movl	%eax,0x10(%esp)
0000c151	movl	$0x00000004,0x0c(%esp)
0000c159	movl	$0x74626974,0x08(%esp)
0000c161	movl	$0x74626974,0x04(%esp)
0000c169	movl	0x0c(%ebp),%eax
0000c16c	movl	%eax,(%esp)
0000c16f	calll	0x00011383	; symbol stub for: _SetEventParameter
0000c174	movl	%eax,0xe8(%ebp)
0000c177	cmpl	$__mh_bundle_header,0xe8(%ebp)
0000c17b	je	0x0000c192
0000c17d	leal	0x00003485(%ebx),%edx
0000c183	movl	0xe8(%ebp),%eax
0000c186	movl	%eax,0x04(%esp)
0000c18a	movl	%edx,(%esp)
0000c18d	calll	0x00006efc
0000c192	cmpl	$__mh_bundle_header,0xe8(%ebp)
0000c196	setne	%al
0000c199	movzbl	%al,%eax
0000c19c	testl	%eax,%eax
0000c19e	je	0x0000c1ef
0000c1a0	movl	$__mh_bundle_header,0x1c(%esp)
0000c1a8	movl	$0x00000302,0x18(%esp)
0000c1b0	leal	0x00002a85(%ebx),%eax
0000c1b6	movl	%eax,0x14(%esp)
0000c1ba	movl	$__mh_bundle_header,0x10(%esp)
0000c1c2	leal	0x00002c4f(%ebx),%eax
0000c1c8	movl	%eax,0x0c(%esp)
0000c1cc	leal	0x00001a05(%ebx),%eax
0000c1d2	movl	%eax,0x08(%esp)
0000c1d6	movl	$__mh_bundle_header,0x04(%esp)
0000c1de	movl	$0x3f2a3f2a,(%esp)
0000c1e5	calll	0x00011220	; symbol stub for: _DebugAssert
0000c1ea	jmp	0x0000c68e
0000c1ef	movl	$__mh_bundle_header,0xe0(%ebp)
0000c1f6	jmp	0x0000c68e
0000c1fb	movl	0xd4(%ebp),%eax
0000c1fe	leal	0x00003495(%ebx),%edx
0000c204	movl	%eax,0x04(%esp)
0000c208	movl	%edx,(%esp)
0000c20b	calll	0x00006efc
0000c210	jmp	0x0000c68e
0000c215	movl	0x0c(%ebp),%eax
0000c218	movl	%eax,0x04(%esp)
0000c21c	movl	0x08(%ebp),%eax
0000c21f	movl	%eax,(%esp)
0000c222	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000c227	movl	%eax,0xe0(%ebp)
0000c22a	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000c22e	je	0x0000c68e
0000c234	cmpl	$0xffffd96e,0xe0(%ebp)
0000c23b	je	0x0000c68e
0000c241	leal	0x000034a5(%ebx),%edx
0000c247	movl	0xe0(%ebp),%eax
0000c24a	movl	%eax,0x04(%esp)
0000c24e	movl	%edx,(%esp)
0000c251	calll	0x00006efc
0000c256	jmp	0x0000c68e
0000c25b	leal	0xd0(%ebp),%eax
0000c25e	movl	%eax,0x18(%esp)
0000c262	movl	$__mh_bundle_header,0x14(%esp)
0000c26a	movl	$0x00000004,0x10(%esp)
0000c272	movl	$__mh_bundle_header,0x0c(%esp)
0000c27a	movl	$0x74626974,0x08(%esp)
0000c282	movl	$0x74626974,0x04(%esp)
0000c28a	movl	0x0c(%ebp),%eax
0000c28d	movl	%eax,(%esp)
0000c290	calll	0x00011275	; symbol stub for: _GetEventParameter
0000c295	movl	%eax,0xe4(%ebp)
0000c298	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c29c	je	0x0000c2b3
0000c29e	leal	0x000034b5(%ebx),%edx
0000c2a4	movl	0xe4(%ebp),%eax
0000c2a7	movl	%eax,0x04(%esp)
0000c2ab	movl	%edx,(%esp)
0000c2ae	calll	0x00006efc
0000c2b3	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c2b7	setne	%al
0000c2ba	movzbl	%al,%eax
0000c2bd	testl	%eax,%eax
0000c2bf	je	0x0000c310
0000c2c1	movl	$__mh_bundle_header,0x1c(%esp)
0000c2c9	movl	$0x00000329,0x18(%esp)
0000c2d1	leal	0x00002a85(%ebx),%eax
0000c2d7	movl	%eax,0x14(%esp)
0000c2db	movl	$__mh_bundle_header,0x10(%esp)
0000c2e3	leal	0x00002c4f(%ebx),%eax
0000c2e9	movl	%eax,0x0c(%esp)
0000c2ed	leal	0x00001a05(%ebx),%eax
0000c2f3	movl	%eax,0x08(%esp)
0000c2f7	movl	$__mh_bundle_header,0x04(%esp)
0000c2ff	movl	$0x3f2a3f2a,(%esp)
0000c306	calll	0x00011220	; symbol stub for: _DebugAssert
0000c30b	jmp	0x0000c68e
0000c310	movl	0xd0(%ebp),%edx
0000c313	leal	0xcc(%ebp),%eax
0000c316	movl	%eax,0x04(%esp)
0000c31a	movl	%edx,(%esp)
0000c31d	calll	0x000112ed	; symbol stub for: _HIToolbarItemCopyIdentifier
0000c322	movl	0xcc(%ebp),%edx
0000c325	leal	0x0000368d(%ebx),%eax
0000c32b	movl	(%eax),%eax
0000c32d	movl	$0x00000004,0x08(%esp)
0000c335	movl	%edx,0x04(%esp)
0000c339	movl	%eax,(%esp)
0000c33c	calll	0x00011158	; symbol stub for: _CFStringCompare
0000c341	testl	%eax,%eax
0000c343	jne	0x0000c415
0000c349	leal	0xc8(%ebp),%eax
0000c34c	movl	%eax,0x18(%esp)
0000c350	movl	$__mh_bundle_header,0x14(%esp)
0000c358	movl	$0x00000004,0x10(%esp)
0000c360	movl	$__mh_bundle_header,0x0c(%esp)
0000c368	movl	$0x63666978,0x08(%esp)
0000c370	movl	$0x696e6478,0x04(%esp)
0000c378	movl	0x0c(%ebp),%eax
0000c37b	movl	%eax,(%esp)
0000c37e	calll	0x00011275	; symbol stub for: _GetEventParameter
0000c383	movl	%eax,0xe4(%ebp)
0000c386	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c38a	je	0x0000c3a1
0000c38c	leal	0x000034c5(%ebx),%edx
0000c392	movl	0xe4(%ebp),%eax
0000c395	movl	%eax,0x04(%esp)
0000c399	movl	%edx,(%esp)
0000c39c	calll	0x00006efc
0000c3a1	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c3a5	setne	%al
0000c3a8	movzbl	%al,%eax
0000c3ab	testl	%eax,%eax
0000c3ad	je	0x0000c3fe
0000c3af	movl	$__mh_bundle_header,0x1c(%esp)
0000c3b7	movl	$0x00000340,0x18(%esp)
0000c3bf	leal	0x00002a85(%ebx),%eax
0000c3c5	movl	%eax,0x14(%esp)
0000c3c9	movl	$__mh_bundle_header,0x10(%esp)
0000c3d1	leal	0x00002c4f(%ebx),%eax
0000c3d7	movl	%eax,0x0c(%esp)
0000c3db	leal	0x00001a05(%ebx),%eax
0000c3e1	movl	%eax,0x08(%esp)
0000c3e5	movl	$__mh_bundle_header,0x04(%esp)
0000c3ed	movl	$0x3f2a3f2a,(%esp)
0000c3f4	calll	0x00011220	; symbol stub for: _DebugAssert
0000c3f9	jmp	0x0000c68e
0000c3fe	movl	0xc8(%ebp),%eax
0000c401	movl	%eax,(%esp)
0000c404	calll	0x000030cb
0000c409	movl	$__mh_bundle_header,0xe0(%ebp)
0000c410	jmp	0x0000c68e
0000c415	movl	0x0c(%ebp),%eax
0000c418	movl	%eax,0x04(%esp)
0000c41c	movl	0x08(%ebp),%eax
0000c41f	movl	%eax,(%esp)
0000c422	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000c427	movl	%eax,0xe0(%ebp)
0000c42a	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000c42e	je	0x0000c68e
0000c434	cmpl	$0xffffd96e,0xe0(%ebp)
0000c43b	je	0x0000c68e
0000c441	leal	0x000034d5(%ebx),%edx
0000c447	movl	0xe0(%ebp),%eax
0000c44a	movl	%eax,0x04(%esp)
0000c44e	movl	%edx,(%esp)
0000c451	calll	0x00006efc
0000c456	jmp	0x0000c68e
0000c45b	leal	0xc4(%ebp),%eax
0000c45e	movl	%eax,0x18(%esp)
0000c462	movl	$__mh_bundle_header,0x14(%esp)
0000c46a	movl	$0x00000004,0x10(%esp)
0000c472	movl	$__mh_bundle_header,0x0c(%esp)
0000c47a	movl	$0x74626974,0x08(%esp)
0000c482	movl	$0x74626974,0x04(%esp)
0000c48a	movl	0x0c(%ebp),%eax
0000c48d	movl	%eax,(%esp)
0000c490	calll	0x00011275	; symbol stub for: _GetEventParameter
0000c495	movl	%eax,0xe4(%ebp)
0000c498	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c49c	je	0x0000c4b3
0000c49e	leal	0x000034e5(%ebx),%edx
0000c4a4	movl	0xe4(%ebp),%eax
0000c4a7	movl	%eax,0x04(%esp)
0000c4ab	movl	%edx,(%esp)
0000c4ae	calll	0x00006efc
0000c4b3	cmpl	$__mh_bundle_header,0xe4(%ebp)
0000c4b7	setne	%al
0000c4ba	movzbl	%al,%eax
0000c4bd	testl	%eax,%eax
0000c4bf	je	0x0000c510
0000c4c1	movl	$__mh_bundle_header,0x1c(%esp)
0000c4c9	movl	$0x00000364,0x18(%esp)
0000c4d1	leal	0x00002a85(%ebx),%eax
0000c4d7	movl	%eax,0x14(%esp)
0000c4db	movl	$__mh_bundle_header,0x10(%esp)
0000c4e3	leal	0x00002c4f(%ebx),%eax
0000c4e9	movl	%eax,0x0c(%esp)
0000c4ed	leal	0x00001a05(%ebx),%eax
0000c4f3	movl	%eax,0x08(%esp)
0000c4f7	movl	$__mh_bundle_header,0x04(%esp)
0000c4ff	movl	$0x3f2a3f2a,(%esp)
0000c506	calll	0x00011220	; symbol stub for: _DebugAssert
0000c50b	jmp	0x0000c68e
0000c510	movl	0xc4(%ebp),%edx
0000c513	leal	0xc0(%ebp),%eax
0000c516	movl	%eax,0x04(%esp)
0000c51a	movl	%edx,(%esp)
0000c51d	calll	0x000112ed	; symbol stub for: _HIToolbarItemCopyIdentifier
0000c522	movl	0xc0(%ebp),%edx
0000c525	leal	0x0000368d(%ebx),%eax
0000c52b	movl	(%eax),%eax
0000c52d	movl	$0x00000004,0x08(%esp)
0000c535	movl	%edx,0x04(%esp)
0000c539	movl	%eax,(%esp)
0000c53c	calll	0x00011158	; symbol stub for: _CFStringCompare
0000c541	testl	%eax,%eax
0000c543	jne	0x0000c551
0000c545	movl	$0xfffffffe,(%esp)
0000c54c	calll	0x000030cb
0000c551	movl	0x0c(%ebp),%eax
0000c554	movl	%eax,0x04(%esp)
0000c558	movl	0x08(%ebp),%eax
0000c55b	movl	%eax,(%esp)
0000c55e	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000c563	movl	%eax,0xe0(%ebp)
0000c566	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000c56a	je	0x0000c68e
0000c570	leal	_DropboxMenuEventHandler(%ebx),%edx
0000c576	movl	0xe0(%ebp),%eax
0000c579	movl	%eax,0x04(%esp)
0000c57d	movl	%edx,(%esp)
0000c580	calll	0x00006efc
0000c585	jmp	0x0000c68e
0000c58a	movl	0x0c(%ebp),%eax
0000c58d	movl	%eax,0x04(%esp)
0000c591	movl	0x08(%ebp),%eax
0000c594	movl	%eax,(%esp)
0000c597	calll	0x000111e4	; symbol stub for: _CallNextEventHandler
0000c59c	movl	%eax,0xe0(%ebp)
0000c59f	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000c5a3	je	0x0000c5c3
0000c5a5	cmpl	$0xffffd96e,0xe0(%ebp)
0000c5ac	je	0x0000c5c3
0000c5ae	leal	0x00003505(%ebx),%edx
0000c5b4	movl	0xe0(%ebp),%eax
0000c5b7	movl	%eax,0x04(%esp)
0000c5bb	movl	%edx,(%esp)
0000c5be	calll	0x00006efc
0000c5c3	leal	0x00003975(%ebx),%eax
0000c5c9	movl	(%eax),%edx
0000c5cb	leal	0xbc(%ebp),%eax
0000c5ce	movl	%eax,0x04(%esp)
0000c5d2	movl	%edx,(%esp)
0000c5d5	calll	0x000112d9	; symbol stub for: _HIToolbarCopyItems
0000c5da	movl	$0xfffffffe,0xec(%ebp)
0000c5e1	movl	$__mh_bundle_header,0xf4(%ebp)
0000c5e8	jmp	0x0000c65e
0000c5ea	movl	0xbc(%ebp),%edx
0000c5ed	movl	0xf4(%ebp),%eax
0000c5f0	movl	%eax,0x04(%esp)
0000c5f4	movl	%edx,(%esp)
0000c5f7	calll	0x000110c7	; symbol stub for: _CFArrayGetValueAtIndex
0000c5fc	movl	%eax,0xf0(%ebp)
0000c5ff	movl	0xf0(%ebp),%eax
0000c602	movl	%eax,(%esp)
0000c605	calll	0x0001114e	; symbol stub for: _CFRetain
0000c60a	leal	0xb8(%ebp),%eax
0000c60d	movl	%eax,0x04(%esp)
0000c611	movl	0xf0(%ebp),%eax
0000c614	movl	%eax,(%esp)
0000c617	calll	0x000112ed	; symbol stub for: _HIToolbarItemCopyIdentifier
0000c61c	movl	0xb8(%ebp),%edx
0000c61f	leal	0x0000368d(%ebx),%eax
0000c625	movl	(%eax),%eax
0000c627	movl	$0x00000004,0x08(%esp)
0000c62f	movl	%edx,0x04(%esp)
0000c633	movl	%eax,(%esp)
0000c636	calll	0x00011158	; symbol stub for: _CFStringCompare
0000c63b	testl	%eax,%eax
0000c63d	jne	0x0000c645
0000c63f	movl	0xf4(%ebp),%eax
0000c642	movl	%eax,0xec(%ebp)
0000c645	movl	0xf0(%ebp),%eax
0000c648	movl	%eax,(%esp)
0000c64b	calll	0x00011149	; symbol stub for: _CFRelease
0000c650	movl	0xb8(%ebp),%eax
0000c653	movl	%eax,(%esp)
0000c656	calll	0x00011149	; symbol stub for: _CFRelease
0000c65b	incl	0xf4(%ebp)
0000c65e	cmpl	$0xfe,0xec(%ebp)
0000c662	jne	0x0000c678
0000c664	movl	0xbc(%ebp),%eax
0000c667	movl	%eax,(%esp)
0000c66a	calll	0x000110c2	; symbol stub for: _CFArrayGetCount
0000c66f	cmpl	0xf4(%ebp),%eax
0000c672	jg	0x0000c5ea
0000c678	movl	0xbc(%ebp),%eax
0000c67b	movl	%eax,(%esp)
0000c67e	calll	0x00011149	; symbol stub for: _CFRelease
0000c683	movl	0xec(%ebp),%eax
0000c686	movl	%eax,(%esp)
0000c689	calll	0x000030cb
0000c68e	movl	0xe0(%ebp),%eax
0000c691	addl	$0x74,%esp
0000c694	popl	%ebx
0000c695	leave
0000c696	ret
_LoadToolbarButtonImages:
0000c697	pushl	%ebp
0000c698	movl	%esp,%ebp
0000c69a	pushl	%ebx
0000c69b	subl	$0x00000084,%esp
0000c6a1	calll	0x0000c6a6
0000c6a6	popl	%ebx
0000c6a7	leal	0x94(%ebp),%eax
0000c6aa	movl	%eax,0x04(%esp)
0000c6ae	movl	$0x73797332,(%esp)
0000c6b5	calll	0x00011257	; symbol stub for: _Gestalt
0000c6ba	movl	0x94(%ebp),%eax
0000c6bd	cmpl	$0x04,%eax
0000c6c0	jle	0x0000cb02
0000c6c6	leal	0x0000311e(%ebx),%eax
0000c6cc	movl	(%eax),%eax
0000c6ce	testl	%eax,%eax
0000c6d0	jne	0x0000c7d1
0000c6d6	leal	0x00002fea(%ebx),%eax
0000c6dc	movzbl	(%eax),%eax
0000c6df	testb	%al,%al
0000c6e1	je	0x0000c7d1
0000c6e7	leal	0x000029f6(%ebx),%eax
0000c6ed	movl	%eax,(%esp)
0000c6f0	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000c6f5	movl	%eax,0x98(%ebp)
0000c6f8	cmpl	$__mh_bundle_header,0x98(%ebp)
0000c6fc	je	0x0000c7a4
0000c702	leal	0x00002cd6(%ebx),%eax
0000c708	movl	$__mh_bundle_header,0x0c(%esp)
0000c710	movl	$__mh_bundle_header,0x08(%esp)
0000c718	movl	%eax,0x04(%esp)
0000c71c	movl	0x98(%ebp),%eax
0000c71f	movl	%eax,(%esp)
0000c722	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000c727	movl	%eax,0x9c(%ebp)
0000c72a	movl	0x9c(%ebp),%eax
0000c72d	testl	%eax,%eax
0000c72f	je	0x0000c7a4
0000c731	movl	0x9c(%ebp),%eax
0000c734	movl	%eax,(%esp)
0000c737	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000c73c	movl	%eax,0xa0(%ebp)
0000c73f	cmpl	$__mh_bundle_header,0xa0(%ebp)
0000c743	je	0x0000c799
0000c745	movl	$__mh_bundle_header,0x0c(%esp)
0000c74d	movl	$__mh_bundle_header,0x08(%esp)
0000c755	movl	$__mh_bundle_header,0x04(%esp)
0000c75d	movl	0xa0(%ebp),%eax
0000c760	movl	%eax,(%esp)
0000c763	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000c768	movl	%eax,%edx
0000c76a	leal	0x0000311e(%ebx),%eax
0000c770	movl	%edx,(%eax)
0000c772	leal	0x0000311e(%ebx),%eax
0000c778	movl	(%eax),%eax
0000c77a	testl	%eax,%eax
0000c77c	je	0x0000c78e
0000c77e	leal	0x0000311e(%ebx),%eax
0000c784	movl	(%eax),%eax
0000c786	movl	%eax,(%esp)
0000c789	calll	0x000111df	; symbol stub for: _CGImageRetain
0000c78e	movl	0xa0(%ebp),%eax
0000c791	movl	%eax,(%esp)
0000c794	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000c799	movl	0x9c(%ebp),%eax
0000c79c	movl	%eax,(%esp)
0000c79f	calll	0x00011149	; symbol stub for: _CFRelease
0000c7a4	leal	0x0000311e(%ebx),%eax
0000c7aa	movl	(%eax),%eax
0000c7ac	testl	%eax,%eax
0000c7ae	jne	0x0000c7d1
0000c7b0	leal	0x00002fea(%ebx),%eax
0000c7b6	movb	$__mh_bundle_header,(%eax)
0000c7b9	leal	0x00002ce6(%ebx),%edx
0000c7bf	leal	0x00002690(%ebx),%eax
0000c7c5	movl	%eax,0x04(%esp)
0000c7c9	movl	%edx,(%esp)
0000c7cc	calll	0x00011338	; symbol stub for: _NSLog
0000c7d1	leal	0x00003122(%ebx),%eax
0000c7d7	movl	(%eax),%eax
0000c7d9	testl	%eax,%eax
0000c7db	jne	0x0000c8dc
0000c7e1	leal	0x00002fea(%ebx),%eax
0000c7e7	movzbl	(%eax),%eax
0000c7ea	testb	%al,%al
0000c7ec	je	0x0000c8dc
0000c7f2	leal	0x000029f6(%ebx),%eax
0000c7f8	movl	%eax,(%esp)
0000c7fb	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000c800	movl	%eax,0xa4(%ebp)
0000c803	cmpl	$__mh_bundle_header,0xa4(%ebp)
0000c807	je	0x0000c8af
0000c80d	leal	0x00002cf6(%ebx),%eax
0000c813	movl	$__mh_bundle_header,0x0c(%esp)
0000c81b	movl	$__mh_bundle_header,0x08(%esp)
0000c823	movl	%eax,0x04(%esp)
0000c827	movl	0xa4(%ebp),%eax
0000c82a	movl	%eax,(%esp)
0000c82d	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000c832	movl	%eax,0xa8(%ebp)
0000c835	movl	0xa8(%ebp),%eax
0000c838	testl	%eax,%eax
0000c83a	je	0x0000c8af
0000c83c	movl	0xa8(%ebp),%eax
0000c83f	movl	%eax,(%esp)
0000c842	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000c847	movl	%eax,0xac(%ebp)
0000c84a	cmpl	$__mh_bundle_header,0xac(%ebp)
0000c84e	je	0x0000c8a4
0000c850	movl	$__mh_bundle_header,0x0c(%esp)
0000c858	movl	$__mh_bundle_header,0x08(%esp)
0000c860	movl	$__mh_bundle_header,0x04(%esp)
0000c868	movl	0xac(%ebp),%eax
0000c86b	movl	%eax,(%esp)
0000c86e	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000c873	movl	%eax,%edx
0000c875	leal	0x00003122(%ebx),%eax
0000c87b	movl	%edx,(%eax)
0000c87d	leal	0x00003122(%ebx),%eax
0000c883	movl	(%eax),%eax
0000c885	testl	%eax,%eax
0000c887	je	0x0000c899
0000c889	leal	0x00003122(%ebx),%eax
0000c88f	movl	(%eax),%eax
0000c891	movl	%eax,(%esp)
0000c894	calll	0x000111df	; symbol stub for: _CGImageRetain
0000c899	movl	0xac(%ebp),%eax
0000c89c	movl	%eax,(%esp)
0000c89f	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000c8a4	movl	0xa8(%ebp),%eax
0000c8a7	movl	%eax,(%esp)
0000c8aa	calll	0x00011149	; symbol stub for: _CFRelease
0000c8af	leal	0x00003122(%ebx),%eax
0000c8b5	movl	(%eax),%eax
0000c8b7	testl	%eax,%eax
0000c8b9	jne	0x0000c8dc
0000c8bb	leal	0x00002fea(%ebx),%eax
0000c8c1	movb	$__mh_bundle_header,(%eax)
0000c8c4	leal	0x00002ce6(%ebx),%edx
0000c8ca	leal	0x000026cc(%ebx),%eax
0000c8d0	movl	%eax,0x04(%esp)
0000c8d4	movl	%edx,(%esp)
0000c8d7	calll	0x00011338	; symbol stub for: _NSLog
0000c8dc	leal	0x00003126(%ebx),%eax
0000c8e2	movl	(%eax),%eax
0000c8e4	testl	%eax,%eax
0000c8e6	jne	0x0000c9e7
0000c8ec	leal	0x00002fea(%ebx),%eax
0000c8f2	movzbl	(%eax),%eax
0000c8f5	testb	%al,%al
0000c8f7	je	0x0000c9e7
0000c8fd	leal	0x000029f6(%ebx),%eax
0000c903	movl	%eax,(%esp)
0000c906	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000c90b	movl	%eax,0xb0(%ebp)
0000c90e	cmpl	$__mh_bundle_header,0xb0(%ebp)
0000c912	je	0x0000c9ba
0000c918	leal	0x00002cf6(%ebx),%eax
0000c91e	movl	$__mh_bundle_header,0x0c(%esp)
0000c926	movl	$__mh_bundle_header,0x08(%esp)
0000c92e	movl	%eax,0x04(%esp)
0000c932	movl	0xb0(%ebp),%eax
0000c935	movl	%eax,(%esp)
0000c938	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000c93d	movl	%eax,0xb4(%ebp)
0000c940	movl	0xb4(%ebp),%eax
0000c943	testl	%eax,%eax
0000c945	je	0x0000c9ba
0000c947	movl	0xb4(%ebp),%eax
0000c94a	movl	%eax,(%esp)
0000c94d	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000c952	movl	%eax,0xb8(%ebp)
0000c955	cmpl	$__mh_bundle_header,0xb8(%ebp)
0000c959	je	0x0000c9af
0000c95b	movl	$__mh_bundle_header,0x0c(%esp)
0000c963	movl	$__mh_bundle_header,0x08(%esp)
0000c96b	movl	$__mh_bundle_header,0x04(%esp)
0000c973	movl	0xb8(%ebp),%eax
0000c976	movl	%eax,(%esp)
0000c979	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000c97e	movl	%eax,%edx
0000c980	leal	0x00003126(%ebx),%eax
0000c986	movl	%edx,(%eax)
0000c988	leal	0x00003126(%ebx),%eax
0000c98e	movl	(%eax),%eax
0000c990	testl	%eax,%eax
0000c992	je	0x0000c9a4
0000c994	leal	0x00003126(%ebx),%eax
0000c99a	movl	(%eax),%eax
0000c99c	movl	%eax,(%esp)
0000c99f	calll	0x000111df	; symbol stub for: _CGImageRetain
0000c9a4	movl	0xb8(%ebp),%eax
0000c9a7	movl	%eax,(%esp)
0000c9aa	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000c9af	movl	0xb4(%ebp),%eax
0000c9b2	movl	%eax,(%esp)
0000c9b5	calll	0x00011149	; symbol stub for: _CFRelease
0000c9ba	leal	0x00003126(%ebx),%eax
0000c9c0	movl	(%eax),%eax
0000c9c2	testl	%eax,%eax
0000c9c4	jne	0x0000c9e7
0000c9c6	leal	0x00002fea(%ebx),%eax
0000c9cc	movb	$__mh_bundle_header,(%eax)
0000c9cf	leal	0x00002ce6(%ebx),%edx
0000c9d5	leal	0x000026cc(%ebx),%eax
0000c9db	movl	%eax,0x04(%esp)
0000c9df	movl	%edx,(%esp)
0000c9e2	calll	0x00011338	; symbol stub for: _NSLog
0000c9e7	leal	0x0000312a(%ebx),%eax
0000c9ed	movl	(%eax),%eax
0000c9ef	testl	%eax,%eax
0000c9f1	jne	0x0000caf2
0000c9f7	leal	0x00002fea(%ebx),%eax
0000c9fd	movzbl	(%eax),%eax
0000ca00	testb	%al,%al
0000ca02	je	0x0000caf2
0000ca08	leal	0x000029f6(%ebx),%eax
0000ca0e	movl	%eax,(%esp)
0000ca11	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000ca16	movl	%eax,0xbc(%ebp)
0000ca19	cmpl	$__mh_bundle_header,0xbc(%ebp)
0000ca1d	je	0x0000cac5
0000ca23	leal	0x00002d06(%ebx),%eax
0000ca29	movl	$__mh_bundle_header,0x0c(%esp)
0000ca31	movl	$__mh_bundle_header,0x08(%esp)
0000ca39	movl	%eax,0x04(%esp)
0000ca3d	movl	0xbc(%ebp),%eax
0000ca40	movl	%eax,(%esp)
0000ca43	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000ca48	movl	%eax,0xc0(%ebp)
0000ca4b	movl	0xc0(%ebp),%eax
0000ca4e	testl	%eax,%eax
0000ca50	je	0x0000cac5
0000ca52	movl	0xc0(%ebp),%eax
0000ca55	movl	%eax,(%esp)
0000ca58	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000ca5d	movl	%eax,0xc4(%ebp)
0000ca60	cmpl	$__mh_bundle_header,0xc4(%ebp)
0000ca64	je	0x0000caba
0000ca66	movl	$__mh_bundle_header,0x0c(%esp)
0000ca6e	movl	$__mh_bundle_header,0x08(%esp)
0000ca76	movl	$__mh_bundle_header,0x04(%esp)
0000ca7e	movl	0xc4(%ebp),%eax
0000ca81	movl	%eax,(%esp)
0000ca84	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000ca89	movl	%eax,%edx
0000ca8b	leal	0x0000312a(%ebx),%eax
0000ca91	movl	%edx,(%eax)
0000ca93	leal	0x0000312a(%ebx),%eax
0000ca99	movl	(%eax),%eax
0000ca9b	testl	%eax,%eax
0000ca9d	je	0x0000caaf
0000ca9f	leal	0x0000312a(%ebx),%eax
0000caa5	movl	(%eax),%eax
0000caa7	movl	%eax,(%esp)
0000caaa	calll	0x000111df	; symbol stub for: _CGImageRetain
0000caaf	movl	0xc4(%ebp),%eax
0000cab2	movl	%eax,(%esp)
0000cab5	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000caba	movl	0xc0(%ebp),%eax
0000cabd	movl	%eax,(%esp)
0000cac0	calll	0x00011149	; symbol stub for: _CFRelease
0000cac5	leal	0x0000312a(%ebx),%eax
0000cacb	movl	(%eax),%eax
0000cacd	testl	%eax,%eax
0000cacf	jne	0x0000caf2
0000cad1	leal	0x00002fea(%ebx),%eax
0000cad7	movb	$__mh_bundle_header,(%eax)
0000cada	leal	0x00002ce6(%ebx),%edx
0000cae0	leal	0x000026dc(%ebx),%eax
0000cae6	movl	%eax,0x04(%esp)
0000caea	movl	%edx,(%esp)
0000caed	calll	0x00011338	; symbol stub for: _NSLog
0000caf2	leal	0x0000312e(%ebx),%eax
0000caf8	movw	$0x0004,(%eax)
0000cafd	jmp	0x0000cf39
0000cb02	leal	0x0000311e(%ebx),%eax
0000cb08	movl	(%eax),%eax
0000cb0a	testl	%eax,%eax
0000cb0c	jne	0x0000cc0d
0000cb12	leal	0x00002fea(%ebx),%eax
0000cb18	movzbl	(%eax),%eax
0000cb1b	testb	%al,%al
0000cb1d	je	0x0000cc0d
0000cb23	leal	0x000029f6(%ebx),%eax
0000cb29	movl	%eax,(%esp)
0000cb2c	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000cb31	movl	%eax,0xc8(%ebp)
0000cb34	cmpl	$__mh_bundle_header,0xc8(%ebp)
0000cb38	je	0x0000cbe0
0000cb3e	leal	0x00002d16(%ebx),%eax
0000cb44	movl	$__mh_bundle_header,0x0c(%esp)
0000cb4c	movl	$__mh_bundle_header,0x08(%esp)
0000cb54	movl	%eax,0x04(%esp)
0000cb58	movl	0xc8(%ebp),%eax
0000cb5b	movl	%eax,(%esp)
0000cb5e	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000cb63	movl	%eax,0xcc(%ebp)
0000cb66	movl	0xcc(%ebp),%eax
0000cb69	testl	%eax,%eax
0000cb6b	je	0x0000cbe0
0000cb6d	movl	0xcc(%ebp),%eax
0000cb70	movl	%eax,(%esp)
0000cb73	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000cb78	movl	%eax,0xd0(%ebp)
0000cb7b	cmpl	$__mh_bundle_header,0xd0(%ebp)
0000cb7f	je	0x0000cbd5
0000cb81	movl	$__mh_bundle_header,0x0c(%esp)
0000cb89	movl	$__mh_bundle_header,0x08(%esp)
0000cb91	movl	$__mh_bundle_header,0x04(%esp)
0000cb99	movl	0xd0(%ebp),%eax
0000cb9c	movl	%eax,(%esp)
0000cb9f	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000cba4	movl	%eax,%edx
0000cba6	leal	0x0000311e(%ebx),%eax
0000cbac	movl	%edx,(%eax)
0000cbae	leal	0x0000311e(%ebx),%eax
0000cbb4	movl	(%eax),%eax
0000cbb6	testl	%eax,%eax
0000cbb8	je	0x0000cbca
0000cbba	leal	0x0000311e(%ebx),%eax
0000cbc0	movl	(%eax),%eax
0000cbc2	movl	%eax,(%esp)
0000cbc5	calll	0x000111df	; symbol stub for: _CGImageRetain
0000cbca	movl	0xd0(%ebp),%eax
0000cbcd	movl	%eax,(%esp)
0000cbd0	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000cbd5	movl	0xcc(%ebp),%eax
0000cbd8	movl	%eax,(%esp)
0000cbdb	calll	0x00011149	; symbol stub for: _CFRelease
0000cbe0	leal	0x0000311e(%ebx),%eax
0000cbe6	movl	(%eax),%eax
0000cbe8	testl	%eax,%eax
0000cbea	jne	0x0000cc0d
0000cbec	leal	0x00002fea(%ebx),%eax
0000cbf2	movb	$__mh_bundle_header,(%eax)
0000cbf5	leal	0x00002ce6(%ebx),%edx
0000cbfb	leal	0x000026ed(%ebx),%eax
0000cc01	movl	%eax,0x04(%esp)
0000cc05	movl	%edx,(%esp)
0000cc08	calll	0x00011338	; symbol stub for: _NSLog
0000cc0d	leal	0x00003122(%ebx),%eax
0000cc13	movl	(%eax),%eax
0000cc15	testl	%eax,%eax
0000cc17	jne	0x0000cd18
0000cc1d	leal	0x00002fea(%ebx),%eax
0000cc23	movzbl	(%eax),%eax
0000cc26	testb	%al,%al
0000cc28	je	0x0000cd18
0000cc2e	leal	0x000029f6(%ebx),%eax
0000cc34	movl	%eax,(%esp)
0000cc37	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000cc3c	movl	%eax,0xd4(%ebp)
0000cc3f	cmpl	$__mh_bundle_header,0xd4(%ebp)
0000cc43	je	0x0000cceb
0000cc49	leal	0x00002d26(%ebx),%eax
0000cc4f	movl	$__mh_bundle_header,0x0c(%esp)
0000cc57	movl	$__mh_bundle_header,0x08(%esp)
0000cc5f	movl	%eax,0x04(%esp)
0000cc63	movl	0xd4(%ebp),%eax
0000cc66	movl	%eax,(%esp)
0000cc69	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000cc6e	movl	%eax,0xd8(%ebp)
0000cc71	movl	0xd8(%ebp),%eax
0000cc74	testl	%eax,%eax
0000cc76	je	0x0000cceb
0000cc78	movl	0xd8(%ebp),%eax
0000cc7b	movl	%eax,(%esp)
0000cc7e	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000cc83	movl	%eax,0xdc(%ebp)
0000cc86	cmpl	$__mh_bundle_header,0xdc(%ebp)
0000cc8a	je	0x0000cce0
0000cc8c	movl	$__mh_bundle_header,0x0c(%esp)
0000cc94	movl	$__mh_bundle_header,0x08(%esp)
0000cc9c	movl	$__mh_bundle_header,0x04(%esp)
0000cca4	movl	0xdc(%ebp),%eax
0000cca7	movl	%eax,(%esp)
0000ccaa	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000ccaf	movl	%eax,%edx
0000ccb1	leal	0x00003122(%ebx),%eax
0000ccb7	movl	%edx,(%eax)
0000ccb9	leal	0x00003122(%ebx),%eax
0000ccbf	movl	(%eax),%eax
0000ccc1	testl	%eax,%eax
0000ccc3	je	0x0000ccd5
0000ccc5	leal	0x00003122(%ebx),%eax
0000cccb	movl	(%eax),%eax
0000cccd	movl	%eax,(%esp)
0000ccd0	calll	0x000111df	; symbol stub for: _CGImageRetain
0000ccd5	movl	0xdc(%ebp),%eax
0000ccd8	movl	%eax,(%esp)
0000ccdb	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000cce0	movl	0xd8(%ebp),%eax
0000cce3	movl	%eax,(%esp)
0000cce6	calll	0x00011149	; symbol stub for: _CFRelease
0000cceb	leal	0x00003122(%ebx),%eax
0000ccf1	movl	(%eax),%eax
0000ccf3	testl	%eax,%eax
0000ccf5	jne	0x0000cd18
0000ccf7	leal	0x00002fea(%ebx),%eax
0000ccfd	movb	$__mh_bundle_header,(%eax)
0000cd00	leal	0x00002ce6(%ebx),%edx
0000cd06	leal	0x000026fb(%ebx),%eax
0000cd0c	movl	%eax,0x04(%esp)
0000cd10	movl	%edx,(%esp)
0000cd13	calll	0x00011338	; symbol stub for: _NSLog
0000cd18	leal	0x00003126(%ebx),%eax
0000cd1e	movl	(%eax),%eax
0000cd20	testl	%eax,%eax
0000cd22	jne	0x0000ce23
0000cd28	leal	0x00002fea(%ebx),%eax
0000cd2e	movzbl	(%eax),%eax
0000cd31	testb	%al,%al
0000cd33	je	0x0000ce23
0000cd39	leal	0x000029f6(%ebx),%eax
0000cd3f	movl	%eax,(%esp)
0000cd42	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000cd47	movl	%eax,0xe0(%ebp)
0000cd4a	cmpl	$__mh_bundle_header,0xe0(%ebp)
0000cd4e	je	0x0000cdf6
0000cd54	leal	0x00002d36(%ebx),%eax
0000cd5a	movl	$__mh_bundle_header,0x0c(%esp)
0000cd62	movl	$__mh_bundle_header,0x08(%esp)
0000cd6a	movl	%eax,0x04(%esp)
0000cd6e	movl	0xe0(%ebp),%eax
0000cd71	movl	%eax,(%esp)
0000cd74	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000cd79	movl	%eax,0xe4(%ebp)
0000cd7c	movl	0xe4(%ebp),%eax
0000cd7f	testl	%eax,%eax
0000cd81	je	0x0000cdf6
0000cd83	movl	0xe4(%ebp),%eax
0000cd86	movl	%eax,(%esp)
0000cd89	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000cd8e	movl	%eax,0xe8(%ebp)
0000cd91	cmpl	$__mh_bundle_header,0xe8(%ebp)
0000cd95	je	0x0000cdeb
0000cd97	movl	$__mh_bundle_header,0x0c(%esp)
0000cd9f	movl	$__mh_bundle_header,0x08(%esp)
0000cda7	movl	$__mh_bundle_header,0x04(%esp)
0000cdaf	movl	0xe8(%ebp),%eax
0000cdb2	movl	%eax,(%esp)
0000cdb5	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000cdba	movl	%eax,%edx
0000cdbc	leal	0x00003126(%ebx),%eax
0000cdc2	movl	%edx,(%eax)
0000cdc4	leal	0x00003126(%ebx),%eax
0000cdca	movl	(%eax),%eax
0000cdcc	testl	%eax,%eax
0000cdce	je	0x0000cde0
0000cdd0	leal	0x00003126(%ebx),%eax
0000cdd6	movl	(%eax),%eax
0000cdd8	movl	%eax,(%esp)
0000cddb	calll	0x000111df	; symbol stub for: _CGImageRetain
0000cde0	movl	0xe8(%ebp),%eax
0000cde3	movl	%eax,(%esp)
0000cde6	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000cdeb	movl	0xe4(%ebp),%eax
0000cdee	movl	%eax,(%esp)
0000cdf1	calll	0x00011149	; symbol stub for: _CFRelease
0000cdf6	leal	0x00003126(%ebx),%eax
0000cdfc	movl	(%eax),%eax
0000cdfe	testl	%eax,%eax
0000ce00	jne	0x0000ce23
0000ce02	leal	0x00002fea(%ebx),%eax
0000ce08	movb	$__mh_bundle_header,(%eax)
0000ce0b	leal	0x00002ce6(%ebx),%edx
0000ce11	leal	0x00002707(%ebx),%eax
0000ce17	movl	%eax,0x04(%esp)
0000ce1b	movl	%edx,(%esp)
0000ce1e	calll	0x00011338	; symbol stub for: _NSLog
0000ce23	leal	0x0000312a(%ebx),%eax
0000ce29	movl	(%eax),%eax
0000ce2b	testl	%eax,%eax
0000ce2d	jne	0x0000cf2e
0000ce33	leal	0x00002fea(%ebx),%eax
0000ce39	movzbl	(%eax),%eax
0000ce3c	testb	%al,%al
0000ce3e	je	0x0000cf2e
0000ce44	leal	0x000029f6(%ebx),%eax
0000ce4a	movl	%eax,(%esp)
0000ce4d	calll	0x000110e0	; symbol stub for: _CFBundleGetBundleWithIdentifier
0000ce52	movl	%eax,0xec(%ebp)
0000ce55	cmpl	$__mh_bundle_header,0xec(%ebp)
0000ce59	je	0x0000cf01
0000ce5f	leal	0x00002d46(%ebx),%eax
0000ce65	movl	$__mh_bundle_header,0x0c(%esp)
0000ce6d	movl	$__mh_bundle_header,0x08(%esp)
0000ce75	movl	%eax,0x04(%esp)
0000ce79	movl	0xec(%ebp),%eax
0000ce7c	movl	%eax,(%esp)
0000ce7f	calll	0x000110db	; symbol stub for: _CFBundleCopyResourceURL
0000ce84	movl	%eax,0xf0(%ebp)
0000ce87	movl	0xf0(%ebp),%eax
0000ce8a	testl	%eax,%eax
0000ce8c	je	0x0000cf01
0000ce8e	movl	0xf0(%ebp),%eax
0000ce91	movl	%eax,(%esp)
0000ce94	calll	0x000111c6	; symbol stub for: _CGDataProviderCreateWithURL
0000ce99	movl	%eax,0xf4(%ebp)
0000ce9c	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000cea0	je	0x0000cef6
0000cea2	movl	$__mh_bundle_header,0x0c(%esp)
0000ceaa	movl	$__mh_bundle_header,0x08(%esp)
0000ceb2	movl	$__mh_bundle_header,0x04(%esp)
0000ceba	movl	0xf4(%ebp),%eax
0000cebd	movl	%eax,(%esp)
0000cec0	calll	0x000111d0	; symbol stub for: _CGImageCreateWithPNGDataProvider
0000cec5	movl	%eax,%edx
0000cec7	leal	0x0000312a(%ebx),%eax
0000cecd	movl	%edx,(%eax)
0000cecf	leal	0x0000312a(%ebx),%eax
0000ced5	movl	(%eax),%eax
0000ced7	testl	%eax,%eax
0000ced9	je	0x0000ceeb
0000cedb	leal	0x0000312a(%ebx),%eax
0000cee1	movl	(%eax),%eax
0000cee3	movl	%eax,(%esp)
0000cee6	calll	0x000111df	; symbol stub for: _CGImageRetain
0000ceeb	movl	0xf4(%ebp),%eax
0000ceee	movl	%eax,(%esp)
0000cef1	calll	0x000111cb	; symbol stub for: _CGDataProviderRelease
0000cef6	movl	0xf0(%ebp),%eax
0000cef9	movl	%eax,(%esp)
0000cefc	calll	0x00011149	; symbol stub for: _CFRelease
0000cf01	leal	0x0000312a(%ebx),%eax
0000cf07	movl	(%eax),%eax
0000cf09	testl	%eax,%eax
0000cf0b	jne	0x0000cf2e
0000cf0d	leal	0x00002fea(%ebx),%eax
0000cf13	movb	$__mh_bundle_header,(%eax)
0000cf16	leal	0x00002ce6(%ebx),%edx
0000cf1c	leal	0x0000271c(%ebx),%eax
0000cf22	movl	%eax,0x04(%esp)
0000cf26	movl	%edx,(%esp)
0000cf29	calll	0x00011338	; symbol stub for: _NSLog
0000cf2e	leal	0x0000312e(%ebx),%eax
0000cf34	movw	$0x0005,(%eax)
0000cf39	addl	$0x00000084,%esp
0000cf3f	popl	%ebx
0000cf40	leave
0000cf41	ret
_InstallDropboxToolbarDelegate:
0000cf42	pushl	%ebp
0000cf43	movl	%esp,%ebp
0000cf45	pushl	%esi
0000cf46	pushl	%ebx
0000cf47	subl	$0x30,%esp
0000cf4a	calll	0x0000cf4f
0000cf4f	popl	%ebx
0000cf50	leal	0x0000288d(%ebx),%eax
0000cf56	movl	(%eax),%eax
0000cf58	testl	%eax,%eax
0000cf5a	je	0x0000cfb1
0000cf5c	leal	0x000025c9(%ebx),%eax
0000cf62	movl	(%eax),%esi
0000cf64	leal	0x0000288d(%ebx),%eax
0000cf6a	movl	(%eax),%eax
0000cf6c	movl	%eax,(%esp)
0000cf6f	calll	0x000112e3	; symbol stub for: _HIToolbarGetDelegate
0000cf74	movl	%eax,(%esp)
0000cf77	calll	0x000112ca	; symbol stub for: _HIObjectGetEventTarget
0000cf7c	movl	%eax,%edx
0000cf7e	movl	$__mh_bundle_header,0x14(%esp)
0000cf86	movl	$__mh_bundle_header,0x10(%esp)
0000cf8e	leal	0x00001fd1(%ebx),%eax
0000cf94	movl	%eax,0x0c(%esp)
0000cf98	movl	$0x00000006,0x08(%esp)
0000cfa0	movl	%esi,0x04(%esp)
0000cfa4	movl	%edx,(%esp)
0000cfa7	calll	0x00011324	; symbol stub for: _InstallEventHandler
0000cfac	movl	%eax,0xf4(%ebp)
0000cfaf	jmp	0x0000cfb8
0000cfb1	movl	$0xffffd96e,0xf4(%ebp)
0000cfb8	movl	0xf4(%ebp),%eax
0000cfbb	addl	$0x30,%esp
0000cfbe	popl	%ebx
0000cfbf	popl	%esi
0000cfc0	leave
0000cfc1	ret
_HuntForToolbar:
0000cfc2	pushl	%ebp
0000cfc3	movl	%esp,%ebp
0000cfc5	pushl	%ebx
0000cfc6	subl	$0x24,%esp
0000cfc9	calll	0x0000cfce
0000cfce	popl	%ebx
0000cfcf	movl	$__mh_bundle_header,0xf0(%ebp)
0000cfd6	calll	0x000112b1	; symbol stub for: _GetWindowList
0000cfdb	movl	%eax,0xf4(%ebp)
0000cfde	jmp	0x0000d055
0000cfe0	leal	0xe8(%ebp),%eax
0000cfe3	movl	%eax,0x04(%esp)
0000cfe7	movl	0xf4(%ebp),%eax
0000cfea	movl	%eax,(%esp)
0000cfed	calll	0x00011207	; symbol stub for: _CopyWindowTitleAsCFString
0000cff2	leal	0xf0(%ebp),%eax
0000cff5	movl	%eax,0x04(%esp)
0000cff9	movl	0xf4(%ebp),%eax
0000cffc	movl	%eax,(%esp)
0000cfff	calll	0x000112b6	; symbol stub for: _GetWindowToolbar
0000d004	movl	0xf0(%ebp),%eax
0000d007	testl	%eax,%eax
0000d009	je	0x0000d047
0000d00b	movl	0xf0(%ebp),%edx
0000d00e	leal	0xec(%ebp),%eax
0000d011	movl	%eax,0x04(%esp)
0000d015	movl	%edx,(%esp)
0000d018	calll	0x000112d4	; symbol stub for: _HIToolbarCopyIdentifier
0000d01d	movl	0xec(%ebp),%edx
0000d020	leal	0x0000251a(%ebx),%eax
0000d026	movl	(%eax),%eax
0000d028	movl	$0x00000004,0x08(%esp)
0000d030	movl	%edx,0x04(%esp)
0000d034	movl	%eax,(%esp)
0000d037	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d03c	testl	%eax,%eax
0000d03e	je	0x0000d047
0000d040	movl	$__mh_bundle_header,0xf0(%ebp)
0000d047	movl	0xf4(%ebp),%eax
0000d04a	movl	%eax,(%esp)
0000d04d	calll	0x000112a2	; symbol stub for: _GetNextWindow
0000d052	movl	%eax,0xf4(%ebp)
0000d055	movl	0xf0(%ebp),%eax
0000d058	testl	%eax,%eax
0000d05a	jne	0x0000d06f
0000d05c	movl	0xf4(%ebp),%eax
0000d05f	movl	%eax,(%esp)
0000d062	calll	0x00011333	; symbol stub for: _IsValidWindowPtr
0000d067	testb	%al,%al
0000d069	jne	0x0000cfe0
0000d06f	movl	0xf0(%ebp),%eax
0000d072	testl	%eax,%eax
0000d074	je	0x0000d0a7
0000d076	leal	0x0000280e(%ebx),%eax
0000d07c	movl	(%eax),%edx
0000d07e	movl	0xf0(%ebp),%eax
0000d081	cmpl	%eax,%edx
0000d083	je	0x0000d0a7
0000d085	movl	0xf0(%ebp),%eax
0000d088	leal	0x0000280e(%ebx),%edx
0000d08e	movl	%eax,(%edx)
0000d090	calll	0x0000cf42
0000d095	testl	%eax,%eax
0000d097	je	0x0000d0a7
0000d099	leal	0x0000242e(%ebx),%eax
0000d09f	movl	%eax,(%esp)
0000d0a2	calll	0x00006efc
0000d0a7	addl	$0x24,%esp
0000d0aa	popl	%ebx
0000d0ab	leave
0000d0ac	ret
_InsertDropboxToolbarItem:
0000d0ad	pushl	%ebp
0000d0ae	movl	%esp,%ebp
0000d0b0	pushl	%ebx
0000d0b1	subl	$0x64,%esp
0000d0b4	calll	0x0000d0b9
0000d0b9	popl	%ebx
0000d0ba	calll	0x0000cfc2
0000d0bf	leal	0x00002723(%ebx),%eax
0000d0c5	movl	(%eax),%eax
0000d0c7	testl	%eax,%eax
0000d0c9	jne	0x0000d0de
0000d0cb	leal	0x00002353(%ebx),%eax
0000d0d1	movl	%eax,(%esp)
0000d0d4	calll	0x00006efc
0000d0d9	jmp	0x0000d406
0000d0de	calll	0x0000304c
0000d0e3	movl	%eax,0xd0(%ebp)
0000d0e6	leal	0x00002363(%ebx),%edx
0000d0ec	movl	0xd0(%ebp),%eax
0000d0ef	movl	%eax,0x04(%esp)
0000d0f3	movl	%edx,(%esp)
0000d0f6	calll	0x00006efc
0000d0fb	cmpl	$0xfe,0xd0(%ebp)
0000d0ff	je	0x0000d406
0000d105	leal	0x00002723(%ebx),%eax
0000d10b	movl	(%eax),%edx
0000d10d	leal	0xcc(%ebp),%eax
0000d110	movl	%eax,0x04(%esp)
0000d114	movl	%edx,(%esp)
0000d117	calll	0x000112d9	; symbol stub for: _HIToolbarCopyItems
0000d11c	movl	$0xffffffff,0xd8(%ebp)
0000d123	movl	$0xffffffff,0xdc(%ebp)
0000d12a	movl	$0xffffffff,0xe0(%ebp)
0000d131	movl	$0xffffffff,0xe4(%ebp)
0000d138	movb	$__mh_bundle_header,0xeb(%ebp)
0000d13c	movl	$__mh_bundle_header,0xd4(%ebp)
0000d143	jmp	0x0000d286
0000d148	movl	0xcc(%ebp),%edx
0000d14b	movl	0xd4(%ebp),%eax
0000d14e	movl	%eax,0x04(%esp)
0000d152	movl	%edx,(%esp)
0000d155	calll	0x000110c7	; symbol stub for: _CFArrayGetValueAtIndex
0000d15a	movl	%eax,0xc8(%ebp)
0000d15d	movl	0xc8(%ebp),%eax
0000d160	movl	%eax,(%esp)
0000d163	calll	0x0001114e	; symbol stub for: _CFRetain
0000d168	movl	0xc8(%ebp),%edx
0000d16b	leal	0xc4(%ebp),%eax
0000d16e	movl	%eax,0x04(%esp)
0000d172	movl	%edx,(%esp)
0000d175	calll	0x000112ed	; symbol stub for: _HIToolbarItemCopyIdentifier
0000d17a	movl	0xc4(%ebp),%eax
0000d17d	leal	0x00002373(%ebx),%edx
0000d183	movl	$0x00000004,0x08(%esp)
0000d18b	movl	%eax,0x04(%esp)
0000d18f	movl	%edx,(%esp)
0000d192	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d197	testl	%eax,%eax
0000d199	jne	0x0000d1b4
0000d19b	cmpb	$__mh_bundle_header,0xeb(%ebp)
0000d19f	jne	0x0000d26d
0000d1a5	movl	0xd4(%ebp),%eax
0000d1a8	movl	%eax,0xe4(%ebp)
0000d1ab	movb	$0x01,0xeb(%ebp)
0000d1af	jmp	0x0000d26d
0000d1b4	movb	$__mh_bundle_header,0xeb(%ebp)
0000d1b8	movl	0xc4(%ebp),%edx
0000d1bb	leal	0x00002433(%ebx),%eax
0000d1c1	movl	(%eax),%eax
0000d1c3	movl	$0x00000004,0x08(%esp)
0000d1cb	movl	%edx,0x04(%esp)
0000d1cf	movl	%eax,(%esp)
0000d1d2	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d1d7	testl	%eax,%eax
0000d1d9	jne	0x0000d1e6
0000d1db	movl	0xd4(%ebp),%eax
0000d1de	movl	%eax,0xdc(%ebp)
0000d1e1	jmp	0x0000d26d
0000d1e6	movl	0xc4(%ebp),%eax
0000d1e9	leal	0x00002383(%ebx),%edx
0000d1ef	movl	$0x00000004,0x08(%esp)
0000d1f7	movl	%eax,0x04(%esp)
0000d1fb	movl	%edx,(%esp)
0000d1fe	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d203	testl	%eax,%eax
0000d205	jne	0x0000d26d
0000d207	cmpl	$0xff,0xe0(%ebp)
0000d20b	jne	0x0000d215
0000d20d	movl	0xd4(%ebp),%eax
0000d210	movl	%eax,0xe0(%ebp)
0000d213	jmp	0x0000d26d
0000d215	movl	0xc4(%ebp),%eax
0000d218	leal	0x00002393(%ebx),%edx
0000d21e	movl	$0x00000004,0x08(%esp)
0000d226	movl	%eax,0x04(%esp)
0000d22a	movl	%edx,(%esp)
0000d22d	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d232	testl	%eax,%eax
0000d234	jne	0x0000d26d
0000d236	cmpl	$0xff,0xe0(%ebp)
0000d23a	jne	0x0000d244
0000d23c	movl	0xd4(%ebp),%eax
0000d23f	movl	%eax,0xe0(%ebp)
0000d242	jmp	0x0000d26d
0000d244	movl	0xc4(%ebp),%edx
0000d247	leal	0x0000243b(%ebx),%eax
0000d24d	movl	(%eax),%eax
0000d24f	movl	$0x00000004,0x08(%esp)
0000d257	movl	%edx,0x04(%esp)
0000d25b	movl	%eax,(%esp)
0000d25e	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d263	testl	%eax,%eax
0000d265	jne	0x0000d26d
0000d267	movl	0xd4(%ebp),%eax
0000d26a	movl	%eax,0xd8(%ebp)
0000d26d	movl	0xc8(%ebp),%eax
0000d270	movl	%eax,(%esp)
0000d273	calll	0x00011149	; symbol stub for: _CFRelease
0000d278	movl	0xc4(%ebp),%eax
0000d27b	movl	%eax,(%esp)
0000d27e	calll	0x00011149	; symbol stub for: _CFRelease
0000d283	incl	0xd4(%ebp)
0000d286	movl	0xcc(%ebp),%eax
0000d289	movl	%eax,(%esp)
0000d28c	calll	0x000110c2	; symbol stub for: _CFArrayGetCount
0000d291	cmpl	0xd4(%ebp),%eax
0000d294	jg	0x0000d148
0000d29a	movl	0xcc(%ebp),%eax
0000d29d	movl	%eax,(%esp)
0000d2a0	calll	0x00011149	; symbol stub for: _CFRelease
0000d2a5	cmpl	$0xff,0xd8(%ebp)
0000d2a9	jle	0x0000d2b4
0000d2ab	movl	$0xffffffff,0xd4(%ebp)
0000d2b2	jmp	0x0000d2ec
0000d2b4	cmpl	$0xff,0xd0(%ebp)
0000d2b8	jle	0x0000d2c2
0000d2ba	movl	0xd0(%ebp),%eax
0000d2bd	movl	%eax,0xd4(%ebp)
0000d2c0	jmp	0x0000d2ec
0000d2c2	cmpl	$0xff,0xdc(%ebp)
0000d2c6	jle	0x0000d2d1
0000d2c8	movl	0xdc(%ebp),%eax
0000d2cb	incl	%eax
0000d2cc	movl	%eax,0xd4(%ebp)
0000d2cf	jmp	0x0000d2ec
0000d2d1	cmpl	$0xff,0xe4(%ebp)
0000d2d5	jle	0x0000d2df
0000d2d7	movl	0xe4(%ebp),%eax
0000d2da	movl	%eax,0xd4(%ebp)
0000d2dd	jmp	0x0000d2ec
0000d2df	cmpl	$0xff,0xe0(%ebp)
0000d2e3	jle	0x0000d2ec
0000d2e5	movl	0xe0(%ebp),%eax
0000d2e8	incl	%eax
0000d2e9	movl	%eax,0xd4(%ebp)
0000d2ec	cmpl	$0xff,0xd4(%ebp)
0000d2f0	jle	0x0000d406
0000d2f6	leal	0x0000243b(%ebx),%eax
0000d2fc	movl	(%eax),%ecx
0000d2fe	leal	0x00002723(%ebx),%eax
0000d304	movl	(%eax),%edx
0000d306	leal	0xc8(%ebp),%eax
0000d309	movl	%eax,0x0c(%esp)
0000d30d	movl	$__mh_bundle_header,0x08(%esp)
0000d315	movl	%ecx,0x04(%esp)
0000d319	movl	%edx,(%esp)
0000d31c	calll	0x000112de	; symbol stub for: _HIToolbarCreateItemWithIdentifier
0000d321	movl	%eax,0xec(%ebp)
0000d324	movl	0xec(%ebp),%eax
0000d327	movl	%eax,0xf0(%ebp)
0000d32a	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000d32e	setne	%al
0000d331	movzbl	%al,%eax
0000d334	testl	%eax,%eax
0000d336	je	0x0000d37f
0000d338	movl	0xf0(%ebp),%eax
0000d33b	movl	%eax,0x1c(%esp)
0000d33f	movl	$0x00000452,0x18(%esp)
0000d347	leal	0x00001833(%ebx),%eax
0000d34d	movl	%eax,0x14(%esp)
0000d351	movl	$__mh_bundle_header,0x10(%esp)
0000d359	movl	$__mh_bundle_header,0x0c(%esp)
0000d361	leal	0x0000109b(%ebx),%eax
0000d367	movl	%eax,0x08(%esp)
0000d36b	movl	$__mh_bundle_header,0x04(%esp)
0000d373	movl	$0x3f2a3f2a,(%esp)
0000d37a	calll	0x00011220	; symbol stub for: _DebugAssert
0000d37f	movl	0xc8(%ebp),%edx
0000d382	leal	0x00002723(%ebx),%eax
0000d388	movl	(%eax),%ecx
0000d38a	movl	0xd4(%ebp),%eax
0000d38d	movl	%eax,0x08(%esp)
0000d391	movl	%edx,0x04(%esp)
0000d395	movl	%ecx,(%esp)
0000d398	calll	0x000112e8	; symbol stub for: _HIToolbarInsertItemAtIndex
0000d39d	movl	%eax,0xec(%ebp)
0000d3a0	movl	0xd4(%ebp),%eax
0000d3a3	movl	%eax,(%esp)
0000d3a6	calll	0x000030cb
0000d3ab	movl	0xec(%ebp),%eax
0000d3ae	movl	%eax,0xf4(%ebp)
0000d3b1	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000d3b5	setne	%al
0000d3b8	movzbl	%al,%eax
0000d3bb	testl	%eax,%eax
0000d3bd	je	0x0000d406
0000d3bf	movl	0xf4(%ebp),%eax
0000d3c2	movl	%eax,0x1c(%esp)
0000d3c6	movl	$0x0000045c,0x18(%esp)
0000d3ce	leal	0x00001833(%ebx),%eax
0000d3d4	movl	%eax,0x14(%esp)
0000d3d8	movl	$__mh_bundle_header,0x10(%esp)
0000d3e0	movl	$__mh_bundle_header,0x0c(%esp)
0000d3e8	leal	0x0000109b(%ebx),%eax
0000d3ee	movl	%eax,0x08(%esp)
0000d3f2	movl	$__mh_bundle_header,0x04(%esp)
0000d3fa	movl	$0x3f2a3f2a,(%esp)
0000d401	calll	0x00011220	; symbol stub for: _DebugAssert
0000d406	addl	$0x64,%esp
0000d409	popl	%ebx
0000d40a	leave
0000d40b	ret
_OrbitalMindControlLaser:
0000d40c	pushl	%ebp
0000d40d	movl	%esp,%ebp
0000d40f	subl	$0x08,%esp
0000d412	calll	0x0000d0ad
0000d417	leave
0000d418	ret
_DropboxHIToolbarCreateItemWithIdentifier:
0000d419	pushl	%ebp
0000d41a	movl	%esp,%ebp
0000d41c	pushl	%esi
0000d41d	pushl	%ebx
0000d41e	subl	$0x30,%esp
0000d421	calll	0x0000d426
0000d426	popl	%ebx
0000d427	leal	0x000023c2(%ebx),%eax
0000d42d	movl	(%eax),%edx
0000d42f	movl	0x14(%ebp),%eax
0000d432	movl	%eax,0x0c(%esp)
0000d436	movl	0x10(%ebp),%eax
0000d439	movl	%eax,0x08(%esp)
0000d43d	movl	0x0c(%ebp),%eax
0000d440	movl	%eax,0x04(%esp)
0000d444	movl	0x08(%ebp),%eax
0000d447	movl	%eax,(%esp)
0000d44a	call	*%edx
0000d44c	movl	%eax,0xf4(%ebp)
0000d44f	leal	0xf0(%ebp),%eax
0000d452	movl	%eax,0x04(%esp)
0000d456	movl	0x08(%ebp),%eax
0000d459	movl	%eax,(%esp)
0000d45c	calll	0x000112d4	; symbol stub for: _HIToolbarCopyIdentifier
0000d461	testl	%eax,%eax
0000d463	jne	0x0000d550
0000d469	movl	0xf0(%ebp),%edx
0000d46c	leal	0x000020c2(%ebx),%eax
0000d472	movl	(%eax),%eax
0000d474	movl	$0x00000004,0x08(%esp)
0000d47c	movl	%edx,0x04(%esp)
0000d480	movl	%eax,(%esp)
0000d483	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d488	testl	%eax,%eax
0000d48a	jne	0x0000d545
0000d490	leal	0x000023b6(%ebx),%eax
0000d496	movl	(%eax),%eax
0000d498	cmpl	0x08(%ebp),%eax
0000d49b	je	0x0000d4ad
0000d49d	leal	0x000023b6(%ebx),%edx
0000d4a3	movl	0x08(%ebp),%eax
0000d4a6	movl	%eax,(%edx)
0000d4a8	calll	0x0000cf42
0000d4ad	leal	0x000020ce(%ebx),%eax
0000d4b3	movl	(%eax),%edx
0000d4b5	movl	$0x00000004,0x08(%esp)
0000d4bd	movl	0x0c(%ebp),%eax
0000d4c0	movl	%eax,0x04(%esp)
0000d4c4	movl	%edx,(%esp)
0000d4c7	calll	0x00011158	; symbol stub for: _CFStringCompare
0000d4cc	testl	%eax,%eax
0000d4ce	je	0x0000d545
0000d4d0	leal	0x000023b2(%ebx),%eax
0000d4d6	movl	(%eax),%eax
0000d4d8	testl	%eax,%eax
0000d4da	je	0x0000d4f8
0000d4dc	leal	0x000023b2(%ebx),%eax
0000d4e2	movl	(%eax),%eax
0000d4e4	movl	%eax,(%esp)
0000d4e7	calll	0x00011374	; symbol stub for: _RemoveEventLoopTimer
0000d4ec	leal	0x000023b2(%ebx),%eax
0000d4f2	movl	$__mh_bundle_header,(%eax)
0000d4f8	leal	0x000020f6(%ebx),%eax
0000d4fe	movl	(%eax),%esi
0000d500	calll	0x00011284	; symbol stub for: _GetMainEventLoop
0000d505	movl	%eax,%edx
0000d507	leal	0x000023b2(%ebx),%eax
0000d50d	movl	%eax,0x1c(%esp)
0000d511	movl	$__mh_bundle_header,0x18(%esp)
0000d519	movl	%esi,0x14(%esp)
0000d51d	leal	0x00001ada(%ebx),%eax
0000d523	movsd	(%eax),%xmm0
0000d527	movsd	%xmm0,0x0c(%esp)
0000d52d	leal	0x00001b82(%ebx),%eax
0000d533	movsd	(%eax),%xmm0
0000d537	movsd	%xmm0,0x04(%esp)
0000d53d	movl	%edx,(%esp)
0000d540	calll	0x00011329	; symbol stub for: _InstallEventLoopTimer
0000d545	movl	0xf0(%ebp),%eax
0000d548	movl	%eax,(%esp)
0000d54b	calll	0x00011149	; symbol stub for: _CFRelease
0000d550	movl	0xf4(%ebp),%eax
0000d553	addl	$0x30,%esp
0000d556	popl	%ebx
0000d557	popl	%esi
0000d558	leave
0000d559	ret
_InitDropboxToolbarIntegration:
0000d55a	pushl	%ebp
0000d55b	movl	%esp,%ebp
0000d55d	pushl	%esi
0000d55e	pushl	%ebx
0000d55f	subl	$0x30,%esp
0000d562	calll	0x0000d567
0000d567	popl	%ebx
0000d568	calll	0x0000c697
0000d56d	leal	0x00002129(%ebx),%eax
0000d573	movzbl	(%eax),%eax
0000d576	testb	%al,%al
0000d578	je	0x0000d6db
0000d57e	calll	0x0000bbf9
0000d583	movl	%eax,0xec(%ebp)
0000d586	movl	0xec(%ebp),%eax
0000d589	movl	%eax,0xf0(%ebp)
0000d58c	cmpl	$__mh_bundle_header,0xf0(%ebp)
0000d590	setne	%al
0000d593	movzbl	%al,%eax
0000d596	testl	%eax,%eax
0000d598	je	0x0000d5e1
0000d59a	movl	0xf0(%ebp),%eax
0000d59d	movl	%eax,0x1c(%esp)
0000d5a1	movl	$0x00000499,0x18(%esp)
0000d5a9	leal	0x00001385(%ebx),%eax
0000d5af	movl	%eax,0x14(%esp)
0000d5b3	movl	$__mh_bundle_header,0x10(%esp)
0000d5bb	movl	$__mh_bundle_header,0x0c(%esp)
0000d5c3	leal	0x00000bed(%ebx),%eax
0000d5c9	movl	%eax,0x08(%esp)
0000d5cd	movl	$__mh_bundle_header,0x04(%esp)
0000d5d5	movl	$0x3f2a3f2a,(%esp)
0000d5dc	calll	0x00011220	; symbol stub for: _DebugAssert
0000d5e1	leal	0x00002125(%ebx),%eax
0000d5e7	movzwl	(%eax),%eax
0000d5ea	movswl	%ax,%edx
0000d5ed	leal	0x00002279(%ebx),%eax
0000d5f3	movl	%eax,0x08(%esp)
0000d5f7	movl	$__mh_bundle_header,0x04(%esp)
0000d5ff	movl	%edx,(%esp)
0000d602	calll	0x00011216	; symbol stub for: _CreateNewMenu
0000d607	leal	0x00001fa5(%ebx),%eax
0000d60d	movl	(%eax),%esi
0000d60f	calll	0x0001125c	; symbol stub for: _GetApplicationEventTarget
0000d614	movl	%eax,%edx
0000d616	movl	$__mh_bundle_header,0x14(%esp)
0000d61e	movl	$__mh_bundle_header,0x10(%esp)
0000d626	leal	0x00001a31(%ebx),%eax
0000d62c	movl	%eax,0x0c(%esp)
0000d630	movl	$0x00000002,0x08(%esp)
0000d638	movl	%esi,0x04(%esp)
0000d63c	movl	%edx,(%esp)
0000d63f	calll	0x00011324	; symbol stub for: _InstallEventHandler
0000d644	leal	0x00001fb5(%ebx),%eax
0000d64a	movl	(%eax),%esi
0000d64c	calll	0x00011284	; symbol stub for: _GetMainEventLoop
0000d651	movl	%eax,%edx
0000d653	leal	0xe8(%ebp),%eax
0000d656	movl	%eax,0x1c(%esp)
0000d65a	movl	$__mh_bundle_header,0x18(%esp)
0000d662	movl	%esi,0x14(%esp)
0000d666	leal	0x00001999(%ebx),%eax
0000d66c	movsd	(%eax),%xmm0
0000d670	movsd	%xmm0,0x0c(%esp)
0000d676	leal	0x00001999(%ebx),%eax
0000d67c	movsd	(%eax),%xmm0
0000d680	movsd	%xmm0,0x04(%esp)
0000d686	movl	%edx,(%esp)
0000d689	calll	0x00011329	; symbol stub for: _InstallEventLoopTimer
0000d68e	leal	0x00002281(%ebx),%eax
0000d694	movl	(%eax),%eax
0000d696	testl	%eax,%eax
0000d698	jne	0x0000d6db
0000d69a	leal	0x00002281(%ebx),%eax
0000d6a0	movl	%eax,0x0c(%esp)
0000d6a4	leal	0xfffffeb2(%ebx),%eax
0000d6aa	movl	%eax,0x08(%esp)
0000d6ae	movl	$__mh_bundle_header,0x04(%esp)
0000d6b6	leal	0x00001941(%ebx),%eax
0000d6bc	movl	%eax,(%esp)
0000d6bf	calll	0x00009130
0000d6c4	movl	%eax,0xf4(%ebp)
0000d6c7	cmpl	$__mh_bundle_header,0xf4(%ebp)
0000d6cb	je	0x0000d6db
0000d6cd	leal	0x00001ef5(%ebx),%eax
0000d6d3	movl	%eax,(%esp)
0000d6d6	calll	0x00011338	; symbol stub for: _NSLog
0000d6db	addl	$0x30,%esp
0000d6de	popl	%ebx
0000d6df	popl	%esi
0000d6e0	leave
0000d6e1	ret
0000d6e2	nop
0000d6e3	nop
0000d6e4	nop
0000d6e5	nop
0000d6e6	nop
0000d6e7	nop
0000d6e8	nop
0000d6e9	nop
0000d6ea	nop
0000d6eb	nop
0000d6ec	nop
0000d6ed	nop
0000d6ee	nop
0000d6ef	nop
___eprintf:
0000d6f0	pushl	%ebp
0000d6f1	movl	%esp,%ebp
0000d6f3	pushl	%ebx
0000d6f4	subl	$0x24,%esp
0000d6f7	calll	0x0000d6fc
0000d6fc	popl	%ebx
0000d6fd	movl	0x14(%ebp),%eax
0000d700	movl	%eax,0x10(%esp)
0000d704	movl	0x10(%ebp),%eax
0000d707	movl	%eax,0x0c(%esp)
0000d70b	movl	0x0c(%ebp),%eax
0000d70e	movl	%eax,0x08(%esp)
0000d712	movl	0x08(%ebp),%eax
0000d715	movl	%eax,0x04(%esp)
0000d719	movl	0x00003908(%ebx),%eax
0000d71f	addl	$0x000000b0,%eax
0000d724	movl	%eax,(%esp)
0000d727	calll	0x0001140a	; symbol stub for: _fprintf
0000d72c	movl	0x00003908(%ebx),%eax
0000d732	addl	$0x000000b0,%eax
0000d737	movl	%eax,(%esp)
0000d73a	calll	0x00011400	; symbol stub for: _fflush
0000d73f	calll	0x000113b0	; symbol stub for: _abort
