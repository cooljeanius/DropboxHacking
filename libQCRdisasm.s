/Applications/Dropbox.app/Contents/Frameworks/libQCR.dylib (architecture i386):
(__TEXT,__text) section
dyld_stub_binding_helper:
00000700	calll	0x00000705
00000705	popl	%eax
00000706	pushl	0x0000c8fb(%eax)
0000070c	movl	0x0000c9bb(%eax),%eax
00000712	jmp	*%eax
__dyld_func_lookup:
00000714	calll	0x00000719
00000719	popl	%eax
0000071a	movl	0x0000c9ab(%eax),%eax
00000720	jmp	*%eax
_GetTaskArch:
00000722	pushl	%ebp
00000723	movl	%esp,%ebp
00000725	pushl	%edi
00000726	pushl	%esi
00000727	movl	%eax,%esi
00000729	pushl	%ebx
0000072a	subl	$0x2c,%esp
0000072d	calll	0x00000732
00000732	popl	%ebx
00000733	testl	%eax,%eax
00000735	jne	0x00000761
00000737	leal	0x0000ad76(%ebx),%eax
0000073d	movl	%eax,0x0c(%esp)
00000741	leal	0x0000ad8a(%ebx),%eax
00000747	movl	%eax,0x04(%esp)
0000074b	leal	0x0000b256(%ebx),%eax
00000751	movl	$0x0000011e,0x08(%esp)
00000759	movl	%eax,(%esp)
0000075c	calll	___eprintf
00000761	movl	%eax,(%esp)
00000764	xorl	%edi,%edi
00000766	calll	_QMOImageIs64Bit
0000076b	movl	%esi,(%esp)
0000076e	movb	%al,0xdf(%ebp)
00000771	calll	_QMOImageGetCPUType
00000776	movl	%esi,(%esp)
00000779	leal	0x0000c9ae(%ebx),%esi
0000077f	movl	%eax,0xe0(%ebp)
00000782	calll	_QMOImageGetCPUSubType
00000787	movl	0x0000c9b2(%ebx),%ecx
0000078d	movl	%eax,0xe4(%ebp)
00000790	jmp	0x000007b6
00000792	cmpl	%ecx,0xe0(%ebp)
00000795	jne	0x000007b0
00000797	movl	0x08(%esi),%eax
0000079a	testl	%eax,%eax
0000079c	je	0x000007a3
0000079e	cmpl	%eax,0xe4(%ebp)
000007a1	jne	0x000007b0
000007a3	movzbl	0xdf(%ebp),%eax
000007a7	cmpb	0x0c(%esi),%al
000007aa	jne	0x000007b0
000007ac	movl	%esi,%edi
000007ae	jmp	0x000007b6
000007b0	addl	$0x30,%esi
000007b3	movl	0x04(%esi),%ecx
000007b6	testl	%ecx,%ecx
000007b8	setne	%dl
000007bb	testl	%edi,%edi
000007bd	sete	%al
000007c0	testb	%al,%dl
000007c2	jne	0x00000792
000007c4	addl	$0x2c,%esp
000007c7	movl	%edi,%eax
000007c9	popl	%ebx
000007ca	popl	%esi
000007cb	popl	%edi
000007cc	leave
000007cd	ret
_AddFrame:
000007ce	pushl	%ebp
000007cf	movl	%esp,%ebp
000007d1	pushl	%esi
000007d2	movl	%eax,%esi
000007d4	pushl	%ebx
000007d5	subl	$0x20,%esp
000007d8	movl	0x08(%ebp),%eax
000007db	movl	%edx,0xf0(%ebp)
000007de	movl	0x0c(%ebp),%edx
000007e1	calll	0x000007e6
000007e6	popl	%ebx
000007e7	testl	%esi,%esi
000007e9	movl	%ecx,0xf4(%ebp)
000007ec	movl	%eax,0xe8(%ebp)
000007ef	movl	%edx,0xec(%ebp)
000007f2	je	0x00000862
000007f4	movl	(%esi),%eax
000007f6	testl	%eax,%eax
000007f8	je	0x00000862
000007fa	movl	0x04(%esi),%eax
000007fd	testl	%eax,%eax
000007ff	je	0x00000862
00000801	movl	0x08(%esi),%eax
00000804	testl	%eax,%eax
00000806	je	0x00000862
00000808	movl	0x14(%esi),%eax
0000080b	testl	%eax,%eax
0000080d	movl	0x18(%esi),%eax
00000810	setne	%dl
00000813	testl	%eax,%eax
00000815	sete	%al
00000818	cmpb	%al,%dl
0000081a	je	0x00000862
0000081c	movl	0x1c(%esi),%ecx
0000081f	testl	%ecx,%ecx
00000821	je	0x00000862
00000823	movl	0x28(%esi),%edx
00000826	movl	0x24(%esi),%eax
00000829	movl	%edx,%ecx
0000082b	orl	%eax,%ecx
0000082d	je	0x00000862
0000082f	cmpl	0x30(%esi),%edx
00000832	ja	0x00000862
00000834	jb	0x0000083b
00000836	cmpl	0x2c(%esi),%eax
00000839	jae	0x00000862
0000083b	movl	0x38(%esi),%edx
0000083e	cmpl	0x40(%esi),%edx
00000841	movl	0x34(%esi),%eax
00000844	ja	0x00000862
00000846	jb	0x0000084d
00000848	cmpl	0x3c(%esi),%eax
0000084b	ja	0x00000862
0000084d	movl	0x48(%esi),%edx
00000850	testl	%edx,%edx
00000852	je	0x0000085b
00000854	movl	0x44(%esi),%eax
00000857	testl	%eax,%eax
00000859	je	0x00000862
0000085b	movl	$0x00000001,%eax
00000860	jmp	0x00000864
00000862	xorl	%eax,%eax
00000864	testl	%eax,%eax
00000866	jne	0x00000892
00000868	leal	0x0000ad0b(%ebx),%eax
0000086e	movl	%eax,0x0c(%esp)
00000872	leal	0x0000acd6(%ebx),%eax
00000878	movl	%eax,0x04(%esp)
0000087c	leal	0x0000b1a2(%ebx),%eax
00000882	movl	$0x0000022c,0x08(%esp)
0000088a	movl	%eax,(%esp)
0000088d	calll	___eprintf
00000892	movl	0x44(%esi),%edx
00000895	testl	%edx,%edx
00000897	je	0x000008c4
00000899	movl	0x4c(%esi),%eax
0000089c	cmpl	0x48(%esi),%eax
0000089f	jae	0x000008c7
000008a1	leal	(%eax,%eax,8),%eax
000008a4	movl	0xf4(%ebp),%ecx
000008a7	leal	(%edx,%eax,4),%eax
000008aa	movl	0xf0(%ebp),%edx
000008ad	movl	%ecx,0x04(%eax)
000008b0	movl	%edx,(%eax)
000008b2	movl	0xec(%ebp),%ecx
000008b5	movl	0xe8(%ebp),%edx
000008b8	movl	%ecx,0x0c(%eax)
000008bb	movl	%edx,0x08(%eax)
000008be	movl	0x10(%ebp),%ecx
000008c1	movl	%ecx,0x10(%eax)
000008c4	movl	0x4c(%esi),%eax
000008c7	incl	%eax
000008c8	movl	%eax,0x4c(%esi)
000008cb	addl	$0x20,%esp
000008ce	popl	%ebx
000008cf	popl	%esi
000008d0	leave
000008d1	ret
_QBacktraceDisposeSymbols:
000008d2	pushl	%ebp
000008d3	movl	%esp,%ebp
000008d5	pushl	%edi
000008d6	xorl	%edi,%edi
000008d8	pushl	%esi
000008d9	subl	$0x10,%esp
000008dc	movl	0x08(%ebp),%esi
000008df	testl	%esi,%esi
000008e1	jne	0x0000090c
000008e3	jmp	0x00000911
000008e5	testb	$0x01,0x11(%esi)
000008e9	je	0x00000901
000008eb	movl	0x14(%esi),%eax
000008ee	movl	%eax,(%esp)
000008f1	calll	0x0000e08b	; symbol stub for: _free
000008f6	movl	0x18(%esi),%eax
000008f9	movl	%eax,(%esp)
000008fc	calll	0x0000e08b	; symbol stub for: _free
00000901	movl	$__mh_dylib_header,0x14(%esi)
00000908	incl	%edi
00000909	addl	$0x24,%esi
0000090c	cmpl	0x0c(%ebp),%edi
0000090f	jb	0x000008e5
00000911	addl	$0x10,%esp
00000914	popl	%esi
00000915	popl	%edi
00000916	leave
00000917	ret
_PowerPCIsSystemCall:
00000918	pushl	%ebp
00000919	movl	%esp,%ebp
0000091b	pushl	%edi
0000091c	movl	%ecx,%edi
0000091e	pushl	%esi
0000091f	movl	%edx,%esi
00000921	subl	$0x40,%esp
00000924	movl	%eax,0xdc(%ebp)
00000927	leal	0xf4(%ebp),%eax
0000092a	movb	$__mh_dylib_header,0xe3(%ebp)
0000092e	movl	$__mh_dylib_header,0xe4(%ebp)
00000935	movl	%eax,0xd8(%ebp)
00000938	movl	0xd8(%ebp),%edx
0000093b	movl	0xdc(%ebp),%eax
0000093e	movl	$0x00000004,0x10(%esp)
00000946	movl	%esi,0x04(%esp)
0000094a	movl	%edx,0x0c(%esp)
0000094e	movl	%edi,0x08(%esp)
00000952	movl	%eax,(%esp)
00000955	call	*0x1c(%eax)
00000958	testl	%eax,%eax
0000095a	jne	0x0000099d
0000095c	cmpb	$0x44,0xf4(%ebp)
00000960	jne	0x00000976
00000962	cmpb	$__mh_dylib_header,0xf5(%ebp)
00000966	jne	0x00000976
00000968	cmpb	$__mh_dylib_header,0xf6(%ebp)
0000096c	jne	0x00000976
0000096e	cmpb	$0x02,0xf7(%ebp)
00000972	movb	$0x01,%al
00000974	je	0x00000978
00000976	xorl	%eax,%eax
00000978	movb	%al,0xe3(%ebp)
0000097b	movzbl	%al,%eax
0000097e	cmpb	$__mh_dylib_header,0xe3(%ebp)
00000982	jne	0x0000098d
00000984	incl	0xe4(%ebp)
00000987	addl	$0xfc,%esi
0000098a	adcl	$0xff,%edi
0000098d	testl	%eax,%eax
0000098f	sete	%dl
00000992	cmpl	$0x02,0xe4(%ebp)
00000996	setle	%al
00000999	testb	%al,%dl
0000099b	jne	0x00000938
0000099d	movzbl	0xe3(%ebp),%eax
000009a1	addl	$0x40,%esp
000009a4	popl	%esi
000009a5	popl	%edi
000009a6	leave
000009a7	ret
_PowerPCHandleLeaf:
000009a8	pushl	%ebp
000009a9	movl	%esp,%ebp
000009ab	subl	$0x28,%esp
000009ae	movl	0x08(%ebp),%eax
000009b1	movl	%esi,0xf8(%ebp)
000009b4	movl	%edi,0xfc(%ebp)
000009b7	movl	0x10(%eax),%edx
000009ba	cmpl	$0x01,%edx
000009bd	je	0x000009cf
000009bf	cmpl	$0x05,%edx
000009c2	movl	$0x00000016,%eax
000009c7	jne	0x00000a68
000009cd	jmp	0x000009ee
000009cf	movl	0x08(%ebp),%edx
000009d2	xorl	%ecx,%ecx
000009d4	xorl	%edi,%edi
000009d6	movl	0x14(%edx),%eax
000009d9	movl	0x00000090(%eax),%edx
000009df	movl	(%eax),%esi
000009e1	movl	%ecx,0xec(%ebp)
000009e4	xorl	%ecx,%ecx
000009e6	movl	%edx,0xe8(%ebp)
000009e9	movl	0x0c(%eax),%edx
000009ec	jmp	0x00000a11
000009ee	movl	0x08(%ebp),%ecx
000009f1	movl	0x14(%ecx),%eax
000009f4	movl	0x0000011c(%eax),%edx
000009fa	movl	0x00000120(%eax),%ecx
00000a00	movl	(%eax),%esi
00000a02	movl	0x04(%eax),%edi
00000a05	movl	%edx,0xe8(%ebp)
00000a08	movl	%ecx,0xec(%ebp)
00000a0b	movl	0x18(%eax),%edx
00000a0e	movl	0x1c(%eax),%ecx
00000a11	movl	0x08(%ebp),%eax
00000a14	movl	%edx,0xf0(%ebp)
00000a17	movl	%esi,%edx
00000a19	movl	%ecx,0xf4(%ebp)
00000a1c	movl	%edi,%ecx
00000a1e	calll	0x00000918
00000a23	testb	%al,%al
00000a25	je	0x00000a50
00000a27	movl	0x08(%ebp),%eax
00000a2a	movl	%esi,%edx
00000a2c	movl	%edi,%ecx
00000a2e	movl	$0x00000001,0x08(%esp)
00000a36	movl	$__mh_dylib_header,(%esp)
00000a3d	movl	$__mh_dylib_header,0x04(%esp)
00000a45	calll	0x000007ce
00000a4a	movl	0xe8(%ebp),%esi
00000a4d	movl	0xec(%ebp),%edi
00000a50	movl	0x0c(%ebp),%ecx
00000a53	movl	%esi,(%ecx)
00000a55	movl	%edi,0x04(%ecx)
00000a58	movl	0xf0(%ebp),%eax
00000a5b	movl	0xf4(%ebp),%edx
00000a5e	movl	0x10(%ebp),%ecx
00000a61	movl	%eax,(%ecx)
00000a63	xorl	%eax,%eax
00000a65	movl	%edx,0x04(%ecx)
00000a68	movl	0xf8(%ebp),%esi
00000a6b	movl	0xfc(%ebp),%edi
00000a6e	leave
00000a6f	ret
_PowerPCValidPC:
00000a70	pushl	%ebp
00000a71	xorl	%edx,%edx
00000a73	movl	%esp,%ebp
00000a75	subl	$0x38,%esp
00000a78	movl	%esi,0xf8(%ebp)
00000a7b	movl	0x0c(%ebp),%esi
00000a7e	movl	%edx,%ecx
00000a80	movl	%edi,0xfc(%ebp)
00000a83	movl	0x10(%ebp),%edi
00000a86	movl	%esi,%eax
00000a88	andl	$0x03,%eax
00000a8b	orl	%eax,%ecx
00000a8d	jne	0x00000ab8
00000a8f	leal	0xf4(%ebp),%eax
00000a92	movl	%eax,0x0c(%esp)
00000a96	movl	0x08(%ebp),%eax
00000a99	movl	$0x00000004,0x10(%esp)
00000aa1	movl	%esi,0x04(%esp)
00000aa5	movl	%edi,0x08(%esp)
00000aa9	movl	%eax,(%esp)
00000aac	call	*0x1c(%eax)
00000aaf	movl	$0x00000001,%edx
00000ab4	testl	%eax,%eax
00000ab6	je	0x00000aba
00000ab8	xorl	%edx,%edx
00000aba	movl	0xf8(%ebp),%esi
00000abd	movzbl	%dl,%eax
00000ac0	movl	0xfc(%ebp),%edi
00000ac3	leave
00000ac4	ret
_IntelIsSystemCall:
00000ac5	pushl	%ebp
00000ac6	movl	%esp,%ebp
00000ac8	pushl	%edi
00000ac9	pushl	%esi
00000aca	movl	%eax,%esi
00000acc	movl	%edx,%eax
00000ace	subl	$0x40,%esp
00000ad1	addl	$0xfb,%eax
00000ad4	movl	%edx,0xe0(%ebp)
00000ad7	movl	%ecx,%edx
00000ad9	adcl	$0xff,%edx
00000adc	leal	0xf3(%ebp),%edi
00000adf	movl	%ecx,0xe4(%ebp)
00000ae2	movl	$0x00000005,0x10(%esp)
00000aea	movl	%edi,0x0c(%esp)
00000aee	movl	%eax,0x04(%esp)
00000af2	movl	%edx,0x08(%esp)
00000af6	movl	%esi,(%esp)
00000af9	call	*0x1c(%esi)
00000afc	testl	%eax,%eax
00000afe	jne	0x00000ba8
00000b04	movl	(%esi),%eax
00000b06	cmpb	$__mh_dylib_header,0x0c(%eax)
00000b0a	je	0x00000b24
00000b0c	cmpb	$0x0f,0xf6(%ebp)
00000b10	jne	0x00000ba8
00000b16	cmpb	$0x05,0xf7(%ebp)
00000b1a	movl	$0x00000001,%eax
00000b1f	jmp	0x00000ba6
00000b24	movzbl	0xf6(%ebp),%edx
00000b28	cmpb	$0xcd,%dl
00000b2b	jne	0x00000b38
00000b2d	cmpb	$0x81,0xf7(%ebp)
00000b31	movl	$0x00000001,%eax
00000b36	je	0x00000b3a
00000b38	xorl	%eax,%eax
00000b3a	testb	%al,%al
00000b3c	jne	0x00000baa
00000b3e	cmpb	$0xe8,0xf3(%ebp)
00000b42	jne	0x00000ba8
00000b44	movzbl	0xf5(%ebp),%ecx
00000b48	movzbl	0xf4(%ebp),%eax
00000b4c	movl	$0x00000005,0x10(%esp)
00000b54	movl	%edi,0x0c(%esp)
00000b58	shll	$0x08,%ecx
00000b5b	orl	%ecx,%eax
00000b5d	movzbl	%dl,%ecx
00000b60	shll	$0x10,%ecx
00000b63	xorl	%edx,%edx
00000b65	orl	%ecx,%eax
00000b67	movzbl	0xf7(%ebp),%ecx
00000b6b	movl	%esi,(%esp)
00000b6e	shll	$0x18,%ecx
00000b71	orl	%ecx,%eax
00000b73	addl	0xe0(%ebp),%eax
00000b76	adcl	0xe4(%ebp),%edx
00000b79	movl	%eax,0x04(%esp)
00000b7d	movl	%edx,0x08(%esp)
00000b81	call	*0x1c(%esi)
00000b84	testl	%eax,%eax
00000b86	jne	0x00000ba8
00000b88	cmpb	$0x5a,0xf3(%ebp)
00000b8c	jne	0x00000ba8
00000b8e	cmpb	$0x89,0xf4(%ebp)
00000b92	jne	0x00000ba8
00000b94	cmpb	$0xe1,0xf5(%ebp)
00000b98	jne	0x00000ba8
00000b9a	cmpb	$0x0f,0xf6(%ebp)
00000b9e	jne	0x00000ba8
00000ba0	cmpb	$0x34,0xf7(%ebp)
00000ba4	movb	$0x01,%al
00000ba6	je	0x00000baa
00000ba8	xorl	%eax,%eax
00000baa	addl	$0x40,%esp
00000bad	movzbl	%al,%eax
00000bb0	popl	%esi
00000bb1	popl	%edi
00000bb2	leave
00000bb3	ret
_IntelValidPC:
00000bb4	pushl	%ebp
00000bb5	movl	%esp,%ebp
00000bb7	pushl	%esi
00000bb8	subl	$0x34,%esp
00000bbb	movl	0x0c(%ebp),%edx
00000bbe	movl	0x10(%ebp),%ecx
00000bc1	movl	0x08(%ebp),%esi
00000bc4	movl	%edx,%eax
00000bc6	andl	%ecx,%eax
00000bc8	incl	%eax
00000bc9	je	0x00000bf1
00000bcb	leal	0xf7(%ebp),%eax
00000bce	movl	%edx,0x04(%esp)
00000bd2	movl	$0x00000001,0x10(%esp)
00000bda	movl	%eax,0x0c(%esp)
00000bde	movl	%ecx,0x08(%esp)
00000be2	movl	%esi,(%esp)
00000be5	call	*0x1c(%esi)
00000be8	movl	$0x00000001,%edx
00000bed	testl	%eax,%eax
00000bef	je	0x00000bf3
00000bf1	xorl	%edx,%edx
00000bf3	addl	$0x34,%esp
00000bf6	movzbl	%dl,%eax
00000bf9	popl	%esi
00000bfa	leave
00000bfb	ret
_QBTCreateThreadState:
00000bfc	pushl	%ebp
00000bfd	movl	%esp,%ebp
00000bff	pushl	%edi
00000c00	pushl	%esi
00000c01	pushl	%ebx
00000c02	subl	$0x3c,%esp
00000c05	movl	0x08(%ebp),%edx
00000c08	calll	0x00000c0d
00000c0d	popl	%ebx
00000c0e	movl	0x14(%ebp),%eax
00000c11	testl	%edx,%edx
00000c13	jne	0x00000c29
00000c15	leal	0x0000a8ff(%ebx),%eax
00000c1b	movl	%eax,0x0c(%esp)
00000c1f	movl	$0x00000931,0x08(%esp)
00000c27	jmp	0x00000c42
00000c29	movl	0x0c(%ebp),%ecx
00000c2c	testl	%ecx,%ecx
00000c2e	jne	0x00000c5a
00000c30	leal	0x0000a916(%ebx),%eax
00000c36	movl	%eax,0x0c(%esp)
00000c3a	movl	$0x00000932,0x08(%esp)
00000c42	leal	0x0000a8af(%ebx),%eax
00000c48	movl	%eax,0x04(%esp)
00000c4c	leal	0x0000ad7b(%ebx),%eax
00000c52	movl	%eax,(%esp)
00000c55	calll	___eprintf
00000c5a	movl	0x18(%ebp),%edi
00000c5d	testl	%edi,%edi
00000c5f	jne	0x00000c75
00000c61	leal	0x0000a92f(%ebx),%eax
00000c67	movl	%eax,0x0c(%esp)
00000c6b	movl	$0x00000935,0x08(%esp)
00000c73	jmp	0x00000c42
00000c75	movl	0x1c(%ebp),%esi
00000c78	testl	%esi,%esi
00000c7a	jne	0x00000c90
00000c7c	leal	0x0000a946(%ebx),%eax
00000c82	movl	%eax,0x0c(%esp)
00000c86	movl	$0x00000936,0x08(%esp)
00000c8e	jmp	0x00000c42
00000c90	movl	0x1c(%ebp),%ecx
00000c93	movl	(%ecx),%ecx
00000c95	testl	%ecx,%ecx
00000c97	je	0x00000cad
00000c99	leal	0x0000a957(%ebx),%eax
00000c9f	movl	%eax,0x0c(%esp)
00000ca3	movl	$0x00000937,0x08(%esp)
00000cab	jmp	0x00000c42
00000cad	movl	0x20(%ebp),%edi
00000cb0	testl	%edi,%edi
00000cb2	jne	0x00000ccb
00000cb4	leal	0x0000a969(%ebx),%eax
00000cba	movl	%eax,0x0c(%esp)
00000cbe	movl	$0x00000938,0x08(%esp)
00000cc6	jmp	0x00000c42
00000ccb	movl	0x20(%ebp),%ecx
00000cce	movl	(%ecx),%esi
00000cd0	testl	%esi,%esi
00000cd2	je	0x00000ceb
00000cd4	leal	0x0000a97e(%ebx),%eax
00000cda	movl	%eax,0x0c(%esp)
00000cde	movl	$0x00000939,0x08(%esp)
00000ce6	jmp	0x00000c42
00000ceb	testl	%eax,%eax
00000ced	movl	$__mh_dylib_header,0xe4(%ebp)
00000cf4	jne	0x00000d1f
00000cf6	leal	0xe4(%ebp),%eax
00000cf9	movl	%eax,0x08(%esp)
00000cfd	movl	0x10(%ebp),%eax
00000d00	movl	%edx,(%esp)
00000d03	movl	%eax,0x04(%esp)
00000d07	calll	_QMOImageCreateFromTaskDyld
00000d0c	movl	$__mh_dylib_header,0xd0(%ebp)
00000d13	movb	$0x01,0xd7(%ebp)
00000d17	testl	%eax,%eax
00000d19	movl	%eax,%esi
00000d1b	jne	0x00000d70
00000d1d	jmp	0x00000d2e
00000d1f	movl	%eax,(%esp)
00000d22	calll	_QSymGetDyldImage
00000d27	movb	$__mh_dylib_header,0xd7(%ebp)
00000d2b	movl	%eax,0xe4(%ebp)
00000d2e	movl	0xe4(%ebp),%eax
00000d31	movl	$0x00000016,%esi
00000d36	calll	0x00000722
00000d3b	movl	$__mh_dylib_header,0xd0(%ebp)
00000d42	testl	%eax,%eax
00000d44	movl	%eax,%edi
00000d46	jne	0x00000de3
00000d4c	jmp	0x00000d70
00000d4e	movl	0xd0(%ebp),%ecx
00000d51	movl	0x1c(%ebp),%edx
00000d54	movl	%ecx,(%edx)
00000d56	movl	0x28(%edi),%eax
00000d59	movl	0x18(%ebp),%edx
00000d5c	movl	%eax,(%edx)
00000d5e	movl	0x2c(%edi),%eax
00000d61	movl	0x20(%ebp),%ecx
00000d64	shll	$0x02,%eax
00000d67	movl	%eax,(%ecx)
00000d69	movl	$__mh_dylib_header,0xd0(%ebp)
00000d70	movl	0xd0(%ebp),%eax
00000d73	movl	%eax,(%esp)
00000d76	calll	0x0000e08b	; symbol stub for: _free
00000d7b	cmpb	$__mh_dylib_header,0xd7(%ebp)
00000d7f	je	0x00000d8c
00000d81	movl	0xe4(%ebp),%eax
00000d84	movl	%eax,(%esp)
00000d87	calll	_QMOImageDestroy
00000d8c	movl	0x1c(%ebp),%ecx
00000d8f	testl	%esi,%esi
00000d91	sete	%dl
00000d94	movl	(%ecx),%ecx
00000d96	testl	%ecx,%ecx
00000d98	movl	%edx,%ecx
00000d9a	setne	%al
00000d9d	andl	$0x01,%ecx
00000da0	cmpb	%dl,%al
00000da2	je	0x00000dbb
00000da4	leal	0x0000a993(%ebx),%eax
00000daa	movl	%eax,0x0c(%esp)
00000dae	movl	$0x00000971,0x08(%esp)
00000db6	jmp	0x00000c42
00000dbb	movl	0x20(%ebp),%eax
00000dbe	movl	(%eax),%eax
00000dc0	testl	%eax,%eax
00000dc2	setne	%al
00000dc5	movzbl	%al,%eax
00000dc8	cmpl	%eax,%ecx
00000dca	je	0x00000e43
00000dcc	leal	0x0000a9b7(%ebx),%eax
00000dd2	movl	%eax,0x0c(%esp)
00000dd6	movl	$0x00000972,0x08(%esp)
00000dde	jmp	0x00000c42
00000de3	movl	$0x00000004,0x04(%esp)
00000deb	movl	0x2c(%eax),%eax
00000dee	movl	$0x0000000c,%esi
00000df3	movl	%eax,(%esp)
00000df6	calll	0x0000e068	; symbol stub for: _calloc
00000dfb	testl	%eax,%eax
00000dfd	movl	%eax,0xd0(%ebp)
00000e00	je	0x00000d70
00000e06	movl	0x2c(%edi),%eax
00000e09	movl	0xd0(%ebp),%edx
00000e0c	movl	0x0c(%ebp),%ecx
00000e0f	movl	%eax,0xe0(%ebp)
00000e12	leal	0xe0(%ebp),%eax
00000e15	movl	%edx,0x08(%esp)
00000e19	movl	%eax,0x0c(%esp)
00000e1d	movl	0x28(%edi),%eax
00000e20	movl	%ecx,(%esp)
00000e23	movl	%eax,0x04(%esp)
00000e27	calll	0x0000e14e	; symbol stub for: _thread_get_state
00000e2c	movl	%eax,(%esp)
00000e2f	calll	_QTMErrnoFromMachError
00000e34	testl	%eax,%eax
00000e36	movl	%eax,%esi
00000e38	je	0x00000d4e
00000e3e	jmp	0x00000d70
00000e43	addl	$0x3c,%esp
00000e46	movl	%esi,%eax
00000e48	popl	%ebx
00000e49	popl	%esi
00000e4a	popl	%edi
00000e4b	leave
00000e4c	ret
_QBTCreateThreadStateSelf:
00000e4d	pushl	%ebp
00000e4e	movl	%esp,%ebp
00000e50	subl	$0x38,%esp
00000e53	movl	0x08(%ebp),%eax
00000e56	movl	%ebx,0xf4(%ebp)
00000e59	calll	0x00000e5e
00000e5e	popl	%ebx
00000e5f	movl	%esi,0xf8(%ebp)
00000e62	testl	%eax,%eax
00000e64	movl	%edi,0xfc(%ebp)
00000e67	jne	0x00000e7d
00000e69	leal	0x0000a6de(%ebx),%eax
00000e6f	movl	%eax,0x0c(%esp)
00000e73	movl	$0x00000986,0x08(%esp)
00000e7b	jmp	0x00000e96
00000e7d	movl	0x0c(%ebp),%eax
00000e80	testl	%eax,%eax
00000e82	jne	0x00000eae
00000e84	leal	0x0000a6f5(%ebx),%eax
00000e8a	movl	%eax,0x0c(%esp)
00000e8e	movl	$0x00000987,0x08(%esp)
00000e96	leal	0x0000a65e(%ebx),%eax
00000e9c	movl	%eax,0x04(%esp)
00000ea0	leal	_QCRPrintThreadState(%ebx),%eax
00000ea6	movl	%eax,(%esp)
00000ea9	calll	___eprintf
00000eae	movl	0x0c(%ebp),%eax
00000eb1	movl	(%eax),%eax
00000eb3	testl	%eax,%eax
00000eb5	je	0x00000ecb
00000eb7	leal	0x0000a706(%ebx),%eax
00000ebd	movl	%eax,0x0c(%esp)
00000ec1	movl	$0x00000988,0x08(%esp)
00000ec9	jmp	0x00000e96
00000ecb	movl	0x10(%ebp),%eax
00000ece	testl	%eax,%eax
00000ed0	jne	0x00000ee6
00000ed2	leal	0x0000a718(%ebx),%eax
00000ed8	movl	%eax,0x0c(%esp)
00000edc	movl	$0x00000989,0x08(%esp)
00000ee4	jmp	0x00000e96
00000ee6	movl	0x10(%ebp),%edx
00000ee9	movl	(%edx),%eax
00000eeb	testl	%eax,%eax
00000eed	je	0x00000f03
00000eef	leal	0x0000a72d(%ebx),%eax
00000ef5	movl	%eax,0x0c(%esp)
00000ef9	movl	$0x0000098a,0x08(%esp)
00000f01	jmp	0x00000e96
00000f03	movl	0x04(%ebp),%eax
00000f06	movl	$0x0000000c,%esi
00000f0b	movl	__mh_dylib_header(%ebp),%edi
00000f0e	movl	$0x00000040,0x04(%esp)
00000f16	movl	$0x00000001,(%esp)
00000f1d	movl	%eax,0xe4(%ebp)
00000f20	calll	0x0000e068	; symbol stub for: _calloc
00000f25	testl	%eax,%eax
00000f27	je	0x00000f4c
00000f29	movl	0xe4(%ebp),%edx
00000f2c	xorw	%si,%si
00000f2f	movl	%edi,0x18(%eax)
00000f32	movl	%edx,0x28(%eax)
00000f35	movl	0x08(%ebp),%edx
00000f38	movl	$0x00000001,(%edx)
00000f3e	movl	0x0c(%ebp),%edx
00000f41	movl	%eax,(%edx)
00000f43	movl	0x10(%ebp),%eax
00000f46	movl	$0x00000040,(%eax)
00000f4c	movl	0x0c(%ebp),%eax
00000f4f	testl	%esi,%esi
00000f51	sete	%dl
00000f54	movl	%edx,%ecx
00000f56	movl	(%eax),%edi
00000f58	testl	%edi,%edi
00000f5a	setne	%al
00000f5d	andl	$0x01,%ecx
00000f60	cmpb	%dl,%al
00000f62	je	0x00000f7b
00000f64	leal	0x0000a742(%ebx),%eax
00000f6a	movl	%eax,0x0c(%esp)
00000f6e	movl	$0x000009ce,0x08(%esp)
00000f76	jmp	0x00000e96
00000f7b	movl	0x10(%ebp),%edx
00000f7e	xorl	%eax,%eax
00000f80	cmpl	$__mh_dylib_header,(%edx)
00000f83	setne	%al
00000f86	cmpl	%eax,%ecx
00000f88	je	0x00000fa1
00000f8a	leal	0x0000a766(%ebx),%eax
00000f90	movl	%eax,0x0c(%esp)
00000f94	movl	$0x000009cf,0x08(%esp)
00000f9c	jmp	0x00000e96
00000fa1	movl	%esi,%eax
00000fa3	movl	0xf4(%ebp),%ebx
00000fa6	movl	0xf8(%ebp),%esi
00000fa9	movl	0xfc(%ebp),%edi
00000fac	leave
00000fad	ret
_MachReadBytes:
00000fae	pushl	%ebp
00000faf	movl	%esp,%ebp
00000fb1	subl	$0x48,%esp
00000fb4	movl	0x08(%ebp),%ecx
00000fb7	movl	0x14(%ebp),%eax
00000fba	movl	0x18(%ebp),%edx
00000fbd	movl	%ebx,0xf4(%ebp)
00000fc0	calll	0x00000fc5
00000fc5	popl	%ebx
00000fc6	testl	%ecx,%ecx
00000fc8	movl	%esi,0xf8(%ebp)
00000fcb	movl	0x0c(%ebp),%esi
00000fce	movl	%edi,0xfc(%ebp)
00000fd1	movl	0x10(%ebp),%edi
00000fd4	movl	%eax,0xe4(%ebp)
00000fd7	movl	%edx,0xe0(%ebp)
00000fda	je	0x00001054
00000fdc	movl	(%ecx),%eax
00000fde	testl	%eax,%eax
00000fe0	je	0x00001054
00000fe2	movl	0x04(%ecx),%edx
00000fe5	testl	%edx,%edx
00000fe7	je	0x00001054
00000fe9	movl	0x08(%ecx),%eax
00000fec	testl	%eax,%eax
00000fee	je	0x00001054
00000ff0	movl	0x14(%ecx),%eax
00000ff3	testl	%eax,%eax
00000ff5	movl	0x18(%ecx),%eax
00000ff8	setne	%dl
00000ffb	testl	%eax,%eax
00000ffd	sete	%al
00001000	cmpb	%al,%dl
00001002	je	0x00001054
00001004	movl	0x1c(%ecx),%eax
00001007	testl	%eax,%eax
00001009	je	0x00001054
0000100b	movl	0x24(%ecx),%eax
0000100e	movl	0x28(%ecx),%edx
00001011	movl	%eax,0xd0(%ebp)
00001014	movl	%edx,0xd4(%ebp)
00001017	orl	%eax,%edx
00001019	je	0x00001054
0000101b	movl	0xd4(%ebp),%edx
0000101e	cmpl	0x30(%ecx),%edx
00001021	ja	0x00001054
00001023	jb	0x0000102d
00001025	movl	0xd0(%ebp),%eax
00001028	cmpl	0x2c(%ecx),%eax
0000102b	jae	0x00001054
0000102d	movl	0x38(%ecx),%edx
00001030	cmpl	0x40(%ecx),%edx
00001033	movl	0x34(%ecx),%eax
00001036	ja	0x00001054
00001038	jb	0x0000103f
0000103a	cmpl	0x3c(%ecx),%eax
0000103d	ja	0x00001054
0000103f	movl	0x48(%ecx),%eax
00001042	testl	%eax,%eax
00001044	je	0x0000104d
00001046	movl	0x44(%ecx),%eax
00001049	testl	%eax,%eax
0000104b	je	0x00001054
0000104d	movl	$0x00000001,%eax
00001052	jmp	0x00001056
00001054	xorl	%eax,%eax
00001056	testl	%eax,%eax
00001058	jne	0x0000106e
0000105a	leal	0x0000a52c(%ebx),%eax
00001060	movl	%eax,0x0c(%esp)
00001064	movl	$0x0000032b,0x08(%esp)
0000106c	jmp	0x00001087
0000106e	movl	0xe4(%ebp),%edx
00001071	testl	%edx,%edx
00001073	jne	0x0000109f
00001075	leal	0x0000a622(%ebx),%eax
0000107b	movl	%eax,0x0c(%esp)
0000107f	movl	$0x0000032c,0x08(%esp)
00001087	leal	0x0000a4f7(%ebx),%eax
0000108d	movl	%eax,0x04(%esp)
00001091	leal	0x0000a9c3(%ebx),%eax
00001097	movl	%eax,(%esp)
0000109a	calll	___eprintf
0000109f	movl	0xe0(%ebp),%eax
000010a2	testl	%eax,%eax
000010a4	jne	0x000010ba
000010a6	leal	0x0000a983(%ebx),%eax
000010ac	movl	%eax,0x0c(%esp)
000010b0	movl	$0x0000032d,0x08(%esp)
000010b8	jmp	0x00001087
000010ba	movl	0xe0(%ebp),%eax
000010bd	movl	0xe4(%ebp),%edx
000010c0	movl	%esi,0x0c(%ebp)
000010c3	movl	0xf4(%ebp),%ebx
000010c6	movl	%edi,0x10(%ebp)
000010c9	movl	0xf8(%ebp),%esi
000010cc	movl	%eax,0x14(%ebp)
000010cf	movl	0xfc(%ebp),%edi
000010d2	movl	%edx,0x18(%ebp)
000010d5	movl	0x04(%ecx),%eax
000010d8	movl	%eax,0x08(%ebp)
000010db	leave
000010dc	jmp	_QTMRead
_ReadAddr:
000010e1	pushl	%ebp
000010e2	movl	%esp,%ebp
000010e4	subl	$0x58,%esp
000010e7	movl	%ebx,0xf4(%ebp)
000010ea	calll	0x000010ef
000010ef	popl	%ebx
000010f0	testl	%eax,%eax
000010f2	movl	%esi,0xf8(%ebp)
000010f5	movl	%eax,%esi
000010f7	movl	%edi,0xfc(%ebp)
000010fa	movl	0x08(%ebp),%edi
000010fd	movl	%edx,0xd0(%ebp)
00001100	movl	%ecx,0xd4(%ebp)
00001103	je	0x00001173
00001105	movl	(%eax),%eax
00001107	testl	%eax,%eax
00001109	je	0x00001173
0000110b	movl	0x04(%esi),%ecx
0000110e	testl	%ecx,%ecx
00001110	je	0x00001173
00001112	movl	0x08(%esi),%edx
00001115	testl	%edx,%edx
00001117	je	0x00001173
00001119	movl	0x14(%esi),%eax
0000111c	testl	%eax,%eax
0000111e	movl	0x18(%esi),%eax
00001121	setne	%dl
00001124	testl	%eax,%eax
00001126	sete	%al
00001129	cmpb	%al,%dl
0000112b	je	0x00001173
0000112d	movl	0x1c(%esi),%eax
00001130	testl	%eax,%eax
00001132	je	0x00001173
00001134	movl	0x28(%esi),%edx
00001137	movl	0x24(%esi),%eax
0000113a	movl	%edx,%ecx
0000113c	orl	%eax,%ecx
0000113e	je	0x00001173
00001140	cmpl	0x30(%esi),%edx
00001143	ja	0x00001173
00001145	jb	0x0000114c
00001147	cmpl	0x2c(%esi),%eax
0000114a	jae	0x00001173
0000114c	movl	0x38(%esi),%edx
0000114f	cmpl	0x40(%esi),%edx
00001152	movl	0x34(%esi),%eax
00001155	ja	0x00001173
00001157	jb	0x0000115e
00001159	cmpl	0x3c(%esi),%eax
0000115c	ja	0x00001173
0000115e	movl	0x48(%esi),%eax
00001161	testl	%eax,%eax
00001163	je	0x0000116c
00001165	movl	0x44(%esi),%eax
00001168	testl	%eax,%eax
0000116a	je	0x00001173
0000116c	movl	$0x00000001,%eax
00001171	jmp	0x00001175
00001173	xorl	%eax,%eax
00001175	testl	%eax,%eax
00001177	jne	0x0000118d
00001179	leal	0x0000a402(%ebx),%eax
0000117f	movl	%eax,0x0c(%esp)
00001183	movl	$0x00000200,0x08(%esp)
0000118b	jmp	0x000011a3
0000118d	testl	%edi,%edi
0000118f	jne	0x000011bb
00001191	leal	0x0000a505(%ebx),%eax
00001197	movl	%eax,0x0c(%esp)
0000119b	movl	$0x00000201,0x08(%esp)
000011a3	leal	0x0000a3cd(%ebx),%eax
000011a9	movl	%eax,0x04(%esp)
000011ad	leal	0x0000a899(%ebx),%eax
000011b3	movl	%eax,(%esp)
000011b6	calll	___eprintf
000011bb	movl	(%esi),%eax
000011bd	cmpb	$__mh_dylib_header,0x0c(%eax)
000011c1	je	0x000011fd
000011c3	leal	0xd8(%ebp),%eax
000011c6	movl	0xd4(%ebp),%edx
000011c9	movl	%eax,0x0c(%esp)
000011cd	movl	0xd0(%ebp),%eax
000011d0	movl	$0x00000008,0x10(%esp)
000011d8	movl	%esi,(%esp)
000011db	movl	%edx,0x08(%esp)
000011df	movl	%eax,0x04(%esp)
000011e3	call	*0x1c(%esi)
000011e6	testl	%eax,%eax
000011e8	jne	0x0000124c
000011ea	cmpb	$__mh_dylib_header,0x20(%esi)
000011ee	je	0x0000123f
000011f0	movl	0xd8(%ebp),%eax
000011f3	movl	0xdc(%ebp),%edx
000011f6	bswap	%eax
000011f8	bswap	%edx
000011fa	xchgl	%edx,%eax
000011fb	jmp	0x00001237
000011fd	movl	0xd0(%ebp),%edx
00001200	leal	0xe4(%ebp),%eax
00001203	movl	0xd4(%ebp),%ecx
00001206	movl	$0x00000004,0x10(%esp)
0000120e	movl	%eax,0x0c(%esp)
00001212	movl	%edx,0x04(%esp)
00001216	movl	%ecx,0x08(%esp)
0000121a	movl	%esi,(%esp)
0000121d	call	*0x1c(%esi)
00001220	testl	%eax,%eax
00001222	jne	0x0000124c
00001224	cmpb	$__mh_dylib_header,0x20(%esi)
00001228	je	0x00001232
0000122a	movl	0xe4(%ebp),%eax
0000122d	bswap	%eax
0000122f	movl	%eax,0xe4(%ebp)
00001232	movl	0xe4(%ebp),%eax
00001235	xorl	%edx,%edx
00001237	movl	%eax,0xd8(%ebp)
0000123a	movl	%edx,0xdc(%ebp)
0000123d	jmp	0x00001245
0000123f	movl	0xd8(%ebp),%eax
00001242	movl	0xdc(%ebp),%edx
00001245	movl	%eax,(%edi)
00001247	xorl	%eax,%eax
00001249	movl	%edx,0x04(%edi)
0000124c	movl	0xf4(%ebp),%ebx
0000124f	movl	0xf8(%ebp),%esi
00001252	movl	0xfc(%ebp),%edi
00001255	leave
00001256	ret
_Intel32CrossSignalFrame:
00001257	pushl	%ebp
00001258	movl	%esp,%ebp
0000125a	subl	$0x00000088,%esp
00001260	movl	0x0c(%ebp),%eax
00001263	movl	0x10(%ebp),%edx
00001266	movl	%ebx,0xf4(%ebp)
00001269	calll	0x0000126e
0000126e	popl	%ebx
0000126f	movl	%edi,0xfc(%ebp)
00001272	movl	0x08(%ebp),%edi
00001275	movl	%eax,0x90(%ebp)
00001278	leal	0xc8(%ebp),%eax
0000127b	movl	%edx,0x94(%ebp)
0000127e	movl	0x90(%ebp),%edx
00001281	movl	0x94(%ebp),%ecx
00001284	movl	%eax,(%esp)
00001287	movl	%edi,%eax
00001289	movl	%esi,0xf8(%ebp)
0000128c	calll	0x000010e1
00001291	testl	%eax,%eax
00001293	movl	%eax,%esi
00001295	jne	0x00001468
0000129b	movl	0x90(%ebp),%edx
0000129e	leal	0xa8(%ebp),%eax
000012a1	movl	0x94(%ebp),%ecx
000012a4	movl	%eax,(%esp)
000012a7	movl	%edi,%eax
000012a9	addl	$0x14,%edx
000012ac	adcl	$__mh_dylib_header,%ecx
000012af	calll	0x000010e1
000012b4	testl	%eax,%eax
000012b6	movl	%eax,%esi
000012b8	jne	0x00001468
000012be	movl	0xa8(%ebp),%edx
000012c1	leal	0xc0(%ebp),%eax
000012c4	movl	0xac(%ebp),%ecx
000012c7	movl	%eax,(%esp)
000012ca	movl	%edi,%eax
000012cc	addl	$0x24,%edx
000012cf	adcl	$__mh_dylib_header,%ecx
000012d2	calll	0x000010e1
000012d7	testl	%eax,%eax
000012d9	movl	%eax,%esi
000012db	jne	0x00001468
000012e1	addl	$0x18,0x90(%ebp)
000012e5	adcl	$__mh_dylib_header,0x94(%ebp)
000012e9	movl	0x90(%ebp),%edx
000012ec	leal	0xd8(%ebp),%eax
000012ef	movl	0x94(%ebp),%ecx
000012f2	movl	%eax,(%esp)
000012f5	movl	%edi,%eax
000012f7	calll	0x000010e1
000012fc	testl	%eax,%eax
000012fe	movl	%eax,%esi
00001300	jne	0x00001468
00001306	movl	0xd8(%ebp),%edx
00001309	leal	0xd0(%ebp),%eax
0000130c	movl	0xdc(%ebp),%ecx
0000130f	movl	%eax,(%esp)
00001312	movl	%edi,%eax
00001314	addl	$0x1c,%edx
00001317	adcl	$__mh_dylib_header,%ecx
0000131a	calll	0x000010e1
0000131f	testl	%eax,%eax
00001321	movl	%eax,%esi
00001323	jne	0x00001468
00001329	movl	0xd0(%ebp),%edx
0000132c	leal	0xb8(%ebp),%eax
0000132f	movl	0xd4(%ebp),%ecx
00001332	movl	%eax,(%esp)
00001335	movl	%edi,%eax
00001337	movl	%edx,0x98(%ebp)
0000133a	addl	$0x24,%edx
0000133d	movl	%ecx,0x9c(%ebp)
00001340	adcl	$__mh_dylib_header,%ecx
00001343	calll	0x000010e1
00001348	testl	%eax,%eax
0000134a	movl	%eax,%esi
0000134c	jne	0x00001468
00001352	movl	0x98(%ebp),%edx
00001355	leal	0xb0(%ebp),%eax
00001358	movl	0x9c(%ebp),%ecx
0000135b	movl	%eax,(%esp)
0000135e	movl	%edi,%eax
00001360	addl	$0x28,%edx
00001363	adcl	$__mh_dylib_header,%ecx
00001366	calll	0x000010e1
0000136b	testl	%eax,%eax
0000136d	movl	%eax,%esi
0000136f	jne	0x00001468
00001375	addl	$0x34,0x98(%ebp)
00001379	adcl	$__mh_dylib_header,0x9c(%ebp)
0000137d	movl	0x98(%ebp),%edx
00001380	leal	0xe0(%ebp),%eax
00001383	movl	0x9c(%ebp),%ecx
00001386	movl	%eax,(%esp)
00001389	movl	%edi,%eax
0000138b	calll	0x000010e1
00001390	testl	%eax,%eax
00001392	movl	%eax,%esi
00001394	jne	0x00001468
0000139a	movl	0xc8(%ebp),%eax
0000139d	movl	0xcc(%ebp),%edx
000013a0	movl	%eax,0xa0(%ebp)
000013a3	movl	0xa0(%ebp),%eax
000013a6	movl	%edx,0xa4(%ebp)
000013a9	movl	0xa4(%ebp),%edx
000013ac	xorl	0xbc(%ebp),%edx
000013af	xorl	0xb8(%ebp),%eax
000013b2	orl	%eax,%edx
000013b4	je	0x000013ca
000013b6	leal	0x0000a39a(%ebx),%eax
000013bc	movl	%eax,0x0c(%esp)
000013c0	movl	$0x000006fa,0x08(%esp)
000013c8	jmp	0x000013ee
000013ca	movl	0xb4(%ebp),%edx
000013cd	movl	0xc4(%ebp),%ecx
000013d0	movl	0xb0(%ebp),%eax
000013d3	xorl	0xc0(%ebp),%eax
000013d6	xorl	%edx,%ecx
000013d8	orl	%eax,%ecx
000013da	je	0x00001406
000013dc	leal	0x0000a3c2(%ebx),%eax
000013e2	movl	%eax,0x0c(%esp)
000013e6	movl	$0x000006fb,0x08(%esp)
000013ee	leal	0x0000a24e(%ebx),%eax
000013f4	movl	%eax,0x04(%esp)
000013f8	leal	0x0000a71a(%ebx),%eax
000013fe	movl	%eax,(%esp)
00001401	calll	___eprintf
00001406	movl	0xa0(%ebp),%edx
00001409	movl	0xa4(%ebp),%ecx
0000140c	movl	0x18(%ebp),%eax
0000140f	movl	%edx,(%eax)
00001411	movl	%ecx,0x04(%eax)
00001414	movl	0x14(%ebp),%eax
00001417	movl	0xe0(%ebp),%edx
0000141a	movl	0xe4(%ebp),%ecx
0000141d	movl	%edx,(%eax)
0000141f	movl	%ecx,0x04(%eax)
00001422	movl	%edi,%eax
00001424	calll	0x00000ac5
00001429	testb	%al,%al
0000142b	je	0x00001468
0000142d	movl	0x14(%ebp),%eax
00001430	movl	$0x00000001,0x08(%esp)
00001438	movl	$__mh_dylib_header,(%esp)
0000143f	movl	$__mh_dylib_header,0x04(%esp)
00001447	movl	(%eax),%edx
00001449	movl	0x04(%eax),%ecx
0000144c	movl	%edi,%eax
0000144e	calll	0x000007ce
00001453	movl	0x14(%ebp),%edx
00001456	movl	%edi,%eax
00001458	movl	0xc4(%ebp),%ecx
0000145b	movl	%edx,(%esp)
0000145e	movl	0xc0(%ebp),%edx
00001461	calll	0x000010e1
00001466	movl	%eax,%esi
00001468	movl	%esi,%eax
0000146a	movl	0xf4(%ebp),%ebx
0000146d	movl	0xf8(%ebp),%esi
00001470	movl	0xfc(%ebp),%edi
00001473	leave
00001474	ret
_IntelGetFrameNextPC:
00001475	pushl	%ebp
00001476	xorl	%ecx,%ecx
00001478	movl	%esp,%ebp
0000147a	subl	$0x10,%esp
0000147d	movl	0x08(%ebp),%eax
00001480	movl	0x1c(%ebp),%edx
00001483	movl	%esi,0xf8(%ebp)
00001486	movl	0x0c(%ebp),%esi
00001489	movl	%edi,0xfc(%ebp)
0000148c	movl	0x10(%ebp),%edi
0000148f	movl	%eax,0xf4(%ebp)
00001492	movl	%edx,0xf0(%ebp)
00001495	movl	(%eax),%eax
00001497	movl	$0x00000008,%edx
0000149c	cmpb	$__mh_dylib_header,0x0c(%eax)
000014a0	jne	0x000014a9
000014a2	movl	$0x00000004,%edx
000014a7	xorl	%ecx,%ecx
000014a9	movl	0xf0(%ebp),%eax
000014ac	addl	%esi,%edx
000014ae	adcl	%edi,%ecx
000014b0	movl	0xf8(%ebp),%esi
000014b3	movl	0xfc(%ebp),%edi
000014b6	movl	%eax,0x08(%ebp)
000014b9	movl	0xf4(%ebp),%eax
000014bc	leave
000014bd	jmp	0x000010e1
_IntelHandleLeaf:
000014c2	pushl	%ebp
000014c3	movl	%esp,%ebp
000014c5	pushl	%esi
000014c6	subl	$0x34,%esp
000014c9	movl	0x08(%ebp),%esi
000014cc	movl	0x10(%esi),%edx
000014cf	cmpl	$0x01,%edx
000014d2	je	0x00001511
000014d4	cmpl	$0x04,%edx
000014d7	movl	$0x00000016,%eax
000014dc	jne	0x000015a1
000014e2	movl	0x14(%esi),%ecx
000014e5	movl	0x00000080(%ecx),%eax
000014eb	movl	0x00000084(%ecx),%edx
000014f1	movl	%eax,0xf0(%ebp)
000014f4	movl	%edx,0xf4(%ebp)
000014f7	movl	0x38(%ecx),%eax
000014fa	movl	0x3c(%ecx),%edx
000014fd	movl	%eax,0xd8(%ebp)
00001500	movl	%edx,0xdc(%ebp)
00001503	movl	0x30(%ecx),%eax
00001506	movl	0x34(%ecx),%edx
00001509	movl	%eax,0xe0(%ebp)
0000150c	movl	%edx,0xe4(%ebp)
0000150f	jmp	0x00001537
00001511	movl	0x14(%esi),%eax
00001514	xorl	%ecx,%ecx
00001516	movl	0x28(%eax),%edx
00001519	movl	$__mh_dylib_header,0xf4(%ebp)
00001520	movl	%edx,0xf0(%ebp)
00001523	movl	0x1c(%eax),%edx
00001526	movl	%ecx,0xdc(%ebp)
00001529	xorl	%ecx,%ecx
0000152b	movl	%edx,0xd8(%ebp)
0000152e	movl	0x18(%eax),%edx
00001531	movl	%ecx,0xe4(%ebp)
00001534	movl	%edx,0xe0(%ebp)
00001537	movl	0xf0(%ebp),%edx
0000153a	movl	%esi,%eax
0000153c	movl	0xf4(%ebp),%ecx
0000153f	calll	0x00000ac5
00001544	testb	%al,%al
00001546	je	0x00001583
00001548	movl	0xf0(%ebp),%edx
0000154b	movl	%esi,%eax
0000154d	movl	0xf4(%ebp),%ecx
00001550	movl	$0x00000001,0x08(%esp)
00001558	movl	$__mh_dylib_header,(%esp)
0000155f	movl	$__mh_dylib_header,0x04(%esp)
00001567	calll	0x000007ce
0000156c	movl	0xd8(%ebp),%edx
0000156f	leal	0xf0(%ebp),%eax
00001572	movl	0xdc(%ebp),%ecx
00001575	movl	%eax,(%esp)
00001578	movl	%esi,%eax
0000157a	calll	0x000010e1
0000157f	testl	%eax,%eax
00001581	jne	0x000015a1
00001583	movl	0xf0(%ebp),%eax
00001586	movl	0xf4(%ebp),%edx
00001589	movl	0x0c(%ebp),%ecx
0000158c	movl	%eax,(%ecx)
0000158e	movl	%edx,0x04(%ecx)
00001591	movl	0xe0(%ebp),%eax
00001594	movl	0xe4(%ebp),%edx
00001597	movl	0x10(%ebp),%ecx
0000159a	movl	%eax,(%ecx)
0000159c	xorl	%eax,%eax
0000159e	movl	%edx,0x04(%ecx)
000015a1	addl	$0x34,%esp
000015a4	popl	%esi
000015a5	leave
000015a6	ret
_PPCCheckFrameStyle:
000015a7	pushl	%ebp
000015a8	movl	%esp,%ebp
000015aa	subl	$0x00000088,%esp
000015b0	movl	%eax,0xbc(%ebp)
000015b3	movl	0x08(%ebp),%eax
000015b6	movl	%esi,0xf8(%ebp)
000015b9	movl	%edx,%esi
000015bb	movl	0x0c(%ebp),%edx
000015be	movl	%ebx,0xf4(%ebp)
000015c1	calll	0x000015c6
000015c6	popl	%ebx
000015c7	movl	%eax,0xb0(%ebp)
000015ca	movl	0x10(%ebp),%eax
000015cd	movl	%edx,0xb4(%ebp)
000015d0	movl	0x14(%ebp),%edx
000015d3	movl	%edi,0xfc(%ebp)
000015d6	movl	%ecx,%edi
000015d8	movl	%eax,0xa8(%ebp)
000015db	movl	0x18(%ebp),%eax
000015de	movl	%edx,0xac(%ebp)
000015e1	movl	0x1c(%ebp),%edx
000015e4	movl	%eax,0xa0(%ebp)
000015e7	movl	0x20(%ebp),%eax
000015ea	movl	%edx,0xa4(%ebp)
000015ed	movl	0x24(%ebp),%edx
000015f0	movl	%eax,0x88(%ebp)
000015f3	movl	0x28(%ebp),%eax
000015f6	movl	%edx,0x8c(%ebp)
000015f9	movl	0x2c(%ebp),%edx
000015fc	movl	%eax,0x98(%ebp)
000015ff	movl	0xbc(%ebp),%eax
00001602	movl	%edx,0x9c(%ebp)
00001605	testl	%eax,%eax
00001607	jne	0x0000161d
00001609	leal	0x0000a091(%ebx),%eax
0000160f	movl	%eax,0x0c(%esp)
00001613	movl	$0x000004f7,0x08(%esp)
0000161b	jmp	0x0000163a
0000161d	movl	0xbc(%ebp),%edx
00001620	movl	(%edx),%eax
00001622	cmpb	$__mh_dylib_header,0x0c(%eax)
00001626	je	0x00001652
00001628	leal	0x0000a0a1(%ebx),%eax
0000162e	movl	%eax,0x0c(%esp)
00001632	movl	$0x000004f8,0x08(%esp)
0000163a	leal	0x00009ef6(%ebx),%eax
00001640	movl	%eax,0x04(%esp)
00001644	leal	0x0000a3c2(%ebx),%eax
0000164a	movl	%eax,(%esp)
0000164d	calll	___eprintf
00001652	addl	0x88(%ebp),%esi
00001655	adcl	0x8c(%ebp),%edi
00001658	movl	0xa8(%ebp),%edx
0000165b	leal	0xe0(%ebp),%eax
0000165e	movl	%esi,0x90(%ebp)
00001661	movl	0xa0(%ebp),%esi
00001664	addl	$0x70,0x90(%ebp)
00001668	movl	0xac(%ebp),%ecx
0000166b	movl	%edi,0x94(%ebp)
0000166e	movl	0xa4(%ebp),%edi
00001671	adcl	$__mh_dylib_header,0x94(%ebp)
00001675	addl	0x90(%ebp),%edx
00001678	adcl	0x94(%ebp),%ecx
0000167b	movl	%eax,(%esp)
0000167e	movl	0xbc(%ebp),%eax
00001681	addl	%edx,%esi
00001683	adcl	%ecx,%edi
00001685	addl	$0x1c,%edx
00001688	adcl	$__mh_dylib_header,%ecx
0000168b	movl	%esi,0xc0(%ebp)
0000168e	movl	%edi,0xc4(%ebp)
00001691	calll	0x000010e1
00001696	testl	%eax,%eax
00001698	jne	0x00001709
0000169a	movl	0xb0(%ebp),%eax
0000169d	addl	%eax,0x90(%ebp)
000016a0	movl	0xb4(%ebp),%edx
000016a3	leal	0xd8(%ebp),%eax
000016a6	adcl	%edx,0x94(%ebp)
000016a9	movl	0x94(%ebp),%ecx
000016ac	movl	%eax,(%esp)
000016af	movl	0x90(%ebp),%edx
000016b2	movl	0xbc(%ebp),%eax
000016b5	calll	0x000010e1
000016ba	testl	%eax,%eax
000016bc	jne	0x00001709
000016be	addl	%esi,0x98(%ebp)
000016c1	adcl	%edi,0x9c(%ebp)
000016c4	leal	0xd0(%ebp),%eax
000016c7	movl	0x98(%ebp),%edx
000016ca	movl	%eax,(%esp)
000016cd	movl	0x9c(%ebp),%ecx
000016d0	movl	0xbc(%ebp),%eax
000016d3	calll	0x000010e1
000016d8	testl	%eax,%eax
000016da	jne	0x00001709
000016dc	movl	0xc4(%ebp),%edx
000016df	movl	0xc0(%ebp),%eax
000016e2	xorl	0xe4(%ebp),%edx
000016e5	xorl	0xe0(%ebp),%eax
000016e8	orl	%eax,%edx
000016ea	jne	0x00001703
000016ec	movl	0xdc(%ebp),%edx
000016ef	movl	0xd4(%ebp),%ecx
000016f2	movl	0xd8(%ebp),%eax
000016f5	xorl	0xd0(%ebp),%eax
000016f8	xorl	%edx,%ecx
000016fa	movl	$0x00000001,%edx
000016ff	orl	%eax,%ecx
00001701	je	0x00001705
00001703	xorl	%edx,%edx
00001705	movl	%edx,%eax
00001707	jmp	0x0000170b
00001709	xorl	%eax,%eax
0000170b	movl	0xf4(%ebp),%ebx
0000170e	movzbl	%al,%eax
00001711	movl	0xf8(%ebp),%esi
00001714	movl	0xfc(%ebp),%edi
00001717	leave
00001718	ret
_PowerPCCrossSignalFrame:
00001719	pushl	%ebp
0000171a	movl	%esp,%ebp
0000171c	subl	$0x000000c8,%esp
00001722	movl	%ebx,0xf4(%ebp)
00001725	movl	0x0c(%ebp),%eax
00001728	calll	0x0000172d
0000172d	popl	%ebx
0000172e	movl	0x10(%ebp),%edx
00001731	movl	%esi,0xf8(%ebp)
00001734	movl	%edi,0xfc(%ebp)
00001737	movl	%eax,0xffffff78(%ebp)
0000173d	leal	0xe4(%ebp),%eax
00001740	movl	%edx,0xffffff7c(%ebp)
00001746	movl	$__mh_dylib_header,0x08(%esp)
0000174e	movl	$__mh_dylib_header,0x04(%esp)
00001756	movl	%eax,(%esp)
00001759	calll	_QTMGetDarwinOSRelease
0000175e	testl	%eax,%eax
00001760	movl	%eax,%esi
00001762	jne	0x00001b82
00001768	leal	0xd8(%ebp),%eax
0000176b	movl	0xffffff78(%ebp),%edx
00001771	movl	%eax,(%esp)
00001774	movl	0xffffff7c(%ebp),%ecx
0000177a	movl	0x08(%ebp),%eax
0000177d	calll	0x000010e1
00001782	testl	%eax,%eax
00001784	movl	%eax,%esi
00001786	jne	0x00001b82
0000178c	movl	0x08(%ebp),%edx
0000178f	movl	(%edx),%eax
00001791	cmpb	$__mh_dylib_header,0x0c(%eax)
00001795	je	0x000017f6
00001797	movl	$0x00000018,%eax
0000179c	xorl	%edx,%edx
0000179e	movl	$0x00000068,0x88(%ebp)
000017a5	movl	$__mh_dylib_header,0x8c(%ebp)
000017ac	movl	$0x00000030,0x90(%ebp)
000017b3	movl	$__mh_dylib_header,0x94(%ebp)
000017ba	movl	$0x00000038,0xffffff70(%ebp)
000017c4	movl	$__mh_dylib_header,0xffffff74(%ebp)
000017ce	movl	$0x00000020,0x98(%ebp)
000017d5	movl	$__mh_dylib_header,0x9c(%ebp)
000017dc	movl	$0x00000038,0xa0(%ebp)
000017e3	movl	$__mh_dylib_header,0xa4(%ebp)
000017ea	movl	$0x0000013c,0xa8(%ebp)
000017f1	jmp	0x00001b2b
000017f6	cmpl	$0x06,0xe4(%ebp)
000017fa	jg	0x00001813
000017fc	leal	0x00009f53(%ebx),%eax
00001802	movl	%eax,0x0c(%esp)
00001806	movl	$0x00000562,0x08(%esp)
0000180e	jmp	0x00001a59
00001813	movl	0xd8(%ebp),%edx
00001816	movl	0xdc(%ebp),%ecx
00001819	movl	0x08(%ebp),%eax
0000181c	movl	$0x0000003c,0x20(%esp)
00001824	movl	$__mh_dylib_header,0x24(%esp)
0000182c	movl	$0x00000008,0x18(%esp)
00001834	movl	$__mh_dylib_header,0x1c(%esp)
0000183c	movl	$0x00000020,0x10(%esp)
00001844	movl	$__mh_dylib_header,0x14(%esp)
0000184c	movl	$0x00000040,0x08(%esp)
00001854	movl	$__mh_dylib_header,0x0c(%esp)
0000185c	movl	$0x00000024,(%esp)
00001863	movl	$__mh_dylib_header,0x04(%esp)
0000186b	calll	0x000015a7
00001870	testb	%al,%al
00001872	je	0x000018d3
00001874	movl	$0x00000008,%eax
00001879	xorl	%edx,%edx
0000187b	movl	$0x00000040,0x88(%ebp)
00001882	movl	$__mh_dylib_header,0x8c(%ebp)
00001889	movl	$0x00000024,0x90(%ebp)
00001890	movl	$__mh_dylib_header,0x94(%ebp)
00001897	movl	$0x00000020,0xffffff70(%ebp)
000018a1	movl	$__mh_dylib_header,0xffffff74(%ebp)
000018ab	movl	$0x00000024,0x98(%ebp)
000018b2	movl	$__mh_dylib_header,0x9c(%ebp)
000018b9	movl	$0x0000003c,0xa0(%ebp)
000018c0	movl	$__mh_dylib_header,0xa4(%ebp)
000018c7	movl	$0x00000140,0xa8(%ebp)
000018ce	jmp	0x00001b2b
000018d3	movl	0xd8(%ebp),%edx
000018d6	movl	0xdc(%ebp),%ecx
000018d9	movl	0x08(%ebp),%eax
000018dc	movl	$0x0000002c,0x20(%esp)
000018e4	movl	$__mh_dylib_header,0x24(%esp)
000018ec	movl	$0x00000008,0x18(%esp)
000018f4	movl	$__mh_dylib_header,0x1c(%esp)
000018fc	movl	$0x00000020,0x10(%esp)
00001904	movl	$__mh_dylib_header,0x14(%esp)
0000190c	movl	$0x00000040,0x08(%esp)
00001914	movl	$__mh_dylib_header,0x0c(%esp)
0000191c	movl	$0x00000024,(%esp)
00001923	movl	$__mh_dylib_header,0x04(%esp)
0000192b	calll	0x000015a7
00001930	testb	%al,%al
00001932	je	0x0000193e
00001934	movl	$0x00000008,%eax
00001939	jmp	0x00001ad6
0000193e	movl	0xd8(%ebp),%edx
00001941	movl	$0x00000016,%esi
00001946	movl	0xdc(%ebp),%ecx
00001949	movl	0x08(%ebp),%eax
0000194c	movl	$0x0000002c,0x20(%esp)
00001954	movl	$__mh_dylib_header,0x24(%esp)
0000195c	movl	$__mh_dylib_header,0x18(%esp)
00001964	movl	$__mh_dylib_header,0x1c(%esp)
0000196c	movl	$0x00000020,0x10(%esp)
00001974	movl	$__mh_dylib_header,0x14(%esp)
0000197c	movl	$0x00000040,0x08(%esp)
00001984	movl	$__mh_dylib_header,0x0c(%esp)
0000198c	movl	$0x00000024,(%esp)
00001993	movl	$__mh_dylib_header,0x04(%esp)
0000199b	calll	0x000015a7
000019a0	testb	%al,%al
000019a2	je	0x00001b82
000019a8	jmp	0x00001ad4
000019ad	movl	0xb0(%ebp),%esi
000019b0	leal	0xc8(%ebp),%eax
000019b3	addl	%esi,0xa0(%ebp)
000019b6	movl	0xb4(%ebp),%edi
000019b9	adcl	%edi,0xa4(%ebp)
000019bc	movl	0xa0(%ebp),%edx
000019bf	movl	%eax,(%esp)
000019c2	movl	0xa4(%ebp),%ecx
000019c5	movl	0x08(%ebp),%eax
000019c8	calll	0x000010e1
000019cd	testl	%eax,%eax
000019cf	movl	%eax,%esi
000019d1	jne	0x00001b82
000019d7	movl	0xb0(%ebp),%eax
000019da	addl	%eax,0x98(%ebp)
000019dd	movl	0xb4(%ebp),%edx
000019e0	leal	0xc0(%ebp),%eax
000019e3	adcl	%edx,0x9c(%ebp)
000019e6	movl	0x9c(%ebp),%ecx
000019e9	movl	%eax,(%esp)
000019ec	movl	0x98(%ebp),%edx
000019ef	movl	0x08(%ebp),%eax
000019f2	calll	0x000010e1
000019f7	testl	%eax,%eax
000019f9	movl	%eax,%esi
000019fb	jne	0x00001b82
00001a01	movl	0xb0(%ebp),%edx
00001a04	leal	0xb8(%ebp),%eax
00001a07	addl	%edx,0xa8(%ebp)
00001a0a	movl	0xb4(%ebp),%ecx
00001a0d	adcl	%ecx,0xac(%ebp)
00001a10	movl	0xa8(%ebp),%edx
00001a13	movl	%eax,(%esp)
00001a16	movl	0xac(%ebp),%ecx
00001a19	movl	0x08(%ebp),%eax
00001a1c	calll	0x000010e1
00001a21	testl	%eax,%eax
00001a23	movl	%eax,%esi
00001a25	jne	0x00001b82
00001a2b	movl	0xd0(%ebp),%eax
00001a2e	movl	0xd4(%ebp),%edx
00001a31	movl	%eax,0x80(%ebp)
00001a34	movl	0x80(%ebp),%eax
00001a37	movl	%edx,0x84(%ebp)
00001a3a	movl	0x84(%ebp),%edx
00001a3d	xorl	0xcc(%ebp),%edx
00001a40	xorl	0xc8(%ebp),%eax
00001a43	orl	%eax,%edx
00001a45	je	0x00001a71
00001a47	leal	0x00009edb(%ebx),%eax
00001a4d	movl	%eax,0x0c(%esp)
00001a51	movl	$0x000005aa,0x08(%esp)
00001a59	leal	0x00009d8f(%ebx),%eax
00001a5f	movl	%eax,0x04(%esp)
00001a63	leal	0x0000a25b(%ebx),%eax
00001a69	movl	%eax,(%esp)
00001a6c	calll	___eprintf
00001a71	movl	0x80(%ebp),%edx
00001a74	movl	0x84(%ebp),%ecx
00001a77	movl	0x18(%ebp),%edi
00001a7a	movl	%edx,(%edi)
00001a7c	movl	%ecx,0x04(%edi)
00001a7f	movl	0x14(%ebp),%eax
00001a82	movl	0xc0(%ebp),%edx
00001a85	movl	0xc4(%ebp),%ecx
00001a88	movl	%edx,(%eax)
00001a8a	movl	%ecx,0x04(%eax)
00001a8d	movl	0x08(%ebp),%eax
00001a90	calll	0x00000918
00001a95	testb	%al,%al
00001a97	je	0x00001b82
00001a9d	movl	0x14(%ebp),%edi
00001aa0	movl	$0x00000001,0x08(%esp)
00001aa8	movl	0x08(%ebp),%eax
00001aab	movl	$__mh_dylib_header,(%esp)
00001ab2	movl	$__mh_dylib_header,0x04(%esp)
00001aba	movl	(%edi),%edx
00001abc	movl	0x04(%edi),%ecx
00001abf	calll	0x000007ce
00001ac4	movl	0xb8(%ebp),%eax
00001ac7	movl	0xbc(%ebp),%edx
00001aca	movl	%eax,(%edi)
00001acc	movl	%edx,0x04(%edi)
00001acf	jmp	0x00001b82
00001ad4	xorl	%eax,%eax
00001ad6	xorl	%edx,%edx
00001ad8	movl	$0x00000040,0x88(%ebp)
00001adf	movl	$__mh_dylib_header,0x8c(%ebp)
00001ae6	movl	$0x00000024,0x90(%ebp)
00001aed	movl	$__mh_dylib_header,0x94(%ebp)
00001af4	movl	$0x00000020,0xffffff70(%ebp)
00001afe	movl	$__mh_dylib_header,0xffffff74(%ebp)
00001b08	movl	$0x00000020,0x98(%ebp)
00001b0f	movl	$__mh_dylib_header,0x9c(%ebp)
00001b16	movl	$0x0000002c,0xa0(%ebp)
00001b1d	movl	$__mh_dylib_header,0xa4(%ebp)
00001b24	movl	$0x000000b0,0xa8(%ebp)
00001b2b	movl	%edx,%ecx
00001b2d	movl	0x88(%ebp),%esi
00001b30	movl	%eax,%edx
00001b32	addl	0xd8(%ebp),%edx
00001b35	movl	0x8c(%ebp),%edi
00001b38	leal	0xd0(%ebp),%eax
00001b3b	adcl	0xdc(%ebp),%ecx
00001b3e	addl	$0x70,%edx
00001b41	movl	%eax,(%esp)
00001b44	movl	0x08(%ebp),%eax
00001b47	adcl	$__mh_dylib_header,%ecx
00001b4a	addl	%edx,%esi
00001b4c	adcl	%ecx,%edi
00001b4e	movl	%esi,0xb0(%ebp)
00001b51	movl	0xffffff70(%ebp),%esi
00001b57	addl	%esi,0xb0(%ebp)
00001b5a	movl	%edi,0xb4(%ebp)
00001b5d	movl	0xffffff74(%ebp),%edi
00001b63	adcl	%edi,0xb4(%ebp)
00001b66	addl	0x90(%ebp),%edx
00001b69	adcl	0x94(%ebp),%ecx
00001b6c	movl	$__mh_dylib_header,0xac(%ebp)
00001b73	calll	0x000010e1
00001b78	testl	%eax,%eax
00001b7a	movl	%eax,%esi
00001b7c	je	0x000019ad
00001b82	movl	%esi,%eax
00001b84	movl	0xf4(%ebp),%ebx
00001b87	movl	0xf8(%ebp),%esi
00001b8a	movl	0xfc(%ebp),%edi
00001b8d	leave
00001b8e	ret
_PowerPCGetFrameNextPC:
00001b8f	pushl	%ebp
00001b90	xorl	%ecx,%ecx
00001b92	movl	%esp,%ebp
00001b94	subl	$0x10,%esp
00001b97	movl	0x08(%ebp),%eax
00001b9a	movl	0x1c(%ebp),%edx
00001b9d	movl	%esi,0xf8(%ebp)
00001ba0	movl	0x14(%ebp),%esi
00001ba3	movl	%edi,0xfc(%ebp)
00001ba6	movl	0x18(%ebp),%edi
00001ba9	movl	%eax,0xf4(%ebp)
00001bac	movl	%edx,0xf0(%ebp)
00001baf	movl	(%eax),%eax
00001bb1	movl	$0x00000010,%edx
00001bb6	cmpb	$__mh_dylib_header,0x0c(%eax)
00001bba	jne	0x00001bc3
00001bbc	movl	$0x00000008,%edx
00001bc1	xorl	%ecx,%ecx
00001bc3	movl	0xf0(%ebp),%eax
00001bc6	addl	%esi,%edx
00001bc8	adcl	%edi,%ecx
00001bca	movl	0xf8(%ebp),%esi
00001bcd	movl	0xfc(%ebp),%edi
00001bd0	movl	%eax,0x08(%ebp)
00001bd3	movl	0xf4(%ebp),%eax
00001bd6	leave
00001bd7	jmp	0x000010e1
_QBacktraceMachThreadState:
00001bdc	pushl	%ebp
00001bdd	movl	%esp,%ebp
00001bdf	pushl	%edi
00001be0	pushl	%esi
00001be1	pushl	%ebx
00001be2	subl	$0x0000012c,%esp
00001be8	movl	0x28(%ebp),%eax
00001beb	movl	0x2c(%ebp),%edx
00001bee	calll	0x00001bf3
00001bf3	popl	%ebx
00001bf4	movl	0x20(%ebp),%esi
00001bf7	movl	0x24(%ebp),%edi
00001bfa	movl	%eax,0xffffff10(%ebp)
00001c00	movl	0x08(%ebp),%eax
00001c03	movl	%edx,0xffffff14(%ebp)
00001c09	testl	%eax,%eax
00001c0b	jne	0x00001c21
00001c0d	leal	0x00009919(%ebx),%eax
00001c13	movl	%eax,0x0c(%esp)
00001c17	movl	$0x000008e1,0x08(%esp)
00001c1f	jmp	0x00001c3a
00001c21	movl	0x10(%ebp),%eax
00001c24	testl	%eax,%eax
00001c26	jne	0x00001c52
00001c28	leal	0x00009a93(%ebx),%eax
00001c2e	movl	%eax,0x0c(%esp)
00001c32	movl	$0x000008e2,0x08(%esp)
00001c3a	leal	_QCRCreateFromTask(%ebx),%eax
00001c40	movl	%eax,0x04(%esp)
00001c44	leal	0x00009d95(%ebx),%eax
00001c4a	movl	%eax,(%esp)
00001c4d	calll	___eprintf
00001c52	movl	0x14(%ebp),%ecx
00001c55	testl	%ecx,%ecx
00001c57	jne	0x00001c6d
00001c59	leal	0x00009aa1(%ebx),%eax
00001c5f	movl	%eax,0x0c(%esp)
00001c63	movl	$0x000008e3,0x08(%esp)
00001c6b	jmp	0x00001c3a
00001c6d	movl	%esi,%edx
00001c6f	movl	0xffffff14(%ebp),%ecx
00001c75	orl	%edi,%edx
00001c77	movl	0xffffff10(%ebp),%edx
00001c7d	setne	%al
00001c80	xorl	%edi,%ecx
00001c82	xorl	%esi,%edx
00001c84	orl	%ecx,%edx
00001c86	movl	%eax,%ecx
00001c88	setne	%dl
00001c8b	orb	%dl,%cl
00001c8d	je	0x00001cb5
00001c8f	cmpl	0xffffff14(%ebp),%edi
00001c95	jb	0x00001cb5
00001c97	ja	0x00001ca1
00001c99	cmpl	0xffffff10(%ebp),%esi
00001c9f	jb	0x00001cb5
00001ca1	leal	0x00009ab1(%ebx),%eax
00001ca7	movl	%eax,0x0c(%esp)
00001cab	movl	$0x000008e4,0x08(%esp)
00001cb3	jmp	0x00001c3a
00001cb5	movl	0x34(%ebp),%edx
00001cb8	testl	%edx,%edx
00001cba	setne	%dl
00001cbd	xorl	%eax,%eax
00001cbf	cmpl	$__mh_dylib_header,0x30(%ebp)
00001cc3	sete	%al
00001cc6	testl	%edx,%eax
00001cc8	je	0x00001ce1
00001cca	leal	0x00009b01(%ebx),%eax
00001cd0	movl	%eax,0x0c(%esp)
00001cd4	movl	$0x000008e5,0x08(%esp)
00001cdc	jmp	0x00001c3a
00001ce1	movl	0x38(%ebp),%eax
00001ce4	testl	%eax,%eax
00001ce6	jne	0x00001cff
00001ce8	leal	0x0000af21(%ebx),%eax
00001cee	movl	%eax,0x0c(%esp)
00001cf2	movl	$0x000008e6,0x08(%esp)
00001cfa	jmp	0x00001c3a
00001cff	testb	%cl,%cl
00001d01	je	0x00001d2c
00001d03	cmpl	0xffffff14(%ebp),%edi
00001d09	jb	0x00001d2c
00001d0b	ja	0x00001d15
00001d0d	cmpl	0xffffff10(%ebp),%esi
00001d13	jb	0x00001d2c
00001d15	leal	0x00009ab1(%ebx),%eax
00001d1b	movl	%eax,0x0c(%esp)
00001d1f	movl	$0x0000034f,0x08(%esp)
00001d27	jmp	0x00001c3a
00001d2c	leal	0xffffff38(%ebp),%ecx
00001d32	movl	%ecx,0xffffff00(%ebp)
00001d38	movl	$0x00000050,0x08(%esp)
00001d40	movl	$__mh_dylib_header,0x04(%esp)
00001d48	movl	%ecx,(%esp)
00001d4b	calll	0x0000e0cc	; symbol stub for: _memset
00001d50	movl	0x30(%ebp),%eax
00001d53	testl	%eax,%eax
00001d55	je	0x00001d77
00001d57	movl	0x34(%ebp),%edx
00001d5a	movl	0x30(%ebp),%ecx
00001d5d	movl	$__mh_dylib_header,0x04(%esp)
00001d65	leal	(%edx,%edx,8),%eax
00001d68	shll	$0x02,%eax
00001d6b	movl	%eax,0x08(%esp)
00001d6f	movl	%ecx,(%esp)
00001d72	calll	0x0000e0cc	; symbol stub for: _memset
00001d77	movl	0x34(%ebp),%eax
00001d7a	movl	%edi,0xffffff70(%ebp)
00001d80	movl	0xffffff14(%ebp),%edi
00001d86	movl	%esi,0xffffff6c(%ebp)
00001d8c	movl	0x08(%ebp),%edx
00001d8f	movl	0xffffff10(%ebp),%esi
00001d95	movl	%eax,0x80(%ebp)
00001d98	leal	0xfffff3bb(%ebx),%eax
00001d9e	movl	%eax,0xffffff54(%ebp)
00001da4	movl	0x1c(%ebp),%eax
00001da7	movl	%edi,0xffffff78(%ebp)
00001dad	movl	0x30(%ebp),%edi
00001db0	movl	%esi,0xffffff74(%ebp)
00001db6	movl	%edx,0xffffff3c(%ebp)
00001dbc	testl	%eax,%eax
00001dbe	movl	%edi,0xffffff7c(%ebp)
00001dc4	jne	0x00001e03
00001dc6	leal	0xffffff40(%ebp),%eax
00001dcc	movl	0x18(%ebp),%ecx
00001dcf	movl	%eax,0x0c(%esp)
00001dd3	movl	0x0000c40d(%ebx),%eax
00001dd9	movb	$0x01,0xffffff44(%ebp)
00001de0	movl	%ecx,0x08(%esp)
00001de4	cmpl	(%eax),%edx
00001de6	movl	%edx,(%esp)
00001de9	setne	%al
00001dec	movzbl	%al,%eax
00001def	movl	%eax,0x04(%esp)
00001df3	calll	_QSymCreateFromTask
00001df8	testl	%eax,%eax
00001dfa	movl	%eax,%edi
00001dfc	je	0x00001e0c
00001dfe	jmp	0x00002719
00001e03	movl	0x1c(%ebp),%esi
00001e06	movl	%esi,0xffffff40(%ebp)
00001e0c	movl	0xffffff40(%ebp),%eax
00001e12	movl	%eax,(%esp)
00001e15	calll	_QSymGetExecutableImage
00001e1a	testl	%eax,%eax
00001e1c	movl	%eax,%esi
00001e1e	je	0x00001f58
00001e24	movl	%eax,(%esp)
00001e27	calll	_QMOImageIsByteSwapped
00001e2c	movb	%al,0xffffff58(%ebp)
00001e32	movl	%esi,%eax
00001e34	calll	0x00000722
00001e39	testl	%eax,%eax
00001e3b	movl	%eax,0xffffff38(%ebp)
00001e41	jne	0x0000279b
00001e47	jmp	0x00001f58
00001e4c	movl	0xb8(%ebp),%eax
00001e4f	movl	0xbc(%ebp),%edx
00001e52	movl	%esi,0x04(%esp)
00001e56	movl	%eax,0xffffff5c(%ebp)
00001e5c	leal	0x88(%ebp),%eax
00001e5f	movl	%eax,0x08(%esp)
00001e63	movl	0xffffff40(%ebp),%eax
00001e69	movl	%edx,0xffffff60(%ebp)
00001e6f	movl	%eax,(%esp)
00001e72	calll	_QSymGetNextSymbol
00001e77	testl	%eax,%eax
00001e79	jne	0x00001e9c
00001e7b	movl	0x94(%ebp),%eax
00001e7e	movl	0x98(%ebp),%edx
00001e81	movl	%eax,0xffffff64(%ebp)
00001e87	movl	0xffffff38(%ebp),%eax
00001e8d	movl	%edx,0xffffff68(%ebp)
00001e93	testl	%eax,%eax
00001e95	jne	0x00001eb2
00001e97	jmp	0x00001f41
00001e9c	movl	0xffffff5c(%ebp),%eax
00001ea2	movl	0xffffff60(%ebp),%edx
00001ea8	addl	$0x00000100,%eax
00001ead	adcl	$__mh_dylib_header,%edx
00001eb0	jmp	0x00001e81
00001eb2	movl	0xffffff3c(%ebp),%eax
00001eb8	testl	%eax,%eax
00001eba	je	0x00001f41
00001ec0	movl	0xffffff40(%ebp),%eax
00001ec6	testl	%eax,%eax
00001ec8	je	0x00001f41
00001eca	movl	0xffffff4c(%ebp),%edi
00001ed0	movl	0xffffff50(%ebp),%esi
00001ed6	testl	%edi,%edi
00001ed8	setne	%dl
00001edb	testl	%esi,%esi
00001edd	sete	%al
00001ee0	cmpb	%al,%dl
00001ee2	je	0x00001f41
00001ee4	movl	0xffffff54(%ebp),%ecx
00001eea	testl	%ecx,%ecx
00001eec	je	0x00001f41
00001eee	movl	0xffffff60(%ebp),%edx
00001ef4	movl	0xffffff5c(%ebp),%eax
00001efa	movl	%edx,%edi
00001efc	orl	%eax,%edi
00001efe	je	0x00001f41
00001f00	cmpl	0xffffff68(%ebp),%edx
00001f06	ja	0x00001f41
00001f08	jb	0x00001f12
00001f0a	cmpl	0xffffff64(%ebp),%eax
00001f10	jae	0x00001f41
00001f12	movl	0xffffff70(%ebp),%edx
00001f18	cmpl	0xffffff78(%ebp),%edx
00001f1e	movl	0xffffff6c(%ebp),%eax
00001f24	ja	0x00001f41
00001f26	jb	0x00001f30
00001f28	cmpl	0xffffff74(%ebp),%eax
00001f2e	ja	0x00001f41
00001f30	movl	0x80(%ebp),%edx
00001f33	testl	%edx,%edx
00001f35	je	0x00001f62
00001f37	movl	0xffffff7c(%ebp),%eax
00001f3d	testl	%eax,%eax
00001f3f	jne	0x00001f62
00001f41	leal	0x00009b31(%ebx),%eax
00001f47	movl	%eax,0x0c(%esp)
00001f4b	movl	$0x0000039d,0x08(%esp)
00001f53	jmp	0x00001c3a
00001f58	movl	$0x00000016,%edi
00001f5d	jmp	0x00002719
00001f62	movl	0xffffff38(%ebp),%esi
00001f68	movl	0x0c(%ebp),%eax
00001f6b	movl	0x10(%ebp),%edx
00001f6e	movl	0x14(%ebp),%ecx
00001f71	testl	%esi,%esi
00001f73	movl	%eax,0xffffff48(%ebp)
00001f79	movl	%edx,0xffffff4c(%ebp)
00001f7f	movl	%ecx,0xffffff50(%ebp)
00001f85	je	0x00002011
00001f8b	movl	0xffffff3c(%ebp),%eax
00001f91	testl	%eax,%eax
00001f93	je	0x00002011
00001f95	movl	0xffffff40(%ebp),%eax
00001f9b	testl	%eax,%eax
00001f9d	je	0x00002011
00001f9f	testl	%edx,%edx
00001fa1	setne	%dl
00001fa4	testl	%ecx,%ecx
00001fa6	sete	%al
00001fa9	cmpb	%al,%dl
00001fab	je	0x00002011
00001fad	movl	0xffffff54(%ebp),%eax
00001fb3	testl	%eax,%eax
00001fb5	je	0x00002011
00001fb7	movl	0xffffff60(%ebp),%edx
00001fbd	movl	0xffffff5c(%ebp),%eax
00001fc3	movl	%edx,%edi
00001fc5	orl	%eax,%edi
00001fc7	je	0x00002011
00001fc9	cmpl	0xffffff68(%ebp),%edx
00001fcf	ja	0x00002011
00001fd1	jb	0x00001fdb
00001fd3	cmpl	0xffffff64(%ebp),%eax
00001fd9	jae	0x00002011
00001fdb	movl	0xffffff70(%ebp),%edx
00001fe1	cmpl	0xffffff78(%ebp),%edx
00001fe7	movl	0xffffff6c(%ebp),%eax
00001fed	ja	0x00002011
00001fef	jb	0x00001ff9
00001ff1	cmpl	0xffffff74(%ebp),%eax
00001ff7	ja	0x00002011
00001ff9	movl	0x80(%ebp),%eax
00001ffc	testl	%eax,%eax
00001ffe	je	0x0000200a
00002000	movl	0xffffff7c(%ebp),%eax
00002006	testl	%eax,%eax
00002008	je	0x00002011
0000200a	movl	$0x00000001,%eax
0000200f	jmp	0x00002013
00002011	xorl	%eax,%eax
00002013	testl	%eax,%eax
00002015	jne	0x0000202e
00002017	leal	0x000098fe(%ebx),%eax
0000201d	movl	%eax,0x0c(%esp)
00002021	movl	$0x0000024b,0x08(%esp)
00002029	jmp	0x00001c3a
0000202e	movl	0xffffff7c(%ebp),%ecx
00002034	testl	%ecx,%ecx
00002036	je	0x00002067
00002038	movl	0x80(%ebp),%eax
0000203b	xorl	%edx,%edx
0000203d	leal	(%eax,%eax,8),%eax
00002040	shll	$0x02,%eax
00002043	jmp	0x00002063
00002045	cmpb	$__mh_dylib_header,(%edx,%ecx)
00002049	je	0x00002062
0000204b	leal	0x00009b5a(%ebx),%eax
00002051	movl	%eax,0x0c(%esp)
00002055	movl	$0x0000025a,0x08(%esp)
0000205d	jmp	0x00001c3a
00002062	incl	%edx
00002063	cmpl	%eax,%edx
00002065	jb	0x00002045
00002067	movl	0xffffff70(%ebp),%edx
0000206d	movl	0xffffff78(%ebp),%ecx
00002073	movl	0xffffff6c(%ebp),%eax
00002079	movl	%edx,0xffffff1c(%ebp)
0000207f	movl	0xffffff74(%ebp),%edx
00002085	movl	%ecx,0xffffff24(%ebp)
0000208b	movl	%eax,0xffffff18(%ebp)
00002091	orl	%edx,%ecx
00002093	movl	%edx,0xffffff20(%ebp)
00002099	jne	0x000020c9
0000209b	movl	$0xffffffff,0xffffff20(%ebp)
000020a5	movl	$0xffffffff,0xffffff24(%ebp)
000020af	cmpb	$__mh_dylib_header,0x0c(%esi)
000020b3	jne	0x000020c9
000020b5	movl	$__mh_dylib_header,0xffffff20(%ebp)
000020bf	movl	$0x00000001,0xffffff24(%ebp)
000020c9	movl	0xffffff1c(%ebp),%ecx
000020cf	cmpl	%ecx,0xffffff24(%ebp)
000020d5	ja	0x000020fe
000020d7	jb	0x000020e7
000020d9	movl	0xffffff18(%ebp),%edi
000020df	cmpl	%edi,0xffffff20(%ebp)
000020e5	jae	0x000020fe
000020e7	leal	0x00009b73(%ebx),%eax
000020ed	movl	%eax,0x0c(%esp)
000020f1	movl	$0x0000026e,0x08(%esp)
000020f9	jmp	0x00001c3a
000020fe	movl	0x84(%ebp),%edi
00002101	testl	%edi,%edi
00002103	je	0x0000211c
00002105	leal	0x00009b8c(%ebx),%eax
0000210b	movl	%eax,0x0c(%esp)
0000210f	movl	$0x00000274,0x08(%esp)
00002117	jmp	0x00001c3a
0000211c	leal	0xd0(%ebp),%eax
0000211f	movl	%eax,0x08(%esp)
00002123	leal	0xd8(%ebp),%eax
00002126	movl	%eax,0x04(%esp)
0000212a	movl	0xffffff00(%ebp),%eax
00002130	movl	%eax,(%esp)
00002133	call	*0x18(%esi)
00002136	testl	%eax,%eax
00002138	movl	%eax,%edi
0000213a	jne	0x00002602
00002140	movl	0xffffff7c(%ebp),%ecx
00002146	testl	%ecx,%ecx
00002148	je	0x0000215e
0000214a	movl	0x84(%ebp),%eax
0000214d	cmpl	0x80(%ebp),%eax
00002150	leal	(%eax,%eax,8),%edx
00002153	leal	(%ecx,%edx,4),%edx
00002156	movl	%edx,0xffffff28(%ebp)
0000215c	jb	0x00002167
0000215e	leal	0x88(%ebp),%edx
00002161	movl	%edx,0xffffff28(%ebp)
00002167	movl	0xd8(%ebp),%eax
0000216a	movl	0xdc(%ebp),%edx
0000216d	movl	0xffffff28(%ebp),%ecx
00002173	movl	%eax,(%ecx)
00002175	movl	%edx,0x04(%ecx)
00002178	movl	0xd0(%ebp),%eax
0000217b	movl	0xd4(%ebp),%edx
0000217e	movl	$__mh_dylib_header,0x10(%ecx)
00002185	movl	%eax,0x08(%ecx)
00002188	movl	%edx,0x0c(%ecx)
0000218b	movl	0xd8(%ebp),%eax
0000218e	movl	0xdc(%ebp),%edx
00002191	movl	0xffffff00(%ebp),%esi
00002197	movl	%eax,0x04(%esp)
0000219b	movl	0xffffff38(%ebp),%eax
000021a1	movl	%edx,0x08(%esp)
000021a5	movl	%esi,(%esp)
000021a8	call	*0x1c(%eax)
000021ab	testb	%al,%al
000021ad	jne	0x000021c6
000021af	movl	0xffffff28(%ebp),%edi
000021b5	movl	0x10(%edi),%eax
000021b8	orl	$0x02,%eax
000021bb	movl	%eax,0xffffff04(%ebp)
000021c1	movl	%eax,0x10(%edi)
000021c4	jmp	0x000021d5
000021c6	movl	0xffffff28(%ebp),%edx
000021cc	movl	0x10(%edx),%edx
000021cf	movl	%edx,0xffffff04(%ebp)
000021d5	movl	0xd4(%ebp),%edi
000021d8	movl	0xd0(%ebp),%esi
000021db	movl	%edi,%ecx
000021dd	orl	%esi,%ecx
000021df	je	0x0000221b
000021e1	movl	0xffffff38(%ebp),%ecx
000021e7	movl	0x14(%ecx),%edx
000021ea	movl	0x10(%ecx),%eax
000021ed	andl	%edi,%edx
000021ef	andl	%esi,%eax
000021f1	movl	%edx,%ecx
000021f3	orl	%eax,%ecx
000021f5	jne	0x0000221b
000021f7	cmpl	0xffffff1c(%ebp),%edi
000021fd	jb	0x0000221b
000021ff	ja	0x00002209
00002201	cmpl	0xffffff18(%ebp),%esi
00002207	jb	0x0000221b
00002209	cmpl	%edi,0xffffff24(%ebp)
0000220f	ja	0x00002244
00002211	jb	0x0000221b
00002213	cmpl	%esi,0xffffff20(%ebp)
00002219	ja	0x00002244
0000221b	orl	$0x01,0xffffff04(%ebp)
00002222	movl	0xffffff04(%ebp),%edi
00002228	movl	0xffffff28(%ebp),%esi
0000222e	movl	%edi,0x10(%esi)
00002231	movl	0xffffff7c(%ebp),%edx
00002237	testl	%edx,%edx
00002239	jne	0x00002389
0000223f	jmp	0x00002649
00002244	testb	$0x02,0xffffff04(%ebp)
0000224b	jne	0x000022c2
0000224d	movl	0xdc(%ebp),%edx
00002250	cmpl	%edx,0xffffff60(%ebp)
00002256	movl	0xd8(%ebp),%eax
00002259	ja	0x000022c2
0000225b	jb	0x00002265
0000225d	cmpl	%eax,0xffffff5c(%ebp)
00002263	ja	0x000022c2
00002265	cmpl	0xffffff68(%ebp),%edx
0000226b	ja	0x000022c2
0000226d	jb	0x00002277
0000226f	cmpl	0xffffff64(%ebp),%eax
00002275	jae	0x000022c2
00002277	orl	$0x04,0xffffff04(%ebp)
0000227e	movl	0xffffff04(%ebp),%edx
00002284	movl	0xffffff28(%ebp),%eax
0000228a	movl	%edx,0x10(%eax)
0000228d	leal	0xc8(%ebp),%eax
00002290	movl	0xd4(%ebp),%edx
00002293	movl	%eax,0x10(%esp)
00002297	leal	0xe0(%ebp),%eax
0000229a	movl	0xffffff00(%ebp),%ecx
000022a0	movl	%eax,0x0c(%esp)
000022a4	movl	0xd0(%ebp),%eax
000022a7	movl	%edx,0x08(%esp)
000022ab	movl	%ecx,(%esp)
000022ae	movl	%eax,0x04(%esp)
000022b2	movl	0xffffff38(%ebp),%eax
000022b8	call	*0x24(%eax)
000022bb	testl	%eax,%eax
000022bd	jmp	0x00002351
000022c2	leal	0xc8(%ebp),%eax
000022c5	movl	%esi,%edx
000022c7	movl	%eax,(%esp)
000022ca	movl	0xffffff00(%ebp),%eax
000022d0	movl	%edi,%ecx
000022d2	xorl	%esi,%esi
000022d4	calll	0x000010e1
000022d9	testl	%eax,%eax
000022db	je	0x000022fa
000022dd	movl	0xffffff28(%ebp),%esi
000022e3	orl	$0x01,0x10(%esi)
000022e7	movl	$0x00000001,%esi
000022ec	movl	$0xffffffff,0xc8(%ebp)
000022f3	movl	$0xffffffff,0xcc(%ebp)
000022fa	movl	0xffffff28(%ebp),%edi
00002300	testb	$0x01,0x10(%edi)
00002304	jne	0x0000233f
00002306	leal	0xe0(%ebp),%eax
00002309	movl	0xcc(%ebp),%edx
0000230c	movl	%eax,0x14(%esp)
00002310	movl	0xc8(%ebp),%eax
00002313	movl	%edx,0x10(%esp)
00002317	movl	0xd4(%ebp),%edx
0000231a	movl	%eax,0x0c(%esp)
0000231e	movl	0xd0(%ebp),%eax
00002321	movl	%edx,0x08(%esp)
00002325	movl	%eax,0x04(%esp)
00002329	movl	0xffffff00(%ebp),%eax
0000232f	movl	%eax,(%esp)
00002332	movl	0xffffff38(%ebp),%eax
00002338	call	*0x20(%eax)
0000233b	testl	%eax,%eax
0000233d	je	0x0000234d
0000233f	movl	$0xffffffff,0xe0(%ebp)
00002346	movl	$0xffffffff,0xe4(%ebp)
0000234d	movl	%esi,%edx
0000234f	testb	%dl,%dl
00002351	jne	0x00002231
00002357	movl	0xe0(%ebp),%eax
0000235a	movl	0xe4(%ebp),%edx
0000235d	movl	0xd0(%ebp),%esi
00002360	movl	0xd4(%ebp),%edi
00002363	movl	%eax,0xd8(%ebp)
00002366	movl	0xc8(%ebp),%eax
00002369	movl	%edx,0xdc(%ebp)
0000236c	movl	0xcc(%ebp),%edx
0000236f	incl	0x84(%ebp)
00002372	movl	%esi,0xffffff18(%ebp)
00002378	movl	%edi,0xffffff1c(%ebp)
0000237e	movl	%eax,0xd0(%ebp)
00002381	movl	%edx,0xd4(%ebp)
00002384	jmp	0x00002140
00002389	movl	0x80(%ebp),%edi
0000238c	testl	%edi,%edi
0000238e	movl	%edi,0xffffff2c(%ebp)
00002394	je	0x00002649
0000239a	movl	0x84(%ebp),%eax
0000239d	testl	%eax,%eax
0000239f	je	0x0000264c
000023a5	movl	0xffffff40(%ebp),%ecx
000023ab	testl	%ecx,%ecx
000023ad	jne	0x000023c6
000023af	leal	0x00009ba8(%ebx),%eax
000023b5	movl	%eax,0x0c(%esp)
000023b9	movl	$0x000001a1,0x08(%esp)
000023c1	jmp	0x00001c3a
000023c6	testl	%edx,%edx
000023c8	jne	0x000023e1
000023ca	leal	0x00009bc0(%ebx),%eax
000023d0	movl	%eax,0x0c(%esp)
000023d4	movl	$0x000001a2,0x08(%esp)
000023dc	jmp	0x00001c3a
000023e1	cmpl	%eax,0xffffff2c(%ebp)
000023e7	cmovbl	0xffffff2c(%ebp),%eax
000023ee	testl	%eax,%eax
000023f0	movl	%eax,0xffffff2c(%ebp)
000023f6	jne	0x0000240f
000023f8	leal	0x00009c16(%ebx),%eax
000023fe	movl	%eax,0x0c(%esp)
00002402	movl	$0x000001ac,0x08(%esp)
0000240a	jmp	0x00001c3a
0000240f	movl	0xffffff2c(%ebp),%eax
00002415	movl	$0x0000000c,%edi
0000241a	movl	$0x00000008,0x04(%esp)
00002422	movl	%eax,(%esp)
00002425	calll	0x0000e068	; symbol stub for: _calloc
0000242a	movl	0xffffff2c(%ebp),%edx
00002430	movl	$0x0000001c,0x04(%esp)
00002438	movl	%edx,(%esp)
0000243b	movl	%eax,0xffffff0c(%ebp)
00002441	calll	0x0000e068	; symbol stub for: _calloc
00002446	movl	0xffffff0c(%ebp),%edx
0000244c	testl	%edx,%edx
0000244e	sete	%dl
00002451	testl	%eax,%eax
00002453	movl	%eax,0xffffff08(%ebp)
00002459	sete	%al
0000245c	orb	%al,%dl
0000245e	jne	0x000025e2
00002464	movl	0xffffff7c(%ebp),%edi
0000246a	xorl	%ecx,%ecx
0000246c	xorl	%esi,%esi
0000246e	movl	%edi,0xfffffef4(%ebp)
00002474	jmp	0x00002494
00002476	movl	0xfffffef4(%ebp),%edi
0000247c	movl	(%esi,%edi),%eax
0000247f	movl	0x04(%esi,%edi),%edx
00002483	addl	$0x24,%esi
00002486	movl	0xffffff0c(%ebp),%edi
0000248c	movl	%eax,(%edi,%ecx,8)
0000248f	movl	%edx,0x04(%edi,%ecx,8)
00002493	incl	%ecx
00002494	cmpl	%ecx,0xffffff2c(%ebp)
0000249a	ja	0x00002476
0000249c	movl	0xffffff08(%ebp),%eax
000024a2	movl	0xffffff0c(%ebp),%edx
000024a8	movl	0xffffff2c(%ebp),%ecx
000024ae	movl	%eax,0x0c(%esp)
000024b2	movl	0xffffff40(%ebp),%eax
000024b8	movl	%edx,0x08(%esp)
000024bc	movl	%ecx,0x04(%esp)
000024c0	movl	%eax,(%esp)
000024c3	calll	_QSymGetSymbolsForAddresses
000024c8	testl	%eax,%eax
000024ca	movl	%eax,%edi
000024cc	jne	0x000025e2
000024d2	movl	0xffffff08(%ebp),%edi
000024d8	movl	$__mh_dylib_header,0xffffff34(%ebp)
000024e2	movl	$__mh_dylib_header,0xffffff30(%ebp)
000024ec	jmp	0x000025ce
000024f1	movl	(%edi),%eax
000024f3	testl	%eax,%eax
000024f5	je	0x000025be
000024fb	cmpb	$__mh_dylib_header,0xffffff44(%ebp)
00002502	je	0x00002559
00002504	movl	0x08(%edi),%eax
00002507	movl	0xffffff30(%ebp),%esi
0000250d	addl	0xffffff7c(%ebp),%esi
00002513	movl	%eax,(%esp)
00002516	calll	0x0000e117	; symbol stub for: _strdup
0000251b	movl	%eax,0x14(%esi)
0000251e	movl	0x04(%edi),%eax
00002521	movl	%eax,(%esp)
00002524	calll	_QMOImageGetFilePath
00002529	testl	%eax,%eax
0000252b	je	0x00002544
0000252d	movl	0xffffff30(%ebp),%esi
00002533	addl	0xffffff7c(%ebp),%esi
00002539	movl	%eax,(%esp)
0000253c	calll	0x0000e117	; symbol stub for: _strdup
00002541	movl	%eax,0x18(%esi)
00002544	movl	0xffffff30(%ebp),%eax
0000254a	addl	0xffffff7c(%ebp),%eax
00002550	orl	$0x00000100,0x10(%eax)
00002557	jmp	0x000025a4
00002559	movl	0x04(%edi),%eax
0000255c	testl	%eax,%eax
0000255e	jne	0x00002577
00002560	leal	0x00009c25(%ebx),%eax
00002566	movl	%eax,0x0c(%esp)
0000256a	movl	$0x000001e1,0x08(%esp)
00002572	jmp	0x00001c3a
00002577	movl	0x08(%edi),%edx
0000257a	movl	0xffffff7c(%ebp),%eax
00002580	movl	0xffffff30(%ebp),%esi
00002586	movl	%edx,0x14(%eax,%esi)
0000258a	movl	0x04(%edi),%eax
0000258d	movl	0xffffff30(%ebp),%esi
00002593	addl	0xffffff7c(%ebp),%esi
00002599	movl	%eax,(%esp)
0000259c	calll	_QMOImageGetFilePath
000025a1	movl	%eax,0x18(%esi)
000025a4	movl	0x14(%edi),%eax
000025a7	movl	0x18(%edi),%edx
000025aa	movl	0xffffff7c(%ebp),%ecx
000025b0	movl	0xffffff30(%ebp),%esi
000025b6	movl	%eax,0x1c(%ecx,%esi)
000025ba	movl	%edx,0x20(%ecx,%esi)
000025be	incl	0xffffff34(%ebp)
000025c4	addl	$0x1c,%edi
000025c7	addl	$0x24,0xffffff30(%ebp)
000025ce	movl	0xffffff34(%ebp),%eax
000025d4	cmpl	%eax,0xffffff2c(%ebp)
000025da	ja	0x000024f1
000025e0	xorl	%edi,%edi
000025e2	movl	0xffffff0c(%ebp),%edx
000025e8	movl	%edx,(%esp)
000025eb	calll	0x0000e08b	; symbol stub for: _free
000025f0	movl	0xffffff08(%ebp),%ecx
000025f6	movl	%ecx,(%esp)
000025f9	calll	0x0000e08b	; symbol stub for: _free
000025fe	testl	%edi,%edi
00002600	je	0x00002650
00002602	movl	0x80(%ebp),%eax
00002605	movl	%eax,0x04(%esp)
00002609	movl	0xffffff7c(%ebp),%eax
0000260f	movl	%eax,(%esp)
00002612	calll	0x000008d2
00002617	movl	0xffffff7c(%ebp),%edx
0000261d	testl	%edx,%edx
0000261f	je	0x0000263e
00002621	movl	0x80(%ebp),%eax
00002624	movl	$__mh_dylib_header,0x04(%esp)
0000262c	movl	%edx,(%esp)
0000262f	leal	(%eax,%eax,8),%eax
00002632	shll	$0x02,%eax
00002635	movl	%eax,0x08(%esp)
00002639	calll	0x0000e0cc	; symbol stub for: _memset
0000263e	xorl	%eax,%eax
00002640	movl	$__mh_dylib_header,0x84(%ebp)
00002647	jmp	0x00002653
00002649	movl	0x84(%ebp),%eax
0000264c	xorl	%edi,%edi
0000264e	jmp	0x00002653
00002650	movl	0x84(%ebp),%eax
00002653	movl	0x38(%ebp),%esi
00002656	movl	%eax,(%esi)
00002658	movl	0xffffff38(%ebp),%eax
0000265e	testl	%eax,%eax
00002660	je	0x000026fc
00002666	movl	0xffffff3c(%ebp),%eax
0000266c	testl	%eax,%eax
0000266e	je	0x000026fc
00002674	movl	0xffffff40(%ebp),%eax
0000267a	testl	%eax,%eax
0000267c	je	0x000026fc
0000267e	movl	0xffffff4c(%ebp),%esi
00002684	movl	0xffffff50(%ebp),%ecx
0000268a	testl	%esi,%esi
0000268c	setne	%dl
0000268f	testl	%ecx,%ecx
00002691	sete	%al
00002694	cmpb	%al,%dl
00002696	je	0x000026fc
00002698	movl	0xffffff54(%ebp),%eax
0000269e	testl	%eax,%eax
000026a0	je	0x000026fc
000026a2	movl	0xffffff60(%ebp),%edx
000026a8	movl	0xffffff5c(%ebp),%eax
000026ae	movl	%edx,%ecx
000026b0	orl	%eax,%ecx
000026b2	je	0x000026fc
000026b4	cmpl	0xffffff68(%ebp),%edx
000026ba	ja	0x000026fc
000026bc	jb	0x000026c6
000026be	cmpl	0xffffff64(%ebp),%eax
000026c4	jae	0x000026fc
000026c6	movl	0xffffff70(%ebp),%edx
000026cc	cmpl	0xffffff78(%ebp),%edx
000026d2	movl	0xffffff6c(%ebp),%eax
000026d8	ja	0x000026fc
000026da	jb	0x000026e4
000026dc	cmpl	0xffffff74(%ebp),%eax
000026e2	ja	0x000026fc
000026e4	movl	0x80(%ebp),%eax
000026e7	testl	%eax,%eax
000026e9	je	0x000026f5
000026eb	movl	0xffffff7c(%ebp),%eax
000026f1	testl	%eax,%eax
000026f3	je	0x000026fc
000026f5	movl	$0x00000001,%eax
000026fa	jmp	0x000026fe
000026fc	xorl	%eax,%eax
000026fe	testl	%eax,%eax
00002700	jne	0x00002719
00002702	leal	0x000098fe(%ebx),%eax
00002708	movl	%eax,0x0c(%esp)
0000270c	movl	$0x0000031d,0x08(%esp)
00002714	jmp	0x00001c3a
00002719	cmpb	$__mh_dylib_header,0xffffff44(%ebp)
00002720	je	0x00002730
00002722	movl	0xffffff40(%ebp),%eax
00002728	movl	%eax,(%esp)
0000272b	calll	_QSymDestroy
00002730	testl	%edi,%edi
00002732	je	0x0000276f
00002734	movl	0x30(%ebp),%edx
00002737	xorl	%esi,%esi
00002739	xorl	%ecx,%ecx
0000273b	jmp	0x0000274d
0000273d	testb	$0x01,0x11(%edx)
00002741	movl	$0x00000001,%eax
00002746	cmovnel	%eax,%esi
00002749	incl	%ecx
0000274a	addl	$0x24,%edx
0000274d	cmpl	0x34(%ebp),%ecx
00002750	jb	0x0000273d
00002752	movl	%esi,%eax
00002754	testb	%al,%al
00002756	je	0x0000276f
00002758	leal	0x00009c4d(%ebx),%eax
0000275e	movl	%eax,0x0c(%esp)
00002762	movl	$0x00000909,0x08(%esp)
0000276a	jmp	0x00001c3a
0000276f	movl	0x38(%ebp),%ecx
00002772	testl	%edi,%edi
00002774	sete	%dl
00002777	movl	(%ecx),%eax
00002779	testl	%eax,%eax
0000277b	setne	%al
0000277e	xorl	%edx,%eax
00002780	testb	$0x01,%al
00002782	je	0x000027d3
00002784	leal	0x00009c91(%ebx),%eax
0000278a	movl	%eax,0x0c(%esp)
0000278e	movl	$0x0000090a,0x08(%esp)
00002796	jmp	0x00001c3a
0000279b	leal	0x00009cb5(%ebx),%eax
000027a1	movl	%eax,0x08(%esp)
000027a5	leal	0x00009cc0(%ebx),%eax
000027ab	movl	%eax,0x04(%esp)
000027af	movl	0xffffff40(%ebp),%eax
000027b5	leal	0xac(%ebp),%esi
000027b8	movl	%esi,0x0c(%esp)
000027bc	movl	%eax,(%esp)
000027bf	calll	_QSymGetAddressForSymbol
000027c4	testl	%eax,%eax
000027c6	movl	%eax,%edi
000027c8	jne	0x00002719
000027ce	jmp	0x00001e4c
000027d3	addl	$0x0000012c,%esp
000027d9	movl	%edi,%eax
000027db	popl	%ebx
000027dc	popl	%esi
000027dd	popl	%edi
000027de	leave
000027df	ret
_QBacktraceMachThread:
000027e0	pushl	%ebp
000027e1	movl	%esp,%ebp
000027e3	pushl	%edi
000027e4	pushl	%esi
000027e5	pushl	%ebx
000027e6	subl	$0x6c,%esp
000027e9	movl	0x20(%ebp),%eax
000027ec	movl	0x24(%ebp),%edx
000027ef	calll	0x000027f4
000027f4	popl	%ebx
000027f5	movl	0x18(%ebp),%esi
000027f8	movl	0x1c(%ebp),%edi
000027fb	movl	%eax,0xc8(%ebp)
000027fe	movl	0x08(%ebp),%eax
00002801	movl	%edx,0xcc(%ebp)
00002804	testl	%eax,%eax
00002806	jne	0x0000281c
00002808	leal	0x00008d18(%ebx),%eax
0000280e	movl	%eax,0x0c(%esp)
00002812	movl	$0x00000892,0x08(%esp)
0000281a	jmp	0x00002835
0000281c	movl	0x0c(%ebp),%eax
0000281f	testl	%eax,%eax
00002821	jne	0x0000284d
00002823	leal	0x00008d2f(%ebx),%eax
00002829	movl	%eax,0x0c(%esp)
0000282d	movl	$0x00000893,0x08(%esp)
00002835	leal	0x00008cc8(%ebx),%eax
0000283b	movl	%eax,0x04(%esp)
0000283f	leal	0x00009194(%ebx),%eax
00002845	movl	%eax,(%esp)
00002848	calll	___eprintf
0000284d	movl	%esi,%edx
0000284f	movl	0xcc(%ebp),%ecx
00002852	orl	%edi,%edx
00002854	movl	0xc8(%ebp),%edx
00002857	setne	%al
0000285a	xorl	%edi,%ecx
0000285c	xorl	%esi,%edx
0000285e	orl	%ecx,%edx
00002860	setne	%dl
00002863	orb	%dl,%al
00002865	je	0x00002887
00002867	cmpl	0xcc(%ebp),%edi
0000286a	jb	0x00002887
0000286c	ja	0x00002873
0000286e	cmpl	0xc8(%ebp),%esi
00002871	jb	0x00002887
00002873	leal	0x00008eb0(%ebx),%eax
00002879	movl	%eax,0x0c(%esp)
0000287d	movl	$0x00000894,0x08(%esp)
00002885	jmp	0x00002835
00002887	movl	0x2c(%ebp),%ecx
0000288a	testl	%ecx,%ecx
0000288c	setne	%dl
0000288f	xorl	%eax,%eax
00002891	cmpl	$__mh_dylib_header,0x28(%ebp)
00002895	sete	%al
00002898	testl	%edx,%eax
0000289a	je	0x000028b0
0000289c	leal	0x00008f00(%ebx),%eax
000028a2	movl	%eax,0x0c(%esp)
000028a6	movl	$0x00000895,0x08(%esp)
000028ae	jmp	0x00002835
000028b0	movl	0x30(%ebp),%edx
000028b3	testl	%edx,%edx
000028b5	jne	0x000028ce
000028b7	leal	0x0000a320(%ebx),%eax
000028bd	movl	%eax,0x0c(%esp)
000028c1	movl	$0x00000896,0x08(%esp)
000028c9	jmp	0x00002835
000028ce	movl	$__mh_dylib_header,0xe0(%ebp)
000028d5	movl	$__mh_dylib_header,0xdc(%ebp)
000028dc	calll	0x0000e09f	; symbol stub for: _mach_thread_self
000028e1	cmpl	%eax,0x0c(%ebp)
000028e4	jne	0x00002925
000028e6	movl	0x0000b80c(%ebx),%eax
000028ec	movl	0x08(%ebp),%edx
000028ef	cmpl	(%eax),%edx
000028f1	je	0x0000290a
000028f3	leal	0x000090da(%ebx),%eax
000028f9	movl	%eax,0x0c(%esp)
000028fd	movl	$0x0000089e,0x08(%esp)
00002905	jmp	0x00002835
0000290a	leal	0xdc(%ebp),%eax
0000290d	movl	%eax,0x08(%esp)
00002911	leal	0xe0(%ebp),%eax
00002914	movl	%eax,0x04(%esp)
00002918	leal	0xe4(%ebp),%eax
0000291b	movl	%eax,(%esp)
0000291e	calll	0x00000e4d
00002923	jmp	0x0000295a
00002925	leal	0xdc(%ebp),%eax
00002928	movl	0x10(%ebp),%edx
0000292b	movl	%eax,0x18(%esp)
0000292f	leal	0xe0(%ebp),%eax
00002932	movl	%eax,0x14(%esp)
00002936	leal	0xe4(%ebp),%eax
00002939	movl	%eax,0x10(%esp)
0000293d	movl	0x14(%ebp),%eax
00002940	movl	%edx,0x08(%esp)
00002944	movl	0x08(%ebp),%edx
00002947	movl	%eax,0x0c(%esp)
0000294b	movl	0x0c(%ebp),%eax
0000294e	movl	%edx,(%esp)
00002951	movl	%eax,0x04(%esp)
00002955	calll	0x00000bfc
0000295a	movl	%eax,0xd4(%ebp)
0000295d	movl	0xd4(%ebp),%eax
00002960	testl	%eax,%eax
00002962	jne	0x000029c0
00002964	movl	0x30(%ebp),%eax
00002967	movl	0x2c(%ebp),%edx
0000296a	movl	%esi,0x18(%esp)
0000296e	movl	%edi,0x1c(%esp)
00002972	movl	%eax,0x30(%esp)
00002976	movl	0x28(%ebp),%eax
00002979	movl	%edx,0x2c(%esp)
0000297d	movl	0xcc(%ebp),%edx
00002980	movl	%eax,0x28(%esp)
00002984	movl	0xc8(%ebp),%eax
00002987	movl	%edx,0x24(%esp)
0000298b	movl	0x14(%ebp),%edx
0000298e	movl	%eax,0x20(%esp)
00002992	movl	0x10(%ebp),%eax
00002995	movl	%edx,0x14(%esp)
00002999	movl	0x08(%ebp),%edx
0000299c	movl	%eax,0x10(%esp)
000029a0	movl	0xdc(%ebp),%eax
000029a3	movl	%edx,(%esp)
000029a6	movl	%eax,0x0c(%esp)
000029aa	movl	0xe0(%ebp),%eax
000029ad	movl	%eax,0x08(%esp)
000029b1	movl	0xe4(%ebp),%eax
000029b4	movl	%eax,0x04(%esp)
000029b8	calll	0x00001bdc
000029bd	movl	%eax,0xd4(%ebp)
000029c0	movl	0xe0(%ebp),%eax
000029c3	movl	%eax,(%esp)
000029c6	calll	0x0000e08b	; symbol stub for: _free
000029cb	movl	0xd4(%ebp),%eax
000029ce	testl	%eax,%eax
000029d0	je	0x00002a0d
000029d2	movl	0x28(%ebp),%edx
000029d5	xorl	%esi,%esi
000029d7	xorl	%ecx,%ecx
000029d9	jmp	0x000029eb
000029db	testb	$0x01,0x11(%edx)
000029df	movl	$0x00000001,%eax
000029e4	cmovnel	%eax,%esi
000029e7	incl	%ecx
000029e8	addl	$0x24,%edx
000029eb	cmpl	0x2c(%ebp),%ecx
000029ee	jb	0x000029db
000029f0	movl	%esi,%eax
000029f2	testb	%al,%al
000029f4	je	0x00002a0d
000029f6	leal	0x0000904c(%ebx),%eax
000029fc	movl	%eax,0x0c(%esp)
00002a00	movl	$0x000008c9,0x08(%esp)
00002a08	jmp	0x00002835
00002a0d	movl	0xd4(%ebp),%eax
00002a10	testl	%eax,%eax
00002a12	movl	0x30(%ebp),%eax
00002a15	sete	%dl
00002a18	movl	(%eax),%eax
00002a1a	testl	%eax,%eax
00002a1c	setne	%al
00002a1f	xorl	%edx,%eax
00002a21	testb	$0x01,%al
00002a23	je	0x00002a3c
00002a25	leal	0x00009090(%ebx),%eax
00002a2b	movl	%eax,0x0c(%esp)
00002a2f	movl	$0x000008ca,0x08(%esp)
00002a37	jmp	0x00002835
00002a3c	movl	0xd4(%ebp),%eax
00002a3f	addl	$0x6c,%esp
00002a42	popl	%ebx
00002a43	popl	%esi
00002a44	popl	%edi
00002a45	leave
00002a46	ret
_QBacktraceMachSelf:
00002a47	pushl	%ebp
00002a48	movl	%esp,%ebp
00002a4a	pushl	%edi
00002a4b	pushl	%esi
00002a4c	pushl	%ebx
00002a4d	subl	$0x000000bc,%esp
00002a53	movl	0x10(%ebp),%edx
00002a56	calll	0x00002a5b
00002a5b	popl	%ebx
00002a5c	testl	%edx,%edx
00002a5e	setne	%dl
00002a61	xorl	%eax,%eax
00002a63	cmpl	$__mh_dylib_header,0x0c(%ebp)
00002a67	sete	%al
00002a6a	testl	%edx,%eax
00002a6c	je	0x00002a82
00002a6e	leal	0x00008c99(%ebx),%eax
00002a74	movl	%eax,0x0c(%esp)
00002a78	movl	$0x00000843,0x08(%esp)
00002a80	jmp	0x00002a9b
00002a82	movl	0x14(%ebp),%eax
00002a85	testl	%eax,%eax
00002a87	jne	0x00002ab3
00002a89	leal	0x0000a0b9(%ebx),%eax
00002a8f	movl	%eax,0x0c(%esp)
00002a93	movl	$0x00000844,0x08(%esp)
00002a9b	leal	0x00008a61(%ebx),%eax
00002aa1	movl	%eax,0x04(%esp)
00002aa5	leal	0x00008f2d(%ebx),%eax
00002aab	movl	%eax,(%esp)
00002aae	calll	___eprintf
00002ab3	movl	$__mh_dylib_header,0xe0(%ebp)
00002aba	movl	$__mh_dylib_header,0xdc(%ebp)
00002ac1	calll	0x0000e0f4	; symbol stub for: _pthread_self
00002ac6	movl	%eax,(%esp)
00002ac9	calll	0x0000e0ea	; symbol stub for: _pthread_get_stackaddr_np
00002ace	movl	%eax,%edi
00002ad0	calll	0x0000e0f4	; symbol stub for: _pthread_self
00002ad5	movl	%edi,%esi
00002ad7	movl	%eax,(%esp)
00002ada	calll	0x0000e0ef	; symbol stub for: _pthread_get_stacksize_np
00002adf	subl	%eax,%esi
00002ae1	leal	0x8c(%ebp),%eax
00002ae4	cmpl	%eax,%esi
00002ae6	seta	%dl
00002ae9	cmpl	%eax,%edi
00002aeb	setbe	%al
00002aee	orb	%al,%dl
00002af0	je	0x00002af6
00002af2	xorl	%edi,%edi
00002af4	xorl	%esi,%esi
00002af6	testl	%esi,%esi
00002af8	setne	%dl
00002afb	cmpl	%esi,%edi
00002afd	setne	%al
00002b00	orb	%al,%dl
00002b02	je	0x00002b1f
00002b04	cmpl	%esi,%edi
00002b06	ja	0x00002b1f
00002b08	leal	0x00008c49(%ebx),%eax
00002b0e	movl	%eax,0x0c(%esp)
00002b12	movl	$0x0000085c,0x08(%esp)
00002b1a	jmp	0x00002a9b
00002b1f	leal	0xdc(%ebp),%eax
00002b22	movl	%eax,0x08(%esp)
00002b26	leal	0xe0(%ebp),%eax
00002b29	movl	%eax,0x04(%esp)
00002b2d	leal	0xe4(%ebp),%eax
00002b30	movl	%eax,(%esp)
00002b33	calll	0x00000e4d
00002b38	testl	%eax,%eax
00002b3a	movl	%eax,0x84(%ebp)
00002b3d	jne	0x00002ba4
00002b3f	calll	_QMOGetLocalCPUType
00002b44	movl	0x14(%ebp),%edx
00002b47	movl	%edi,0x20(%esp)
00002b4b	movl	$__mh_dylib_header,0x24(%esp)
00002b53	movl	%esi,0x18(%esp)
00002b57	movl	%edx,0x30(%esp)
00002b5b	movl	0x10(%ebp),%edx
00002b5e	movl	$__mh_dylib_header,0x1c(%esp)
00002b66	movl	%eax,0x10(%esp)
00002b6a	movl	0xdc(%ebp),%eax
00002b6d	movl	%edx,0x2c(%esp)
00002b71	movl	0x0c(%ebp),%edx
00002b74	movl	%eax,0x0c(%esp)
00002b78	movl	0xe0(%ebp),%eax
00002b7b	movl	%edx,0x28(%esp)
00002b7f	movl	0x08(%ebp),%edx
00002b82	movl	%eax,0x08(%esp)
00002b86	movl	0xe4(%ebp),%eax
00002b89	movl	%edx,0x14(%esp)
00002b8d	movl	%eax,0x04(%esp)
00002b91	movl	0x0000b5a5(%ebx),%eax
00002b97	movl	(%eax),%eax
00002b99	movl	%eax,(%esp)
00002b9c	calll	0x00001bdc
00002ba1	movl	%eax,0x84(%ebp)
00002ba4	movl	0xe0(%ebp),%eax
00002ba7	movl	%eax,(%esp)
00002baa	calll	0x0000e08b	; symbol stub for: _free
00002baf	movl	0x84(%ebp),%eax
00002bb2	testl	%eax,%eax
00002bb4	je	0x00002bf1
00002bb6	movl	0x0c(%ebp),%edx
00002bb9	xorl	%esi,%esi
00002bbb	xorl	%ecx,%ecx
00002bbd	jmp	0x00002bcf
00002bbf	testb	$0x01,0x11(%edx)
00002bc3	movl	$0x00000001,%eax
00002bc8	cmovnel	%eax,%esi
00002bcb	incl	%ecx
00002bcc	addl	$0x24,%edx
00002bcf	cmpl	0x10(%ebp),%ecx
00002bd2	jb	0x00002bbf
00002bd4	movl	%esi,%eax
00002bd6	testb	%al,%al
00002bd8	je	0x00002bf1
00002bda	leal	0x00008de5(%ebx),%eax
00002be0	movl	%eax,0x0c(%esp)
00002be4	movl	$0x0000087a,0x08(%esp)
00002bec	jmp	0x00002a9b
00002bf1	movl	0x84(%ebp),%eax
00002bf4	testl	%eax,%eax
00002bf6	movl	0x14(%ebp),%eax
00002bf9	sete	%dl
00002bfc	movl	(%eax),%eax
00002bfe	testl	%eax,%eax
00002c00	setne	%al
00002c03	xorl	%edx,%eax
00002c05	testb	$0x01,%al
00002c07	je	0x00002c20
00002c09	leal	0x00008e29(%ebx),%eax
00002c0f	movl	%eax,0x0c(%esp)
00002c13	movl	$0x0000087b,0x08(%esp)
00002c1b	jmp	0x00002a9b
00002c20	movl	0x84(%ebp),%eax
00002c23	addl	$0x000000bc,%esp
00002c29	popl	%ebx
00002c2a	popl	%esi
00002c2b	popl	%edi
00002c2c	leave
00002c2d	ret
00002c2e	nop
00002c2f	nop
_QTMErrnoFromMachError:
00002c30	pushl	%ebp
00002c31	movl	%esp,%ebp
00002c33	pushl	%ebx
00002c34	subl	$0x14,%esp
00002c37	movl	0x08(%ebp),%edx
00002c3a	calll	0x00002c3f
00002c3f	popl	%ebx
00002c40	cmpl	$0x0f,%edx
00002c43	ja	0x00002cb7
00002c45	movl	0x00000011(%ebx,%edx,4),%eax
00002c4c	addl	%ebx,%eax
00002c4e	jmp	*%eax
00002c50	popl	%edi
00002c51	addb	%al,(%eax)
00002c53	addb	%ah,__mh_dylib_header(%ebx)
00002c56	addb	%al,(%eax)
00002c58	pushl	$__mh_dylib_header
00002c5a	addb	%al,(%eax)
00002c5c	jno	0x00002c5e
00002c5e	addb	%al,(%eax)
00002c60	testb	$__mh_dylib_header,%al
00002c62	addb	%al,(%eax)
00002c64	testb	$__mh_dylib_header,%al
00002c66	addb	%al,(%eax)
00002c68	js	0x00002c6a
00002c6a	addb	%al,(%eax)
00002c6c	js	0x00002c6e
00002c6e	addb	%al,(%eax)
00002c70	js	0x00002c72
00002c72	addb	%al,(%eax)
00002c74	js	0x00002c76
00002c76	addb	%al,(%eax)
00002c78	js	0x00002c7a
00002c7a	addb	%al,(%eax)
00002c7c	js	0x00002c7e
00002c7e	addb	%al,(%eax)
00002c80	js	0x00002c82
00002c82	addb	%al,(%eax)
00002c84	pushl	%ecx
00002c85	addb	%al,(%eax)
00002c87	addb	%bh,__mh_dylib_header(%eax)
00002c8a	addb	%al,(%eax)
00002c8c	popl	%eax
00002c8d	addb	%al,(%eax)
00002c8f	addb	%bh,0x00000011(%eax)
00002c95	jmp	0x00002cec
00002c97	movl	$0x00000009,%eax
00002c9c	jmp	0x00002cec
00002c9e	xorl	%eax,%eax
00002ca0	jmp	0x00002cec
00002ca2	movl	$0x0000000e,%eax
00002ca7	jmp	0x00002cec
00002ca9	movl	$0x0000000d,%eax
00002cae	jmp	0x00002cec
00002cb0	movl	$0x0000000c,%eax
00002cb5	jmp	0x00002cec
00002cb7	cmpl	$0x66,%edx
00002cba	movl	%edx,%eax
00002cbc	ja	0x00002cec
00002cbe	leal	0x00008ca9(%ebx),%eax
00002cc4	movl	%eax,0x04(%esp)
00002cc8	movl	0x0000b3c5(%ebx),%eax
00002cce	movl	$0x00000016,0x0c(%esp)
00002cd6	movl	%edx,0x08(%esp)
00002cda	addl	$0x000000b0,%eax
00002cdf	movl	%eax,(%esp)
00002ce2	calll	0x0000e081	; symbol stub for: _fprintf
00002ce7	movl	$0x00000016,%eax
00002cec	addl	$0x14,%esp
00002cef	popl	%ebx
00002cf0	leave
00002cf1	ret
_QTMFree:
00002cf2	pushl	%ebp
00002cf3	movl	%esp,%ebp
00002cf5	pushl	%ebx
00002cf6	subl	$0x24,%esp
00002cf9	movl	0x08(%ebp),%edx
00002cfc	calll	0x00002d01
00002d01	popl	%ebx
00002d02	testl	%edx,%edx
00002d04	jne	0x00002d7e
00002d06	movl	0x0c(%ebp),%eax
00002d09	testl	%eax,%eax
00002d0b	jne	0x00002d21
00002d0d	leal	0x00008c47(%ebx),%eax
00002d13	movl	%eax,0x0c(%esp)
00002d17	movl	$0x0000016d,0x08(%esp)
00002d1f	jmp	0x00002d66
00002d21	movl	0x0c(%ebp),%eax
00002d24	movl	$__mh_dylib_header,0x10(%esp)
00002d2c	movl	$__mh_dylib_header,0x04(%esp)
00002d34	movl	$__mh_dylib_header,0x08(%esp)
00002d3c	movl	%eax,0x0c(%esp)
00002d40	movl	0x0000b2ff(%ebx),%eax
00002d46	movl	(%eax),%eax
00002d48	movl	%eax,(%esp)
00002d4b	calll	0x0000e0a4	; symbol stub for: _mach_vm_deallocate
00002d50	testl	%eax,%eax
00002d52	je	0x00002d7e
00002d54	leal	0x00008ca5(%ebx),%eax
00002d5a	movl	%eax,0x0c(%esp)
00002d5e	movl	$0x00000177,0x08(%esp)
00002d66	leal	0x00008c53(%ebx),%eax
00002d6c	movl	%eax,0x04(%esp)
00002d70	leal	0x00008c87(%ebx),%eax
00002d76	movl	%eax,(%esp)
00002d79	calll	___eprintf
00002d7e	addl	$0x24,%esp
00002d81	popl	%ebx
00002d82	leave
00002d83	ret
_QTMGetDarwinOSRelease:
00002d84	pushl	%ebp
00002d85	movl	%esp,%ebp
00002d87	subl	$0x00000538,%esp
00002d8d	movl	%ebx,0xf4(%ebp)
00002d90	calll	0x00002d95
00002d95	popl	%ebx
00002d96	movl	%esi,0xf8(%ebp)
00002d99	movl	0x08(%ebp),%esi
00002d9c	movl	%edi,0xfc(%ebp)
00002d9f	movl	0x0c(%ebp),%edi
00002da2	movl	0x0000a3e3(%ebx),%eax
00002da8	testl	%eax,%eax
00002daa	jne	0x00002e0b
00002dac	leal	0xfffffae8(%ebp),%eax
00002db2	movl	%eax,(%esp)
00002db5	calll	0x0000e153	; symbol stub for: _uname
00002dba	testl	%eax,%eax
00002dbc	movl	%eax,%edx
00002dbe	jns	0x00002dc7
00002dc0	calll	0x0000e04a	; symbol stub for: ___error
00002dc5	movl	(%eax),%edx
00002dc7	testl	%edx,%edx
00002dc9	jne	0x00002e39
00002dcb	leal	0x0000a3db(%ebx),%eax
00002dd1	movl	%eax,0x10(%esp)
00002dd5	leal	0x0000a3df(%ebx),%eax
00002ddb	movl	%eax,0x0c(%esp)
00002ddf	leal	0x0000a3e3(%ebx),%eax
00002de5	movl	%eax,0x08(%esp)
00002de9	leal	0x00008c26(%ebx),%eax
00002def	movl	%eax,0x04(%esp)
00002df3	leal	0xfffffce8(%ebp),%eax
00002df9	movl	%eax,(%esp)
00002dfc	calll	0x0000e10d	; symbol stub for: _sscanf
00002e01	movl	$0x00000016,%edx
00002e06	cmpl	$0x03,%eax
00002e09	jne	0x00002e39
00002e0b	testl	%esi,%esi
00002e0d	je	0x00002e17
00002e0f	movl	0x0000a3e3(%ebx),%eax
00002e15	movl	%eax,(%esi)
00002e17	testl	%edi,%edi
00002e19	je	0x00002e23
00002e1b	movl	0x0000a3df(%ebx),%eax
00002e21	movl	%eax,(%edi)
00002e23	movl	0x10(%ebp),%ecx
00002e26	xorl	%edx,%edx
00002e28	testl	%ecx,%ecx
00002e2a	je	0x00002e39
00002e2c	movl	0x10(%ebp),%edx
00002e2f	movl	0x0000a3db(%ebx),%eax
00002e35	movl	%eax,(%edx)
00002e37	xorl	%edx,%edx
00002e39	movl	0xf4(%ebp),%ebx
00002e3c	movl	%edx,%eax
00002e3e	movl	0xf8(%ebp),%esi
00002e41	movl	0xfc(%ebp),%edi
00002e44	leave
00002e45	ret
_QTMTaskIsNative:
00002e46	pushl	%ebp
00002e47	movl	%esp,%ebp
00002e49	pushl	%edi
00002e4a	pushl	%esi
00002e4b	pushl	%ebx
00002e4c	subl	$0x6c,%esp
00002e4f	movl	0x08(%ebp),%edx
00002e52	calll	0x00002e57
00002e57	popl	%ebx
00002e58	testl	%edx,%edx
00002e5a	jne	0x00002e70
00002e5c	leal	0x000086b5(%ebx),%eax
00002e62	movl	%eax,0x0c(%esp)
00002e66	movl	$0x0000022b,0x08(%esp)
00002e6e	jmp	0x00002e9c
00002e70	leal	0xe4(%ebp),%eax
00002e73	movl	$0xffffffff,0xe4(%ebp)
00002e7a	movl	%eax,0x04(%esp)
00002e7e	movl	%edx,(%esp)
00002e81	calll	0x0000e0e0	; symbol stub for: _pid_for_task
00002e86	testl	%eax,%eax
00002e88	je	0x00002eb4
00002e8a	leal	0x00008b70(%ebx),%eax
00002e90	movl	%eax,0x0c(%esp)
00002e94	movl	$0x0000022f,0x08(%esp)
00002e9c	leal	0x00008afd(%ebx),%eax
00002ea2	movl	%eax,0x04(%esp)
00002ea6	leal	0x00008b31(%ebx),%eax
00002eac	movl	%eax,(%esp)
00002eaf	calll	___eprintf
00002eb4	movl	0xe4(%ebp),%esi
00002eb7	movl	$__mh_dylib_header,0xe0(%ebp)
00002ebe	movl	$0x00000004,0xdc(%ebp)
00002ec5	testl	%esi,%esi
00002ec7	jne	0x00002ef7
00002ec9	leal	0xdc(%ebp),%eax
00002ecc	movl	%eax,0x08(%esp)
00002ed0	leal	0xe0(%ebp),%eax
00002ed3	movl	%eax,0x04(%esp)
00002ed7	leal	0x00008b83(%ebx),%eax
00002edd	movl	$__mh_dylib_header,0x10(%esp)
00002ee5	movl	$__mh_dylib_header,0x0c(%esp)
00002eed	movl	%eax,(%esp)
00002ef0	calll	0x0000e130	; symbol stub for: _sysctlbyname
00002ef5	jmp	0x00002f52
00002ef7	leal	0xd8(%ebp),%eax
00002efa	movl	%eax,0x08(%esp)
00002efe	leal	0xa8(%ebp),%edi
00002f01	leal	0x00008b83(%ebx),%eax
00002f07	movl	$0x0000000c,0xd8(%ebp)
00002f0e	movl	%edi,0x04(%esp)
00002f12	movl	%eax,(%esp)
00002f15	calll	0x0000e135	; symbol stub for: _sysctlnametomib
00002f1a	incl	%eax
00002f1b	je	0x00002f5a
00002f1d	movl	0xd8(%ebp),%edx
00002f20	leal	0xdc(%ebp),%eax
00002f23	movl	%eax,0x0c(%esp)
00002f27	leal	0xe0(%ebp),%eax
00002f2a	movl	$__mh_dylib_header,0x14(%esp)
00002f32	movl	$__mh_dylib_header,0x10(%esp)
00002f3a	movl	%esi,0xa8(%ebp,%edx,4)
00002f3e	incl	%edx
00002f3f	movl	%edx,0xd8(%ebp)
00002f42	movl	%eax,0x08(%esp)
00002f46	movl	%edx,0x04(%esp)
00002f4a	movl	%edi,(%esp)
00002f4d	calll	0x0000e12b	; symbol stub for: _sysctl
00002f52	incl	%eax
00002f53	je	0x00002f5a
00002f55	movl	0xe0(%ebp),%eax
00002f58	jmp	0x00002f6c
00002f5a	calll	0x0000e04a	; symbol stub for: ___error
00002f5f	cmpl	$0x02,(%eax)
00002f62	sete	%al
00002f65	movzbl	%al,%eax
00002f68	leal	0xff(%eax,%eax),%eax
00002f6c	testl	%eax,%eax
00002f6e	setne	%al
00002f71	addl	$0x6c,%esp
00002f74	popl	%ebx
00002f75	movzbl	%al,%eax
00002f78	popl	%esi
00002f79	popl	%edi
00002f7a	leave
00002f7b	ret
_QTMRead:
00002f7c	pushl	%ebp
00002f7d	movl	%esp,%ebp
00002f7f	subl	$0x48,%esp
00002f82	movl	%edi,0xfc(%ebp)
00002f85	movl	0x08(%ebp),%edi
00002f88	movl	%ebx,0xf4(%ebp)
00002f8b	movl	0x0c(%ebp),%edx
00002f8e	calll	0x00002f93
00002f93	popl	%ebx
00002f94	movl	0x10(%ebp),%ecx
00002f97	movl	%esi,0xf8(%ebp)
00002f9a	movl	0x14(%ebp),%eax
00002f9d	testl	%edi,%edi
00002f9f	jne	0x00002fb5
00002fa1	leal	0x00008579(%ebx),%eax
00002fa7	movl	%eax,0x0c(%esp)
00002fab	movl	$0x000000de,0x08(%esp)
00002fb3	jmp	0x00002fcb
00002fb5	testl	%eax,%eax
00002fb7	jne	0x00002fe3
00002fb9	leal	0x000089b5(%ebx),%eax
00002fbf	movl	%eax,0x0c(%esp)
00002fc3	movl	$0x000000df,0x08(%esp)
00002fcb	leal	0x000089c1(%ebx),%eax
00002fd1	movl	%eax,0x04(%esp)
00002fd5	leal	0x000089f5(%ebx),%eax
00002fdb	movl	%eax,(%esp)
00002fde	calll	___eprintf
00002fe3	movl	0x18(%ebp),%esi
00002fe6	testl	%esi,%esi
00002fe8	jne	0x00002ffe
00002fea	leal	0x00008a5a(%ebx),%eax
00002ff0	movl	%eax,0x0c(%esp)
00002ff4	movl	$0x000000e0,0x08(%esp)
00002ffc	jmp	0x00002fcb
00002ffe	movl	%eax,%esi
00003000	xorl	%edi,%edi
00003002	leal	0xe0(%ebp),%eax
00003005	movl	%eax,0x1c(%esp)
00003009	movl	0x18(%ebp),%eax
0000300c	movl	%edx,0x04(%esp)
00003010	movl	$__mh_dylib_header,0x18(%esp)
00003018	movl	%esi,0x0c(%esp)
0000301c	movl	%eax,0x14(%esp)
00003020	movl	0x08(%ebp),%eax
00003023	movl	%edi,0x10(%esp)
00003027	movl	%ecx,0x08(%esp)
0000302b	movl	%eax,(%esp)
0000302e	calll	0x0000e0ae	; symbol stub for: _mach_vm_read_overwrite
00003033	cmpl	$0x0f,%eax
00003036	movl	%eax,%edx
00003038	ja	0x000030a8
0000303a	movl	0x000000b5(%ebx,%eax,4),%eax
00003041	addl	%ebx,%eax
00003043	jmp	*%eax
00003045	nopl	(%eax)
00003048	cmc
00003049	addb	%al,(%eax)
0000304b	addb	%al,(%eax)
0000304d	addl	%eax,(%eax)
0000304f	addb	%al,(%edi)
00003051	addl	%eax,(%eax)
00003053	addb	%cl,(%esi)
00003055	addl	%eax,(%eax)
00003057	addb	%dh,0x01(%edi)
0000305a	addb	%al,(%eax)
0000305c	ja	0x0000305f
0000305e	addb	%al,(%eax)
00003060	adcl	$0x15000001,%eax
00003065	addl	%eax,(%eax)
00003067	addb	%dl,0x15000001
0000306d	addl	%eax,(%eax)
0000306f	addb	%dl,0x15000001
00003075	addl	%eax,(%eax)
00003077	addb	%dl,0x70000001
0000307d	addl	%eax,(%eax)
0000307f	addb	%dl,0xf9000001
00003085	addb	%al,(%eax)
00003087	addb	%dh,(%ecx)
00003089	leave
0000308a	jmp	0x000030de
0000308c	movl	$0x00000009,%ecx
00003091	jmp	0x0000310f
00003093	movl	$0x0000000e,%ecx
00003098	jmp	0x0000310f
0000309a	movl	$0x0000000d,%ecx
0000309f	jmp	0x0000310f
000030a1	movl	$0x0000000c,%ecx
000030a6	jmp	0x0000310f
000030a8	cmpl	$0x66,%edx
000030ab	ja	0x000030d8
000030ad	leal	0x00008955(%ebx),%eax
000030b3	movl	%eax,0x04(%esp)
000030b7	movl	0x0000b071(%ebx),%eax
000030bd	movl	$0x00000016,0x0c(%esp)
000030c5	movl	%edx,0x08(%esp)
000030c9	addl	$0x000000b0,%eax
000030ce	movl	%eax,(%esp)
000030d1	calll	0x0000e081	; symbol stub for: _fprintf
000030d6	jmp	0x0000310a
000030d8	testl	%edx,%edx
000030da	movl	%edx,%ecx
000030dc	jne	0x0000310f
000030de	movl	0xe4(%ebp),%edx
000030e1	movl	0xe0(%ebp),%eax
000030e4	xorl	%edi,%edx
000030e6	xorl	%esi,%eax
000030e8	orl	%eax,%edx
000030ea	je	0x0000310f
000030ec	leal	0x00008a6d(%ebx),%eax
000030f2	movl	%eax,0x0c(%esp)
000030f6	movl	$0x000000f3,0x08(%esp)
000030fe	jmp	0x00002fcb
00003103	movl	$0x00000011,%ecx
00003108	jmp	0x0000310f
0000310a	movl	$0x00000016,%ecx
0000310f	movl	0xf4(%ebp),%ebx
00003112	movl	%ecx,%eax
00003114	movl	0xf8(%ebp),%esi
00003117	movl	0xfc(%ebp),%edi
0000311a	leave
0000311b	ret
_QTMReadAllocated:
0000311c	pushl	%ebp
0000311d	movl	%esp,%ebp
0000311f	pushl	%edi
00003120	pushl	%esi
00003121	pushl	%ebx
00003122	subl	$0x3c,%esp
00003125	movl	0x08(%ebp),%edi
00003128	calll	0x0000312d
0000312d	popl	%ebx
0000312e	movl	0x0c(%ebp),%edx
00003131	movl	0x10(%ebp),%ecx
00003134	movl	0x14(%ebp),%esi
00003137	testl	%edi,%edi
00003139	jne	0x0000314f
0000313b	leal	0x000083df(%ebx),%eax
00003141	movl	%eax,0x0c(%esp)
00003145	movl	$0x00000101,0x08(%esp)
0000314d	jmp	0x00003165
0000314f	testl	%esi,%esi
00003151	jne	0x0000317d
00003153	leal	0x0000881b(%ebx),%eax
00003159	movl	%eax,0x0c(%esp)
0000315d	movl	$0x00000102,0x08(%esp)
00003165	leal	0x00008827(%ebx),%eax
0000316b	movl	%eax,0x04(%esp)
0000316f	leal	0x0000885b(%ebx),%eax
00003175	movl	%eax,(%esp)
00003178	calll	___eprintf
0000317d	movl	0x18(%ebp),%eax
00003180	testl	%eax,%eax
00003182	jne	0x00003198
00003184	leal	0x000088f5(%ebx),%eax
0000318a	movl	%eax,0x0c(%esp)
0000318e	movl	$0x00000103,0x08(%esp)
00003196	jmp	0x00003165
00003198	movl	0x18(%ebp),%eax
0000319b	movl	(%eax),%eax
0000319d	testl	%eax,%eax
0000319f	je	0x000031b5
000031a1	leal	0x00008904(%ebx),%eax
000031a7	movl	%eax,0x0c(%esp)
000031ab	movl	$0x00000104,0x08(%esp)
000031b3	jmp	0x00003165
000031b5	leal	0xe0(%ebp),%eax
000031b8	movl	%eax,0x18(%esp)
000031bc	leal	0xe4(%ebp),%eax
000031bf	movl	%edx,0x04(%esp)
000031c3	movl	%eax,0x14(%esp)
000031c7	movl	%esi,0x0c(%esp)
000031cb	movl	$__mh_dylib_header,0x10(%esp)
000031d3	movl	%ecx,0x08(%esp)
000031d7	movl	%edi,(%esp)
000031da	calll	0x0000e0a9	; symbol stub for: _mach_vm_read
000031df	cmpl	$0x0f,%eax
000031e2	movl	%eax,%edx
000031e4	ja	0x00003254
000031e6	movl	0x000000c7(%ebx,%eax,4),%eax
000031ed	addl	%ebx,%eax
000031ef	jmp	*%eax
000031f1	nopl	(%eax)
000031f4	popl	%es
000031f5	addl	%eax,(%eax)
000031f7	addb	%dl,(%edx)
000031f9	addl	%eax,(%eax)
000031fb	addb	%bl,(%ecx)
000031fd	addl	%eax,(%eax)
000031ff	addb	%ah,(%eax)
00003201	addl	%eax,(%eax)
00003203	addb	%bh,0xb8000001(%eax)
00003209	addl	%eax,(%eax)
0000320b	addb	%ah,(%edi)
0000320d	addl	%eax,(%eax)
0000320f	addb	%ah,(%edi)
00003211	addl	%eax,(%eax)
00003213	addb	%ah,(%edi)
00003215	addl	%eax,(%eax)
00003217	addb	%ah,(%edi)
00003219	addl	%eax,(%eax)
0000321b	addb	%ah,(%edi)
0000321d	addl	%eax,(%eax)
0000321f	addb	%ah,(%edi)
00003221	addl	%eax,(%eax)
00003223	addb	%ah,(%edi)
00003225	addl	%eax,(%eax)
00003227	addb	%dh,0x27000001(%ecx)
0000322d	addl	%eax,(%eax)
0000322f	addb	%cl,(%ebx)
00003231	addl	%eax,(%eax)
00003233	addb	%dh,(%ecx)
00003235	leave
00003236	jmp	0x0000328a
00003238	movl	$0x00000009,%ecx
0000323d	jmp	0x000032a6
0000323f	movl	$0x0000000e,%ecx
00003244	jmp	0x000032a6
00003246	movl	$0x0000000d,%ecx
0000324b	jmp	0x000032a6
0000324d	movl	$0x0000000c,%ecx
00003252	jmp	0x000032a6
00003254	cmpl	$0x66,%edx
00003257	ja	0x00003284
00003259	leal	0x000087bb(%ebx),%eax
0000325f	movl	%eax,0x04(%esp)
00003263	movl	0x0000aed7(%ebx),%eax
00003269	movl	$0x00000016,0x0c(%esp)
00003271	movl	%edx,0x08(%esp)
00003275	addl	$0x000000b0,%eax
0000327a	movl	%eax,(%esp)
0000327d	calll	0x0000e081	; symbol stub for: _fprintf
00003282	jmp	0x000032e5
00003284	testl	%edx,%edx
00003286	movl	%edx,%ecx
00003288	jne	0x000032b2
0000328a	cmpl	0xe0(%ebp),%esi
0000328d	je	0x000032a6
0000328f	leal	0x000088d3(%ebx),%eax
00003295	movl	%eax,0x0c(%esp)
00003299	movl	$0x00000115,0x08(%esp)
000032a1	jmp	0x00003165
000032a6	testl	%ecx,%ecx
000032a8	jne	0x000032b2
000032aa	movl	0xe4(%ebp),%eax
000032ad	movl	0x18(%ebp),%edx
000032b0	movl	%eax,(%edx)
000032b2	movl	0x18(%ebp),%eax
000032b5	testl	%ecx,%ecx
000032b7	sete	%dl
000032ba	movl	(%eax),%eax
000032bc	testl	%eax,%eax
000032be	setne	%al
000032c1	xorl	%edx,%eax
000032c3	testb	$0x01,%al
000032c5	je	0x000032ec
000032c7	leal	0x0000893b(%ebx),%eax
000032cd	movl	%eax,0x0c(%esp)
000032d1	movl	$0x00000121,0x08(%esp)
000032d9	jmp	0x00003165
000032de	movl	$0x00000011,%ecx
000032e3	jmp	0x000032a6
000032e5	movl	$0x00000016,%ecx
000032ea	jmp	0x000032a6
000032ec	addl	$0x3c,%esp
000032ef	movl	%ecx,%eax
000032f1	popl	%ebx
000032f2	popl	%esi
000032f3	popl	%edi
000032f4	leave
000032f5	ret
_QTMRemap:
000032f6	pushl	%ebp
000032f7	movl	%esp,%ebp
000032f9	pushl	%edi
000032fa	pushl	%esi
000032fb	pushl	%ebx
000032fc	subl	$0x5c,%esp
000032ff	movl	0x08(%ebp),%edi
00003302	calll	0x00003307
00003307	popl	%ebx
00003308	movl	0x0c(%ebp),%edx
0000330b	movl	0x10(%ebp),%ecx
0000330e	movl	0x18(%ebp),%esi
00003311	testl	%edi,%edi
00003313	jne	0x00003329
00003315	leal	0x00008205(%ebx),%eax
0000331b	movl	%eax,0x0c(%esp)
0000331f	movl	$0x0000012e,0x08(%esp)
00003327	jmp	0x00003342
00003329	movl	0x14(%ebp),%eax
0000332c	testl	%eax,%eax
0000332e	jne	0x0000335a
00003330	leal	0x00008641(%ebx),%eax
00003336	movl	%eax,0x0c(%esp)
0000333a	movl	$0x0000012f,0x08(%esp)
00003342	leal	0x0000864d(%ebx),%eax
00003348	movl	%eax,0x04(%esp)
0000334c	leal	0x00008681(%ebx),%eax
00003352	movl	%eax,(%esp)
00003355	calll	___eprintf
0000335a	testl	%esi,%esi
0000335c	jne	0x00003372
0000335e	leal	0x0000871b(%ebx),%eax
00003364	movl	%eax,0x0c(%esp)
00003368	movl	$0x00000130,0x08(%esp)
00003370	jmp	0x00003342
00003372	movl	(%esi),%eax
00003374	testl	%eax,%eax
00003376	je	0x0000338c
00003378	leal	0x0000872a(%ebx),%eax
0000337e	movl	%eax,0x0c(%esp)
00003382	movl	$0x00000131,0x08(%esp)
0000338a	jmp	0x00003342
0000338c	leal	0xe0(%ebp),%eax
0000338f	movl	%eax,0x30(%esp)
00003393	leal	0xe4(%ebp),%eax
00003396	movl	%eax,0x2c(%esp)
0000339a	movl	0x14(%ebp),%eax
0000339d	movl	%edx,0x20(%esp)
000033a1	movl	$0x00000002,0x34(%esp)
000033a9	movl	$0x00000001,0x28(%esp)
000033b1	movl	%eax,0x08(%esp)
000033b5	leal	0xd8(%ebp),%eax
000033b8	movl	%eax,0x04(%esp)
000033bc	movl	0x0000acf9(%ebx),%eax
000033c2	movl	%ecx,0x24(%esp)
000033c6	movl	%edi,0x1c(%esp)
000033ca	movl	$0x00000001,0x18(%esp)
000033d2	movl	$__mh_dylib_header,0x10(%esp)
000033da	movl	$__mh_dylib_header,0x14(%esp)
000033e2	movl	$__mh_dylib_header,0x0c(%esp)
000033ea	movl	(%eax),%eax
000033ec	movl	$__mh_dylib_header,0xd8(%ebp)
000033f3	movl	$__mh_dylib_header,0xdc(%ebp)
000033fa	movl	%eax,(%esp)
000033fd	calll	0x0000e0b8	; symbol stub for: _mach_vm_remap
00003402	cmpl	$0x0f,%eax
00003405	movl	%eax,%edx
00003407	ja	0x00003474
00003409	movl	0x0000010d(%ebx,%eax,4),%eax
00003410	addl	%ebx,%eax
00003412	jmp	*%eax
00003414	decl	%ebp
00003415	addl	%eax,(%eax)
00003417	addb	%bl,0x01(%eax)
0000341a	addb	%al,(%eax)
0000341c	popl	%edi
0000341d	addl	%eax,(%eax)
0000341f	addb	%ah,0x01(%esi)
00003422	addb	%al,(%eax)
00003424	lret
00003425	addl	%eax,(%eax)
00003427	addb	%cl,%bl
00003429	addl	%eax,(%eax)
0000342b	addb	%ch,0x01(%ebp)
0000342e	addb	%al,(%eax)
00003430	insl
00003431	addl	%eax,(%eax)
00003433	addb	%ch,0x01(%ebp)
00003436	addb	%al,(%eax)
00003438	insl
00003439	addl	%eax,(%eax)
0000343b	addb	%ch,0x01(%ebp)
0000343e	addb	%al,(%eax)
00003440	insl
00003441	addl	%eax,(%eax)
00003443	addb	%ch,0x01(%ebp)
00003446	addb	%al,(%eax)
00003448	les	(%ecx),%eax
0000344a	addb	%al,(%eax)
0000344c	insl
0000344d	addl	%eax,(%eax)
0000344f	addb	%dl,0x01(%ecx)
00003452	addb	%al,(%eax)
00003454	xorl	%edx,%edx
00003456	jmp	0x000034a8
00003458	movl	$0x00000009,%edx
0000345d	jmp	0x000034d7
0000345f	movl	$0x0000000e,%edx
00003464	jmp	0x000034d7
00003466	movl	$0x0000000d,%edx
0000346b	jmp	0x000034d7
0000346d	movl	$0x0000000c,%edx
00003472	jmp	0x000034d7
00003474	cmpl	$0x66,%edx
00003477	ja	0x000034a4
00003479	leal	0x000085e1(%ebx),%eax
0000347f	movl	%eax,0x04(%esp)
00003483	movl	0x0000acfd(%ebx),%eax
00003489	movl	$0x00000016,0x0c(%esp)
00003491	movl	%edx,0x08(%esp)
00003495	addl	$0x000000b0,%eax
0000349a	movl	%eax,(%esp)
0000349d	calll	0x0000e081	; symbol stub for: _fprintf
000034a2	jmp	0x000034d2
000034a4	testl	%edx,%edx
000034a6	jne	0x000034d7
000034a8	movl	0xd8(%ebp),%eax
000034ab	movl	%eax,(%esi)
000034ad	movl	0xdc(%ebp),%eax
000034b0	testl	%eax,%eax
000034b2	je	0x000034d7
000034b4	leal	0x00008781(%ebx),%eax
000034ba	movl	%eax,0x0c(%esp)
000034be	movl	$0x00000161,0x08(%esp)
000034c6	jmp	0x00003342
000034cb	movl	$0x00000011,%edx
000034d0	jmp	0x000034d7
000034d2	movl	$0x00000016,%edx
000034d7	addl	$0x5c,%esp
000034da	movl	%edx,%eax
000034dc	popl	%ebx
000034dd	popl	%esi
000034de	popl	%edi
000034df	leave
000034e0	ret
_QSymDestroy:
000034e1	pushl	%ebp
000034e2	movl	%esp,%ebp
000034e4	pushl	%edi
000034e5	pushl	%esi
000034e6	pushl	%ebx
000034e7	subl	$0x1c,%esp
000034ea	movl	0x08(%ebp),%edi
000034ed	calll	0x000034f2
000034f2	popl	%ebx
000034f3	testl	%edi,%edi
000034f5	je	0x0000356e
000034f7	movl	0x0c(%edi),%eax
000034fa	xorl	%esi,%esi
000034fc	testl	%eax,%eax
000034fe	jne	0x00003511
00003500	jmp	0x00003521
00003502	movl	0x0c(%edi),%eax
00003505	movl	(%eax,%esi,4),%eax
00003508	incl	%esi
00003509	movl	%eax,(%esp)
0000350c	calll	_QMOImageDestroy
00003511	cmpl	0x08(%edi),%esi
00003514	jb	0x00003502
00003516	movl	0x0c(%edi),%eax
00003519	movl	%eax,(%esp)
0000351c	calll	0x0000e08b	; symbol stub for: _free
00003521	cmpb	$__mh_dylib_header,0x04(%edi)
00003525	je	0x0000355f
00003527	movl	(%edi),%eax
00003529	movl	%eax,(%esp)
0000352c	calll	0x0000e13a	; symbol stub for: _task_resume
00003531	testl	%eax,%eax
00003533	je	0x0000355f
00003535	leal	0x000085ba(%ebx),%eax
0000353b	movl	%eax,0x0c(%esp)
0000353f	leal	0x000085d2(%ebx),%eax
00003545	movl	%eax,0x04(%esp)
00003549	leal	0x00008496(%ebx),%eax
0000354f	movl	$0x00000101,0x08(%esp)
00003557	movl	%eax,(%esp)
0000355a	calll	___eprintf
0000355f	movl	%edi,0x08(%ebp)
00003562	addl	$0x1c,%esp
00003565	popl	%ebx
00003566	popl	%esi
00003567	popl	%edi
00003568	leave
00003569	jmp	0x0000e08b	; symbol stub for: _free
0000356e	addl	$0x1c,%esp
00003571	popl	%ebx
00003572	popl	%esi
00003573	popl	%edi
00003574	leave
00003575	ret
_QSymCreateFromTask:
00003576	pushl	%ebp
00003577	movl	%esp,%ebp
00003579	pushl	%edi
0000357a	pushl	%esi
0000357b	pushl	%ebx
0000357c	subl	$0x3c,%esp
0000357f	movl	0x08(%ebp),%esi
00003582	movzbl	0x0c(%ebp),%eax
00003586	calll	0x0000358b
0000358b	popl	%ebx
0000358c	testl	%esi,%esi
0000358e	movb	%al,0xe3(%ebp)
00003591	jne	0x000035a7
00003593	leal	0x00007f81(%ebx),%eax
00003599	movl	%eax,0x0c(%esp)
0000359d	movl	$0x00000114,0x08(%esp)
000035a5	jmp	0x000035c0
000035a7	movl	0x14(%ebp),%ecx
000035aa	testl	%ecx,%ecx
000035ac	jne	0x000035d8
000035ae	leal	0x0000856b(%ebx),%eax
000035b4	movl	%eax,0x0c(%esp)
000035b8	movl	$0x00000115,0x08(%esp)
000035c0	leal	0x00008539(%ebx),%eax
000035c6	movl	%eax,0x04(%esp)
000035ca	leal	0x000083fd(%ebx),%eax
000035d0	movl	%eax,(%esp)
000035d3	calll	___eprintf
000035d8	movl	0x14(%ebp),%edx
000035db	movl	(%edx),%edx
000035dd	testl	%edx,%edx
000035df	je	0x000035f5
000035e1	leal	0x0000857d(%ebx),%eax
000035e7	movl	%eax,0x0c(%esp)
000035eb	movl	$0x00000116,0x08(%esp)
000035f3	jmp	0x000035c0
000035f5	movl	0x0000aa75(%ebx),%eax
000035fb	movl	0x08(%ebp),%edx
000035fe	cmpl	(%eax),%edx
00003600	jne	0x00003613
00003602	xorl	%edi,%edi
00003604	movl	$0x00000016,%esi
00003609	cmpb	$__mh_dylib_header,0xe3(%ebp)
0000360d	jne	0x00003778
00003613	movl	$0x00000018,0x04(%esp)
0000361b	movl	$0x00000001,(%esp)
00003622	calll	0x0000e068	; symbol stub for: _calloc
00003627	testl	%eax,%eax
00003629	movl	%eax,%edi
0000362b	je	0x00003773
00003631	movl	0x08(%ebp),%eax
00003634	movl	$0xffffffff,0x10(%edi)
0000363b	movl	$0xffffffff,0x14(%edi)
00003642	movl	%eax,(%edi)
00003644	cmpb	$__mh_dylib_header,0xe3(%ebp)
00003648	je	0x0000366c
0000364a	movl	%eax,(%esp)
0000364d	calll	0x0000e144	; symbol stub for: _task_suspend
00003652	movl	%eax,(%esp)
00003655	calll	0x00002c30
0000365a	testl	%eax,%eax
0000365c	movl	%eax,%esi
0000365e	sete	%al
00003661	testb	%al,%al
00003663	movb	%al,0x04(%edi)
00003666	je	0x00003778
0000366c	leal	0x08(%edi),%edx
0000366f	movl	0x10(%ebp),%eax
00003672	movl	%edx,0xe4(%ebp)
00003675	movl	%edx,0x10(%esp)
00003679	movl	0x08(%ebp),%edx
0000367c	movl	$__mh_dylib_header,0x0c(%esp)
00003684	movl	$__mh_dylib_header,0x08(%esp)
0000368c	movl	%eax,0x04(%esp)
00003690	movl	%edx,(%esp)
00003693	calll	_QMOImageListFromTask
00003698	testl	%eax,%eax
0000369a	movl	%eax,%esi
0000369c	jne	0x00003778
000036a2	movl	$0x00000004,0x04(%esp)
000036aa	movl	0x08(%edi),%eax
000036ad	movw	$0x000c,%si
000036b1	movl	%eax,(%esp)
000036b4	calll	0x0000e068	; symbol stub for: _calloc
000036b9	testl	%eax,%eax
000036bb	movl	%eax,%edx
000036bd	movl	%eax,0x0c(%edi)
000036c0	je	0x00003778
000036c6	movl	0xe4(%ebp),%eax
000036c9	movl	%eax,0x10(%esp)
000036cd	movl	0x08(%edi),%eax
000036d0	movl	%edx,0x08(%esp)
000036d4	movl	0x10(%ebp),%edx
000036d7	movl	%eax,0x0c(%esp)
000036db	movl	0x08(%ebp),%eax
000036de	movl	%edx,0x04(%esp)
000036e2	movl	%eax,(%esp)
000036e5	calll	_QMOImageListFromTask
000036ea	testl	%eax,%eax
000036ec	movl	%eax,%esi
000036ee	jne	0x00003778
000036f4	leal	0x00008539(%ebx),%edx
000036fa	leal	0x000083fd(%ebx),%eax
00003700	movl	%edx,0xdc(%ebp)
00003703	movl	%eax,0xd8(%ebp)
00003706	jmp	0x0000376a
00003708	movl	0x0c(%edi),%eax
0000370b	movl	(%eax,%esi,4),%eax
0000370e	movl	%eax,(%esp)
00003711	calll	_QMOImageGetFileType
00003716	cmpl	$0x02,%eax
00003719	je	0x00003722
0000371b	cmpl	$0x07,%eax
0000371e	jne	0x00003769
00003720	jmp	0x0000373f
00003722	cmpl	$0xff,0x10(%edi)
00003726	je	0x0000373c
00003728	leal	0x00008591(%ebx),%eax
0000372e	movl	%eax,0x0c(%esp)
00003732	movl	$0x00000148,0x08(%esp)
0000373a	jmp	0x00003757
0000373c	movl	%esi,0x10(%edi)
0000373f	cmpl	$0xff,0x14(%edi)
00003743	je	0x00003766
00003745	leal	0x000085b9(%ebx),%eax
0000374b	movl	%eax,0x0c(%esp)
0000374f	movl	$0x0000014b,0x08(%esp)
00003757	movl	0xdc(%ebp),%edx
0000375a	movl	0xd8(%ebp),%eax
0000375d	movl	%edx,0x04(%esp)
00003761	jmp	0x000035d0
00003766	movl	%esi,0x14(%edi)
00003769	incl	%esi
0000376a	cmpl	0x08(%edi),%esi
0000376d	jb	0x00003708
0000376f	xorl	%esi,%esi
00003771	jmp	0x00003782
00003773	movl	$0x0000000c,%esi
00003778	movl	%edi,(%esp)
0000377b	xorl	%edi,%edi
0000377d	calll	0x000034e1
00003782	movl	0x14(%ebp),%edx
00003785	testl	%esi,%esi
00003787	movl	%edi,(%edx)
00003789	sete	%dl
0000378c	testl	%edi,%edi
0000378e	setne	%al
00003791	xorl	%edx,%eax
00003793	testb	$0x01,%al
00003795	je	0x000037ae
00003797	leal	0x000085e1(%ebx),%eax
0000379d	movl	%eax,0x0c(%esp)
000037a1	movl	$0x0000015d,0x08(%esp)
000037a9	jmp	0x000035c0
000037ae	addl	$0x3c,%esp
000037b1	movl	%esi,%eax
000037b3	popl	%ebx
000037b4	popl	%esi
000037b5	popl	%edi
000037b6	leave
000037b7	ret
_QSymCreateFromSelf:
000037b8	pushl	%ebp
000037b9	movl	%esp,%ebp
000037bb	pushl	%ebx
000037bc	calll	0x000037c1
000037c1	popl	%ebx
000037c2	subl	$0x14,%esp
000037c5	calll	_QMOGetLocalCPUType
000037ca	movl	0x08(%ebp),%edx
000037cd	movl	$__mh_dylib_header,0x04(%esp)
000037d5	movl	%edx,0x0c(%esp)
000037d9	movl	%eax,0x08(%esp)
000037dd	movl	0x0000a83f(%ebx),%eax
000037e3	movl	(%eax),%eax
000037e5	movl	%eax,(%esp)
000037e8	calll	0x00003576
000037ed	addl	$0x14,%esp
000037f0	popl	%ebx
000037f1	leave
000037f2	ret
_SymbolToAddressCallback:
000037f3	pushl	%ebp
000037f4	movl	%esp,%ebp
000037f6	subl	$0x38,%esp
000037f9	movl	%esi,0xf8(%ebp)
000037fc	movl	0x08(%ebp),%esi
000037ff	movl	0x1c(%ebp),%eax
00003802	movl	0x20(%ebp),%edx
00003805	movl	%ebx,0xf4(%ebp)
00003808	calll	0x0000380d
0000380d	popl	%ebx
0000380e	testl	%esi,%esi
00003810	movl	%edi,0xfc(%ebp)
00003813	movl	0x24(%ebp),%edi
00003816	movl	%eax,0xe0(%ebp)
00003819	movzbl	0x10(%ebp),%eax
0000381d	movl	%edx,0xe4(%ebp)
00003820	jne	0x00003836
00003822	leal	0x00007c9b(%ebx),%eax
00003828	movl	%eax,0x0c(%esp)
0000382c	movl	$0x000001bd,0x08(%esp)
00003834	jmp	0x0000384f
00003836	movl	0x0c(%ebp),%ecx
00003839	testl	%ecx,%ecx
0000383b	jne	0x00003867
0000383d	leal	0x00008383(%ebx),%eax
00003843	movl	%eax,0x0c(%esp)
00003847	movl	$0x000001be,0x08(%esp)
0000384f	leal	0x000082b7(%ebx),%eax
00003855	movl	%eax,0x04(%esp)
00003859	leal	0x0000817b(%ebx),%eax
0000385f	movl	%eax,(%esp)
00003862	calll	___eprintf
00003867	movl	0x28(%ebp),%edx
0000386a	testl	%edx,%edx
0000386c	jne	0x00003882
0000386e	leal	0x00008ebb(%ebx),%eax
00003874	movl	%eax,0x0c(%esp)
00003878	movl	$0x000001bf,0x08(%esp)
00003880	jmp	0x0000384f
00003882	movl	0x28(%ebp),%edx
00003885	cmpb	$__mh_dylib_header,(%edx)
00003888	je	0x0000389e
0000388a	leal	0x00008ecb(%ebx),%eax
00003890	movl	%eax,0x0c(%esp)
00003894	movl	$0x000001c0,0x08(%esp)
0000389c	jmp	0x0000384f
0000389e	movzbl	%al,%esi
000038a1	testl	$0x000000e0,%esi
000038a7	jne	0x00003922
000038a9	movl	0x08(%edi),%eax
000038ac	movl	%eax,0x04(%esp)
000038b0	movl	0x0c(%ebp),%eax
000038b3	movl	%eax,(%esp)
000038b6	calll	0x0000e112	; symbol stub for: _strcmp
000038bb	testl	%eax,%eax
000038bd	jne	0x00003922
000038bf	movl	%esi,%eax
000038c1	andl	$0x0e,%eax
000038c4	cmpl	$0x02,%eax
000038c7	je	0x000038d0
000038c9	cmpl	$0x0e,%eax
000038cc	jne	0x00003922
000038ce	jmp	0x000038ea
000038d0	movl	%esi,%eax
000038d2	andl	$0x01,%eax
000038d5	negl	%eax
000038d7	addl	$0x02,%eax
000038da	movl	%eax,(%edi)
000038dc	movl	0x08(%ebp),%edx
000038df	movl	%edx,0x04(%edi)
000038e2	movl	0x0c(%ebp),%eax
000038e5	movl	%eax,0x08(%edi)
000038e8	jmp	0x00003910
000038ea	movl	%esi,%eax
000038ec	andl	$0x01,%eax
000038ef	negl	%eax
000038f1	addl	$0x02,%eax
000038f4	movl	%eax,(%edi)
000038f6	movl	0x08(%ebp),%eax
000038f9	movl	%eax,0x04(%edi)
000038fc	movl	0x0c(%ebp),%edx
000038ff	movl	%edx,0x08(%edi)
00003902	movl	%eax,(%esp)
00003905	calll	_QMOImageGetSlide
0000390a	addl	%eax,0xe0(%ebp)
0000390d	adcl	%edx,0xe4(%ebp)
00003910	movl	0xe4(%ebp),%edx
00003913	movl	0xe0(%ebp),%eax
00003916	movl	%edx,0x10(%edi)
00003919	movl	%eax,0x0c(%edi)
0000391c	movl	0x28(%ebp),%edx
0000391f	movb	$0x01,(%edx)
00003922	movl	0xf4(%ebp),%ebx
00003925	xorl	%eax,%eax
00003927	movl	0xf8(%ebp),%esi
0000392a	movl	0xfc(%ebp),%edi
0000392d	leave
0000392e	ret
_QSymCreateLibraryNameWithSuffix:
0000392f	pushl	%ebp
00003930	movl	%esp,%ebp
00003932	subl	$0x48,%esp
00003935	movl	%edi,0xfc(%ebp)
00003938	movl	0x08(%ebp),%edi
0000393b	movl	%ebx,0xf4(%ebp)
0000393e	calll	0x00003943
00003943	popl	%ebx
00003944	movl	%esi,0xf8(%ebp)
00003947	testl	%edi,%edi
00003949	jne	0x0000395f
0000394b	leal	0x0000825c(%ebx),%eax
00003951	movl	%eax,0x0c(%esp)
00003955	movl	$0x000001f4,0x08(%esp)
0000395d	jmp	0x00003978
0000395f	movl	0x0c(%ebp),%eax
00003962	testl	%eax,%eax
00003964	jne	0x00003990
00003966	leal	0x00008270(%ebx),%eax
0000396c	movl	%eax,0x0c(%esp)
00003970	movl	$0x000001f5,0x08(%esp)
00003978	leal	0x00008181(%ebx),%eax
0000397e	movl	%eax,0x04(%esp)
00003982	leal	0x00008045(%ebx),%eax
00003988	movl	%eax,(%esp)
0000398b	calll	___eprintf
00003990	movl	$0x0000002f,0x04(%esp)
00003998	movl	%edi,(%esp)
0000399b	calll	0x0000e126	; symbol stub for: _strrchr
000039a0	movl	$0x0000002e,0x04(%esp)
000039a8	testl	%eax,%eax
000039aa	leal	0x01(%eax),%edx
000039ad	cmovel	%edi,%edx
000039b0	movl	%edx,(%esp)
000039b3	calll	0x0000e126	; symbol stub for: _strrchr
000039b8	movl	%edi,(%esp)
000039bb	movl	%eax,%esi
000039bd	calll	0x0000e121	; symbol stub for: _strlen
000039c2	testl	%esi,%esi
000039c4	leal	0x00007b77(%ebx),%edx
000039ca	je	0x000039d2
000039cc	movl	%esi,%eax
000039ce	movl	%esi,%edx
000039d0	subl	%edi,%eax
000039d2	movl	%edx,0x14(%esp)
000039d6	movl	0x0c(%ebp),%edx
000039d9	movl	%eax,0x08(%esp)
000039dd	leal	0x00008280(%ebx),%eax
000039e3	movl	%eax,0x04(%esp)
000039e7	leal	0xe4(%ebp),%eax
000039ea	movl	%edi,0x0c(%esp)
000039ee	movl	$__mh_dylib_header,0xe4(%ebp)
000039f5	movl	%edx,0x10(%esp)
000039f9	movl	%eax,(%esp)
000039fc	calll	0x0000e063	; symbol stub for: _asprintf
00003a01	movl	0xe4(%ebp),%eax
00003a04	movl	0xf4(%ebp),%ebx
00003a07	movl	0xf8(%ebp),%esi
00003a0a	movl	0xfc(%ebp),%edi
00003a0d	leave
00003a0e	ret
_AddressToSymbolCallback:
00003a0f	pushl	%ebp
00003a10	movl	%esp,%ebp
00003a12	subl	$0x58,%esp
00003a15	movl	%esi,0xf8(%ebp)
00003a18	movl	0x08(%ebp),%esi
00003a1b	movl	0x10(%ebp),%eax
00003a1e	movl	0x1c(%ebp),%edx
00003a21	movl	0x20(%ebp),%ecx
00003a24	movl	%ebx,0xf4(%ebp)
00003a27	calll	0x00003a2c
00003a2c	popl	%ebx
00003a2d	testl	%esi,%esi
00003a2f	movl	%eax,0xdc(%ebp)
00003a32	movzbl	0xdc(%ebp),%eax
00003a36	movl	%edx,0xd0(%ebp)
00003a39	movl	0x28(%ebp),%edx
00003a3c	movl	%ecx,0xd4(%ebp)
00003a3f	movzbl	0x14(%ebp),%ecx
00003a43	movl	%edi,0xfc(%ebp)
00003a46	jne	0x00003a5c
00003a48	leal	0x00007a7c(%ebx),%eax
00003a4e	movl	%eax,0x0c(%esp)
00003a52	movl	$0x000002fb,0x08(%esp)
00003a5a	jmp	0x00003a75
00003a5c	movl	0x0c(%ebp),%edi
00003a5f	testl	%edi,%edi
00003a61	jne	0x00003a8d
00003a63	leal	0x00008164(%ebx),%eax
00003a69	movl	%eax,0x0c(%esp)
00003a6d	movl	$0x000002fc,0x08(%esp)
00003a75	leal	0x00008098(%ebx),%eax
00003a7b	movl	%eax,0x04(%esp)
00003a7f	leal	0x00007f5c(%ebx),%eax
00003a85	movl	%eax,(%esp)
00003a88	calll	___eprintf
00003a8d	testl	%edx,%edx
00003a8f	jne	0x00003aa5
00003a91	leal	0x00008c9c(%ebx),%eax
00003a97	movl	%eax,0x0c(%esp)
00003a9b	movl	$0x000002fd,0x08(%esp)
00003aa3	jmp	0x00003a75
00003aa5	cmpb	$__mh_dylib_header,(%edx)
00003aa8	je	0x00003abe
00003aaa	leal	0x00008cac(%ebx),%eax
00003ab0	movl	%eax,0x0c(%esp)
00003ab4	movl	$0x000002fe,0x08(%esp)
00003abc	jmp	0x00003a75
00003abe	movzbl	%al,%eax
00003ac1	testb	$0xe0,%al
00003ac3	jne	0x00003b49
00003ac9	andl	$0x0e,%eax
00003acc	cmpl	$0x0e,%eax
00003acf	jne	0x00003b49
00003ad1	movl	0x24(%ebp),%eax
00003ad4	cmpb	%cl,0x08(%eax)
00003ad7	jne	0x00003b49
00003ad9	movl	%esi,(%esp)
00003adc	calll	_QMOImageGetSlide
00003ae1	movl	0x24(%ebp),%ecx
00003ae4	movl	%edx,%edi
00003ae6	movl	(%ecx),%edx
00003ae8	movl	%eax,%esi
00003aea	movl	0x04(%ecx),%ecx
00003aed	addl	0xd0(%ebp),%esi
00003af0	adcl	0xd4(%ebp),%edi
00003af3	movl	%edx,0xc0(%ebp)
00003af6	subl	%esi,%edx
00003af8	movl	%ecx,0xc4(%ebp)
00003afb	sbbl	%edi,%ecx
00003afd	cmpl	0xc4(%ebp),%edi
00003b00	movl	%edx,0xe0(%ebp)
00003b03	movl	%ecx,0xe4(%ebp)
00003b06	ja	0x00003b49
00003b08	jb	0x00003b0f
00003b0a	cmpl	0xc0(%ebp),%esi
00003b0d	ja	0x00003b49
00003b0f	movl	0x24(%ebp),%eax
00003b12	movl	0xe4(%ebp),%edx
00003b15	cmpl	0x20(%eax),%edx
00003b18	ja	0x00003b49
00003b1a	jb	0x00003b24
00003b1c	movl	0xe0(%ebp),%ecx
00003b1f	cmpl	0x1c(%eax),%ecx
00003b22	jae	0x00003b49
00003b24	movl	0x0c(%ebp),%edx
00003b27	movl	0x24(%ebp),%eax
00003b2a	movl	%edx,0x0c(%eax)
00003b2d	movzbl	0xdc(%ebp),%ecx
00003b31	movl	%esi,0x14(%eax)
00003b34	movl	%edi,0x18(%eax)
00003b37	movb	%cl,0x10(%eax)
00003b3a	movl	0xe0(%ebp),%eax
00003b3d	movl	0xe4(%ebp),%edx
00003b40	movl	0x24(%ebp),%ecx
00003b43	movl	%eax,0x1c(%ecx)
00003b46	movl	%edx,0x20(%ecx)
00003b49	movl	0xf4(%ebp),%ebx
00003b4c	xorl	%eax,%eax
00003b4e	movl	0xf8(%ebp),%esi
00003b51	movl	0xfc(%ebp),%edi
00003b54	leave
00003b55	ret
_NextSymbolCallback:
00003b56	pushl	%ebp
00003b57	movl	%esp,%ebp
00003b59	subl	$0x58,%esp
00003b5c	movl	0x10(%ebp),%eax
00003b5f	movl	0x08(%ebp),%ecx
00003b62	movl	0x20(%ebp),%edx
00003b65	movl	%ebx,0xf4(%ebp)
00003b68	movl	%eax,0xdc(%ebp)
00003b6b	movl	0x1c(%ebp),%eax
00003b6e	calll	0x00003b73
00003b73	popl	%ebx
00003b74	testl	%ecx,%ecx
00003b76	movl	%edx,0xd4(%ebp)
00003b79	movl	0x28(%ebp),%edx
00003b7c	movl	%esi,0xf8(%ebp)
00003b7f	movl	%eax,0xd0(%ebp)
00003b82	movzbl	0xdc(%ebp),%eax
00003b86	movl	%edi,0xfc(%ebp)
00003b89	jne	0x00003b9f
00003b8b	leal	0x00007935(%ebx),%eax
00003b91	movl	%eax,0x0c(%esp)
00003b95	movl	$0x0000039a,0x08(%esp)
00003b9d	jmp	0x00003bb8
00003b9f	movl	0x0c(%ebp),%esi
00003ba2	testl	%esi,%esi
00003ba4	jne	0x00003bd0
00003ba6	leal	0x0000801d(%ebx),%eax
00003bac	movl	%eax,0x0c(%esp)
00003bb0	movl	$0x0000039b,0x08(%esp)
00003bb8	leal	0x00007f51(%ebx),%eax
00003bbe	movl	%eax,0x04(%esp)
00003bc2	leal	0x00007e15(%ebx),%eax
00003bc8	movl	%eax,(%esp)
00003bcb	calll	___eprintf
00003bd0	testl	%edx,%edx
00003bd2	jne	0x00003be8
00003bd4	leal	0x00008b55(%ebx),%eax
00003bda	movl	%eax,0x0c(%esp)
00003bde	movl	$0x0000039c,0x08(%esp)
00003be6	jmp	0x00003bb8
00003be8	cmpb	$__mh_dylib_header,(%edx)
00003beb	je	0x00003c01
00003bed	leal	0x00008b65(%ebx),%eax
00003bf3	movl	%eax,0x0c(%esp)
00003bf7	movl	$0x0000039d,0x08(%esp)
00003bff	jmp	0x00003bb8
00003c01	movzbl	%al,%eax
00003c04	testb	$0xe0,%al
00003c06	jne	0x00003c85
00003c08	andl	$0x0e,%eax
00003c0b	cmpl	$0x0e,%eax
00003c0e	jne	0x00003c85
00003c10	movl	%ecx,(%esp)
00003c13	calll	_QMOImageGetSlide
00003c18	movl	0x24(%ebp),%ecx
00003c1b	movl	%edx,%edi
00003c1d	movl	(%ecx),%edx
00003c1f	movl	%eax,%esi
00003c21	movl	0x04(%ecx),%ecx
00003c24	addl	0xd0(%ebp),%esi
00003c27	adcl	0xd4(%ebp),%edi
00003c2a	movl	%edx,0xc0(%ebp)
00003c2d	movl	%ecx,0xc4(%ebp)
00003c30	movl	%esi,%eax
00003c32	movl	%edi,%edx
00003c34	subl	0xc0(%ebp),%eax
00003c37	sbbl	0xc4(%ebp),%edx
00003c3a	cmpl	%ecx,%edi
00003c3c	movl	%eax,0xe0(%ebp)
00003c3f	movl	%edx,0xe4(%ebp)
00003c42	jb	0x00003c85
00003c44	ja	0x00003c4b
00003c46	cmpl	0xc0(%ebp),%esi
00003c49	jbe	0x00003c85
00003c4b	movl	0x24(%ebp),%edx
00003c4e	movl	0xe4(%ebp),%ecx
00003c51	cmpl	0x1c(%edx),%ecx
00003c54	ja	0x00003c85
00003c56	jb	0x00003c60
00003c58	movl	0xe0(%ebp),%eax
00003c5b	cmpl	0x18(%edx),%eax
00003c5e	jae	0x00003c85
00003c60	movl	0x0c(%ebp),%ecx
00003c63	movl	0x24(%ebp),%edx
00003c66	movl	%ecx,0x08(%edx)
00003c69	movzbl	0xdc(%ebp),%eax
00003c6d	movl	%esi,0x10(%edx)
00003c70	movl	%edi,0x14(%edx)
00003c73	movb	%al,0x0c(%edx)
00003c76	movl	0xe0(%ebp),%edx
00003c79	movl	0xe4(%ebp),%ecx
00003c7c	movl	0x24(%ebp),%eax
00003c7f	movl	%edx,0x18(%eax)
00003c82	movl	%ecx,0x1c(%eax)
00003c85	movl	0xf4(%ebp),%ebx
00003c88	xorl	%eax,%eax
00003c8a	movl	0xf8(%ebp),%esi
00003c8d	movl	0xfc(%ebp),%edi
00003c90	leave
00003c91	ret
_QSymGetNextSymbol:
00003c92	pushl	%ebp
00003c93	movl	%esp,%ebp
00003c95	pushl	%edi
00003c96	pushl	%esi
00003c97	pushl	%ebx
00003c98	subl	$0x3c,%esp
00003c9b	movl	0x08(%ebp),%edi
00003c9e	calll	0x00003ca3
00003ca3	popl	%ebx
00003ca4	testl	%edi,%edi
00003ca6	je	0x00003cd5
00003ca8	movl	0x08(%edi),%eax
00003cab	testl	%eax,%eax
00003cad	je	0x00003cd5
00003caf	movl	0x0c(%edi),%edx
00003cb2	testl	%edx,%edx
00003cb4	je	0x00003cd5
00003cb6	movl	0x10(%edi),%edx
00003cb9	cmpl	$0xff,%edx
00003cbc	je	0x00003cc2
00003cbe	cmpl	%edx,%eax
00003cc0	jbe	0x00003cd5
00003cc2	movl	0x14(%edi),%edx
00003cc5	cmpl	$0xff,%edx
00003cc8	je	0x00003cce
00003cca	cmpl	%edx,%eax
00003ccc	jbe	0x00003cd5
00003cce	movl	$0x00000001,%eax
00003cd3	jmp	0x00003cd7
00003cd5	xorl	%eax,%eax
00003cd7	testb	%al,%al
00003cd9	movl	%eax,%ecx
00003cdb	je	0x00003cfe
00003cdd	movl	0x08(%edi),%esi
00003ce0	movl	$0x00000001,%ecx
00003ce5	xorl	%edx,%edx
00003ce7	jmp	0x00003cfa
00003ce9	movl	0x0c(%edi),%eax
00003cec	movl	(%eax,%edx,4),%eax
00003cef	testl	%eax,%eax
00003cf1	movl	$__mh_dylib_header,%eax
00003cf6	cmovel	%eax,%ecx
00003cf9	incl	%edx
00003cfa	cmpl	%esi,%edx
00003cfc	jb	0x00003ce9
00003cfe	testb	%cl,%cl
00003d00	jne	0x00003d16
00003d02	leal	0x00007f29(%ebx),%eax
00003d08	movl	%eax,0x0c(%esp)
00003d0c	movl	$0x000003c8,0x08(%esp)
00003d14	jmp	0x00003d31
00003d16	movl	0x0c(%ebp),%eax
00003d19	movl	(%eax),%eax
00003d1b	testl	%eax,%eax
00003d1d	jne	0x00003d49
00003d1f	leal	0x00007f3d(%ebx),%eax
00003d25	movl	%eax,0x0c(%esp)
00003d29	movl	$0x000003c9,0x08(%esp)
00003d31	leal	0x00007e21(%ebx),%eax
00003d37	movl	%eax,0x04(%esp)
00003d3b	leal	0x00007ce5(%ebx),%eax
00003d41	movl	%eax,(%esp)
00003d44	calll	___eprintf
00003d49	movl	0x0c(%ebp),%edx
00003d4c	movl	0x04(%edx),%eax
00003d4f	testl	%eax,%eax
00003d51	jne	0x00003d67
00003d53	leal	0x00007f61(%ebx),%eax
00003d59	movl	%eax,0x0c(%esp)
00003d5d	movl	$0x000003ca,0x08(%esp)
00003d65	jmp	0x00003d31
00003d67	movl	0x0c(%ebp),%ecx
00003d6a	movl	0x08(%ecx),%eax
00003d6d	testl	%eax,%eax
00003d6f	jne	0x00003d85
00003d71	leal	0x00007f7d(%ebx),%eax
00003d77	movl	%eax,0x0c(%esp)
00003d7b	movl	$0x000003cb,0x08(%esp)
00003d83	jmp	0x00003d31
00003d85	movl	0x0c(%ebp),%esi
00003d88	movl	0x0c(%esi),%eax
00003d8b	movl	0x10(%esi),%edx
00003d8e	movl	$__mh_dylib_header,0xd0(%ebp)
00003d95	movb	$__mh_dylib_header,0xd4(%ebp)
00003d99	movl	%eax,0xc8(%ebp)
00003d9c	leal	0xc8(%ebp),%eax
00003d9f	movl	%eax,0x08(%esp)
00003da3	leal	0xfffffeb3(%ebx),%eax
00003da9	movl	%edx,0xcc(%ebp)
00003dac	movl	$__mh_dylib_header,0xd8(%ebp)
00003db3	movl	$__mh_dylib_header,0xdc(%ebp)
00003dba	movl	$0xffffffff,0xe0(%ebp)
00003dc1	movl	$0xffffffff,0xe4(%ebp)
00003dc8	movl	%eax,0x04(%esp)
00003dcc	movl	0x04(%esi),%eax
00003dcf	movl	%eax,(%esp)
00003dd2	calll	_QMOImageIterateSymbols
00003dd7	testl	%eax,%eax
00003dd9	movl	%eax,%ecx
00003ddb	jne	0x00003e23
00003ddd	movl	0xd0(%ebp),%eax
00003de0	testl	%eax,%eax
00003de2	jne	0x00003de8
00003de4	movb	$0x03,%cl
00003de6	jmp	0x00003e23
00003de8	movzbl	0xd4(%ebp),%eax
00003dec	movl	0x10(%ebp),%edx
00003def	andl	$0x01,%eax
00003df2	negl	%eax
00003df4	addl	$0x02,%eax
00003df7	movl	%eax,(%edx)
00003df9	movl	0x0c(%ebp),%esi
00003dfc	movl	0x04(%esi),%eax
00003dff	movl	%eax,0x04(%edx)
00003e02	movl	0xd0(%ebp),%eax
00003e05	movl	%eax,0x08(%edx)
00003e08	movl	0xd8(%ebp),%eax
00003e0b	movl	0xdc(%ebp),%edx
00003e0e	movl	0x10(%ebp),%esi
00003e11	movl	%eax,0x0c(%esi)
00003e14	movl	%edx,0x10(%esi)
00003e17	movl	0xe0(%ebp),%eax
00003e1a	movl	0xe4(%ebp),%edx
00003e1d	movl	%eax,0x14(%esi)
00003e20	movl	%edx,0x18(%esi)
00003e23	movl	0x10(%ebp),%eax
00003e26	testl	%ecx,%ecx
00003e28	sete	%dl
00003e2b	movl	(%eax),%edi
00003e2d	testl	%edi,%edi
00003e2f	setne	%al
00003e32	xorl	%edx,%eax
00003e34	testb	$0x01,%al
00003e36	je	0x00003e4f
00003e38	leal	0x00007f99(%ebx),%eax
00003e3e	movl	%eax,0x0c(%esp)
00003e42	movl	$0x000003e5,0x08(%esp)
00003e4a	jmp	0x00003d31
00003e4f	addl	$0x3c,%esp
00003e52	movl	%ecx,%eax
00003e54	popl	%ebx
00003e55	popl	%esi
00003e56	popl	%edi
00003e57	leave
00003e58	ret
_QSymGetDyldImage:
00003e59	pushl	%ebp
00003e5a	movl	%esp,%ebp
00003e5c	pushl	%edi
00003e5d	pushl	%esi
00003e5e	pushl	%ebx
00003e5f	subl	$0x1c,%esp
00003e62	movl	0x08(%ebp),%edi
00003e65	calll	0x00003e6a
00003e6a	popl	%ebx
00003e6b	testl	%edi,%edi
00003e6d	je	0x00003e9c
00003e6f	movl	0x08(%edi),%eax
00003e72	testl	%eax,%eax
00003e74	je	0x00003e9c
00003e76	movl	0x0c(%edi),%edx
00003e79	testl	%edx,%edx
00003e7b	je	0x00003e9c
00003e7d	movl	0x10(%edi),%edx
00003e80	cmpl	$0xff,%edx
00003e83	je	0x00003e89
00003e85	cmpl	%edx,%eax
00003e87	jbe	0x00003e9c
00003e89	movl	0x14(%edi),%edx
00003e8c	cmpl	$0xff,%edx
00003e8f	je	0x00003e95
00003e91	cmpl	%edx,%eax
00003e93	jbe	0x00003e9c
00003e95	movl	$0x00000001,%eax
00003e9a	jmp	0x00003e9e
00003e9c	xorl	%eax,%eax
00003e9e	testb	%al,%al
00003ea0	movl	%eax,%ecx
00003ea2	je	0x00003ec5
00003ea4	movl	0x08(%edi),%esi
00003ea7	movl	$0x00000001,%ecx
00003eac	xorl	%edx,%edx
00003eae	jmp	0x00003ec1
00003eb0	movl	0x0c(%edi),%eax
00003eb3	movl	(%eax,%edx,4),%eax
00003eb6	testl	%eax,%eax
00003eb8	movl	$__mh_dylib_header,%eax
00003ebd	cmovel	%eax,%ecx
00003ec0	incl	%edx
00003ec1	cmpl	%esi,%edx
00003ec3	jb	0x00003eb0
00003ec5	testb	%cl,%cl
00003ec7	jne	0x00003ef3
00003ec9	leal	0x00007d62(%ebx),%eax
00003ecf	movl	%eax,0x0c(%esp)
00003ed3	leal	0x00007c5a(%ebx),%eax
00003ed9	movl	%eax,0x04(%esp)
00003edd	leal	0x00007b1e(%ebx),%eax
00003ee3	movl	$0x0000017b,0x08(%esp)
00003eeb	movl	%eax,(%esp)
00003eee	calll	___eprintf
00003ef3	movl	0x14(%edi),%edx
00003ef6	xorl	%eax,%eax
00003ef8	cmpl	$0xff,%edx
00003efb	je	0x00003f03
00003efd	movl	0x0c(%edi),%eax
00003f00	movl	(%eax,%edx,4),%eax
00003f03	addl	$0x1c,%esp
00003f06	popl	%ebx
00003f07	popl	%esi
00003f08	popl	%edi
00003f09	leave
00003f0a	ret
_QSymGetExecutableImage:
00003f0b	pushl	%ebp
00003f0c	movl	%esp,%ebp
00003f0e	pushl	%edi
00003f0f	pushl	%esi
00003f10	pushl	%ebx
00003f11	subl	$0x1c,%esp
00003f14	movl	0x08(%ebp),%edi
00003f17	calll	0x00003f1c
00003f1c	popl	%ebx
00003f1d	testl	%edi,%edi
00003f1f	je	0x00003f4e
00003f21	movl	0x08(%edi),%eax
00003f24	testl	%eax,%eax
00003f26	je	0x00003f4e
00003f28	movl	0x0c(%edi),%edx
00003f2b	testl	%edx,%edx
00003f2d	je	0x00003f4e
00003f2f	movl	0x10(%edi),%edx
00003f32	cmpl	$0xff,%edx
00003f35	je	0x00003f3b
00003f37	cmpl	%edx,%eax
00003f39	jbe	0x00003f4e
00003f3b	movl	0x14(%edi),%edx
00003f3e	cmpl	$0xff,%edx
00003f41	je	0x00003f47
00003f43	cmpl	%edx,%eax
00003f45	jbe	0x00003f4e
00003f47	movl	$0x00000001,%eax
00003f4c	jmp	0x00003f50
00003f4e	xorl	%eax,%eax
00003f50	testb	%al,%al
00003f52	movl	%eax,%ecx
00003f54	je	0x00003f77
00003f56	movl	0x08(%edi),%esi
00003f59	movl	$0x00000001,%ecx
00003f5e	xorl	%edx,%edx
00003f60	jmp	0x00003f73
00003f62	movl	0x0c(%edi),%eax
00003f65	movl	(%eax,%edx,4),%eax
00003f68	testl	%eax,%eax
00003f6a	movl	$__mh_dylib_header,%eax
00003f6f	cmovel	%eax,%ecx
00003f72	incl	%edx
00003f73	cmpl	%esi,%edx
00003f75	jb	0x00003f62
00003f77	testb	%cl,%cl
00003f79	jne	0x00003fa5
00003f7b	leal	0x00007cb0(%ebx),%eax
00003f81	movl	%eax,0x0c(%esp)
00003f85	leal	0x00007ba8(%ebx),%eax
00003f8b	movl	%eax,0x04(%esp)
00003f8f	leal	0x00007a6c(%ebx),%eax
00003f95	movl	$0x00000189,0x08(%esp)
00003f9d	movl	%eax,(%esp)
00003fa0	calll	___eprintf
00003fa5	movl	0x10(%edi),%edx
00003fa8	xorl	%eax,%eax
00003faa	cmpl	$0xff,%edx
00003fad	je	0x00003fb5
00003faf	movl	0x0c(%edi),%eax
00003fb2	movl	(%eax,%edx,4),%eax
00003fb5	addl	$0x1c,%esp
00003fb8	popl	%ebx
00003fb9	popl	%esi
00003fba	popl	%edi
00003fbb	leave
00003fbc	ret
_QSymGetImages:
00003fbd	pushl	%ebp
00003fbe	movl	%esp,%ebp
00003fc0	pushl	%edi
00003fc1	pushl	%esi
00003fc2	pushl	%ebx
00003fc3	subl	$0x1c,%esp
00003fc6	movl	0x08(%ebp),%edi
00003fc9	calll	0x00003fce
00003fce	popl	%ebx
00003fcf	testl	%edi,%edi
00003fd1	je	0x00004000
00003fd3	movl	0x08(%edi),%eax
00003fd6	testl	%eax,%eax
00003fd8	je	0x00004000
00003fda	movl	0x0c(%edi),%edx
00003fdd	testl	%edx,%edx
00003fdf	je	0x00004000
00003fe1	movl	0x10(%edi),%edx
00003fe4	cmpl	$0xff,%edx
00003fe7	je	0x00003fed
00003fe9	cmpl	%edx,%eax
00003feb	jbe	0x00004000
00003fed	movl	0x14(%edi),%edx
00003ff0	cmpl	$0xff,%edx
00003ff3	je	0x00003ff9
00003ff5	cmpl	%edx,%eax
00003ff7	jbe	0x00004000
00003ff9	movl	$0x00000001,%eax
00003ffe	jmp	0x00004002
00004000	xorl	%eax,%eax
00004002	testb	%al,%al
00004004	movl	%eax,%ecx
00004006	je	0x00004029
00004008	movl	0x08(%edi),%esi
0000400b	movl	$0x00000001,%ecx
00004010	xorl	%edx,%edx
00004012	jmp	0x00004025
00004014	movl	0x0c(%edi),%eax
00004017	movl	(%eax,%edx,4),%eax
0000401a	testl	%eax,%eax
0000401c	movl	$__mh_dylib_header,%eax
00004021	cmovel	%eax,%ecx
00004024	incl	%edx
00004025	cmpl	%esi,%edx
00004027	jb	0x00004014
00004029	testb	%cl,%cl
0000402b	jne	0x00004041
0000402d	leal	0x00007bfe(%ebx),%eax
00004033	movl	%eax,0x0c(%esp)
00004037	movl	$0x00000199,0x08(%esp)
0000403f	jmp	0x0000405a
00004041	movl	0x0c(%ebp),%esi
00004044	testl	%esi,%esi
00004046	jne	0x00004072
00004048	leal	_FindTaskDyld(%ebx),%eax
0000404e	movl	%eax,0x0c(%esp)
00004052	movl	$0x0000019a,0x08(%esp)
0000405a	leal	0x00007af6(%ebx),%eax
00004060	movl	%eax,0x04(%esp)
00004064	leal	0x000079ba(%ebx),%eax
0000406a	movl	%eax,(%esp)
0000406d	calll	___eprintf
00004072	movl	0x10(%ebp),%ecx
00004075	testl	%ecx,%ecx
00004077	jne	0x0000408d
00004079	leal	0x00007cbc(%ebx),%eax
0000407f	movl	%eax,0x0c(%esp)
00004083	movl	$0x0000019b,0x08(%esp)
0000408b	jmp	0x0000405a
0000408d	movl	0x0c(%edi),%eax
00004090	movl	0x0c(%ebp),%edx
00004093	movl	%eax,(%edx)
00004095	movl	0x08(%edi),%eax
00004098	movl	0x10(%ebp),%edx
0000409b	movl	%eax,(%edx)
0000409d	addl	$0x1c,%esp
000040a0	popl	%ebx
000040a1	popl	%esi
000040a2	popl	%edi
000040a3	leave
000040a4	ret
_QSymGetAddressForSymbol:
000040a5	pushl	%ebp
000040a6	movl	%esp,%ebp
000040a8	pushl	%edi
000040a9	pushl	%esi
000040aa	pushl	%ebx
000040ab	subl	$0x3c,%esp
000040ae	movl	0x08(%ebp),%esi
000040b1	calll	0x000040b6
000040b6	popl	%ebx
000040b7	testl	%esi,%esi
000040b9	je	0x000040ee
000040bb	movl	0x08(%ebp),%edx
000040be	movl	0x08(%edx),%eax
000040c1	testl	%eax,%eax
000040c3	je	0x000040ee
000040c5	movl	0x0c(%edx),%ecx
000040c8	testl	%ecx,%ecx
000040ca	je	0x000040ee
000040cc	movl	0x10(%edx),%edx
000040cf	cmpl	$0xff,%edx
000040d2	je	0x000040d8
000040d4	cmpl	%edx,%eax
000040d6	jbe	0x000040ee
000040d8	movl	0x08(%ebp),%edi
000040db	movl	0x14(%edi),%edx
000040de	cmpl	$0xff,%edx
000040e1	je	0x000040e7
000040e3	cmpl	%edx,%eax
000040e5	jbe	0x000040ee
000040e7	movl	$0x00000001,%eax
000040ec	jmp	0x000040f0
000040ee	xorl	%eax,%eax
000040f0	testb	%al,%al
000040f2	movl	%eax,%ecx
000040f4	je	0x0000411d
000040f6	movl	0x08(%ebp),%eax
000040f9	movl	$0x00000001,%ecx
000040fe	xorl	%edx,%edx
00004100	movl	0x08(%eax),%esi
00004103	jmp	0x00004119
00004105	movl	0x08(%ebp),%edi
00004108	movl	0x0c(%edi),%eax
0000410b	movl	(%eax,%edx,4),%edi
0000410e	movl	$__mh_dylib_header,%eax
00004113	testl	%edi,%edi
00004115	cmovel	%eax,%ecx
00004118	incl	%edx
00004119	cmpl	%esi,%edx
0000411b	jb	0x00004105
0000411d	testb	%cl,%cl
0000411f	jne	0x00004135
00004121	leal	0x00007b16(%ebx),%eax
00004127	movl	%eax,0x0c(%esp)
0000412b	movl	$0x0000021e,0x08(%esp)
00004133	jmp	0x0000414e
00004135	movl	0x10(%ebp),%esi
00004138	testl	%esi,%esi
0000413a	jne	0x00004166
0000413c	leal	0x00007bfa(%ebx),%eax
00004142	movl	%eax,0x0c(%esp)
00004146	movl	$0x00000220,0x08(%esp)
0000414e	leal	0x00007a0e(%ebx),%eax
00004154	movl	%eax,0x04(%esp)
00004158	leal	0x000078d2(%ebx),%eax
0000415e	movl	%eax,(%esp)
00004161	calll	___eprintf
00004166	movl	0x14(%ebp),%ecx
00004169	testl	%ecx,%ecx
0000416b	jne	0x00004181
0000416d	leal	0x00007c0d(%ebx),%eax
00004173	movl	%eax,0x0c(%esp)
00004177	movl	$0x00000221,0x08(%esp)
0000417f	jmp	0x0000414e
00004181	movl	0x08(%ebp),%eax
00004184	movl	0x0c(%ebp),%edx
00004187	movl	0x08(%eax),%eax
0000418a	testl	%edx,%edx
0000418c	movl	$__mh_dylib_header,0xd8(%ebp)
00004193	movl	%eax,0xdc(%ebp)
00004196	je	0x0000425a
0000419c	leal	0x00008f4e(%ebx),%edx
000041a2	movl	$__mh_dylib_header,0xd4(%ebp)
000041a9	movl	%edx,0xe0(%ebp)
000041ac	movl	0xe0(%ebp),%ecx
000041af	movl	0x0c(%ebp),%edi
000041b2	movl	(%ecx),%eax
000041b4	movl	%ecx,0xe4(%ebp)
000041b7	movl	%edi,(%esp)
000041ba	movl	%eax,0x04(%esp)
000041be	calll	0x0000392f
000041c3	testl	%eax,%eax
000041c5	movl	%eax,%edi
000041c7	jne	0x000041d2
000041c9	movl	$0x0000000c,0xd4(%ebp)
000041d0	jmp	0x0000422a
000041d2	movl	0xd4(%ebp),%eax
000041d5	xorl	%esi,%esi
000041d7	testl	%eax,%eax
000041d9	je	0x00004203
000041db	jmp	0x0000422a
000041dd	movl	0x08(%ebp),%edx
000041e0	movl	0x0c(%edx),%eax
000041e3	movl	(%eax,%esi,4),%eax
000041e6	movl	%eax,(%esp)
000041e9	calll	_QMOImageGetLibraryID
000041ee	testl	%eax,%eax
000041f0	je	0x00004202
000041f2	movl	%edi,0x04(%esp)
000041f6	movl	%eax,(%esp)
000041f9	calll	0x0000e112	; symbol stub for: _strcmp
000041fe	testl	%eax,%eax
00004200	je	0x0000420b
00004202	incl	%esi
00004203	movl	0x08(%ebp),%ecx
00004206	cmpl	0x08(%ecx),%esi
00004209	jb	0x000041dd
0000420b	movl	0x08(%ebp),%eax
0000420e	movl	$0x00000003,0xd4(%ebp)
00004215	cmpl	0x08(%eax),%esi
00004218	je	0x0000422a
0000421a	leal	0x01(%esi),%edx
0000421d	movl	%edx,0xdc(%ebp)
00004220	movl	%esi,0xd8(%ebp)
00004223	movl	$__mh_dylib_header,0xd4(%ebp)
0000422a	movl	%edi,(%esp)
0000422d	calll	0x0000e08b	; symbol stub for: _free
00004232	cmpl	$0x03,0xd4(%ebp)
00004236	jne	0x0000424f
00004238	movl	0xe4(%ebp),%ecx
0000423b	addl	$0x04,0xe0(%ebp)
0000423f	movl	0x04(%ecx),%eax
00004242	testl	%eax,%eax
00004244	jne	0x000041ac
0000424a	jmp	0x000042e8
0000424f	movl	0xd4(%ebp),%eax
00004252	testl	%eax,%eax
00004254	jne	0x000042e8
0000425a	movl	0x14(%ebp),%edi
0000425d	leal	0xfffff73d(%ebx),%edx
00004263	movl	$__mh_dylib_header,0x04(%edi)
0000426a	movl	$__mh_dylib_header,0x0c(%edi)
00004271	movl	$__mh_dylib_header,0x10(%edi)
00004278	movl	$__mh_dylib_header,0x14(%edi)
0000427f	movl	$__mh_dylib_header,0x18(%edi)
00004286	movl	$__mh_dylib_header,(%edi)
0000428c	movl	0x10(%ebp),%eax
0000428f	movl	%eax,0x08(%edi)
00004292	movl	0xd8(%ebp),%edi
00004295	movl	0xd8(%ebp),%esi
00004298	movl	%edx,0xd0(%ebp)
0000429b	shll	$0x02,%edi
0000429e	jmp	0x000042d3
000042a0	movl	0xd0(%ebp),%eax
000042a3	movl	0x14(%ebp),%ecx
000042a6	movl	0x08(%ebp),%edx
000042a9	movl	%eax,0x04(%esp)
000042ad	movl	%ecx,0x08(%esp)
000042b1	movl	0x0c(%edx),%eax
000042b4	movl	(%eax,%edi),%eax
000042b7	movl	%eax,(%esp)
000042ba	calll	_QMOImageIterateSymbols
000042bf	testl	%eax,%eax
000042c1	movl	%eax,0xd4(%ebp)
000042c4	jne	0x000042e8
000042c6	movl	0x14(%ebp),%ecx
000042c9	addl	$0x04,%edi
000042cc	movl	(%ecx),%eax
000042ce	testl	%eax,%eax
000042d0	jne	0x0000431d
000042d2	incl	%esi
000042d3	cmpl	0xdc(%ebp),%esi
000042d6	jb	0x000042a0
000042d8	movl	0x14(%ebp),%edi
000042db	movl	(%edi),%eax
000042dd	testl	%eax,%eax
000042df	jne	0x0000431d
000042e1	movl	$0x00000003,0xd4(%ebp)
000042e8	movl	0x14(%ebp),%eax
000042eb	movl	$__mh_dylib_header,0x04(%eax)
000042f2	movl	$__mh_dylib_header,0x08(%eax)
000042f9	movl	$__mh_dylib_header,0x0c(%eax)
00004300	movl	$__mh_dylib_header,0x10(%eax)
00004307	movl	$__mh_dylib_header,0x14(%eax)
0000430e	movl	$__mh_dylib_header,0x18(%eax)
00004315	movl	$__mh_dylib_header,(%eax)
0000431b	jmp	0x00004324
0000431d	movl	$__mh_dylib_header,0xd4(%ebp)
00004324	movl	0x14(%ebp),%edx
00004327	movl	0xd4(%ebp),%edi
0000432a	movl	(%edx),%eax
0000432c	testl	%eax,%eax
0000432e	setne	%dl
00004331	testl	%edi,%edi
00004333	sete	%al
00004336	movl	%edx,%ecx
00004338	andl	$0x01,%ecx
0000433b	cmpb	%dl,%al
0000433d	je	0x00004356
0000433f	leal	0x00007c22(%ebx),%eax
00004345	movl	%eax,0x0c(%esp)
00004349	movl	$0x00000269,0x08(%esp)
00004351	jmp	0x0000414e
00004356	movl	0x14(%ebp),%edi
00004359	xorl	%eax,%eax
0000435b	cmpl	$__mh_dylib_header,0x04(%edi)
0000435f	setne	%al
00004362	cmpl	%eax,%ecx
00004364	je	0x0000437d
00004366	leal	0x00007c5a(%ebx),%eax
0000436c	movl	%eax,0x0c(%esp)
00004370	movl	$0x0000026a,0x08(%esp)
00004378	jmp	0x0000414e
0000437d	movl	0x14(%ebp),%eax
00004380	movl	0x08(%eax),%esi
00004383	testl	%esi,%esi
00004385	setne	%al
00004388	movzbl	%al,%eax
0000438b	cmpl	%eax,%ecx
0000438d	je	0x000043a6
0000438f	leal	0x00007caa(%ebx),%eax
00004395	movl	%eax,0x0c(%esp)
00004399	movl	$0x0000026b,0x08(%esp)
000043a1	jmp	0x0000414e
000043a6	movl	0x14(%ebp),%edx
000043a9	movl	0x18(%edx),%eax
000043ac	orl	0x14(%edx),%eax
000043af	je	0x000043c8
000043b1	leal	0x00007cf8(%ebx),%eax
000043b7	movl	%eax,0x0c(%esp)
000043bb	movl	$0x0000026c,0x08(%esp)
000043c3	jmp	0x0000414e
000043c8	movl	0xd4(%ebp),%eax
000043cb	addl	$0x3c,%esp
000043ce	popl	%ebx
000043cf	popl	%esi
000043d0	popl	%edi
000043d1	leave
000043d2	ret
_QSymGetAddressesForSymbols:
000043d3	pushl	%ebp
000043d4	movl	%esp,%ebp
000043d6	pushl	%edi
000043d7	pushl	%esi
000043d8	pushl	%ebx
000043d9	subl	$0x1c,%esp
000043dc	movl	0x08(%ebp),%esi
000043df	calll	0x000043e4
000043e4	popl	%ebx
000043e5	testl	%esi,%esi
000043e7	je	0x0000441c
000043e9	movl	0x08(%ebp),%edx
000043ec	movl	0x08(%edx),%eax
000043ef	testl	%eax,%eax
000043f1	je	0x0000441c
000043f3	movl	0x0c(%edx),%ecx
000043f6	testl	%ecx,%ecx
000043f8	je	0x0000441c
000043fa	movl	0x10(%edx),%edx
000043fd	cmpl	$0xff,%edx
00004400	je	0x00004406
00004402	cmpl	%edx,%eax
00004404	jbe	0x0000441c
00004406	movl	0x08(%ebp),%edi
00004409	movl	0x14(%edi),%edx
0000440c	cmpl	$0xff,%edx
0000440f	je	0x00004415
00004411	cmpl	%edx,%eax
00004413	jbe	0x0000441c
00004415	movl	$0x00000001,%eax
0000441a	jmp	0x0000441e
0000441c	xorl	%eax,%eax
0000441e	testb	%al,%al
00004420	movl	%eax,%ecx
00004422	je	0x0000444b
00004424	movl	0x08(%ebp),%eax
00004427	movl	$0x00000001,%ecx
0000442c	xorl	%edx,%edx
0000442e	movl	0x08(%eax),%esi
00004431	jmp	0x00004447
00004433	movl	0x08(%ebp),%edi
00004436	movl	0x0c(%edi),%eax
00004439	movl	(%eax,%edx,4),%edi
0000443c	movl	$__mh_dylib_header,%eax
00004441	testl	%edi,%edi
00004443	cmovel	%eax,%ecx
00004446	incl	%edx
00004447	cmpl	%esi,%edx
00004449	jb	0x00004433
0000444b	testb	%cl,%cl
0000444d	jne	0x00004463
0000444f	leal	0x000077e8(%ebx),%eax
00004455	movl	%eax,0x0c(%esp)
00004459	movl	$0x0000027d,0x08(%esp)
00004461	jmp	0x0000447c
00004463	movl	0x0c(%ebp),%esi
00004466	testl	%esi,%esi
00004468	jne	0x00004494
0000446a	leal	0x000079e8(%ebx),%eax
00004470	movl	%eax,0x0c(%esp)
00004474	movl	$0x0000027e,0x08(%esp)
0000447c	leal	0x000076e0(%ebx),%eax
00004482	movl	%eax,0x04(%esp)
00004486	leal	0x000075a4(%ebx),%eax
0000448c	movl	%eax,(%esp)
0000448f	calll	___eprintf
00004494	movl	0x14(%ebp),%ecx
00004497	xorl	%eax,%eax
00004499	testl	%ecx,%ecx
0000449b	jne	0x000044d0
0000449d	leal	0x000079f2(%ebx),%eax
000044a3	movl	%eax,0x0c(%esp)
000044a7	movl	$0x00000280,0x08(%esp)
000044af	jmp	0x0000447c
000044b1	movl	0x14(%ebp),%edx
000044b4	movl	(%edx,%eax,4),%edx
000044b7	testl	%edx,%edx
000044b9	jne	0x000044cf
000044bb	leal	0x00007a08(%ebx),%eax
000044c1	movl	%eax,0x0c(%esp)
000044c5	movl	$0x00000282,0x08(%esp)
000044cd	jmp	0x0000447c
000044cf	incl	%eax
000044d0	cmpl	0x0c(%ebp),%eax
000044d3	jb	0x000044b1
000044d5	movl	0x18(%ebp),%esi
000044d8	xorl	%edi,%edi
000044da	testl	%esi,%esi
000044dc	jne	0x00004522
000044de	leal	0x00007a29(%ebx),%eax
000044e4	movl	%eax,0x0c(%esp)
000044e8	movl	$0x00000284,0x08(%esp)
000044f0	jmp	0x0000447c
000044f2	movl	0x10(%ebp),%eax
000044f5	xorl	%edx,%edx
000044f7	testl	%eax,%eax
000044f9	je	0x00004501
000044fb	movl	0x10(%ebp),%ecx
000044fe	movl	(%ecx,%edi,4),%edx
00004501	movl	0x14(%ebp),%ecx
00004504	movl	%esi,0x0c(%esp)
00004508	addl	$0x1c,%esi
0000450b	movl	(%ecx,%edi,4),%eax
0000450e	incl	%edi
0000450f	movl	%edx,0x04(%esp)
00004513	movl	%eax,0x08(%esp)
00004517	movl	0x08(%ebp),%eax
0000451a	movl	%eax,(%esp)
0000451d	calll	0x000040a5
00004522	cmpl	0x0c(%ebp),%edi
00004525	jb	0x000044f2
00004527	addl	$0x1c,%esp
0000452a	xorl	%eax,%eax
0000452c	popl	%ebx
0000452d	popl	%esi
0000452e	popl	%edi
0000452f	leave
00004530	ret
_QSymGetImageForAddress:
00004531	pushl	%ebp
00004532	movl	%esp,%ebp
00004534	pushl	%edi
00004535	pushl	%esi
00004536	pushl	%ebx
00004537	subl	$0x000000cc,%esp
0000453d	movl	0x08(%ebp),%esi
00004540	movl	0x0c(%ebp),%eax
00004543	movl	0x10(%ebp),%edx
00004546	calll	0x0000454b
0000454b	popl	%ebx
0000454c	testl	%esi,%esi
0000454e	movl	%eax,0xffffff70(%ebp)
00004554	movl	%edx,0xffffff74(%ebp)
0000455a	je	0x0000458f
0000455c	movl	0x08(%ebp),%edx
0000455f	movl	0x08(%edx),%eax
00004562	testl	%eax,%eax
00004564	je	0x0000458f
00004566	movl	0x0c(%edx),%ecx
00004569	testl	%ecx,%ecx
0000456b	je	0x0000458f
0000456d	movl	0x10(%edx),%edx
00004570	cmpl	$0xff,%edx
00004573	je	0x00004579
00004575	cmpl	%edx,%eax
00004577	jbe	0x0000458f
00004579	movl	0x08(%ebp),%edi
0000457c	movl	0x14(%edi),%edx
0000457f	cmpl	$0xff,%edx
00004582	je	0x00004588
00004584	cmpl	%edx,%eax
00004586	jbe	0x0000458f
00004588	movl	$0x00000001,%eax
0000458d	jmp	0x00004591
0000458f	xorl	%eax,%eax
00004591	testb	%al,%al
00004593	movl	%eax,%ecx
00004595	je	0x000045be
00004597	movl	0x08(%ebp),%eax
0000459a	movl	$0x00000001,%ecx
0000459f	xorl	%edx,%edx
000045a1	movl	0x08(%eax),%esi
000045a4	jmp	0x000045ba
000045a6	movl	0x08(%ebp),%edi
000045a9	movl	0x0c(%edi),%eax
000045ac	movl	(%eax,%edx,4),%eax
000045af	testl	%eax,%eax
000045b1	movl	$__mh_dylib_header,%eax
000045b6	cmovel	%eax,%ecx
000045b9	incl	%edx
000045ba	cmpl	%esi,%edx
000045bc	jb	0x000045a6
000045be	testb	%cl,%cl
000045c0	jne	0x000045d6
000045c2	leal	0x00007681(%ebx),%eax
000045c8	movl	%eax,0x0c(%esp)
000045cc	movl	$0x000002a9,0x08(%esp)
000045d4	jmp	0x000045fd
000045d6	movl	0x14(%ebp),%eax
000045d9	movl	$__mh_dylib_header,0xffffff7c(%ebp)
000045e3	testl	%eax,%eax
000045e5	jne	0x000047a2
000045eb	leal	0x00007dad(%ebx),%eax
000045f1	movl	%eax,0x0c(%esp)
000045f5	movl	$0x000002aa,0x08(%esp)
000045fd	leal	0x00007579(%ebx),%eax
00004603	movl	%eax,0x04(%esp)
00004607	leal	0x0000743d(%ebx),%eax
0000460d	movl	%eax,(%esp)
00004610	calll	___eprintf
00004615	movl	0xffffff7c(%ebp),%eax
0000461b	movl	0x08(%ebp),%edx
0000461e	shll	$0x02,%eax
00004621	movl	%eax,0xffffff78(%ebp)
00004627	movl	0x0c(%edx),%eax
0000462a	movl	0xffffff78(%ebp),%ecx
00004630	movl	(%eax,%ecx),%eax
00004633	movl	%eax,(%esp)
00004636	calll	_QMOImageGetSlide
0000463b	movl	0x08(%ebp),%edi
0000463e	movl	%edx,0x84(%ebp)
00004641	movl	0xffffff78(%ebp),%edx
00004647	movl	%eax,0x80(%ebp)
0000464a	movl	0x0c(%edi),%eax
0000464d	movl	(%eax,%edx),%eax
00004650	movl	%eax,(%esp)
00004653	calll	_QMOImageGetSectionCount
00004658	movb	$__mh_dylib_header,0x97(%ebp)
0000465c	movl	$__mh_dylib_header,0x90(%ebp)
00004663	movl	%eax,0x8c(%ebp)
00004666	jmp	0x0000478a
0000466b	movl	0x90(%ebp),%ecx
0000466e	leal	0x98(%ebp),%eax
00004671	movl	0x08(%ebp),%edi
00004674	movl	%eax,0x08(%esp)
00004678	movl	0xffffff78(%ebp),%edx
0000467e	movl	%ecx,0x04(%esp)
00004682	movl	0x0c(%edi),%eax
00004685	movl	(%eax,%edx),%eax
00004688	movl	%eax,(%esp)
0000468b	calll	_QMOImageGetSectionByIndex
00004690	testl	%eax,%eax
00004692	je	0x000046ab
00004694	leal	0x000079df(%ebx),%eax
0000469a	movl	%eax,0x0c(%esp)
0000469e	movl	$0x000002b7,0x08(%esp)
000046a6	jmp	0x000045fd
000046ab	leal	0xa8(%ebp),%ecx
000046ae	movl	%ecx,0xffffff6c(%ebp)
000046b4	movl	0xffffff6c(%ebp),%esi
000046ba	leal	0x00007eaf(%ebx),%edi
000046c0	cld
000046c1	movl	%edi,0xffffff64(%ebp)
000046c7	movl	$0x00000007,%ecx
000046cc	repz/cmpsb	(%esi),(%edi)
000046ce	movl	$__mh_dylib_header,%eax
000046d3	je	0x000046df
000046d5	movzbl	0xff(%esi),%eax
000046d9	movzbl	0xff(%edi),%ecx
000046dd	subl	%ecx,%eax
000046df	testl	%eax,%eax
000046e1	je	0x00004711
000046e3	movl	0xffffff6c(%ebp),%esi
000046e9	leal	0x000078d7(%ebx),%edi
000046ef	movl	$0x00000007,%ecx
000046f4	movl	%edi,0xffffff64(%ebp)
000046fa	repz/cmpsb	(%esi),(%edi)
000046fc	movl	$__mh_dylib_header,%eax
00004701	je	0x0000470d
00004703	movzbl	0xff(%esi),%eax
00004707	movzbl	0xff(%edi),%ecx
0000470b	subl	%ecx,%eax
0000470d	testl	%eax,%eax
0000470f	jne	0x00004787
00004711	movl	0x80(%ebp),%eax
00004714	movl	0x84(%ebp),%edx
00004717	addl	0xb8(%ebp),%eax
0000471a	adcl	0xbc(%ebp),%edx
0000471d	cmpl	0xffffff74(%ebp),%edx
00004723	ja	0x0000474e
00004725	jb	0x0000472f
00004727	cmpl	0xffffff70(%ebp),%eax
0000472d	ja	0x0000474e
0000472f	addl	0xc0(%ebp),%eax
00004732	adcl	0xc4(%ebp),%edx
00004735	cmpl	%edx,0xffffff74(%ebp)
0000473b	ja	0x0000474e
0000473d	jb	0x00004747
0000473f	cmpl	%eax,0xffffff70(%ebp)
00004745	jae	0x0000474e
00004747	movl	$0x00000001,%eax
0000474c	jmp	0x00004750
0000474e	xorl	%eax,%eax
00004750	testb	%al,%al
00004752	movb	%al,0x97(%ebp)
00004755	je	0x00004787
00004757	movl	0x08(%ebp),%ecx
0000475a	movl	0xffffff78(%ebp),%edi
00004760	movl	0x14(%ebp),%edx
00004763	movl	0x0c(%ecx),%eax
00004766	movl	(%eax,%edi),%eax
00004769	movl	%eax,(%edx)
0000476b	movl	0x18(%ebp),%eax
0000476e	testl	%eax,%eax
00004770	je	0x0000477a
00004772	movl	0x90(%ebp),%edi
00004775	movl	0x18(%ebp),%ecx
00004778	movl	%edi,(%ecx)
0000477a	movl	0x14(%ebp),%edx
0000477d	xorl	%eax,%eax
0000477f	movl	(%edx),%edi
00004781	testl	%edi,%edi
00004783	jne	0x000047d2
00004785	jmp	0x000047bb
00004787	incl	0x90(%ebp)
0000478a	movl	0x8c(%ebp),%ecx
0000478d	cmpl	%ecx,0x90(%ebp)
00004790	jb	0x0000466b
00004796	cmpb	$__mh_dylib_header,0x97(%ebp)
0000479a	jne	0x0000477a
0000479c	incl	0xffffff7c(%ebp)
000047a2	movl	0x08(%ebp),%eax
000047a5	movl	0xffffff7c(%ebp),%edi
000047ab	cmpl	0x08(%eax),%edi
000047ae	jb	0x00004615
000047b4	movl	$0x00000003,%eax
000047b9	jmp	0x000047d2
000047bb	leal	0x000078e1(%ebx),%eax
000047c1	movl	%eax,0x0c(%esp)
000047c5	movl	$0x000002cf,0x08(%esp)
000047cd	jmp	0x000045fd
000047d2	addl	$0x000000cc,%esp
000047d8	popl	%ebx
000047d9	popl	%esi
000047da	popl	%edi
000047db	leave
000047dc	ret
_QSymGetSymbolForAddress:
000047dd	pushl	%ebp
000047de	movl	%esp,%ebp
000047e0	pushl	%edi
000047e1	pushl	%esi
000047e2	pushl	%ebx
000047e3	subl	$0x000000bc,%esp
000047e9	movl	0x08(%ebp),%edi
000047ec	movl	0x0c(%ebp),%eax
000047ef	movl	0x10(%ebp),%edx
000047f2	calll	0x000047f7
000047f7	popl	%ebx
000047f8	testl	%edi,%edi
000047fa	movl	%eax,0xffffff60(%ebp)
00004800	movl	%edx,0xffffff64(%ebp)
00004806	je	0x00004835
00004808	movl	0x08(%edi),%eax
0000480b	testl	%eax,%eax
0000480d	je	0x00004835
0000480f	movl	0x0c(%edi),%edx
00004812	testl	%edx,%edx
00004814	je	0x00004835
00004816	movl	0x10(%edi),%edx
00004819	cmpl	$0xff,%edx
0000481c	je	0x00004822
0000481e	cmpl	%edx,%eax
00004820	jbe	0x00004835
00004822	movl	0x14(%edi),%edx
00004825	cmpl	$0xff,%edx
00004828	je	0x0000482e
0000482a	cmpl	%edx,%eax
0000482c	jbe	0x00004835
0000482e	movl	$0x00000001,%eax
00004833	jmp	0x00004837
00004835	xorl	%eax,%eax
00004837	testb	%al,%al
00004839	movl	%eax,%ecx
0000483b	je	0x0000485e
0000483d	movl	0x08(%edi),%esi
00004840	movl	$0x00000001,%ecx
00004845	xorl	%edx,%edx
00004847	jmp	0x0000485a
00004849	movl	0x0c(%edi),%eax
0000484c	movl	(%eax,%edx,4),%eax
0000484f	testl	%eax,%eax
00004851	movl	$__mh_dylib_header,%eax
00004856	cmovel	%eax,%ecx
00004859	incl	%edx
0000485a	cmpl	%esi,%edx
0000485c	jb	0x00004849
0000485e	testb	%cl,%cl
00004860	jne	0x00004876
00004862	leal	0x000073d5(%ebx),%eax
00004868	movl	%eax,0x0c(%esp)
0000486c	movl	$0x00000329,0x08(%esp)
00004874	jmp	0x0000488f
00004876	movl	0x14(%ebp),%eax
00004879	testl	%eax,%eax
0000487b	jne	0x000048a7
0000487d	leal	0x000074cc(%ebx),%eax
00004883	movl	%eax,0x0c(%esp)
00004887	movl	$0x0000032a,0x08(%esp)
0000488f	leal	0x000072cd(%ebx),%eax
00004895	movl	%eax,0x04(%esp)
00004899	leal	0x00007191(%ebx),%eax
0000489f	movl	%eax,(%esp)
000048a2	calll	___eprintf
000048a7	movl	0x14(%ebp),%edx
000048aa	leal	0xe0(%ebp),%eax
000048ad	movl	$__mh_dylib_header,0x04(%edx)
000048b4	movl	$__mh_dylib_header,0x08(%edx)
000048bb	movl	$__mh_dylib_header,0x0c(%edx)
000048c2	movl	$__mh_dylib_header,0x10(%edx)
000048c9	movl	$__mh_dylib_header,0x14(%edx)
000048d0	movl	$__mh_dylib_header,0x18(%edx)
000048d7	movl	$__mh_dylib_header,(%edx)
000048dd	movl	0xffffff64(%ebp),%edx
000048e3	movl	%eax,0x10(%esp)
000048e7	leal	0xe4(%ebp),%eax
000048ea	movl	%eax,0x0c(%esp)
000048ee	movl	0xffffff60(%ebp),%eax
000048f4	movl	%edi,(%esp)
000048f7	movl	%edx,0x08(%esp)
000048fb	movl	%eax,0x04(%esp)
000048ff	calll	0x00004531
00004904	testl	%eax,%eax
00004906	movl	%eax,%ecx
00004908	jne	0x000049d8
0000490e	leal	0xffffff6c(%ebp),%eax
00004914	movl	%eax,0x08(%esp)
00004918	movl	0xe0(%ebp),%eax
0000491b	movl	%eax,0x04(%esp)
0000491f	movl	0xe4(%ebp),%eax
00004922	movl	%eax,(%esp)
00004925	calll	_QMOImageGetSectionByIndex
0000492a	testl	%eax,%eax
0000492c	movl	%eax,%ecx
0000492e	jne	0x000049d8
00004934	movl	0xffffff60(%ebp),%eax
0000493a	movl	0xffffff64(%ebp),%edx
00004940	movl	$__mh_dylib_header,0xc8(%ebp)
00004947	movb	$__mh_dylib_header,0xcc(%ebp)
0000494b	movl	%eax,0xbc(%ebp)
0000494e	movzbl	0xe0(%ebp),%eax
00004952	movl	%edx,0xc0(%ebp)
00004955	movl	0x98(%ebp),%edx
00004958	movl	$__mh_dylib_header,0xd0(%ebp)
0000495f	movl	$__mh_dylib_header,0xd4(%ebp)
00004966	incl	%eax
00004967	movb	%al,0xc4(%ebp)
0000496a	movl	0x94(%ebp),%eax
0000496d	movl	%edx,0xdc(%ebp)
00004970	movl	%eax,0xd8(%ebp)
00004973	leal	0xbc(%ebp),%eax
00004976	movl	%eax,0x08(%esp)
0000497a	leal	0xfffff218(%ebx),%eax
00004980	movl	%eax,0x04(%esp)
00004984	movl	0xe4(%ebp),%eax
00004987	movl	%eax,(%esp)
0000498a	calll	_QMOImageIterateSymbols
0000498f	testl	%eax,%eax
00004991	movl	%eax,%ecx
00004993	jne	0x000049d8
00004995	movl	0xc8(%ebp),%eax
00004998	testl	%eax,%eax
0000499a	jne	0x000049a0
0000499c	movb	$0x03,%cl
0000499e	jmp	0x000049d8
000049a0	movzbl	0xcc(%ebp),%eax
000049a4	movl	0x14(%ebp),%edx
000049a7	andl	$0x01,%eax
000049aa	negl	%eax
000049ac	addl	$0x02,%eax
000049af	movl	%eax,(%edx)
000049b1	movl	0xe4(%ebp),%eax
000049b4	movl	%eax,0x04(%edx)
000049b7	movl	0xc8(%ebp),%eax
000049ba	movl	%eax,0x08(%edx)
000049bd	movl	0xd0(%ebp),%eax
000049c0	movl	0xd4(%ebp),%edx
000049c3	movl	0x14(%ebp),%esi
000049c6	movl	%eax,0x0c(%esi)
000049c9	movl	%edx,0x10(%esi)
000049cc	movl	0xd8(%ebp),%eax
000049cf	movl	0xdc(%ebp),%edx
000049d2	movl	%eax,0x14(%esi)
000049d5	movl	%edx,0x18(%esi)
000049d8	movl	0x14(%ebp),%eax
000049db	movl	$0x00000001,%esi
000049e0	movl	(%eax),%eax
000049e2	testl	%eax,%eax
000049e4	setne	%dl
000049e7	testl	%ecx,%ecx
000049e9	sete	%al
000049ec	andl	%edx,%esi
000049ee	cmpb	%dl,%al
000049f0	je	0x00004a09
000049f2	leal	0x000074e1(%ebx),%eax
000049f8	movl	%eax,0x0c(%esp)
000049fc	movl	$0x00000352,0x08(%esp)
00004a04	jmp	0x0000488f
00004a09	movl	0x14(%ebp),%edx
00004a0c	xorl	%eax,%eax
00004a0e	cmpl	$__mh_dylib_header,0x04(%edx)
00004a12	setne	%al
00004a15	cmpl	%eax,%esi
00004a17	je	0x00004a30
00004a19	leal	0x00007519(%ebx),%eax
00004a1f	movl	%eax,0x0c(%esp)
00004a23	movl	$0x00000353,0x08(%esp)
00004a2b	jmp	0x0000488f
00004a30	movl	0x14(%ebp),%eax
00004a33	movl	0x08(%eax),%edi
00004a36	testl	%edi,%edi
00004a38	setne	%al
00004a3b	movzbl	%al,%eax
00004a3e	cmpl	%eax,%esi
00004a40	je	0x00004a59
00004a42	leal	0x00007569(%ebx),%eax
00004a48	movl	%eax,0x0c(%esp)
00004a4c	movl	$0x00000354,0x08(%esp)
00004a54	jmp	0x0000488f
00004a59	addl	$0x000000bc,%esp
00004a5f	movl	%ecx,%eax
00004a61	popl	%ebx
00004a62	popl	%esi
00004a63	popl	%edi
00004a64	leave
00004a65	ret
_QSymGetSymbolsForAddresses:
00004a66	pushl	%ebp
00004a67	movl	%esp,%ebp
00004a69	pushl	%edi
00004a6a	pushl	%esi
00004a6b	pushl	%ebx
00004a6c	subl	$0x1c,%esp
00004a6f	movl	0x08(%ebp),%esi
00004a72	calll	0x00004a77
00004a77	popl	%ebx
00004a78	testl	%esi,%esi
00004a7a	je	0x00004aaf
00004a7c	movl	0x08(%ebp),%edx
00004a7f	movl	0x08(%edx),%eax
00004a82	testl	%eax,%eax
00004a84	je	0x00004aaf
00004a86	movl	0x0c(%edx),%ecx
00004a89	testl	%ecx,%ecx
00004a8b	je	0x00004aaf
00004a8d	movl	0x10(%edx),%edx
00004a90	cmpl	$0xff,%edx
00004a93	je	0x00004a99
00004a95	cmpl	%edx,%eax
00004a97	jbe	0x00004aaf
00004a99	movl	0x08(%ebp),%edi
00004a9c	movl	0x14(%edi),%edx
00004a9f	cmpl	$0xff,%edx
00004aa2	je	0x00004aa8
00004aa4	cmpl	%edx,%eax
00004aa6	jbe	0x00004aaf
00004aa8	movl	$0x00000001,%eax
00004aad	jmp	0x00004ab1
00004aaf	xorl	%eax,%eax
00004ab1	testb	%al,%al
00004ab3	movl	%eax,%ecx
00004ab5	je	0x00004ade
00004ab7	movl	0x08(%ebp),%eax
00004aba	movl	$0x00000001,%ecx
00004abf	xorl	%edx,%edx
00004ac1	movl	0x08(%eax),%esi
00004ac4	jmp	0x00004ada
00004ac6	movl	0x08(%ebp),%edi
00004ac9	movl	0x0c(%edi),%eax
00004acc	movl	(%eax,%edx,4),%edi
00004acf	movl	$__mh_dylib_header,%eax
00004ad4	testl	%edi,%edi
00004ad6	cmovel	%eax,%ecx
00004ad9	incl	%edx
00004ada	cmpl	%esi,%edx
00004adc	jb	0x00004ac6
00004ade	testb	%cl,%cl
00004ae0	jne	0x00004af6
00004ae2	leal	0x00007155(%ebx),%eax
00004ae8	movl	%eax,0x0c(%esp)
00004aec	movl	$0x00000364,0x08(%esp)
00004af4	jmp	0x00004b0f
00004af6	movl	0x0c(%ebp),%esi
00004af9	testl	%esi,%esi
00004afb	jne	0x00004b27
00004afd	leal	0x00007355(%ebx),%eax
00004b03	movl	%eax,0x0c(%esp)
00004b07	movl	$0x00000365,0x08(%esp)
00004b0f	leal	0x0000704d(%ebx),%eax
00004b15	movl	%eax,0x04(%esp)
00004b19	leal	0x00006f11(%ebx),%eax
00004b1f	movl	%eax,(%esp)
00004b22	calll	___eprintf
00004b27	movl	0x10(%ebp),%ecx
00004b2a	testl	%ecx,%ecx
00004b2c	jne	0x00004b42
00004b2e	leal	0x000073da(%ebx),%eax
00004b34	movl	%eax,0x0c(%esp)
00004b38	movl	$0x00000366,0x08(%esp)
00004b40	jmp	0x00004b0f
00004b42	movl	0x14(%ebp),%esi
00004b45	xorl	%edi,%edi
00004b47	testl	%esi,%esi
00004b49	jne	0x00004b84
00004b4b	leal	0x00007396(%ebx),%eax
00004b51	movl	%eax,0x0c(%esp)
00004b55	movl	$0x00000367,0x08(%esp)
00004b5d	jmp	0x00004b0f
00004b5f	movl	0x10(%ebp),%ecx
00004b62	movl	%esi,0x0c(%esp)
00004b66	addl	$0x1c,%esi
00004b69	movl	(%ecx,%edi,8),%eax
00004b6c	movl	0x04(%ecx,%edi,8),%edx
00004b70	incl	%edi
00004b71	movl	%eax,0x04(%esp)
00004b75	movl	0x08(%ebp),%eax
00004b78	movl	%edx,0x08(%esp)
00004b7c	movl	%eax,(%esp)
00004b7f	calll	0x000047dd
00004b84	cmpl	0x0c(%ebp),%edi
00004b87	jb	0x00004b5f
00004b89	addl	$0x1c,%esp
00004b8c	xorl	%eax,%eax
00004b8e	popl	%ebx
00004b8f	popl	%esi
00004b90	popl	%edi
00004b91	leave
00004b92	ret
_QMOImageToLocalUInt64:
00004b93	pushl	%ebp
00004b94	movl	%esp,%ebp
00004b96	subl	$0x18,%esp
00004b99	movl	0x08(%ebp),%ecx
00004b9c	movl	%ebx,0xf8(%ebp)
00004b9f	movl	0x0c(%ebp),%eax
00004ba2	calll	0x00004ba7
00004ba7	popl	%ebx
00004ba8	movl	0x10(%ebp),%edx
00004bab	movl	%esi,0xfc(%ebp)
00004bae	testl	%ecx,%ecx
00004bb0	je	0x00004bc4
00004bb2	movl	0x3c(%ecx),%esi
00004bb5	testl	%esi,%esi
00004bb7	je	0x00004bc4
00004bb9	cmpl	$__mh_dylib_header,0x40(%ecx)
00004bbd	movl	$0x00000001,%esi
00004bc2	jne	0x00004bc6
00004bc4	xorl	%esi,%esi
00004bc6	testl	%esi,%esi
00004bc8	jne	0x00004bf4
00004bca	leal	0x000072b9(%ebx),%eax
00004bd0	movl	%eax,0x0c(%esp)
00004bd4	leal	0x000072dd(%ebx),%eax
00004bda	movl	%eax,0x04(%esp)
00004bde	leal	0x00006de1(%ebx),%eax
00004be4	movl	$0x000004dc,0x08(%esp)
00004bec	movl	%eax,(%esp)
00004bef	calll	___eprintf
00004bf4	cmpb	$__mh_dylib_header,0x2a(%ecx)
00004bf8	je	0x00004bff
00004bfa	bswap	%eax
00004bfc	bswap	%edx
00004bfe	xchgl	%edx,%eax
00004bff	movl	0xf8(%ebp),%ebx
00004c02	movl	0xfc(%ebp),%esi
00004c05	leave
00004c06	ret
_QMOImageDestroy:
00004c07	pushl	%ebp
00004c08	movl	%esp,%ebp
00004c0a	pushl	%edi
00004c0b	pushl	%esi
00004c0c	subl	$0x50,%esp
00004c0f	movl	0x08(%ebp),%esi
00004c12	testl	%esi,%esi
00004c14	je	0x00004d52
00004c1a	movl	0x30(%esi),%edi
00004c1d	testl	%edi,%edi
00004c1f	je	0x00004cf9
00004c25	movl	$__mh_dylib_header,0xe4(%ebp)
00004c2c	movl	$__mh_dylib_header,0xf4(%ebp)
00004c33	movl	0x30(%esi),%edx
00004c36	jmp	0x00004ce5
00004c3b	movl	0xf4(%ebp),%eax
00004c3e	addl	%edx,%eax
00004c40	movl	0x4c(%eax),%edi
00004c43	testl	%edi,%edi
00004c45	je	0x00004cde
00004c4b	cmpb	$__mh_dylib_header,0x28(%esi)
00004c4f	je	0x00004c71
00004c51	movl	0x1c(%eax),%edx
00004c54	movl	0x20(%eax),%ecx
00004c57	movl	%edx,0xd0(%ebp)
00004c5a	movl	%ecx,0xd4(%ebp)
00004c5d	movl	0x20(%esi),%edx
00004c60	movl	0x24(%esi),%ecx
00004c63	addl	%edx,0xd0(%ebp)
00004c66	adcl	%ecx,0xd4(%ebp)
00004c69	movl	0x24(%eax),%edx
00004c6c	movl	0x28(%eax),%ecx
00004c6f	jmp	0x00004c8f
00004c71	movl	0x2c(%eax),%edx
00004c74	movl	0x30(%eax),%ecx
00004c77	movl	%edx,0xd0(%ebp)
00004c7a	movl	%ecx,0xd4(%ebp)
00004c7d	movl	0x04(%esi),%edx
00004c80	movl	0x08(%esi),%ecx
00004c83	addl	%edx,0xd0(%ebp)
00004c86	adcl	%ecx,0xd4(%ebp)
00004c89	movl	0x34(%eax),%edx
00004c8c	movl	0x38(%eax),%ecx
00004c8f	movl	%edx,0xe8(%ebp)
00004c92	movl	%ecx,0xec(%ebp)
00004c95	movl	0x50(%eax),%eax
00004c98	movl	%edi,0x14(%esp)
00004c9c	movl	%eax,0x18(%esp)
00004ca0	movl	0xe8(%ebp),%eax
00004ca3	movl	0xec(%ebp),%edx
00004ca6	movl	%eax,0x0c(%esp)
00004caa	movl	%edx,0x10(%esp)
00004cae	movl	0xd0(%ebp),%edx
00004cb1	movl	0xd4(%ebp),%ecx
00004cb4	movl	%esi,(%esp)
00004cb7	movl	%edx,0x04(%esp)
00004cbb	movl	%ecx,0x08(%esp)
00004cbf	call	*0x40(%esi)
00004cc2	movl	0x30(%esi),%eax
00004cc5	movl	0xf4(%ebp),%ecx
00004cc8	movl	$__mh_dylib_header,0x4c(%eax,%ecx)
00004cd0	movl	0x30(%esi),%eax
00004cd3	movl	$__mh_dylib_header,0x50(%eax,%ecx)
00004cdb	movl	0x30(%esi),%edx
00004cde	incl	0xe4(%ebp)
00004ce1	addl	$0x54,0xf4(%ebp)
00004ce5	movl	0xe4(%ebp),%eax
00004ce8	cmpl	0x2c(%esi),%eax
00004ceb	jb	0x00004c3b
00004cf1	movl	%edx,(%esp)
00004cf4	calll	0x0000e08b	; symbol stub for: _free
00004cf9	movl	0x0c(%esi),%edx
00004cfc	testl	%edx,%edx
00004cfe	je	0x00004d2e
00004d00	movl	0x10(%esi),%eax
00004d03	movl	%edx,0x14(%esp)
00004d07	movl	%eax,0x18(%esp)
00004d0b	movl	0x14(%esi),%edx
00004d0e	movl	$__mh_dylib_header,0x10(%esp)
00004d16	movl	%edx,0x0c(%esp)
00004d1a	movl	0x04(%esi),%eax
00004d1d	movl	0x08(%esi),%edx
00004d20	movl	%esi,(%esp)
00004d23	movl	%eax,0x04(%esp)
00004d27	movl	%edx,0x08(%esp)
00004d2b	call	*0x40(%esi)
00004d2e	movl	0x44(%esi),%eax
00004d31	testl	%eax,%eax
00004d33	je	0x00004d3a
00004d35	movl	%esi,(%esp)
00004d38	call	*%eax
00004d3a	movl	(%esi),%eax
00004d3c	movl	%eax,(%esp)
00004d3f	calll	0x0000e08b	; symbol stub for: _free
00004d44	movl	%esi,0x08(%ebp)
00004d47	addl	$0x50,%esp
00004d4a	popl	%esi
00004d4b	popl	%edi
00004d4c	leave
00004d4d	jmp	0x0000e08b	; symbol stub for: _free
00004d52	addl	$0x50,%esp
00004d55	popl	%esi
00004d56	popl	%edi
00004d57	leave
00004d58	ret
_QMOFileImageMapRange:
00004d59	pushl	%ebp
00004d5a	movl	%esp,%ebp
00004d5c	subl	$0x48,%esp
00004d5f	movl	0x08(%ebp),%eax
00004d62	movl	0x0c(%ebp),%edx
00004d65	movl	0x10(%ebp),%ecx
00004d68	movl	%ebx,0xf4(%ebp)
00004d6b	calll	0x00004d70
00004d70	popl	%ebx
00004d71	testl	%eax,%eax
00004d73	movl	%edx,0xe0(%ebp)
00004d76	movl	0x14(%ebp),%edx
00004d79	movl	%ecx,0xe4(%ebp)
00004d7c	movl	0x18(%ebp),%ecx
00004d7f	movl	%esi,0xf8(%ebp)
00004d82	movl	%edi,0xfc(%ebp)
00004d85	jne	0x00004d9b
00004d87	leal	0x00006738(%ebx),%eax
00004d8d	movl	%eax,0x0c(%esp)
00004d91	movl	$0x000004f6,0x08(%esp)
00004d99	jmp	0x00004db3
00004d9b	movl	%ecx,%esi
00004d9d	orl	%edx,%esi
00004d9f	jne	0x00004dcb
00004da1	leal	0x0000714b(%ebx),%eax
00004da7	movl	%eax,0x0c(%esp)
00004dab	movl	$0x000004f7,0x08(%esp)
00004db3	leal	0x00007114(%ebx),%eax
00004db9	movl	%eax,0x04(%esp)
00004dbd	leal	0x00006c18(%ebx),%eax
00004dc3	movl	%eax,(%esp)
00004dc6	calll	___eprintf
00004dcb	movl	0x1c(%ebp),%edi
00004dce	testl	%edi,%edi
00004dd0	jne	0x00004de6
00004dd2	leal	0x00007156(%ebx),%eax
00004dd8	movl	%eax,0x0c(%esp)
00004ddc	movl	$0x000004f8,0x08(%esp)
00004de4	jmp	0x00004db3
00004de6	movl	0x1c(%ebp),%edi
00004de9	movl	(%edi),%esi
00004deb	testl	%esi,%esi
00004ded	je	0x00004e03
00004def	leal	0x00007166(%ebx),%eax
00004df5	movl	%eax,0x0c(%esp)
00004df9	movl	$0x000004f9,0x08(%esp)
00004e01	jmp	0x00004db3
00004e03	movl	0x20(%ebp),%ecx
00004e06	testl	%ecx,%ecx
00004e08	jne	0x00004e1e
00004e0a	leal	0x00007177(%ebx),%eax
00004e10	movl	%eax,0x0c(%esp)
00004e14	movl	$0x000004fa,0x08(%esp)
00004e1c	jmp	0x00004db3
00004e1e	movl	0xe0(%ebp),%esi
00004e21	movl	0xe4(%ebp),%edi
00004e24	movl	%esi,0x14(%esp)
00004e28	movl	%edi,0x18(%esp)
00004e2c	movl	0x48(%eax),%eax
00004e2f	movl	$0x00000002,0x0c(%esp)
00004e37	movl	$0x00000001,0x08(%esp)
00004e3f	movl	%edx,0x04(%esp)
00004e43	movl	%eax,0x10(%esp)
00004e47	movl	$__mh_dylib_header,(%esp)
00004e4e	calll	0x0000e0d1	; symbol stub for: _mmap
00004e53	xorl	%ecx,%ecx
00004e55	cmpl	$0xff,%eax
00004e58	jne	0x00004e63
00004e5a	calll	0x0000e04a	; symbol stub for: ___error
00004e5f	movl	(%eax),%ecx
00004e61	xorl	%eax,%eax
00004e63	movl	0x1c(%ebp),%edi
00004e66	testl	%ecx,%ecx
00004e68	sete	%dl
00004e6b	testl	%eax,%eax
00004e6d	movl	%eax,(%edi)
00004e6f	setne	%al
00004e72	xorl	%edx,%eax
00004e74	testb	$0x01,%al
00004e76	je	0x00004e8f
00004e78	leal	0x0000718c(%ebx),%eax
00004e7e	movl	%eax,0x0c(%esp)
00004e82	movl	$0x00000506,0x08(%esp)
00004e8a	jmp	0x00004db3
00004e8f	movl	0xf4(%ebp),%ebx
00004e92	movl	%ecx,%eax
00004e94	movl	0xf8(%ebp),%esi
00004e97	movl	0xfc(%ebp),%edi
00004e9a	leave
00004e9b	ret
_QMOFileImageUnmapRange:
00004e9c	pushl	%ebp
00004e9d	movl	%esp,%ebp
00004e9f	subl	$0x18,%esp
00004ea2	movl	%esi,0xfc(%ebp)
00004ea5	movl	0x08(%ebp),%esi
00004ea8	movl	%ebx,0xf8(%ebp)
00004eab	movl	0x14(%ebp),%eax
00004eae	calll	0x00004eb3
00004eb3	popl	%ebx
00004eb4	movl	0x18(%ebp),%edx
00004eb7	movl	0x1c(%ebp),%ecx
00004eba	testl	%esi,%esi
00004ebc	jne	0x00004ed2
00004ebe	leal	0x000065f5(%ebx),%eax
00004ec4	movl	%eax,0x0c(%esp)
00004ec8	movl	$0x00000519,0x08(%esp)
00004ed0	jmp	0x00004eea
00004ed2	movl	%edx,%esi
00004ed4	orl	%eax,%esi
00004ed6	jne	0x00004f02
00004ed8	leal	0x00007008(%ebx),%eax
00004ede	movl	%eax,0x0c(%esp)
00004ee2	movl	$0x0000051a,0x08(%esp)
00004eea	leal	0x00006fd1(%ebx),%eax
00004ef0	movl	%eax,0x04(%esp)
00004ef4	leal	0x00006ad5(%ebx),%eax
00004efa	movl	%eax,(%esp)
00004efd	calll	___eprintf
00004f02	testl	%ecx,%ecx
00004f04	jne	0x00004f1a
00004f06	leal	0x0000706a(%ebx),%eax
00004f0c	movl	%eax,0x0c(%esp)
00004f10	movl	$0x0000051b,0x08(%esp)
00004f18	jmp	0x00004eea
00004f1a	movl	%eax,0x04(%esp)
00004f1e	movl	%ecx,(%esp)
00004f21	calll	0x0000e0d6	; symbol stub for: _munmap
00004f26	testl	%eax,%eax
00004f28	je	0x00004f3e
00004f2a	leal	0x00007077(%ebx),%eax
00004f30	movl	%eax,0x0c(%esp)
00004f34	movl	$0x0000051e,0x08(%esp)
00004f3c	jmp	0x00004eea
00004f3e	movl	0xf8(%ebp),%ebx
00004f41	movl	0xfc(%ebp),%esi
00004f44	leave
00004f45	ret
_QMOFileImageCreate:
00004f46	pushl	%ebp
00004f47	movl	%esp,%ebp
00004f49	subl	$0x28,%esp
00004f4c	movl	%edi,0xfc(%ebp)
00004f4f	movl	0x08(%ebp),%edi
00004f52	movl	%ebx,0xf4(%ebp)
00004f55	calll	0x00004f5a
00004f5a	popl	%ebx
00004f5b	movl	%esi,0xf8(%ebp)
00004f5e	testl	%edi,%edi
00004f60	jne	0x00004f8c
00004f62	leal	0x0000654e(%ebx),%eax
00004f68	movl	%eax,0x0c(%esp)
00004f6c	leal	0x00006f2a(%ebx),%eax
00004f72	movl	%eax,0x04(%esp)
00004f76	leal	0x00006a2e(%ebx),%eax
00004f7c	movl	$0x0000052c,0x08(%esp)
00004f84	movl	%eax,(%esp)
00004f87	calll	___eprintf
00004f8c	movl	0x0c(%ebp),%eax
00004f8f	movl	%eax,(%esp)
00004f92	calll	0x0000e072	; symbol stub for: _dup
00004f97	movl	%eax,%esi
00004f99	xorl	%eax,%eax
00004f9b	testl	%esi,%esi
00004f9d	jns	0x00004fa6
00004f9f	calll	0x0000e04a	; symbol stub for: ___error
00004fa4	movl	(%eax),%eax
00004fa6	movl	%esi,0x48(%edi)
00004fa9	movl	0xf4(%ebp),%ebx
00004fac	movl	0xf8(%ebp),%esi
00004faf	movl	0xfc(%ebp),%edi
00004fb2	leave
00004fb3	ret
_QMOFileImageDestroy:
00004fb4	pushl	%ebp
00004fb5	movl	%esp,%ebp
00004fb7	pushl	%ebx
00004fb8	subl	$0x14,%esp
00004fbb	movl	0x08(%ebp),%eax
00004fbe	calll	0x00004fc3
00004fc3	popl	%ebx
00004fc4	testl	%eax,%eax
00004fc6	jne	0x00004fdc
00004fc8	leal	0x000064e5(%ebx),%eax
00004fce	movl	%eax,0x0c(%esp)
00004fd2	movl	$0x00000543,0x08(%esp)
00004fda	jmp	0x00005002
00004fdc	movl	0x48(%eax),%eax
00004fdf	cmpl	$0xff,%eax
00004fe2	je	0x0000501a
00004fe4	movl	%eax,(%esp)
00004fe7	calll	0x0000e06d	; symbol stub for: _close
00004fec	testl	%eax,%eax
00004fee	je	0x0000501a
00004ff0	leal	0x00006f67(%ebx),%eax
00004ff6	movl	%eax,0x0c(%esp)
00004ffa	movl	$0x00000549,0x08(%esp)
00005002	leal	0x00006ec1(%ebx),%eax
00005008	movl	%eax,0x04(%esp)
0000500c	leal	0x000069c5(%ebx),%eax
00005012	movl	%eax,(%esp)
00005015	calll	___eprintf
0000501a	addl	$0x14,%esp
0000501d	popl	%ebx
0000501e	leave
0000501f	ret
_QMOTaskImageMapRange:
00005020	pushl	%ebp
00005021	movl	%esp,%ebp
00005023	subl	$0x68,%esp
00005026	movl	0x08(%ebp),%eax
00005029	movl	0x0c(%ebp),%edx
0000502c	movl	0x10(%ebp),%ecx
0000502f	movl	%ebx,0xf4(%ebp)
00005032	calll	0x00005037
00005037	popl	%ebx
00005038	testl	%eax,%eax
0000503a	movl	%esi,0xf8(%ebp)
0000503d	movl	0x14(%ebp),%esi
00005040	movl	%edi,0xfc(%ebp)
00005043	movl	0x18(%ebp),%edi
00005046	movl	%edx,0xc8(%ebp)
00005049	movl	%ecx,0xcc(%ebp)
0000504c	jne	0x00005062
0000504e	leal	0x00006471(%ebx),%eax
00005054	movl	%eax,0x0c(%esp)
00005058	movl	$0x00000658,0x08(%esp)
00005060	jmp	0x0000507a
00005062	movl	%edi,%ecx
00005064	orl	%esi,%ecx
00005066	jne	0x00005092
00005068	leal	0x00006e84(%ebx),%eax
0000506e	movl	%eax,0x0c(%esp)
00005072	movl	$0x00000659,0x08(%esp)
0000507a	leal	0x00006e4d(%ebx),%eax
00005080	movl	%eax,0x04(%esp)
00005084	leal	0x00006951(%ebx),%eax
0000508a	movl	%eax,(%esp)
0000508d	calll	___eprintf
00005092	movl	0x1c(%ebp),%edi
00005095	testl	%edi,%edi
00005097	jne	0x000050ad
00005099	leal	0x00006e8f(%ebx),%eax
0000509f	movl	%eax,0x0c(%esp)
000050a3	movl	$0x0000065a,0x08(%esp)
000050ab	jmp	0x0000507a
000050ad	movl	0x1c(%ebp),%edx
000050b0	movl	(%edx),%ecx
000050b2	testl	%ecx,%ecx
000050b4	je	0x000050ca
000050b6	leal	0x00006e9f(%ebx),%eax
000050bc	movl	%eax,0x0c(%esp)
000050c0	movl	$0x0000065b,0x08(%esp)
000050c8	jmp	0x0000507a
000050ca	movl	0x20(%ebp),%edx
000050cd	testl	%edx,%edx
000050cf	jne	0x000050e5
000050d1	leal	0x00006eb0(%ebx),%eax
000050d7	movl	%eax,0x0c(%esp)
000050db	movl	$0x0000065c,0x08(%esp)
000050e3	jmp	0x0000507a
000050e5	movl	0x48(%eax),%eax
000050e8	leal	0xe4(%ebp),%ecx
000050eb	movl	0xcc(%ebp),%edx
000050ee	movl	%ecx,0xc4(%ebp)
000050f1	movl	%ecx,0x10(%esp)
000050f5	movl	%eax,0xd4(%ebp)
000050f8	movl	0xc8(%ebp),%eax
000050fb	movl	%edx,0x08(%esp)
000050ff	movl	0xd4(%ebp),%edx
00005102	movl	$__mh_dylib_header,0xe4(%ebp)
00005109	movl	%esi,0x0c(%esp)
0000510d	movl	%eax,0x04(%esp)
00005111	movl	%edx,(%esp)
00005114	calll	0x000032f6
00005119	cmpl	$0x0e,%eax
0000511c	movl	%eax,%ecx
0000511e	jne	0x00005164
00005120	movl	0xe4(%ebp),%eax
00005123	testl	%eax,%eax
00005125	je	0x0000513e
00005127	leal	0x00006efd(%ebx),%eax
0000512d	movl	%eax,0x0c(%esp)
00005131	movl	$0x0000066b,0x08(%esp)
00005139	jmp	0x0000507a
0000513e	movl	0xcc(%ebp),%edx
00005141	movl	0xc4(%ebp),%ecx
00005144	movl	0xc8(%ebp),%eax
00005147	movl	%esi,0x0c(%esp)
0000514b	movl	%edx,0x08(%esp)
0000514f	movl	0xd4(%ebp),%edx
00005152	movl	%ecx,0x10(%esp)
00005156	movl	%eax,0x04(%esp)
0000515a	movl	%edx,(%esp)
0000515d	calll	0x0000311c
00005162	movl	%eax,%ecx
00005164	testl	%ecx,%ecx
00005166	jne	0x00005179
00005168	movl	0xe4(%ebp),%eax
0000516b	movl	0x1c(%ebp),%edx
0000516e	movl	%eax,(%edx)
00005170	movl	0x20(%ebp),%eax
00005173	movl	$__mh_dylib_header,(%eax)
00005179	movl	0x1c(%ebp),%eax
0000517c	testl	%ecx,%ecx
0000517e	sete	%dl
00005181	movl	(%eax),%edi
00005183	testl	%edi,%edi
00005185	setne	%al
00005188	xorl	%edx,%eax
0000518a	testb	$0x01,%al
0000518c	je	0x000051a5
0000518e	leal	0x00006ec5(%ebx),%eax
00005194	movl	%eax,0x0c(%esp)
00005198	movl	$0x00000673,0x08(%esp)
000051a0	jmp	0x0000507a
000051a5	movl	0xf4(%ebp),%ebx
000051a8	movl	%ecx,%eax
000051aa	movl	0xf8(%ebp),%esi
000051ad	movl	0xfc(%ebp),%edi
000051b0	leave
000051b1	ret
_QMOTaskImageUnmapRange:
000051b2	pushl	%ebp
000051b3	movl	%esp,%ebp
000051b5	subl	$0x18,%esp
000051b8	movl	%esi,0xfc(%ebp)
000051bb	movl	0x08(%ebp),%esi
000051be	movl	%ebx,0xf8(%ebp)
000051c1	movl	0x14(%ebp),%eax
000051c4	calll	0x000051c9
000051c9	popl	%ebx
000051ca	movl	0x18(%ebp),%edx
000051cd	movl	0x1c(%ebp),%ecx
000051d0	testl	%esi,%esi
000051d2	jne	0x000051e8
000051d4	leal	0x000062df(%ebx),%eax
000051da	movl	%eax,0x0c(%esp)
000051de	movl	$0x00000684,0x08(%esp)
000051e6	jmp	0x00005200
000051e8	movl	%edx,%esi
000051ea	orl	%eax,%esi
000051ec	jne	0x00005218
000051ee	leal	0x00006cf2(%ebx),%eax
000051f4	movl	%eax,0x0c(%esp)
000051f8	movl	$0x00000685,0x08(%esp)
00005200	leal	0x00006cbb(%ebx),%eax
00005206	movl	%eax,0x04(%esp)
0000520a	leal	0x000067bf(%ebx),%eax
00005210	movl	%eax,(%esp)
00005213	calll	___eprintf
00005218	testl	%ecx,%ecx
0000521a	jne	0x00005230
0000521c	leal	0x00006d54(%ebx),%eax
00005222	movl	%eax,0x0c(%esp)
00005226	movl	$0x00000686,0x08(%esp)
0000522e	jmp	0x00005200
00005230	movl	%eax,0x0c(%ebp)
00005233	movl	0xf8(%ebp),%ebx
00005236	movl	%ecx,0x08(%ebp)
00005239	movl	0xfc(%ebp),%esi
0000523c	leave
0000523d	jmp	0x00002cf2
_QMOLocalImageMapRange:
00005242	pushl	%ebp
00005243	movl	%esp,%ebp
00005245	subl	$0x38,%esp
00005248	movl	%esi,0xf8(%ebp)
0000524b	movl	0x08(%ebp),%esi
0000524e	movl	0x0c(%ebp),%eax
00005251	movl	0x10(%ebp),%edx
00005254	movl	%ebx,0xf4(%ebp)
00005257	movl	0x1c(%ebp),%ecx
0000525a	calll	0x0000525f
0000525f	popl	%ebx
00005260	testl	%esi,%esi
00005262	movl	%eax,0xe0(%ebp)
00005265	movl	0x14(%ebp),%eax
00005268	movl	%edx,0xe4(%ebp)
0000526b	movl	0x18(%ebp),%edx
0000526e	movl	%edi,0xfc(%ebp)
00005271	jne	0x00005287
00005273	leal	0x00006249(%ebx),%eax
00005279	movl	%eax,0x0c(%esp)
0000527d	movl	$0x000006fc,0x08(%esp)
00005285	jmp	0x0000529f
00005287	movl	%edx,%esi
00005289	orl	%eax,%esi
0000528b	jne	0x000052b7
0000528d	leal	0x00006c5c(%ebx),%eax
00005293	movl	%eax,0x0c(%esp)
00005297	movl	$0x000006fd,0x08(%esp)
0000529f	leal	0x00006c25(%ebx),%eax
000052a5	movl	%eax,0x04(%esp)
000052a9	leal	0x00006729(%ebx),%eax
000052af	movl	%eax,(%esp)
000052b2	calll	___eprintf
000052b7	testl	%ecx,%ecx
000052b9	jne	0x000052cf
000052bb	leal	0x00006c67(%ebx),%eax
000052c1	movl	%eax,0x0c(%esp)
000052c5	movl	$0x000006fe,0x08(%esp)
000052cd	jmp	0x0000529f
000052cf	movl	(%ecx),%eax
000052d1	testl	%eax,%eax
000052d3	je	0x000052e9
000052d5	leal	0x00006c77(%ebx),%eax
000052db	movl	%eax,0x0c(%esp)
000052df	movl	$0x000006ff,0x08(%esp)
000052e7	jmp	0x0000529f
000052e9	movl	0x20(%ebp),%eax
000052ec	testl	%eax,%eax
000052ee	jne	0x00005304
000052f0	leal	0x00006c88(%ebx),%eax
000052f6	movl	%eax,0x0c(%esp)
000052fa	movl	$dyld_stub_binding_helper,0x08(%esp)
00005302	jmp	0x0000529f
00005304	movl	0xe0(%ebp),%eax
00005307	movl	%eax,(%ecx)
00005309	movl	0x20(%ebp),%edx
0000530c	movl	$__mh_dylib_header,(%edx)
00005312	movl	(%ecx),%edi
00005314	testl	%edi,%edi
00005316	jne	0x0000532f
00005318	leal	0x00006c9d(%ebx),%eax
0000531e	movl	%eax,0x0c(%esp)
00005322	movl	$0x00000706,0x08(%esp)
0000532a	jmp	0x0000529f
0000532f	movl	0xf4(%ebp),%ebx
00005332	xorl	%eax,%eax
00005334	movl	0xf8(%ebp),%esi
00005337	movl	0xfc(%ebp),%edi
0000533a	leave
0000533b	ret
_QMOLocalImageUnmapRange:
0000533c	pushl	%ebp
0000533d	movl	%esp,%ebp
0000533f	pushl	%ebx
00005340	subl	$0x14,%esp
00005343	movl	0x08(%ebp),%ecx
00005346	calll	0x0000534b
0000534b	popl	%ebx
0000534c	movl	0x14(%ebp),%eax
0000534f	movl	0x18(%ebp),%edx
00005352	testl	%ecx,%ecx
00005354	jne	0x0000536a
00005356	leal	0x0000615d(%ebx),%eax
0000535c	movl	%eax,0x0c(%esp)
00005360	movl	$0x00000717,0x08(%esp)
00005368	jmp	0x00005382
0000536a	movl	%edx,%ecx
0000536c	orl	%eax,%ecx
0000536e	jne	0x0000539a
00005370	leal	0x00006b70(%ebx),%eax
00005376	movl	%eax,0x0c(%esp)
0000537a	movl	$0x00000718,0x08(%esp)
00005382	leal	0x00006b39(%ebx),%eax
00005388	movl	%eax,0x04(%esp)
0000538c	leal	0x0000663d(%ebx),%eax
00005392	movl	%eax,(%esp)
00005395	calll	___eprintf
0000539a	movl	0x1c(%ebp),%eax
0000539d	testl	%eax,%eax
0000539f	jne	0x000053b5
000053a1	leal	0x00006bd2(%ebx),%eax
000053a7	movl	%eax,0x0c(%esp)
000053ab	movl	$0x00000719,0x08(%esp)
000053b3	jmp	0x00005382
000053b5	addl	$0x14,%esp
000053b8	popl	%ebx
000053b9	leave
000053ba	ret
_QMOImageToLocalUInt8:
000053bb	pushl	%ebp
000053bc	movl	%esp,%ebp
000053be	pushl	%ebx
000053bf	subl	$0x14,%esp
000053c2	movl	0x08(%ebp),%edx
000053c5	calll	0x000053ca
000053ca	popl	%ebx
000053cb	movzbl	0x0c(%ebp),%eax
000053cf	testl	%edx,%edx
000053d1	je	0x000053e6
000053d3	movl	0x3c(%edx),%ecx
000053d6	testl	%ecx,%ecx
000053d8	je	0x000053e6
000053da	movl	0x40(%edx),%edx
000053dd	movl	$0x00000001,%ecx
000053e2	testl	%edx,%edx
000053e4	jne	0x000053e8
000053e6	xorl	%ecx,%ecx
000053e8	testl	%ecx,%ecx
000053ea	jne	0x00005416
000053ec	leal	0x00006a96(%ebx),%eax
000053f2	movl	%eax,0x0c(%esp)
000053f6	leal	0x00006aba(%ebx),%eax
000053fc	movl	%eax,0x04(%esp)
00005400	leal	0x000065be(%ebx),%eax
00005406	movl	$0x000004be,0x08(%esp)
0000540e	movl	%eax,(%esp)
00005411	calll	___eprintf
00005416	addl	$0x14,%esp
00005419	movzbl	%al,%eax
0000541c	popl	%ebx
0000541d	leave
0000541e	ret
_QMOImageToLocalUInt16:
0000541f	pushl	%ebp
00005420	movl	%esp,%ebp
00005422	pushl	%ebx
00005423	subl	$0x14,%esp
00005426	movl	0x08(%ebp),%ecx
00005429	calll	0x0000542e
0000542e	popl	%ebx
0000542f	movzwl	0x0c(%ebp),%edx
00005433	testl	%ecx,%ecx
00005435	je	0x00005449
00005437	movl	0x3c(%ecx),%eax
0000543a	testl	%eax,%eax
0000543c	je	0x00005449
0000543e	cmpl	$__mh_dylib_header,0x40(%ecx)
00005442	movl	$0x00000001,%eax
00005447	jne	0x0000544b
00005449	xorl	%eax,%eax
0000544b	testl	%eax,%eax
0000544d	jne	0x00005479
0000544f	leal	0x00006a32(%ebx),%eax
00005455	movl	%eax,0x0c(%esp)
00005459	leal	0x00006a56(%ebx),%eax
0000545f	movl	%eax,0x04(%esp)
00005463	leal	0x0000655a(%ebx),%eax
00005469	movl	$0x000004c6,0x08(%esp)
00005471	movl	%eax,(%esp)
00005474	calll	___eprintf
00005479	movl	%edx,%eax
0000547b	rolw	$0x08,%ax
0000547f	cmpb	$__mh_dylib_header,0x2a(%ecx)
00005483	cmovnel	%eax,%edx
00005486	addl	$0x14,%esp
00005489	popl	%ebx
0000548a	movzwl	%dx,%eax
0000548d	leave
0000548e	ret
_QMOImageToLocalUInt32:
0000548f	pushl	%ebp
00005490	movl	%esp,%ebp
00005492	pushl	%ebx
00005493	subl	$0x14,%esp
00005496	movl	0x08(%ebp),%edx
00005499	calll	0x0000549e
0000549e	popl	%ebx
0000549f	movl	0x0c(%ebp),%eax
000054a2	testl	%edx,%edx
000054a4	je	0x000054b8
000054a6	movl	0x3c(%edx),%ecx
000054a9	testl	%ecx,%ecx
000054ab	je	0x000054b8
000054ad	cmpl	$__mh_dylib_header,0x40(%edx)
000054b1	movl	$0x00000001,%ecx
000054b6	jne	0x000054ba
000054b8	xorl	%ecx,%ecx
000054ba	testl	%ecx,%ecx
000054bc	jne	0x000054e8
000054be	leal	0x000069c2(%ebx),%eax
000054c4	movl	%eax,0x0c(%esp)
000054c8	leal	0x000069e6(%ebx),%eax
000054ce	movl	%eax,0x04(%esp)
000054d2	leal	0x000064ea(%ebx),%eax
000054d8	movl	$0x000004d1,0x08(%esp)
000054e0	movl	%eax,(%esp)
000054e3	calll	___eprintf
000054e8	cmpb	$__mh_dylib_header,0x2a(%edx)
000054ec	je	0x000054f0
000054ee	bswap	%eax
000054f0	addl	$0x14,%esp
000054f3	popl	%ebx
000054f4	leave
000054f5	ret
_FindLoadCommand:
000054f6	pushl	%ebp
000054f7	movl	%esp,%ebp
000054f9	pushl	%edi
000054fa	movl	%eax,%edi
000054fc	pushl	%esi
000054fd	pushl	%ebx
000054fe	subl	$0x4c,%esp
00005501	calll	0x00005506
00005506	popl	%ebx
00005507	testl	%eax,%eax
00005509	movl	%edx,0xd0(%ebp)
0000550c	movl	%ecx,0xcc(%ebp)
0000550f	jne	0x00005525
00005511	leal	0x00005fa2(%ebx),%eax
00005517	movl	%eax,0x0c(%esp)
0000551b	movl	$0x00000164,0x08(%esp)
00005523	jmp	0x0000553e
00005525	movl	0x0c(%eax),%eax
00005528	testl	%eax,%eax
0000552a	jne	0x00005556
0000552c	leal	0x00006a3b(%ebx),%eax
00005532	movl	%eax,0x0c(%esp)
00005536	movl	$0x00000165,0x08(%esp)
0000553e	leal	0x0000697e(%ebx),%eax
00005544	movl	%eax,0x04(%esp)
00005548	leal	0x00006482(%ebx),%eax
0000554e	movl	%eax,(%esp)
00005551	calll	___eprintf
00005556	movl	0xd0(%ebp),%edx
00005559	testl	%edx,%edx
0000555b	jne	0x00005571
0000555d	leal	0x00006a58(%ebx),%eax
00005563	movl	%eax,0x0c(%esp)
00005567	movl	$0x00000166,0x08(%esp)
0000556f	jmp	0x0000553e
00005571	movl	0x10(%eax),%eax
00005574	movl	%edi,(%esp)
00005577	movl	%eax,0x04(%esp)
0000557b	calll	0x0000548f
00005580	cmpb	$__mh_dylib_header,0x29(%edi)
00005584	movl	%eax,0xd8(%ebp)
00005587	je	0x00005591
00005589	movl	0x0c(%edi),%eax
0000558c	leal	0x20(%eax),%edx
0000558f	jmp	0x00005597
00005591	movl	0x0c(%edi),%eax
00005594	leal	0x1c(%eax),%edx
00005597	movl	%edx,0xdc(%ebp)
0000559a	movl	0xdc(%ebp),%esi
0000559d	leal	0x00006482(%ebx),%edx
000055a3	addl	0x14(%edi),%eax
000055a6	movl	$__mh_dylib_header,0xe4(%ebp)
000055ad	movl	$__mh_dylib_header,0xd4(%ebp)
000055b4	movl	%eax,0xe0(%ebp)
000055b7	leal	0x0000697e(%ebx),%eax
000055bd	movl	%eax,0xc8(%ebp)
000055c0	movl	%edx,0xc4(%ebp)
000055c3	jmp	0x00005663
000055c8	movl	0x04(%esi),%eax
000055cb	movl	%edi,(%esp)
000055ce	movl	%eax,0x04(%esp)
000055d2	calll	0x0000548f
000055d7	cmpl	0xdc(%ebp),%esi
000055da	jae	0x000055f0
000055dc	leal	0x00006a6e(%ebx),%eax
000055e2	movl	%eax,0x0c(%esp)
000055e6	movl	$0x0000017f,0x08(%esp)
000055ee	jmp	0x00005623
000055f0	cmpl	%esi,0xe0(%ebp)
000055f3	ja	0x00005609
000055f5	leal	0x00006aae(%ebx),%eax
000055fb	movl	%eax,0x0c(%esp)
000055ff	movl	$0x00000180,0x08(%esp)
00005607	jmp	0x00005623
00005609	leal	(%esi,%eax),%eax
0000560c	cmpl	%eax,0xe0(%ebp)
0000560f	jae	0x00005635
00005611	leal	0x00006ada(%ebx),%eax
00005617	movl	%eax,0x0c(%esp)
0000561b	movl	$0x00000181,0x08(%esp)
00005623	movl	0xc8(%ebp),%eax
00005626	movl	0xc4(%ebp),%edx
00005629	movl	%eax,0x04(%esp)
0000562d	movl	%edx,(%esp)
00005630	jmp	0x00005551
00005635	movl	0xcc(%ebp),%eax
00005638	movl	%esi,0x04(%esp)
0000563c	movl	%edi,(%esp)
0000563f	movl	%eax,0x08(%esp)
00005643	call	*0xd0(%ebp)
00005646	testb	%al,%al
00005648	je	0x0000564f
0000564a	movl	%esi,0xe4(%ebp)
0000564d	jmp	0x00005663
0000564f	movl	0x04(%esi),%eax
00005652	movl	%edi,(%esp)
00005655	movl	%eax,0x04(%esp)
00005659	calll	0x0000548f
0000565e	incl	0xd4(%ebp)
00005661	addl	%eax,%esi
00005663	movl	0xe4(%ebp),%eax
00005666	testl	%eax,%eax
00005668	movl	0xd8(%ebp),%eax
0000566b	sete	%dl
0000566e	cmpl	%eax,0xd4(%ebp)
00005671	setb	%al
00005674	testb	%al,%dl
00005676	jne	0x000055c8
0000567c	movl	0xe4(%ebp),%eax
0000567f	addl	$0x4c,%esp
00005682	popl	%ebx
00005683	popl	%esi
00005684	popl	%edi
00005685	leave
00005686	ret
_InitSegment:
00005687	pushl	%ebp
00005688	movl	%esp,%ebp
0000568a	pushl	%edi
0000568b	pushl	%esi
0000568c	pushl	%ebx
0000568d	subl	$0x2c,%esp
00005690	movl	0x08(%ebp),%eax
00005693	calll	0x00005698
00005698	popl	%ebx
00005699	testl	%eax,%eax
0000569b	jne	0x000056b1
0000569d	leal	0x00005e10(%ebx),%eax
000056a3	movl	%eax,0x0c(%esp)
000056a7	movl	$0x00000203,0x08(%esp)
000056af	jmp	0x000056ca
000056b1	movl	0x0c(%ebp),%edi
000056b4	testl	%edi,%edi
000056b6	jne	0x000056e2
000056b8	leal	0x00006989(%ebx),%eax
000056be	movl	%eax,0x0c(%esp)
000056c2	movl	$0x00000204,0x08(%esp)
000056ca	leal	0x000067ec(%ebx),%eax
000056d0	movl	%eax,0x04(%esp)
000056d4	leal	0x000062f0(%ebx),%eax
000056da	movl	%eax,(%esp)
000056dd	calll	___eprintf
000056e2	movl	0x10(%ebp),%esi
000056e5	testl	%esi,%esi
000056e7	jne	0x000056fd
000056e9	leal	0x00006995(%ebx),%eax
000056ef	movl	%eax,0x0c(%esp)
000056f3	movl	$0x00000205,0x08(%esp)
000056fb	jmp	0x000056ca
000056fd	movl	0x08(%ebp),%eax
00005700	movl	0x30(%eax),%ecx
00005703	testl	%ecx,%ecx
00005705	jne	0x0000571b
00005707	leal	0x000069ab(%ebx),%eax
0000570d	movl	%eax,0x0c(%esp)
00005711	movl	$0x00000206,0x08(%esp)
00005719	jmp	0x000056ca
0000571b	movl	0x0c(%ebp),%edx
0000571e	movl	0x08(%ebp),%ecx
00005721	movl	(%edx),%eax
00005723	movl	%ecx,(%esp)
00005726	movl	%eax,0x04(%esp)
0000572a	calll	0x0000548f
0000572f	cmpl	$0x19,%eax
00005732	sete	%cl
00005735	decl	%eax
00005736	sete	%al
00005739	orb	%cl,%al
0000573b	je	0x000059df
00005741	movl	0x10(%ebp),%esi
00005744	movl	0x08(%ebp),%eax
00005747	movl	(%esi),%edx
00005749	cmpl	0x2c(%eax),%edx
0000574c	jb	0x00005765
0000574e	leal	0x000069c8(%ebx),%eax
00005754	movl	%eax,0x0c(%esp)
00005758	movl	$0x0000020e,0x08(%esp)
00005760	jmp	0x000056ca
00005765	movl	0x08(%ebp),%esi
00005768	imull	$0x54,%edx,%edx
0000576b	movl	0x30(%esi),%eax
0000576e	movl	0x0c(%ebp),%esi
00005771	movl	%esi,(%edx,%eax)
00005774	movl	0x10(%ebp),%edx
00005777	movl	(%edx),%eax
00005779	movl	0x08(%ebp),%edx
0000577c	imull	$0x54,%eax,%esi
0000577f	incl	%eax
00005780	addl	0x30(%edx),%esi
00005783	testb	%cl,%cl
00005785	movl	0x10(%ebp),%edx
00005788	leal	0x04(%esi),%edi
0000578b	movl	%eax,(%edx)
0000578d	je	0x000058bf
00005793	movl	0x0c(%ebp),%ecx
00005796	movl	(%ecx),%eax
00005798	movl	%eax,0x04(%esp)
0000579c	movl	0x08(%ebp),%eax
0000579f	movl	%eax,(%esp)
000057a2	calll	0x0000548f
000057a7	movl	%eax,0x04(%esi)
000057aa	movl	0x0c(%ebp),%edx
000057ad	movl	0x08(%ebp),%ecx
000057b0	movl	0x04(%edx),%eax
000057b3	movl	%ecx,(%esp)
000057b6	movl	%eax,0x04(%esp)
000057ba	calll	0x0000548f
000057bf	leal	0x0c(%esi),%ecx
000057c2	movl	%eax,0x04(%edi)
000057c5	movl	0x0c(%ebp),%eax
000057c8	movl	0x0c(%ebp),%edx
000057cb	movl	0x08(%eax),%eax
000057ce	addl	$0x08,%edx
000057d1	movl	%eax,0x0c(%esi)
000057d4	movl	0x04(%edx),%eax
000057d7	movl	%eax,0x04(%ecx)
000057da	movl	0x08(%edx),%eax
000057dd	movl	%eax,0x08(%ecx)
000057e0	movl	0x0c(%edx),%eax
000057e3	movl	%eax,0x0c(%ecx)
000057e6	movl	0x0c(%ebp),%ecx
000057e9	movl	0x08(%ebp),%esi
000057ec	movl	0x18(%ecx),%eax
000057ef	movl	0x1c(%ecx),%edx
000057f2	movl	%esi,(%esp)
000057f5	movl	%eax,0x04(%esp)
000057f9	movl	%edx,0x08(%esp)
000057fd	calll	0x00004b93
00005802	movl	%eax,0x18(%edi)
00005805	movl	%edx,0x1c(%edi)
00005808	movl	0x0c(%ebp),%ecx
0000580b	movl	0x20(%ecx),%eax
0000580e	movl	0x24(%ecx),%edx
00005811	movl	%esi,(%esp)
00005814	movl	%eax,0x04(%esp)
00005818	movl	%edx,0x08(%esp)
0000581c	calll	0x00004b93
00005821	movl	%eax,0x20(%edi)
00005824	movl	%edx,0x24(%edi)
00005827	movl	0x0c(%ebp),%esi
0000582a	movl	0x28(%esi),%eax
0000582d	movl	0x2c(%esi),%edx
00005830	movl	%eax,0x04(%esp)
00005834	movl	0x08(%ebp),%eax
00005837	movl	%edx,0x08(%esp)
0000583b	movl	%eax,(%esp)
0000583e	calll	0x00004b93
00005843	movl	%eax,0x28(%edi)
00005846	movl	%edx,0x2c(%edi)
00005849	movl	0x0c(%ebp),%ecx
0000584c	movl	0x08(%ebp),%esi
0000584f	movl	0x30(%ecx),%eax
00005852	movl	0x34(%ecx),%edx
00005855	movl	%esi,(%esp)
00005858	movl	%eax,0x04(%esp)
0000585c	movl	%edx,0x08(%esp)
00005860	calll	0x00004b93
00005865	movl	%eax,0x30(%edi)
00005868	movl	%edx,0x34(%edi)
0000586b	movl	0x0c(%ebp),%edx
0000586e	movl	0x38(%edx),%eax
00005871	movl	%esi,(%esp)
00005874	movl	%eax,0x04(%esp)
00005878	calll	0x0000548f
0000587d	movl	%eax,0x38(%edi)
00005880	movl	0x0c(%ebp),%ecx
00005883	movl	0x3c(%ecx),%eax
00005886	movl	%esi,(%esp)
00005889	movl	%eax,0x04(%esp)
0000588d	calll	0x0000548f
00005892	movl	%eax,0x3c(%edi)
00005895	movl	0x0c(%ebp),%esi
00005898	movl	0x40(%esi),%eax
0000589b	movl	%eax,0x04(%esp)
0000589f	movl	0x08(%ebp),%eax
000058a2	movl	%eax,(%esp)
000058a5	calll	0x0000548f
000058aa	movl	%eax,0x40(%edi)
000058ad	movl	0x44(%esi),%eax
000058b0	movl	0x08(%ebp),%edx
000058b3	movl	%eax,0x04(%esp)
000058b7	movl	%edx,(%esp)
000058ba	jmp	0x000059d7
000058bf	movl	0x0c(%ebp),%ecx
000058c2	movl	(%ecx),%eax
000058c4	movl	%eax,0x04(%esp)
000058c8	movl	0x08(%ebp),%eax
000058cb	movl	%eax,(%esp)
000058ce	calll	0x0000548f
000058d3	movl	%eax,0x04(%esi)
000058d6	movl	0x0c(%ebp),%edx
000058d9	movl	0x08(%ebp),%ecx
000058dc	movl	0x04(%edx),%eax
000058df	movl	%ecx,(%esp)
000058e2	movl	%eax,0x04(%esp)
000058e6	calll	0x0000548f
000058eb	leal	0x0c(%esi),%ecx
000058ee	movl	%eax,0x04(%edi)
000058f1	movl	0x0c(%ebp),%eax
000058f4	movl	0x0c(%ebp),%edx
000058f7	movl	0x08(%eax),%eax
000058fa	addl	$0x08,%edx
000058fd	movl	%eax,0x0c(%esi)
00005900	movl	0x04(%edx),%eax
00005903	movl	%eax,0x04(%ecx)
00005906	movl	0x08(%edx),%eax
00005909	movl	%eax,0x08(%ecx)
0000590c	movl	0x0c(%edx),%eax
0000590f	movl	%eax,0x0c(%ecx)
00005912	movl	0x0c(%ebp),%edx
00005915	movl	0x08(%ebp),%ecx
00005918	movl	0x18(%edx),%eax
0000591b	movl	%ecx,(%esp)
0000591e	movl	%eax,0x04(%esp)
00005922	calll	0x0000548f
00005927	movl	$__mh_dylib_header,0x1c(%edi)
0000592e	movl	%eax,0x18(%edi)
00005931	movl	0x0c(%ebp),%esi
00005934	movl	0x1c(%esi),%eax
00005937	movl	%eax,0x04(%esp)
0000593b	movl	0x08(%ebp),%eax
0000593e	movl	%eax,(%esp)
00005941	calll	0x0000548f
00005946	movl	$__mh_dylib_header,0x24(%edi)
0000594d	movl	%eax,0x20(%edi)
00005950	movl	0x08(%ebp),%edx
00005953	movl	0x20(%esi),%eax
00005956	movl	%edx,(%esp)
00005959	movl	%eax,0x04(%esp)
0000595d	calll	0x0000548f
00005962	movl	$__mh_dylib_header,0x2c(%edi)
00005969	movl	%eax,0x28(%edi)
0000596c	movl	0x08(%ebp),%ecx
0000596f	movl	0x24(%esi),%eax
00005972	movl	%ecx,(%esp)
00005975	movl	%eax,0x04(%esp)
00005979	calll	0x0000548f
0000597e	movl	$__mh_dylib_header,0x34(%edi)
00005985	movl	%eax,0x30(%edi)
00005988	movl	0x28(%esi),%eax
0000598b	movl	0x08(%ebp),%esi
0000598e	movl	%eax,0x04(%esp)
00005992	movl	%esi,(%esp)
00005995	calll	0x0000548f
0000599a	movl	%eax,0x38(%edi)
0000599d	movl	0x0c(%ebp),%edx
000059a0	movl	0x2c(%edx),%eax
000059a3	movl	%esi,(%esp)
000059a6	movl	%eax,0x04(%esp)
000059aa	calll	0x0000548f
000059af	movl	%eax,0x3c(%edi)
000059b2	movl	0x0c(%ebp),%ecx
000059b5	movl	0x30(%ecx),%eax
000059b8	movl	%esi,(%esp)
000059bb	movl	%eax,0x04(%esp)
000059bf	calll	0x0000548f
000059c4	movl	%eax,0x40(%edi)
000059c7	movl	0x0c(%ebp),%esi
000059ca	movl	0x34(%esi),%eax
000059cd	movl	%eax,0x04(%esp)
000059d1	movl	0x08(%ebp),%eax
000059d4	movl	%eax,(%esp)
000059d7	calll	0x0000548f
000059dc	movl	%eax,0x44(%edi)
000059df	addl	$0x2c,%esp
000059e2	xorl	%eax,%eax
000059e4	popl	%ebx
000059e5	popl	%esi
000059e6	popl	%edi
000059e7	leave
000059e8	ret
_CountSegmentsAndSections:
000059e9	pushl	%ebp
000059ea	movl	%esp,%ebp
000059ec	subl	$0x28,%esp
000059ef	movl	%edi,0xfc(%ebp)
000059f2	movl	0x08(%ebp),%edi
000059f5	movl	%ebx,0xf4(%ebp)
000059f8	calll	0x000059fd
000059fd	popl	%ebx
000059fe	movl	%esi,0xf8(%ebp)
00005a01	testl	%edi,%edi
00005a03	jne	0x00005a19
00005a05	leal	0x00005aab(%ebx),%eax
00005a0b	movl	%eax,0x0c(%esp)
00005a0f	movl	$0x000001e7,0x08(%esp)
00005a17	jmp	0x00005a32
00005a19	movl	0x0c(%ebp),%eax
00005a1c	testl	%eax,%eax
00005a1e	jne	0x00005a4a
00005a20	leal	0x00006624(%ebx),%eax
00005a26	movl	%eax,0x0c(%esp)
00005a2a	movl	$0x000001e8,0x08(%esp)
00005a32	leal	0x00006487(%ebx),%eax
00005a38	movl	%eax,0x04(%esp)
00005a3c	leal	0x00005f8b(%ebx),%eax
00005a42	movl	%eax,(%esp)
00005a45	calll	___eprintf
00005a4a	movl	0x10(%ebp),%eax
00005a4d	testl	%eax,%eax
00005a4f	je	0x00005a65
00005a51	leal	0x00006685(%ebx),%eax
00005a57	movl	%eax,0x0c(%esp)
00005a5b	movl	$0x000001e9,0x08(%esp)
00005a63	jmp	0x00005a32
00005a65	movl	0x0c(%ebp),%edx
00005a68	movl	(%edx),%eax
00005a6a	movl	%edi,(%esp)
00005a6d	movl	%eax,0x04(%esp)
00005a71	calll	0x0000548f
00005a76	cmpl	$0x19,%eax
00005a79	sete	%dl
00005a7c	decl	%eax
00005a7d	sete	%al
00005a80	orb	%dl,%al
00005a82	je	0x00005ab0
00005a84	incl	0x2c(%edi)
00005a87	testb	%dl,%dl
00005a89	je	0x00005a96
00005a8b	movl	0x0c(%ebp),%edx
00005a8e	movl	0x34(%edi),%esi
00005a91	movl	0x40(%edx),%eax
00005a94	jmp	0x00005a9f
00005a96	movl	0x0c(%ebp),%edx
00005a99	movl	0x34(%edi),%esi
00005a9c	movl	0x30(%edx),%eax
00005a9f	movl	%eax,0x04(%esp)
00005aa3	movl	%edi,(%esp)
00005aa6	calll	0x0000548f
00005aab	addl	%eax,%esi
00005aad	movl	%esi,0x34(%edi)
00005ab0	movl	0xf4(%ebp),%ebx
00005ab3	xorl	%eax,%eax
00005ab5	movl	0xf8(%ebp),%esi
00005ab8	movl	0xfc(%ebp),%edi
00005abb	leave
00005abc	ret
_QMOGetLocalCPUType:
00005abd	pushl	%ebp
00005abe	movl	%esp,%ebp
00005ac0	pushl	%ebx
00005ac1	calll	0x00005ac6
00005ac6	popl	%ebx
00005ac7	subl	$0x04,%esp
00005aca	movl	0x000076ba(%ebx),%eax
00005ad0	testl	%eax,%eax
00005ad2	jne	0x00005adf
00005ad4	calll	0x0000e045	; symbol stub for: _NXGetLocalArchInfo
00005ad9	movl	%eax,0x000076ba(%ebx)
00005adf	movl	0x000076ba(%ebx),%eax
00005ae5	movl	0x04(%eax),%eax
00005ae8	addl	$0x04,%esp
00005aeb	popl	%ebx
00005aec	leave
00005aed	ret
_IsDyldAtAddress:
00005aee	pushl	%ebp
00005aef	movl	%eax,%ecx
00005af1	movl	%esp,%ebp
00005af3	subl	$0x68,%esp
00005af6	movl	%ebx,0xf4(%ebp)
00005af9	calll	0x00005afe
00005afe	popl	%ebx
00005aff	testl	%eax,%eax
00005b01	movl	%esi,0xf8(%ebp)
00005b04	movl	0x08(%ebp),%esi
00005b07	movl	%edi,0xfc(%ebp)
00005b0a	movl	0x0c(%ebp),%edi
00005b0d	movl	%edx,0xc0(%ebp)
00005b10	jne	0x00005b3c
00005b12	leal	0x00005a0e(%ebx),%eax
00005b18	movl	%eax,0x0c(%esp)
00005b1c	leal	0x00006386(%ebx),%eax
00005b22	movl	%eax,0x04(%esp)
00005b26	leal	0x00005e8a(%ebx),%eax
00005b2c	movl	$0x000007cd,0x08(%esp)
00005b34	movl	%eax,(%esp)
00005b37	calll	___eprintf
00005b3c	movl	0x10(%ebp),%eax
00005b3f	andl	$0x05,%eax
00005b42	cmpl	$0x05,%eax
00005b45	jne	0x00005d64
00005b4b	leal	0xcc(%ebp),%eax
00005b4e	movl	%eax,0x10(%esp)
00005b52	movl	$0x0000001c,0x0c(%esp)
00005b5a	movl	%esi,0x04(%esp)
00005b5e	movl	%edi,0x08(%esp)
00005b62	movl	%ecx,(%esp)
00005b65	calll	0x00002f7c
00005b6a	testl	%eax,%eax
00005b6c	movl	%eax,0xc4(%ebp)
00005b6f	jne	0x00005d1d
00005b75	movl	0xcc(%ebp),%ecx
00005b78	leal	0x01120532(%ecx),%eax
00005b7e	cmpl	$0x01,%eax
00005b81	jbe	0x00005bad
00005b83	cmpl	$0xcefaedfe,%ecx
00005b89	sete	%dl
00005b8c	cmpl	$0xcffaedfe,%ecx
00005b92	sete	%al
00005b95	orb	%al,%dl
00005b97	je	0x00005dc4
00005b9d	movl	0xd8(%ebp),%eax
00005ba0	bswap	%eax
00005ba2	movl	%eax,0xd8(%ebp)
00005ba5	movl	0xd0(%ebp),%eax
00005ba8	bswap	%eax
00005baa	movl	%eax,0xd0(%ebp)
00005bad	cmpl	$0x07,0xd8(%ebp)
00005bb1	jne	0x00005c84
00005bb7	cmpl	$0xff,0xc0(%ebp)
00005bbb	je	0x00005bc9
00005bbd	movl	0xc0(%ebp),%eax
00005bc0	cmpl	0xd0(%ebp),%eax
00005bc3	jne	0x00005dd6
00005bc9	cmpb	$__mh_dylib_header,0x00007687(%ebx)
00005bd0	jne	0x00005bf0
00005bd2	leal	0x0000659d(%ebx),%eax
00005bd8	movl	%eax,(%esp)
00005bdb	calll	0x0000e095	; symbol stub for: _getenv
00005be0	movb	$0x01,0x00007687(%ebx)
00005be7	testl	%eax,%eax
00005be9	setne	0x00007686(%ebx)
00005bf0	cmpb	$__mh_dylib_header,0x00007686(%ebx)
00005bf7	movl	$0x00000001,%eax
00005bfc	je	0x00005de8
00005c02	movl	0xd0(%ebp),%eax
00005c05	movl	%esi,0x08(%esp)
00005c09	movl	%edi,0x0c(%esp)
00005c0d	movl	%eax,0x10(%esp)
00005c11	leal	0x000065ba(%ebx),%eax
00005c17	movl	%eax,0x04(%esp)
00005c1b	movl	0x00008506(%ebx),%eax
00005c21	addl	$0x000000b0,%eax
00005c26	movl	%eax,(%esp)
00005c29	calll	0x0000e081	; symbol stub for: _fprintf
00005c2e	movl	$0x00000001,%eax
00005c33	jmp	0x00005de8
00005c38	leal	0x0000659d(%ebx),%eax
00005c3e	movl	%eax,(%esp)
00005c41	calll	0x0000e095	; symbol stub for: _getenv
00005c46	movb	$0x01,0x00007687(%ebx)
00005c4d	testl	%eax,%eax
00005c4f	setne	0x00007686(%ebx)
00005c56	cmpb	$__mh_dylib_header,0x00007686(%ebx)
00005c5d	je	0x00005dc0
00005c63	movl	0xd0(%ebp),%eax
00005c66	movl	%esi,0x08(%esp)
00005c6a	movl	%edi,0x0c(%esp)
00005c6e	movl	%eax,0x14(%esp)
00005c72	movl	0xc0(%ebp),%eax
00005c75	movl	%eax,0x10(%esp)
00005c79	leal	0x000065f2(%ebx),%eax
00005c7f	jmp	0x00005da9
00005c84	cmpb	$__mh_dylib_header,0x00007687(%ebx)
00005c8b	jne	0x00005cab
00005c8d	leal	0x0000659d(%ebx),%eax
00005c93	movl	%eax,(%esp)
00005c96	calll	0x0000e095	; symbol stub for: _getenv
00005c9b	movb	$0x01,0x00007687(%ebx)
00005ca2	testl	%eax,%eax
00005ca4	setne	0x00007686(%ebx)
00005cab	cmpb	$__mh_dylib_header,0x00007686(%ebx)
00005cb2	je	0x00005dc0
00005cb8	leal	0x0000664e(%ebx),%eax
00005cbe	movl	%esi,0x08(%esp)
00005cc2	movl	%edi,0x0c(%esp)
00005cc6	jmp	0x00005d01
00005cc8	leal	0x0000659d(%ebx),%eax
00005cce	movl	%eax,(%esp)
00005cd1	calll	0x0000e095	; symbol stub for: _getenv
00005cd6	movb	$0x01,0x00007687(%ebx)
00005cdd	testl	%eax,%eax
00005cdf	setne	0x00007686(%ebx)
00005ce6	cmpb	$__mh_dylib_header,0x00007686(%ebx)
00005ced	je	0x00005dc0
00005cf3	movl	%esi,0x08(%esp)
00005cf7	leal	0x00006686(%ebx),%eax
00005cfd	movl	%edi,0x0c(%esp)
00005d01	movl	%eax,0x04(%esp)
00005d05	movl	0x00008506(%ebx),%eax
00005d0b	addl	$0x000000b0,%eax
00005d10	movl	%eax,(%esp)
00005d13	calll	0x0000e081	; symbol stub for: _fprintf
00005d18	jmp	0x00005dc0
00005d1d	cmpb	$__mh_dylib_header,0x00007687(%ebx)
00005d24	jne	0x00005d44
00005d26	leal	0x0000659d(%ebx),%eax
00005d2c	movl	%eax,(%esp)
00005d2f	calll	0x0000e095	; symbol stub for: _getenv
00005d34	movb	$0x01,0x00007687(%ebx)
00005d3b	testl	%eax,%eax
00005d3d	setne	0x00007686(%ebx)
00005d44	cmpb	$__mh_dylib_header,0x00007686(%ebx)
00005d4b	je	0x00005dc0
00005d4d	movl	0xc4(%ebp),%eax
00005d50	movl	%esi,0x0c(%esp)
00005d54	movl	%edi,0x10(%esp)
00005d58	movl	%eax,0x08(%esp)
00005d5c	leal	0x000066b2(%ebx),%eax
00005d62	jmp	0x00005da9
00005d64	cmpb	$__mh_dylib_header,0x00007687(%ebx)
00005d6b	jne	0x00005d8b
00005d6d	leal	0x0000659d(%ebx),%eax
00005d73	movl	%eax,(%esp)
00005d76	calll	0x0000e095	; symbol stub for: _getenv
00005d7b	movb	$0x01,0x00007687(%ebx)
00005d82	testl	%eax,%eax
00005d84	setne	0x00007686(%ebx)
00005d8b	cmpb	$__mh_dylib_header,0x00007686(%ebx)
00005d92	je	0x00005dc0
00005d94	movl	0x10(%ebp),%eax
00005d97	movl	%esi,0x08(%esp)
00005d9b	movl	%edi,0x0c(%esp)
00005d9f	movl	%eax,0x10(%esp)
00005da3	leal	0x000066ee(%ebx),%eax
00005da9	movl	%eax,0x04(%esp)
00005dad	movl	0x00008506(%ebx),%eax
00005db3	addl	$0x000000b0,%eax
00005db8	movl	%eax,(%esp)
00005dbb	calll	0x0000e081	; symbol stub for: _fprintf
00005dc0	xorl	%eax,%eax
00005dc2	jmp	0x00005de8
00005dc4	cmpb	$__mh_dylib_header,0x00007687(%ebx)
00005dcb	jne	0x00005ce6
00005dd1	jmp	0x00005cc8
00005dd6	cmpb	$__mh_dylib_header,0x00007687(%ebx)
00005ddd	jne	0x00005c56
00005de3	jmp	0x00005c38
00005de8	movl	0xf4(%ebp),%ebx
00005deb	movzbl	%al,%eax
00005dee	movl	0xf8(%ebp),%esi
00005df1	movl	0xfc(%ebp),%edi
00005df4	leave
00005df5	ret
_QMOImageGetSlide:
00005df6	pushl	%ebp
00005df7	movl	%esp,%ebp
00005df9	pushl	%ebx
00005dfa	subl	$0x14,%esp
00005dfd	movl	0x08(%ebp),%eax
00005e00	calll	0x00005e05
00005e05	popl	%ebx
00005e06	testl	%eax,%eax
00005e08	je	0x00005e52
00005e0a	movl	0x0c(%eax),%ecx
00005e0d	testl	%ecx,%ecx
00005e0f	je	0x00005e52
00005e11	cmpl	$0x1b,0x14(%eax)
00005e15	jbe	0x00005e52
00005e17	movl	0x2c(%eax),%edx
00005e1a	testl	%edx,%edx
00005e1c	je	0x00005e52
00005e1e	movl	0x30(%eax),%edx
00005e21	testl	%edx,%edx
00005e23	je	0x00005e52
00005e25	movl	(%edx),%ecx
00005e27	testl	%ecx,%ecx
00005e29	je	0x00005e52
00005e2b	movl	0x34(%eax),%edx
00005e2e	testl	%edx,%edx
00005e30	je	0x00005e52
00005e32	movl	0x38(%eax),%edx
00005e35	testl	%edx,%edx
00005e37	je	0x00005e52
00005e39	movl	(%edx),%ecx
00005e3b	testl	%ecx,%ecx
00005e3d	je	0x00005e52
00005e3f	movl	0x3c(%eax),%edx
00005e42	testl	%edx,%edx
00005e44	je	0x00005e52
00005e46	movl	0x40(%eax),%ecx
00005e49	movl	$0x00000001,%edx
00005e4e	testl	%ecx,%ecx
00005e50	jne	0x00005e54
00005e52	xorl	%edx,%edx
00005e54	testl	%edx,%edx
00005e56	jne	0x00005e82
00005e58	leal	0x0000642d(%ebx),%eax
00005e5e	movl	%eax,0x0c(%esp)
00005e62	leal	0x0000607f(%ebx),%eax
00005e68	movl	%eax,0x04(%esp)
00005e6c	leal	0x00005b83(%ebx),%eax
00005e72	movl	$0x000003dc,0x08(%esp)
00005e7a	movl	%eax,(%esp)
00005e7d	calll	___eprintf
00005e82	movl	0x24(%eax),%edx
00005e85	movl	0x20(%eax),%eax
00005e88	addl	$0x14,%esp
00005e8b	popl	%ebx
00005e8c	leave
00005e8d	ret
_QMOImageIs64Bit:
00005e8e	pushl	%ebp
00005e8f	movl	%esp,%ebp
00005e91	pushl	%ebx
00005e92	subl	$0x14,%esp
00005e95	movl	0x08(%ebp),%eax
00005e98	calll	0x00005e9d
00005e9d	popl	%ebx
00005e9e	testl	%eax,%eax
00005ea0	je	0x00005eea
00005ea2	movl	0x0c(%eax),%ecx
00005ea5	testl	%ecx,%ecx
00005ea7	je	0x00005eea
00005ea9	cmpl	$0x1b,0x14(%eax)
00005ead	jbe	0x00005eea
00005eaf	movl	0x2c(%eax),%edx
00005eb2	testl	%edx,%edx
00005eb4	je	0x00005eea
00005eb6	movl	0x30(%eax),%edx
00005eb9	testl	%edx,%edx
00005ebb	je	0x00005eea
00005ebd	movl	(%edx),%ecx
00005ebf	testl	%ecx,%ecx
00005ec1	je	0x00005eea
00005ec3	movl	0x34(%eax),%edx
00005ec6	testl	%edx,%edx
00005ec8	je	0x00005eea
00005eca	movl	0x38(%eax),%edx
00005ecd	testl	%edx,%edx
00005ecf	je	0x00005eea
00005ed1	movl	(%edx),%ecx
00005ed3	testl	%ecx,%ecx
00005ed5	je	0x00005eea
00005ed7	movl	0x3c(%eax),%edx
00005eda	testl	%edx,%edx
00005edc	je	0x00005eea
00005ede	movl	0x40(%eax),%ecx
00005ee1	movl	$0x00000001,%edx
00005ee6	testl	%ecx,%ecx
00005ee8	jne	0x00005eec
00005eea	xorl	%edx,%edx
00005eec	testl	%edx,%edx
00005eee	jne	0x00005f1a
00005ef0	leal	0x00006395(%ebx),%eax
00005ef6	movl	%eax,0x0c(%esp)
00005efa	leal	0x00005fe7(%ebx),%eax
00005f00	movl	%eax,0x04(%esp)
00005f04	leal	0x00005aeb(%ebx),%eax
00005f0a	movl	$0x000003e4,0x08(%esp)
00005f12	movl	%eax,(%esp)
00005f15	calll	___eprintf
00005f1a	movzbl	0x29(%eax),%eax
00005f1e	addl	$0x14,%esp
00005f21	popl	%ebx
00005f22	leave
00005f23	ret
_QMOImageIsByteSwapped:
00005f24	pushl	%ebp
00005f25	movl	%esp,%ebp
00005f27	pushl	%ebx
00005f28	subl	$0x14,%esp
00005f2b	movl	0x08(%ebp),%eax
00005f2e	calll	0x00005f33
00005f33	popl	%ebx
00005f34	testl	%eax,%eax
00005f36	je	0x00005f80
00005f38	movl	0x0c(%eax),%ecx
00005f3b	testl	%ecx,%ecx
00005f3d	je	0x00005f80
00005f3f	cmpl	$0x1b,0x14(%eax)
00005f43	jbe	0x00005f80
00005f45	movl	0x2c(%eax),%edx
00005f48	testl	%edx,%edx
00005f4a	je	0x00005f80
00005f4c	movl	0x30(%eax),%edx
00005f4f	testl	%edx,%edx
00005f51	je	0x00005f80
00005f53	movl	(%edx),%ecx
00005f55	testl	%ecx,%ecx
00005f57	je	0x00005f80
00005f59	movl	0x34(%eax),%edx
00005f5c	testl	%edx,%edx
00005f5e	je	0x00005f80
00005f60	movl	0x38(%eax),%edx
00005f63	testl	%edx,%edx
00005f65	je	0x00005f80
00005f67	movl	(%edx),%ecx
00005f69	testl	%ecx,%ecx
00005f6b	je	0x00005f80
00005f6d	movl	0x3c(%eax),%edx
00005f70	testl	%edx,%edx
00005f72	je	0x00005f80
00005f74	movl	0x40(%eax),%ecx
00005f77	movl	$0x00000001,%edx
00005f7c	testl	%ecx,%ecx
00005f7e	jne	0x00005f82
00005f80	xorl	%edx,%edx
00005f82	testl	%edx,%edx
00005f84	jne	0x00005fb0
00005f86	leal	0x000062ff(%ebx),%eax
00005f8c	movl	%eax,0x0c(%esp)
00005f90	leal	0x00005f51(%ebx),%eax
00005f96	movl	%eax,0x04(%esp)
00005f9a	leal	0x00005a55(%ebx),%eax
00005fa0	movl	$0x000003ec,0x08(%esp)
00005fa8	movl	%eax,(%esp)
00005fab	calll	___eprintf
00005fb0	movzbl	0x2a(%eax),%eax
00005fb4	addl	$0x14,%esp
00005fb7	popl	%ebx
00005fb8	leave
00005fb9	ret
_QMOImageGetMachHeaderOffset:
00005fba	pushl	%ebp
00005fbb	movl	%esp,%ebp
00005fbd	pushl	%ebx
00005fbe	subl	$0x14,%esp
00005fc1	movl	0x08(%ebp),%eax
00005fc4	calll	0x00005fc9
00005fc9	popl	%ebx
00005fca	testl	%eax,%eax
00005fcc	je	0x00006016
00005fce	movl	0x0c(%eax),%ecx
00005fd1	testl	%ecx,%ecx
00005fd3	je	0x00006016
00005fd5	cmpl	$0x1b,0x14(%eax)
00005fd9	jbe	0x00006016
00005fdb	movl	0x2c(%eax),%edx
00005fde	testl	%edx,%edx
00005fe0	je	0x00006016
00005fe2	movl	0x30(%eax),%edx
00005fe5	testl	%edx,%edx
00005fe7	je	0x00006016
00005fe9	movl	(%edx),%ecx
00005feb	testl	%ecx,%ecx
00005fed	je	0x00006016
00005fef	movl	0x34(%eax),%edx
00005ff2	testl	%edx,%edx
00005ff4	je	0x00006016
00005ff6	movl	0x38(%eax),%edx
00005ff9	testl	%edx,%edx
00005ffb	je	0x00006016
00005ffd	movl	(%edx),%ecx
00005fff	testl	%ecx,%ecx
00006001	je	0x00006016
00006003	movl	0x3c(%eax),%edx
00006006	testl	%edx,%edx
00006008	je	0x00006016
0000600a	movl	0x40(%eax),%ecx
0000600d	movl	$0x00000001,%edx
00006012	testl	%ecx,%ecx
00006014	jne	0x00006018
00006016	xorl	%edx,%edx
00006018	testl	%edx,%edx
0000601a	jne	0x00006046
0000601c	leal	0x00006269(%ebx),%eax
00006022	movl	%eax,0x0c(%esp)
00006026	leal	0x00005ebb(%ebx),%eax
0000602c	movl	%eax,0x04(%esp)
00006030	leal	0x000059bf(%ebx),%eax
00006036	movl	$0x000003f3,0x08(%esp)
0000603e	movl	%eax,(%esp)
00006041	calll	___eprintf
00006046	movl	0x08(%eax),%edx
00006049	movl	0x04(%eax),%eax
0000604c	addl	$0x14,%esp
0000604f	popl	%ebx
00006050	leave
00006051	ret
_QMOImageGetMachHeader:
00006052	pushl	%ebp
00006053	movl	%esp,%ebp
00006055	pushl	%ebx
00006056	subl	$0x14,%esp
00006059	movl	0x08(%ebp),%eax
0000605c	calll	0x00006061
00006061	popl	%ebx
00006062	testl	%eax,%eax
00006064	je	0x000060ae
00006066	movl	0x0c(%eax),%ecx
00006069	testl	%ecx,%ecx
0000606b	je	0x000060ae
0000606d	cmpl	$0x1b,0x14(%eax)
00006071	jbe	0x000060ae
00006073	movl	0x2c(%eax),%edx
00006076	testl	%edx,%edx
00006078	je	0x000060ae
0000607a	movl	0x30(%eax),%edx
0000607d	testl	%edx,%edx
0000607f	je	0x000060ae
00006081	movl	(%edx),%ecx
00006083	testl	%ecx,%ecx
00006085	je	0x000060ae
00006087	movl	0x34(%eax),%edx
0000608a	testl	%edx,%edx
0000608c	je	0x000060ae
0000608e	movl	0x38(%eax),%edx
00006091	testl	%edx,%edx
00006093	je	0x000060ae
00006095	movl	(%edx),%ecx
00006097	testl	%ecx,%ecx
00006099	je	0x000060ae
0000609b	movl	0x3c(%eax),%edx
0000609e	testl	%edx,%edx
000060a0	je	0x000060ae
000060a2	movl	0x40(%eax),%ecx
000060a5	movl	$0x00000001,%edx
000060aa	testl	%ecx,%ecx
000060ac	jne	0x000060b0
000060ae	xorl	%edx,%edx
000060b0	testl	%edx,%edx
000060b2	jne	0x000060de
000060b4	leal	0x000061d1(%ebx),%eax
000060ba	movl	%eax,0x0c(%esp)
000060be	leal	0x00005e23(%ebx),%eax
000060c4	movl	%eax,0x04(%esp)
000060c8	leal	0x00005927(%ebx),%eax
000060ce	movl	$0x000003fb,0x08(%esp)
000060d6	movl	%eax,(%esp)
000060d9	calll	___eprintf
000060de	movl	0x0c(%eax),%eax
000060e1	addl	$0x14,%esp
000060e4	popl	%ebx
000060e5	leave
000060e6	ret
_QMOImageGetFilePath:
000060e7	pushl	%ebp
000060e8	movl	%esp,%ebp
000060ea	pushl	%ebx
000060eb	subl	$0x14,%esp
000060ee	movl	0x08(%ebp),%eax
000060f1	calll	0x000060f6
000060f6	popl	%ebx
000060f7	testl	%eax,%eax
000060f9	je	0x00006143
000060fb	movl	0x0c(%eax),%ecx
000060fe	testl	%ecx,%ecx
00006100	je	0x00006143
00006102	cmpl	$0x1b,0x14(%eax)
00006106	jbe	0x00006143
00006108	movl	0x2c(%eax),%edx
0000610b	testl	%edx,%edx
0000610d	je	0x00006143
0000610f	movl	0x30(%eax),%edx
00006112	testl	%edx,%edx
00006114	je	0x00006143
00006116	movl	(%edx),%ecx
00006118	testl	%ecx,%ecx
0000611a	je	0x00006143
0000611c	movl	0x34(%eax),%edx
0000611f	testl	%edx,%edx
00006121	je	0x00006143
00006123	movl	0x38(%eax),%edx
00006126	testl	%edx,%edx
00006128	je	0x00006143
0000612a	movl	(%edx),%ecx
0000612c	testl	%ecx,%ecx
0000612e	je	0x00006143
00006130	movl	0x3c(%eax),%edx
00006133	testl	%edx,%edx
00006135	je	0x00006143
00006137	movl	0x40(%eax),%ecx
0000613a	movl	$0x00000001,%edx
0000613f	testl	%ecx,%ecx
00006141	jne	0x00006145
00006143	xorl	%edx,%edx
00006145	testl	%edx,%edx
00006147	jne	0x00006173
00006149	leal	0x0000613c(%ebx),%eax
0000614f	movl	%eax,0x0c(%esp)
00006153	leal	0x00005d8e(%ebx),%eax
00006159	movl	%eax,0x04(%esp)
0000615d	leal	0x00005892(%ebx),%eax
00006163	movl	$0x00000402,0x08(%esp)
0000616b	movl	%eax,(%esp)
0000616e	calll	___eprintf
00006173	movl	(%eax),%eax
00006175	addl	$0x14,%esp
00006178	popl	%ebx
00006179	leave
0000617a	ret
_QMOImageGetFileType:
0000617b	pushl	%ebp
0000617c	movl	%esp,%ebp
0000617e	pushl	%ebx
0000617f	subl	$0x14,%esp
00006182	movl	0x08(%ebp),%edx
00006185	calll	0x0000618a
0000618a	popl	%ebx
0000618b	testl	%edx,%edx
0000618d	je	0x000061d7
0000618f	movl	0x0c(%edx),%eax
00006192	testl	%eax,%eax
00006194	je	0x000061d7
00006196	cmpl	$0x1b,0x14(%edx)
0000619a	jbe	0x000061d7
0000619c	movl	0x2c(%edx),%eax
0000619f	testl	%eax,%eax
000061a1	je	0x000061d7
000061a3	movl	0x30(%edx),%eax
000061a6	testl	%eax,%eax
000061a8	je	0x000061d7
000061aa	movl	(%eax),%eax
000061ac	testl	%eax,%eax
000061ae	je	0x000061d7
000061b0	movl	0x34(%edx),%eax
000061b3	testl	%eax,%eax
000061b5	je	0x000061d7
000061b7	movl	0x38(%edx),%eax
000061ba	testl	%eax,%eax
000061bc	je	0x000061d7
000061be	movl	(%eax),%eax
000061c0	testl	%eax,%eax
000061c2	je	0x000061d7
000061c4	movl	0x3c(%edx),%eax
000061c7	testl	%eax,%eax
000061c9	je	0x000061d7
000061cb	movl	0x40(%edx),%ecx
000061ce	movl	$0x00000001,%eax
000061d3	testl	%ecx,%ecx
000061d5	jne	0x000061d9
000061d7	xorl	%eax,%eax
000061d9	testl	%eax,%eax
000061db	jne	0x00006207
000061dd	leal	0x000060a8(%ebx),%eax
000061e3	movl	%eax,0x0c(%esp)
000061e7	leal	0x00005cfa(%ebx),%eax
000061ed	movl	%eax,0x04(%esp)
000061f1	leal	0x000057fe(%ebx),%eax
000061f7	movl	$0x0000040a,0x08(%esp)
000061ff	movl	%eax,(%esp)
00006202	calll	___eprintf
00006207	movl	0x0c(%edx),%eax
0000620a	movl	0x0c(%eax),%eax
0000620d	movl	%edx,(%esp)
00006210	movl	%eax,0x04(%esp)
00006214	calll	0x0000548f
00006219	addl	$0x14,%esp
0000621c	popl	%ebx
0000621d	leave
0000621e	ret
_QMOImageGetCPUType:
0000621f	pushl	%ebp
00006220	movl	%esp,%ebp
00006222	pushl	%ebx
00006223	subl	$0x14,%esp
00006226	movl	0x08(%ebp),%edx
00006229	calll	0x0000622e
0000622e	popl	%ebx
0000622f	testl	%edx,%edx
00006231	je	0x0000627b
00006233	movl	0x0c(%edx),%eax
00006236	testl	%eax,%eax
00006238	je	0x0000627b
0000623a	cmpl	$0x1b,0x14(%edx)
0000623e	jbe	0x0000627b
00006240	movl	0x2c(%edx),%eax
00006243	testl	%eax,%eax
00006245	je	0x0000627b
00006247	movl	0x30(%edx),%eax
0000624a	testl	%eax,%eax
0000624c	je	0x0000627b
0000624e	movl	(%eax),%eax
00006250	testl	%eax,%eax
00006252	je	0x0000627b
00006254	movl	0x34(%edx),%eax
00006257	testl	%eax,%eax
00006259	je	0x0000627b
0000625b	movl	0x38(%edx),%eax
0000625e	testl	%eax,%eax
00006260	je	0x0000627b
00006262	movl	(%eax),%eax
00006264	testl	%eax,%eax
00006266	je	0x0000627b
00006268	movl	0x3c(%edx),%eax
0000626b	testl	%eax,%eax
0000626d	je	0x0000627b
0000626f	movl	0x40(%edx),%ecx
00006272	movl	$0x00000001,%eax
00006277	testl	%ecx,%ecx
00006279	jne	0x0000627d
0000627b	xorl	%eax,%eax
0000627d	testl	%eax,%eax
0000627f	jne	0x000062ab
00006281	leal	0x00006004(%ebx),%eax
00006287	movl	%eax,0x0c(%esp)
0000628b	leal	0x00005c56(%ebx),%eax
00006291	movl	%eax,0x04(%esp)
00006295	leal	0x0000575a(%ebx),%eax
0000629b	movl	$0x00000414,0x08(%esp)
000062a3	movl	%eax,(%esp)
000062a6	calll	___eprintf
000062ab	movl	0x0c(%edx),%eax
000062ae	movl	0x04(%eax),%eax
000062b1	movl	%edx,(%esp)
000062b4	movl	%eax,0x04(%esp)
000062b8	calll	0x0000548f
000062bd	addl	$0x14,%esp
000062c0	popl	%ebx
000062c1	leave
000062c2	ret
_QMOImageGetCPUSubType:
000062c3	pushl	%ebp
000062c4	movl	%esp,%ebp
000062c6	pushl	%ebx
000062c7	subl	$0x14,%esp
000062ca	movl	0x08(%ebp),%edx
000062cd	calll	0x000062d2
000062d2	popl	%ebx
000062d3	testl	%edx,%edx
000062d5	je	0x0000631f
000062d7	movl	0x0c(%edx),%eax
000062da	testl	%eax,%eax
000062dc	je	0x0000631f
000062de	cmpl	$0x1b,0x14(%edx)
000062e2	jbe	0x0000631f
000062e4	movl	0x2c(%edx),%eax
000062e7	testl	%eax,%eax
000062e9	je	0x0000631f
000062eb	movl	0x30(%edx),%eax
000062ee	testl	%eax,%eax
000062f0	je	0x0000631f
000062f2	movl	(%eax),%eax
000062f4	testl	%eax,%eax
000062f6	je	0x0000631f
000062f8	movl	0x34(%edx),%eax
000062fb	testl	%eax,%eax
000062fd	je	0x0000631f
000062ff	movl	0x38(%edx),%eax
00006302	testl	%eax,%eax
00006304	je	0x0000631f
00006306	movl	(%eax),%eax
00006308	testl	%eax,%eax
0000630a	je	0x0000631f
0000630c	movl	0x3c(%edx),%eax
0000630f	testl	%eax,%eax
00006311	je	0x0000631f
00006313	movl	0x40(%edx),%ecx
00006316	movl	$0x00000001,%eax
0000631b	testl	%ecx,%ecx
0000631d	jne	0x00006321
0000631f	xorl	%eax,%eax
00006321	testl	%eax,%eax
00006323	jne	0x0000634f
00006325	leal	0x00005f60(%ebx),%eax
0000632b	movl	%eax,0x0c(%esp)
0000632f	leal	0x00005bb2(%ebx),%eax
00006335	movl	%eax,0x04(%esp)
00006339	leal	0x000056b6(%ebx),%eax
0000633f	movl	$0x0000041e,0x08(%esp)
00006347	movl	%eax,(%esp)
0000634a	calll	___eprintf
0000634f	movl	0x0c(%edx),%eax
00006352	movl	0x08(%eax),%eax
00006355	movl	%edx,(%esp)
00006358	movl	%eax,0x04(%esp)
0000635c	calll	0x0000548f
00006361	addl	$0x14,%esp
00006364	popl	%ebx
00006365	leave
00006366	ret
_CommandIDCompareProc:
00006367	pushl	%ebp
00006368	movl	%esp,%ebp
0000636a	pushl	%ebx
0000636b	subl	$0x14,%esp
0000636e	movl	0x08(%ebp),%edx
00006371	calll	0x00006376
00006376	popl	%ebx
00006377	movl	0x0c(%ebp),%eax
0000637a	testl	%edx,%edx
0000637c	je	0x000063c5
0000637e	movl	0x0c(%edx),%ecx
00006381	testl	%ecx,%ecx
00006383	je	0x000063c5
00006385	cmpl	$0x1b,0x14(%edx)
00006389	jbe	0x000063c5
0000638b	movl	0x2c(%edx),%ecx
0000638e	testl	%ecx,%ecx
00006390	je	0x000063c5
00006392	movl	0x30(%edx),%ecx
00006395	testl	%ecx,%ecx
00006397	je	0x000063c5
00006399	movl	(%ecx),%ecx
0000639b	testl	%ecx,%ecx
0000639d	je	0x000063c5
0000639f	movl	0x34(%edx),%ecx
000063a2	testl	%ecx,%ecx
000063a4	je	0x000063c5
000063a6	movl	0x38(%edx),%ecx
000063a9	testl	%ecx,%ecx
000063ab	je	0x000063c5
000063ad	movl	(%ecx),%ecx
000063af	testl	%ecx,%ecx
000063b1	je	0x000063c5
000063b3	movl	0x3c(%edx),%ecx
000063b6	testl	%ecx,%ecx
000063b8	je	0x000063c5
000063ba	cmpl	$__mh_dylib_header,0x40(%edx)
000063be	movl	$0x00000001,%ecx
000063c3	jne	0x000063c7
000063c5	xorl	%ecx,%ecx
000063c7	testl	%ecx,%ecx
000063c9	jne	0x000063df
000063cb	leal	0x00005ebc(%ebx),%eax
000063d1	movl	%eax,0x0c(%esp)
000063d5	movl	$0x0000042c,0x08(%esp)
000063dd	jmp	0x000063f5
000063df	testl	%eax,%eax
000063e1	jne	0x0000640d
000063e3	leal	0x00005cab(%ebx),%eax
000063e9	movl	%eax,0x0c(%esp)
000063ed	movl	$0x0000042d,0x08(%esp)
000063f5	leal	0x00005b0e(%ebx),%eax
000063fb	movl	%eax,0x04(%esp)
000063ff	leal	0x00005612(%ebx),%eax
00006405	movl	%eax,(%esp)
00006408	calll	___eprintf
0000640d	movl	(%eax),%eax
0000640f	movl	%edx,(%esp)
00006412	movl	%eax,0x04(%esp)
00006416	calll	0x0000548f
0000641b	movl	0x10(%ebp),%edx
0000641e	cmpl	(%edx),%eax
00006420	sete	%al
00006423	addl	$0x14,%esp
00006426	popl	%ebx
00006427	movzbl	%al,%eax
0000642a	leave
0000642b	ret
_QMOImageFindLoadCommandByID:
0000642c	pushl	%ebp
0000642d	movl	%esp,%ebp
0000642f	pushl	%ebx
00006430	subl	$0x14,%esp
00006433	movl	0x08(%ebp),%eax
00006436	calll	0x0000643b
0000643b	popl	%ebx
0000643c	testl	%eax,%eax
0000643e	je	0x00006488
00006440	movl	0x0c(%eax),%ecx
00006443	testl	%ecx,%ecx
00006445	je	0x00006488
00006447	cmpl	$0x1b,0x14(%eax)
0000644b	jbe	0x00006488
0000644d	movl	0x2c(%eax),%edx
00006450	testl	%edx,%edx
00006452	je	0x00006488
00006454	movl	0x30(%eax),%edx
00006457	testl	%edx,%edx
00006459	je	0x00006488
0000645b	movl	(%edx),%ecx
0000645d	testl	%ecx,%ecx
0000645f	je	0x00006488
00006461	movl	0x34(%eax),%edx
00006464	testl	%edx,%edx
00006466	je	0x00006488
00006468	movl	0x38(%eax),%edx
0000646b	testl	%edx,%edx
0000646d	je	0x00006488
0000646f	movl	(%edx),%ecx
00006471	testl	%ecx,%ecx
00006473	je	0x00006488
00006475	movl	0x3c(%eax),%edx
00006478	testl	%edx,%edx
0000647a	je	0x00006488
0000647c	movl	0x40(%eax),%ecx
0000647f	movl	$0x00000001,%edx
00006484	testl	%ecx,%ecx
00006486	jne	0x0000648a
00006488	xorl	%edx,%edx
0000648a	testl	%edx,%edx
0000648c	jne	0x000064b8
0000648e	leal	0x00005df7(%ebx),%eax
00006494	movl	%eax,0x0c(%esp)
00006498	leal	0x00005a49(%ebx),%eax
0000649e	movl	%eax,0x04(%esp)
000064a2	leal	0x0000554d(%ebx),%eax
000064a8	movl	$0x00000435,0x08(%esp)
000064b0	movl	%eax,(%esp)
000064b3	calll	___eprintf
000064b8	leal	0x0c(%ebp),%ecx
000064bb	leal	0xffffff2c(%ebx),%edx
000064c1	calll	0x000054f6
000064c6	addl	$0x14,%esp
000064c9	popl	%ebx
000064ca	leave
000064cb	ret
_QMOImageGetSegmentCount:
000064cc	pushl	%ebp
000064cd	movl	%esp,%ebp
000064cf	pushl	%ebx
000064d0	subl	$0x14,%esp
000064d3	movl	0x08(%ebp),%eax
000064d6	calll	0x000064db
000064db	popl	%ebx
000064dc	testl	%eax,%eax
000064de	je	0x00006528
000064e0	movl	0x0c(%eax),%ecx
000064e3	testl	%ecx,%ecx
000064e5	je	0x00006528
000064e7	cmpl	$0x1b,0x14(%eax)
000064eb	jbe	0x00006528
000064ed	movl	0x2c(%eax),%edx
000064f0	testl	%edx,%edx
000064f2	je	0x00006528
000064f4	movl	0x30(%eax),%edx
000064f7	testl	%edx,%edx
000064f9	je	0x00006528
000064fb	movl	(%edx),%ecx
000064fd	testl	%ecx,%ecx
000064ff	je	0x00006528
00006501	movl	0x34(%eax),%edx
00006504	testl	%edx,%edx
00006506	je	0x00006528
00006508	movl	0x38(%eax),%edx
0000650b	testl	%edx,%edx
0000650d	je	0x00006528
0000650f	movl	(%edx),%ecx
00006511	testl	%ecx,%ecx
00006513	je	0x00006528
00006515	movl	0x3c(%eax),%edx
00006518	testl	%edx,%edx
0000651a	je	0x00006528
0000651c	movl	0x40(%eax),%ecx
0000651f	movl	$0x00000001,%edx
00006524	testl	%ecx,%ecx
00006526	jne	0x0000652a
00006528	xorl	%edx,%edx
0000652a	testl	%edx,%edx
0000652c	jne	0x00006558
0000652e	leal	0x00005d57(%ebx),%eax
00006534	movl	%eax,0x0c(%esp)
00006538	leal	0x000059a9(%ebx),%eax
0000653e	movl	%eax,0x04(%esp)
00006542	leal	0x000054ad(%ebx),%eax
00006548	movl	$0x0000043d,0x08(%esp)
00006550	movl	%eax,(%esp)
00006553	calll	___eprintf
00006558	movl	0x2c(%eax),%eax
0000655b	addl	$0x14,%esp
0000655e	popl	%ebx
0000655f	leave
00006560	ret
_QMOImageGetSegmentByIndex:
00006561	pushl	%ebp
00006562	movl	%esp,%ebp
00006564	subl	$0x28,%esp
00006567	movl	0x08(%ebp),%edx
0000656a	movl	%ebx,0xf4(%ebp)
0000656d	calll	0x00006572
00006572	popl	%ebx
00006573	movl	%esi,0xf8(%ebp)
00006576	movl	0x0c(%ebp),%esi
00006579	testl	%edx,%edx
0000657b	movl	%edi,0xfc(%ebp)
0000657e	movl	0x10(%ebp),%edi
00006581	je	0x000065cb
00006583	movl	0x0c(%edx),%ecx
00006586	testl	%ecx,%ecx
00006588	je	0x000065cb
0000658a	cmpl	$0x1b,0x14(%edx)
0000658e	jbe	0x000065cb
00006590	movl	0x2c(%edx),%eax
00006593	testl	%eax,%eax
00006595	je	0x000065cb
00006597	movl	0x30(%edx),%ecx
0000659a	testl	%ecx,%ecx
0000659c	je	0x000065cb
0000659e	movl	(%ecx),%eax
000065a0	testl	%eax,%eax
000065a2	je	0x000065cb
000065a4	movl	0x34(%edx),%eax
000065a7	testl	%eax,%eax
000065a9	je	0x000065cb
000065ab	movl	0x38(%edx),%ecx
000065ae	testl	%ecx,%ecx
000065b0	je	0x000065cb
000065b2	movl	(%ecx),%eax
000065b4	testl	%eax,%eax
000065b6	je	0x000065cb
000065b8	movl	0x3c(%edx),%eax
000065bb	testl	%eax,%eax
000065bd	je	0x000065cb
000065bf	movl	0x40(%edx),%eax
000065c2	movl	$0x00000001,%ecx
000065c7	testl	%eax,%eax
000065c9	jne	0x000065cd
000065cb	xorl	%ecx,%ecx
000065cd	testl	%ecx,%ecx
000065cf	jne	0x000065e5
000065d1	leal	0x00005cc0(%ebx),%eax
000065d7	movl	%eax,0x0c(%esp)
000065db	movl	$0x00000463,0x08(%esp)
000065e3	jmp	0x000065fb
000065e5	testl	%edi,%edi
000065e7	jne	0x00006613
000065e9	leal	0x00005cda(%ebx),%eax
000065ef	movl	%eax,0x0c(%esp)
000065f3	movl	$0x00000464,0x08(%esp)
000065fb	leal	0x00005912(%ebx),%eax
00006601	movl	%eax,0x04(%esp)
00006605	leal	0x00005416(%ebx),%eax
0000660b	movl	%eax,(%esp)
0000660e	calll	___eprintf
00006613	cmpl	%esi,0x2c(%edx)
00006616	movl	$0x00000016,%eax
0000661b	jbe	0x0000663c
0000661d	imull	$0x54,%esi,%eax
00006620	addl	0x30(%edx),%eax
00006623	movl	$0x00000048,0x08(%esp)
0000662b	movl	%edi,(%esp)
0000662e	addl	$0x04,%eax
00006631	movl	%eax,0x04(%esp)
00006635	calll	0x0000e0c7	; symbol stub for: _memcpy
0000663a	xorl	%eax,%eax
0000663c	movl	0xf4(%ebp),%ebx
0000663f	movl	0xf8(%ebp),%esi
00006642	movl	0xfc(%ebp),%edi
00006645	leave
00006646	ret
_QMOImageGetSectionCount:
00006647	pushl	%ebp
00006648	movl	%esp,%ebp
0000664a	pushl	%ebx
0000664b	subl	$0x14,%esp
0000664e	movl	0x08(%ebp),%eax
00006651	calll	0x00006656
00006656	popl	%ebx
00006657	testl	%eax,%eax
00006659	je	0x000066a3
0000665b	movl	0x0c(%eax),%ecx
0000665e	testl	%ecx,%ecx
00006660	je	0x000066a3
00006662	cmpl	$0x1b,0x14(%eax)
00006666	jbe	0x000066a3
00006668	movl	0x2c(%eax),%edx
0000666b	testl	%edx,%edx
0000666d	je	0x000066a3
0000666f	movl	0x30(%eax),%edx
00006672	testl	%edx,%edx
00006674	je	0x000066a3
00006676	movl	(%edx),%ecx
00006678	testl	%ecx,%ecx
0000667a	je	0x000066a3
0000667c	movl	0x34(%eax),%edx
0000667f	testl	%edx,%edx
00006681	je	0x000066a3
00006683	movl	0x38(%eax),%edx
00006686	testl	%edx,%edx
00006688	je	0x000066a3
0000668a	movl	(%edx),%ecx
0000668c	testl	%ecx,%ecx
0000668e	je	0x000066a3
00006690	movl	0x3c(%eax),%edx
00006693	testl	%edx,%edx
00006695	je	0x000066a3
00006697	movl	0x40(%eax),%ecx
0000669a	movl	$0x00000001,%edx
0000669f	testl	%ecx,%ecx
000066a1	jne	0x000066a5
000066a3	xorl	%edx,%edx
000066a5	testl	%edx,%edx
000066a7	jne	0x000066d3
000066a9	leal	0x00005bdc(%ebx),%eax
000066af	movl	%eax,0x0c(%esp)
000066b3	leal	0x0000582e(%ebx),%eax
000066b9	movl	%eax,0x04(%esp)
000066bd	leal	0x00005332(%ebx),%eax
000066c3	movl	$0x00000472,0x08(%esp)
000066cb	movl	%eax,(%esp)
000066ce	calll	___eprintf
000066d3	movl	0x34(%eax),%eax
000066d6	addl	$0x14,%esp
000066d9	popl	%ebx
000066da	leave
000066db	ret
_QMOImageGetSectionByName:
000066dc	pushl	%ebp
000066dd	movl	%esp,%ebp
000066df	pushl	%edi
000066e0	pushl	%esi
000066e1	pushl	%ebx
000066e2	subl	$0x1c,%esp
000066e5	movl	0x08(%ebp),%edi
000066e8	calll	0x000066ed
000066ed	popl	%ebx
000066ee	testl	%edi,%edi
000066f0	je	0x0000673a
000066f2	movl	0x0c(%edi),%eax
000066f5	testl	%eax,%eax
000066f7	je	0x0000673a
000066f9	cmpl	$0x1b,0x14(%edi)
000066fd	jbe	0x0000673a
000066ff	movl	0x2c(%edi),%eax
00006702	testl	%eax,%eax
00006704	je	0x0000673a
00006706	movl	0x30(%edi),%eax
00006709	testl	%eax,%eax
0000670b	je	0x0000673a
0000670d	movl	(%eax),%eax
0000670f	testl	%eax,%eax
00006711	je	0x0000673a
00006713	movl	0x34(%edi),%eax
00006716	testl	%eax,%eax
00006718	je	0x0000673a
0000671a	movl	0x38(%edi),%eax
0000671d	testl	%eax,%eax
0000671f	je	0x0000673a
00006721	movl	(%eax),%esi
00006723	testl	%esi,%esi
00006725	je	0x0000673a
00006727	movl	0x3c(%edi),%ecx
0000672a	testl	%ecx,%ecx
0000672c	je	0x0000673a
0000672e	movl	0x40(%edi),%edx
00006731	movl	$0x00000001,%eax
00006736	testl	%edx,%edx
00006738	jne	0x0000673c
0000673a	xorl	%eax,%eax
0000673c	testl	%eax,%eax
0000673e	jne	0x00006754
00006740	leal	0x00005b45(%ebx),%eax
00006746	movl	%eax,0x0c(%esp)
0000674a	movl	$0x00000484,0x08(%esp)
00006752	jmp	0x0000676e
00006754	movl	0x0c(%ebp),%eax
00006757	orl	0x10(%ebp),%eax
0000675a	jne	0x00006786
0000675c	leal	0x00005b6f(%ebx),%eax
00006762	movl	%eax,0x0c(%esp)
00006766	movl	$0x00000485,0x08(%esp)
0000676e	leal	0x00005797(%ebx),%eax
00006774	movl	%eax,0x04(%esp)
00006778	leal	0x0000529b(%ebx),%eax
0000677e	movl	%eax,(%esp)
00006781	calll	___eprintf
00006786	movl	0x14(%ebp),%eax
00006789	xorl	%esi,%esi
0000678b	orl	0x18(%ebp),%eax
0000678e	jne	0x000067f8
00006790	leal	0x00005b97(%ebx),%eax
00006796	movl	%eax,0x0c(%esp)
0000679a	movl	$0x00000486,0x08(%esp)
000067a2	jmp	0x0000676e
000067a4	movl	0x0c(%ebp),%eax
000067a7	testl	%eax,%eax
000067a9	je	0x000067c7
000067ab	imull	$0x54,%esi,%eax
000067ae	addl	0x38(%edi),%eax
000067b1	addl	$0x14,%eax
000067b4	movl	%eax,0x04(%esp)
000067b8	movl	0x0c(%ebp),%eax
000067bb	movl	%eax,(%esp)
000067be	calll	0x0000e112	; symbol stub for: _strcmp
000067c3	testl	%eax,%eax
000067c5	jne	0x000067f1
000067c7	movl	0x10(%ebp),%eax
000067ca	testl	%eax,%eax
000067cc	je	0x000067ea
000067ce	imull	$0x54,%esi,%eax
000067d1	addl	0x38(%edi),%eax
000067d4	addl	$0x04,%eax
000067d7	movl	%eax,0x04(%esp)
000067db	movl	0x10(%ebp),%eax
000067de	movl	%eax,(%esp)
000067e1	calll	0x0000e112	; symbol stub for: _strcmp
000067e6	testl	%eax,%eax
000067e8	jne	0x000067f1
000067ea	movl	$0x00000001,%eax
000067ef	jmp	0x000067f3
000067f1	xorl	%eax,%eax
000067f3	testl	%eax,%eax
000067f5	jne	0x00006804
000067f7	incl	%esi
000067f8	cmpl	0x34(%edi),%esi
000067fb	jb	0x000067a4
000067fd	movl	$0x00000003,%eax
00006802	jmp	0x0000683b
00006804	movl	0x14(%ebp),%ecx
00006807	testl	%ecx,%ecx
00006809	je	0x00006810
0000680b	movl	0x14(%ebp),%eax
0000680e	movl	%esi,(%eax)
00006810	movl	0x18(%ebp),%edx
00006813	xorl	%eax,%eax
00006815	testl	%edx,%edx
00006817	je	0x0000683b
00006819	imull	$0x54,%esi,%eax
0000681c	addl	0x38(%edi),%eax
0000681f	movl	$0x00000050,0x08(%esp)
00006827	addl	$0x04,%eax
0000682a	movl	%eax,0x04(%esp)
0000682e	movl	0x18(%ebp),%eax
00006831	movl	%eax,(%esp)
00006834	calll	0x0000e0c7	; symbol stub for: _memcpy
00006839	xorl	%eax,%eax
0000683b	addl	$0x1c,%esp
0000683e	popl	%ebx
0000683f	popl	%esi
00006840	popl	%edi
00006841	leave
00006842	ret
_QMOImageGetSectionByIndex:
00006843	pushl	%ebp
00006844	movl	%esp,%ebp
00006846	pushl	%esi
00006847	pushl	%ebx
00006848	subl	$0x10,%esp
0000684b	movl	0x08(%ebp),%edx
0000684e	calll	0x00006853
00006853	popl	%ebx
00006854	movl	0x0c(%ebp),%esi
00006857	testl	%edx,%edx
00006859	je	0x000068a3
0000685b	movl	0x0c(%edx),%eax
0000685e	testl	%eax,%eax
00006860	je	0x000068a3
00006862	cmpl	$0x1b,0x14(%edx)
00006866	jbe	0x000068a3
00006868	movl	0x2c(%edx),%eax
0000686b	testl	%eax,%eax
0000686d	je	0x000068a3
0000686f	movl	0x30(%edx),%ecx
00006872	testl	%ecx,%ecx
00006874	je	0x000068a3
00006876	movl	(%ecx),%eax
00006878	testl	%eax,%eax
0000687a	je	0x000068a3
0000687c	movl	0x34(%edx),%eax
0000687f	testl	%eax,%eax
00006881	je	0x000068a3
00006883	movl	0x38(%edx),%eax
00006886	testl	%eax,%eax
00006888	je	0x000068a3
0000688a	movl	(%eax),%ecx
0000688c	testl	%ecx,%ecx
0000688e	je	0x000068a3
00006890	movl	0x3c(%edx),%eax
00006893	testl	%eax,%eax
00006895	je	0x000068a3
00006897	movl	0x40(%edx),%eax
0000689a	movl	$0x00000001,%ecx
0000689f	testl	%eax,%eax
000068a1	jne	0x000068a5
000068a3	xorl	%ecx,%ecx
000068a5	testl	%ecx,%ecx
000068a7	jne	0x000068d3
000068a9	leal	0x000059df(%ebx),%eax
000068af	movl	%eax,0x0c(%esp)
000068b3	leal	0x00005631(%ebx),%eax
000068b9	movl	%eax,0x04(%esp)
000068bd	leal	0x00005135(%ebx),%eax
000068c3	movl	$0x000004ae,0x08(%esp)
000068cb	movl	%eax,(%esp)
000068ce	calll	___eprintf
000068d3	cmpl	%esi,0x34(%edx)
000068d6	movl	$0x00000016,%eax
000068db	jbe	0x000068ff
000068dd	imull	$0x54,%esi,%eax
000068e0	addl	0x38(%edx),%eax
000068e3	movl	$0x00000050,0x08(%esp)
000068eb	addl	$0x04,%eax
000068ee	movl	%eax,0x04(%esp)
000068f2	movl	0x10(%ebp),%eax
000068f5	movl	%eax,(%esp)
000068f8	calll	0x0000e0c7	; symbol stub for: _memcpy
000068fd	xorl	%eax,%eax
000068ff	addl	$0x10,%esp
00006902	popl	%ebx
00006903	popl	%esi
00006904	leave
00006905	ret
_QMOImageGetLibraryID:
00006906	pushl	%ebp
00006907	movl	%esp,%ebp
00006909	subl	$0x28,%esp
0000690c	movl	%edi,0xfc(%ebp)
0000690f	movl	0x08(%ebp),%edi
00006912	movl	%ebx,0xf4(%ebp)
00006915	calll	0x0000691a
0000691a	popl	%ebx
0000691b	movl	%esi,0xf8(%ebp)
0000691e	testl	%edi,%edi
00006920	je	0x0000696a
00006922	movl	0x0c(%edi),%eax
00006925	testl	%eax,%eax
00006927	je	0x0000696a
00006929	cmpl	$0x1b,0x14(%edi)
0000692d	jbe	0x0000696a
0000692f	movl	0x2c(%edi),%eax
00006932	testl	%eax,%eax
00006934	je	0x0000696a
00006936	movl	0x30(%edi),%eax
00006939	testl	%eax,%eax
0000693b	je	0x0000696a
0000693d	movl	(%eax),%eax
0000693f	testl	%eax,%eax
00006941	je	0x0000696a
00006943	movl	0x34(%edi),%eax
00006946	testl	%eax,%eax
00006948	je	0x0000696a
0000694a	movl	0x38(%edi),%eax
0000694d	testl	%eax,%eax
0000694f	je	0x0000696a
00006951	movl	(%eax),%esi
00006953	testl	%esi,%esi
00006955	je	0x0000696a
00006957	movl	0x3c(%edi),%ecx
0000695a	testl	%ecx,%ecx
0000695c	je	0x0000696a
0000695e	movl	0x40(%edi),%edx
00006961	movl	$0x00000001,%eax
00006966	testl	%edx,%edx
00006968	jne	0x0000696c
0000696a	xorl	%eax,%eax
0000696c	testl	%eax,%eax
0000696e	jne	0x0000699a
00006970	leal	0x00005918(%ebx),%eax
00006976	movl	%eax,0x0c(%esp)
0000697a	leal	0x0000556a(%ebx),%eax
00006980	movl	%eax,0x04(%esp)
00006984	leal	0x0000506e(%ebx),%eax
0000698a	movl	$0x00000899,0x08(%esp)
00006992	movl	%eax,(%esp)
00006995	calll	___eprintf
0000699a	cmpb	$__mh_dylib_header,0x18(%edi)
0000699e	jne	0x000069ce
000069a0	movl	$0x0000000d,0x04(%esp)
000069a8	movl	%edi,(%esp)
000069ab	calll	0x0000642c
000069b0	testl	%eax,%eax
000069b2	movl	%eax,%esi
000069b4	je	0x000069ca
000069b6	movl	0x08(%eax),%eax
000069b9	movl	%edi,(%esp)
000069bc	movl	%eax,0x04(%esp)
000069c0	calll	0x0000548f
000069c5	addl	%esi,%eax
000069c7	movl	%eax,0x1c(%edi)
000069ca	movb	$0x01,0x18(%edi)
000069ce	movl	0x1c(%edi),%eax
000069d1	movl	0xf4(%ebp),%ebx
000069d4	movl	0xf8(%ebp),%esi
000069d7	movl	0xfc(%ebp),%edi
000069da	leave
000069db	ret
_GetSegmentIndexByName:
000069dc	pushl	%ebp
000069dd	movl	%esp,%ebp
000069df	pushl	%edi
000069e0	pushl	%esi
000069e1	movl	%eax,%esi
000069e3	pushl	%ebx
000069e4	subl	$0x2c,%esp
000069e7	calll	0x000069ec
000069ec	popl	%ebx
000069ed	testl	%eax,%eax
000069ef	movl	%edx,0xe4(%ebp)
000069f2	movl	%ecx,0xe0(%ebp)
000069f5	je	0x00006a3f
000069f7	movl	0x0c(%eax),%eax
000069fa	testl	%eax,%eax
000069fc	je	0x00006a3f
000069fe	cmpl	$0x1b,0x14(%esi)
00006a02	jbe	0x00006a3f
00006a04	movl	0x2c(%esi),%eax
00006a07	testl	%eax,%eax
00006a09	je	0x00006a3f
00006a0b	movl	0x30(%esi),%eax
00006a0e	testl	%eax,%eax
00006a10	je	0x00006a3f
00006a12	movl	(%eax),%eax
00006a14	testl	%eax,%eax
00006a16	je	0x00006a3f
00006a18	movl	0x34(%esi),%eax
00006a1b	testl	%eax,%eax
00006a1d	je	0x00006a3f
00006a1f	movl	0x38(%esi),%eax
00006a22	testl	%eax,%eax
00006a24	je	0x00006a3f
00006a26	movl	(%eax),%edi
00006a28	testl	%edi,%edi
00006a2a	je	0x00006a3f
00006a2c	movl	0x3c(%esi),%ecx
00006a2f	testl	%ecx,%ecx
00006a31	je	0x00006a3f
00006a33	movl	0x40(%esi),%edx
00006a36	movl	$0x00000001,%eax
00006a3b	testl	%edx,%edx
00006a3d	jne	0x00006a41
00006a3f	xorl	%eax,%eax
00006a41	testl	%eax,%eax
00006a43	jne	0x00006a59
00006a45	leal	0x00005846(%ebx),%eax
00006a4b	movl	%eax,0x0c(%esp)
00006a4f	movl	$0x0000029c,0x08(%esp)
00006a57	jmp	0x00006a72
00006a59	movl	0xe4(%ebp),%eax
00006a5c	testl	%eax,%eax
00006a5e	jne	0x00006a8a
00006a60	leal	0x000058c4(%ebx),%eax
00006a66	movl	%eax,0x0c(%esp)
00006a6a	movl	$0x0000029d,0x08(%esp)
00006a72	leal	0x00005498(%ebx),%eax
00006a78	movl	%eax,0x04(%esp)
00006a7c	leal	0x00004f9c(%ebx),%eax
00006a82	movl	%eax,(%esp)
00006a85	calll	___eprintf
00006a8a	movl	0xe0(%ebp),%eax
00006a8d	xorl	%edi,%edi
00006a8f	testl	%eax,%eax
00006a91	jne	0x00006ac4
00006a93	leal	0x000058d4(%ebx),%eax
00006a99	movl	%eax,0x0c(%esp)
00006a9d	movl	$0x0000029e,0x08(%esp)
00006aa5	jmp	0x00006a72
00006aa7	movl	0xe4(%ebp),%eax
00006aaa	movl	%eax,0x04(%esp)
00006aae	imull	$0x54,%edi,%eax
00006ab1	addl	0x30(%esi),%eax
00006ab4	addl	$0x0c,%eax
00006ab7	movl	%eax,(%esp)
00006aba	calll	0x0000e112	; symbol stub for: _strcmp
00006abf	testl	%eax,%eax
00006ac1	je	0x00006ad0
00006ac3	incl	%edi
00006ac4	cmpl	0x2c(%esi),%edi
00006ac7	jb	0x00006aa7
00006ac9	movl	$0x00000003,%eax
00006ace	jmp	0x00006ad7
00006ad0	movl	0xe0(%ebp),%eax
00006ad3	movl	%edi,(%eax)
00006ad5	xorl	%eax,%eax
00006ad7	addl	$0x2c,%esp
00006ada	popl	%ebx
00006adb	popl	%esi
00006adc	popl	%edi
00006add	leave
00006ade	ret
_QMOImageCreate:
00006adf	pushl	%ebp
00006ae0	movl	%esp,%ebp
00006ae2	pushl	%edi
00006ae3	movl	%edx,%edi
00006ae5	pushl	%esi
00006ae6	movl	%eax,%esi
00006ae8	pushl	%ebx
00006ae9	subl	$0x000000dc,%esp
00006aef	movl	0x08(%ebp),%eax
00006af2	calll	0x00006af7
00006af7	popl	%ebx
00006af8	movl	%ecx,0xffffff5c(%ebp)
00006afe	movl	%eax,0xffffff58(%ebp)
00006b04	movl	0x0c(%ebp),%eax
00006b07	testl	%eax,%eax
00006b09	jne	0x00006b1f
00006b0b	leal	0x000057dd(%ebx),%eax
00006b11	movl	%eax,0x0c(%esp)
00006b15	movl	$0x0000030d,0x08(%esp)
00006b1d	jmp	0x00006b38
00006b1f	movl	0x10(%ebp),%eax
00006b22	testl	%eax,%eax
00006b24	jne	0x00006b50
00006b26	leal	0x000057ee(%ebx),%eax
00006b2c	movl	%eax,0x0c(%esp)
00006b30	movl	$0x0000030e,0x08(%esp)
00006b38	leal	0x0000538d(%ebx),%eax
00006b3e	movl	%eax,0x04(%esp)
00006b42	leal	0x00004e91(%ebx),%eax
00006b48	movl	%eax,(%esp)
00006b4b	calll	___eprintf
00006b50	movl	0x20(%ebp),%eax
00006b53	testl	%eax,%eax
00006b55	jne	0x00006b6b
00006b57	leal	0x00005801(%ebx),%eax
00006b5d	movl	%eax,0x0c(%esp)
00006b61	movl	$0x00000311,0x08(%esp)
00006b69	jmp	0x00006b38
00006b6b	movl	0x20(%ebp),%edx
00006b6e	movl	(%edx),%eax
00006b70	testl	%eax,%eax
00006b72	je	0x00006b88
00006b74	leal	0x00005815(%ebx),%eax
00006b7a	movl	%eax,0x0c(%esp)
00006b7e	movl	$0x00000312,0x08(%esp)
00006b86	jmp	0x00006b38
00006b88	movl	$0x0000004c,0x04(%esp)
00006b90	movl	$0x00000001,(%esp)
00006b97	calll	0x0000e068	; symbol stub for: _calloc
00006b9c	movl	$0x0000000c,0xffffff60(%ebp)
00006ba6	testl	%eax,%eax
00006ba8	movl	%eax,0xffffff64(%ebp)
00006bae	je	0x00006c04
00006bb0	movl	%esi,0x04(%eax)
00006bb3	movl	%edi,0x08(%eax)
00006bb6	movzbl	0xffffff58(%ebp),%ecx
00006bbd	movb	%cl,0x28(%eax)
00006bc0	movl	0x0c(%ebp),%edx
00006bc3	movl	%edx,0x3c(%eax)
00006bc6	movl	0x10(%ebp),%ecx
00006bc9	movl	%ecx,0x40(%eax)
00006bcc	movl	0x18(%ebp),%edx
00006bcf	movl	%edx,0x44(%eax)
00006bd2	movl	0x14(%ebp),%ecx
00006bd5	testl	%ecx,%ecx
00006bd7	jne	0x00006beb
00006bd9	movl	0x1c(%ebp),%ecx
00006bdc	movl	%ecx,0x48(%eax)
00006bdf	movl	$__mh_dylib_header,0xffffff60(%ebp)
00006be9	jmp	0x00006c04
00006beb	movl	0x1c(%ebp),%eax
00006bee	movl	0xffffff64(%ebp),%edx
00006bf4	movl	%eax,0x04(%esp)
00006bf8	movl	%edx,(%esp)
00006bfb	call	*0x14(%ebp)
00006bfe	movl	%eax,0xffffff60(%ebp)
00006c04	movl	0xffffff60(%ebp),%edx
00006c0a	movl	0xffffff5c(%ebp),%eax
00006c10	testl	%edx,%edx
00006c12	sete	%cl
00006c15	testl	%eax,%eax
00006c17	setne	%al
00006c1a	movl	%ecx,%esi
00006c1c	testb	%al,%cl
00006c1e	je	0x00006c3e
00006c20	movl	0xffffff5c(%ebp),%eax
00006c26	movl	%eax,(%esp)
00006c29	calll	0x0000e117	; symbol stub for: _strdup
00006c2e	movl	0xffffff64(%ebp),%edx
00006c34	testl	%eax,%eax
00006c36	movl	%eax,(%edx)
00006c38	je	0x000074a3
00006c3e	movl	%esi,%ecx
00006c40	testb	%cl,%cl
00006c42	je	0x0000740b
00006c48	movl	0xffffff64(%ebp),%eax
00006c4e	testl	%eax,%eax
00006c50	jne	0x00006c69
00006c52	leal	0x000049b1(%ebx),%eax
00006c58	movl	%eax,0x0c(%esp)
00006c5c	movl	$0x00000194,0x08(%esp)
00006c64	jmp	0x00006b38
00006c69	movl	0xffffff64(%ebp),%eax
00006c6f	movl	0x0c(%eax),%eax
00006c72	testl	%eax,%eax
00006c74	je	0x00006c8d
00006c76	leal	0x0000582a(%ebx),%eax
00006c7c	movl	%eax,0x0c(%esp)
00006c80	movl	$0x00000195,0x08(%esp)
00006c88	jmp	0x00006b38
00006c8d	movl	0xffffff64(%ebp),%ecx
00006c93	leal	0xdc(%ebp),%edx
00006c96	leal	0xe0(%ebp),%eax
00006c99	movl	$__mh_dylib_header,0xe0(%ebp)
00006ca0	movl	%edx,0xffffff54(%ebp)
00006ca6	movl	%edx,0x18(%esp)
00006caa	movl	%eax,0x14(%esp)
00006cae	movl	$0x0000001c,0x0c(%esp)
00006cb6	movl	$__mh_dylib_header,0x10(%esp)
00006cbe	movl	0x04(%ecx),%eax
00006cc1	movl	0x08(%ecx),%edx
00006cc4	movl	%ecx,(%esp)
00006cc7	movl	%eax,0x04(%esp)
00006ccb	movl	%edx,0x08(%esp)
00006ccf	call	*0x3c(%ecx)
00006cd2	testl	%eax,%eax
00006cd4	movl	%eax,0xffffff60(%ebp)
00006cda	jne	0x00006e0b
00006ce0	movl	0xe0(%ebp),%edi
00006ce3	movl	(%edi),%ecx
00006ce5	cmpl	$0xcffaedfe,%ecx
00006ceb	je	0x00006d10
00006ced	ja	0x00006cf9
00006cef	cmpl	$0xcefaedfe,%ecx
00006cf5	jne	0x00006d04
00006cf7	jmp	0x00006d10
00006cf9	leal	0x01120532(%ecx),%eax
00006cff	cmpl	$0x01,%eax
00006d02	jbe	0x00006d10
00006d04	movl	$0x00000016,0xffffff60(%ebp)
00006d0e	jmp	0x00006d7d
00006d10	cmpl	$0xfeedfacf,%ecx
00006d16	sete	%dl
00006d19	cmpl	$0xcffaedfe,%ecx
00006d1f	sete	%al
00006d22	orl	%edx,%eax
00006d24	movl	0xffffff64(%ebp),%edx
00006d2a	movb	%al,0x29(%edx)
00006d2d	movl	(%edi),%eax
00006d2f	movl	0xffffff64(%ebp),%ecx
00006d35	cmpl	$0xcefaedfe,%eax
00006d3a	sete	%dl
00006d3d	cmpl	$0xcffaedfe,%eax
00006d42	sete	%al
00006d45	orl	%edx,%eax
00006d47	movb	%al,0x2a(%ecx)
00006d4a	movl	0x14(%edi),%eax
00006d4d	cmpb	$0x01,0x29(%ecx)
00006d51	movl	%ecx,(%esp)
00006d54	sbbl	%esi,%esi
00006d56	movl	%eax,0x04(%esp)
00006d5a	andl	$0xfc,%esi
00006d5d	calll	0x0000548f
00006d62	addl	$0x20,%esi
00006d65	addl	%eax,%esi
00006d67	movl	0xffffff64(%ebp),%eax
00006d6d	movl	%esi,0x14(%eax)
00006d70	movl	0xe0(%ebp),%edi
00006d73	movl	$__mh_dylib_header,0xffffff60(%ebp)
00006d7d	movl	0xffffff64(%ebp),%ecx
00006d83	movl	0xdc(%ebp),%eax
00006d86	movl	%edi,0x14(%esp)
00006d8a	movl	$0x0000001c,0x0c(%esp)
00006d92	movl	$__mh_dylib_header,0x10(%esp)
00006d9a	movl	%eax,0x18(%esp)
00006d9e	movl	0x04(%ecx),%eax
00006da1	movl	0x08(%ecx),%edx
00006da4	movl	%ecx,(%esp)
00006da7	movl	%eax,0x04(%esp)
00006dab	movl	%edx,0x08(%esp)
00006daf	call	*0x40(%ecx)
00006db2	movl	0xffffff60(%ebp),%eax
00006db8	testl	%eax,%eax
00006dba	jne	0x00006e0b
00006dbc	movl	0xffffff64(%ebp),%eax
00006dc2	movl	0xffffff64(%ebp),%ecx
00006dc8	addl	$0x10,%eax
00006dcb	movl	%eax,0x18(%esp)
00006dcf	movl	0xffffff64(%ebp),%eax
00006dd5	addl	$0x0c,%eax
00006dd8	movl	%eax,0x14(%esp)
00006ddc	movl	0xffffff64(%ebp),%eax
00006de2	movl	0x14(%eax),%eax
00006de5	movl	$__mh_dylib_header,0x10(%esp)
00006ded	movl	%eax,0x0c(%esp)
00006df1	movl	0x04(%ecx),%eax
00006df4	movl	0x08(%ecx),%edx
00006df7	movl	%ecx,(%esp)
00006dfa	movl	%eax,0x04(%esp)
00006dfe	movl	%edx,0x08(%esp)
00006e02	call	*0x3c(%ecx)
00006e05	movl	%eax,0xffffff60(%ebp)
00006e0b	movl	0xffffff60(%ebp),%eax
00006e11	testl	%eax,%eax
00006e13	movl	0xffffff64(%ebp),%eax
00006e19	sete	%dl
00006e1c	movl	0x0c(%eax),%eax
00006e1f	testl	%eax,%eax
00006e21	setne	%al
00006e24	xorl	%edx,%eax
00006e26	testb	$0x01,%al
00006e28	je	0x00006e41
00006e2a	leal	0x00005849(%ebx),%eax
00006e30	movl	%eax,0x0c(%esp)
00006e34	movl	$0x000001d7,0x08(%esp)
00006e3c	jmp	0x00006b38
00006e41	movl	0xffffff60(%ebp),%edi
00006e47	testl	%edi,%edi
00006e49	jne	0x0000740b
00006e4f	movl	0xffffff64(%ebp),%eax
00006e55	xorl	%ecx,%ecx
00006e57	leal	0xffffeef2(%ebx),%edx
00006e5d	calll	0x000054f6
00006e62	movl	0xffffff64(%ebp),%edx
00006e68	movl	$0x00000054,0x04(%esp)
00006e70	movl	0x2c(%edx),%eax
00006e73	movl	%eax,(%esp)
00006e76	calll	0x0000e068	; symbol stub for: _calloc
00006e7b	movl	0xffffff64(%ebp),%ecx
00006e81	movl	%eax,0x30(%ecx)
00006e84	movl	$0x00000054,0x04(%esp)
00006e8c	movl	0x34(%ecx),%eax
00006e8f	movl	%eax,(%esp)
00006e92	calll	0x0000e068	; symbol stub for: _calloc
00006e97	movl	0xffffff64(%ebp),%edx
00006e9d	movl	0x30(%edx),%esi
00006ea0	movl	%eax,0x38(%edx)
00006ea3	testl	%esi,%esi
00006ea5	jne	0x00006eaf
00006ea7	testl	%eax,%eax
00006ea9	je	0x000074a3
00006eaf	movl	0xffffff64(%ebp),%eax
00006eb5	leal	0xe4(%ebp),%ecx
00006eb8	leal	0xffffeb90(%ebx),%edx
00006ebe	movl	$__mh_dylib_header,0xe4(%ebp)
00006ec5	calll	0x000054f6
00006eca	movl	0xffffff64(%ebp),%ecx
00006ed0	movl	0x2c(%ecx),%edx
00006ed3	cmpl	0xe4(%ebp),%edx
00006ed6	je	0x00006eef
00006ed8	leal	0x00005879(%ebx),%eax
00006ede	movl	%eax,0x0c(%esp)
00006ee2	movl	$0x00000352,0x08(%esp)
00006eea	jmp	0x00006b38
00006eef	movl	$__mh_dylib_header,0xe4(%ebp)
00006ef6	movl	$__mh_dylib_header,0xffffff68(%ebp)
00006f00	jmp	0x000072d5
00006f05	imull	$0x54,%eax,%eax
00006f08	movl	%eax,0xffffff6c(%ebp)
00006f0e	movl	%eax,%ecx
00006f10	movl	0xffffff64(%ebp),%eax
00006f16	addl	0x30(%eax),%ecx
00006f19	cmpl	$0x19,0x04(%ecx)
00006f1d	sete	0xffffff7b(%ebp)
00006f24	cmpb	$__mh_dylib_header,0xffffff7b(%ebp)
00006f2b	je	0x00006f36
00006f2d	movl	(%ecx),%eax
00006f2f	xorl	%edx,%edx
00006f31	addl	$0x48,%eax
00006f34	jmp	0x00006f3d
00006f36	movl	(%ecx),%edx
00006f38	xorl	%eax,%eax
00006f3a	addl	$0x38,%edx
00006f3d	movl	0x44(%ecx),%ecx
00006f40	movl	%edx,0x80(%ebp)
00006f43	imull	$0x54,0xffffff68(%ebp),%edx
00006f4a	movl	%eax,0xffffff7c(%ebp)
00006f50	movl	%ecx,0xffffff70(%ebp)
00006f56	movl	$__mh_dylib_header,0xffffff74(%ebp)
00006f60	movl	%edx,0x84(%ebp)
00006f63	jmp	0x000072b1
00006f68	movl	0xffffff64(%ebp),%ecx
00006f6e	movl	0xffffff6c(%ebp),%edx
00006f74	addl	0x30(%ecx),%edx
00006f77	movl	0x38(%ecx),%eax
00006f7a	movl	0x84(%ebp),%ecx
00006f7d	movl	%edx,(%eax,%ecx)
00006f80	movl	0xffffff64(%ebp),%edx
00006f86	movl	0xffffff74(%ebp),%eax
00006f8c	addl	0xffffff68(%ebp),%eax
00006f92	cmpl	0x34(%edx),%eax
00006f95	jb	0x00006fae
00006f97	leal	0x00005899(%ebx),%eax
00006f9d	movl	%eax,0x0c(%esp)
00006fa1	movl	$0x00000266,0x08(%esp)
00006fa9	jmp	0x00006b38
00006fae	movl	0xffffff64(%ebp),%ecx
00006fb4	movl	0x84(%ebp),%esi
00006fb7	addl	0x38(%ecx),%esi
00006fba	cmpb	$__mh_dylib_header,0xffffff7b(%ebp)
00006fc1	leal	0x04(%esi),%edi
00006fc4	je	0x00007156
00006fca	movl	0xffffff7c(%ebp),%edx
00006fd0	leal	0x14(%esi),%ecx
00006fd3	movl	(%edx),%eax
00006fd5	movl	%eax,0x04(%esi)
00006fd8	movl	0x04(%edx),%eax
00006fdb	movl	%eax,0x04(%edi)
00006fde	movl	0x08(%edx),%eax
00006fe1	movl	%eax,0x08(%edi)
00006fe4	movl	0x0c(%edx),%eax
00006fe7	movl	%eax,0x0c(%edi)
00006fea	movl	0xffffff7c(%ebp),%eax
00006ff0	movl	0xffffff7c(%ebp),%edx
00006ff6	movl	0x10(%eax),%eax
00006ff9	addl	$0x10,%edx
00006ffc	movl	%eax,0x14(%esi)
00006fff	movl	0x04(%edx),%eax
00007002	movl	%eax,0x04(%ecx)
00007005	movl	0x08(%edx),%eax
00007008	movl	%eax,0x08(%ecx)
0000700b	movl	0x0c(%edx),%eax
0000700e	movl	%eax,0x0c(%ecx)
00007011	movl	0xffffff7c(%ebp),%ecx
00007017	movl	0x20(%ecx),%eax
0000701a	movl	0x24(%ecx),%edx
0000701d	movl	%eax,0x04(%esp)
00007021	movl	0xffffff64(%ebp),%eax
00007027	movl	%edx,0x08(%esp)
0000702b	movl	%eax,(%esp)
0000702e	calll	0x00004b93
00007033	movl	%eax,0x20(%edi)
00007036	movl	%edx,0x24(%edi)
00007039	movl	0xffffff7c(%ebp),%ecx
0000703f	movl	0x28(%ecx),%eax
00007042	movl	0x2c(%ecx),%edx
00007045	movl	%eax,0x04(%esp)
00007049	movl	0xffffff64(%ebp),%eax
0000704f	movl	%edx,0x08(%esp)
00007053	movl	%eax,(%esp)
00007056	calll	0x00004b93
0000705b	movl	%eax,0x28(%edi)
0000705e	movl	%edx,0x2c(%edi)
00007061	movl	0xffffff7c(%ebp),%edx
00007067	movl	0xffffff64(%ebp),%ecx
0000706d	movl	0x30(%edx),%eax
00007070	movl	%ecx,(%esp)
00007073	movl	%eax,0x04(%esp)
00007077	calll	0x0000548f
0000707c	movl	%eax,0x30(%edi)
0000707f	movl	0xffffff7c(%ebp),%edx
00007085	movl	0xffffff64(%ebp),%ecx
0000708b	movl	0x34(%edx),%eax
0000708e	movl	%ecx,(%esp)
00007091	movl	%eax,0x04(%esp)
00007095	calll	0x0000548f
0000709a	movl	%eax,0x34(%edi)
0000709d	movl	0xffffff7c(%ebp),%edx
000070a3	movl	0xffffff64(%ebp),%ecx
000070a9	movl	0x38(%edx),%eax
000070ac	movl	%ecx,(%esp)
000070af	movl	%eax,0x04(%esp)
000070b3	calll	0x0000548f
000070b8	movl	%eax,0x38(%edi)
000070bb	movl	0xffffff7c(%ebp),%edx
000070c1	movl	0xffffff64(%ebp),%ecx
000070c7	movl	0x3c(%edx),%eax
000070ca	movl	%ecx,(%esp)
000070cd	movl	%eax,0x04(%esp)
000070d1	calll	0x0000548f
000070d6	movl	%eax,0x3c(%edi)
000070d9	movl	0xffffff7c(%ebp),%edx
000070df	movl	0xffffff64(%ebp),%ecx
000070e5	movl	0x40(%edx),%eax
000070e8	movl	%ecx,(%esp)
000070eb	movl	%eax,0x04(%esp)
000070ef	calll	0x0000548f
000070f4	movl	%eax,0x40(%edi)
000070f7	movl	0xffffff7c(%ebp),%edx
000070fd	movl	0xffffff64(%ebp),%ecx
00007103	movl	0x44(%edx),%eax
00007106	movl	%ecx,(%esp)
00007109	movl	%eax,0x04(%esp)
0000710d	calll	0x0000548f
00007112	movl	%eax,0x44(%edi)
00007115	movl	0xffffff7c(%ebp),%edx
0000711b	movl	0xffffff64(%ebp),%ecx
00007121	movl	0x48(%edx),%eax
00007124	movl	%ecx,(%esp)
00007127	movl	%eax,0x04(%esp)
0000712b	calll	0x0000548f
00007130	movl	%eax,0x48(%edi)
00007133	movl	0xffffff7c(%ebp),%edx
00007139	movl	0xffffff64(%ebp),%ecx
0000713f	movl	0x4c(%edx),%eax
00007142	movl	%ecx,(%esp)
00007145	movl	%eax,0x04(%esp)
00007149	calll	0x0000548f
0000714e	movl	%eax,0x4c(%edi)
00007151	jmp	0x0000729c
00007156	movl	0x80(%ebp),%edx
00007159	leal	0x14(%esi),%ecx
0000715c	movl	(%edx),%eax
0000715e	movl	%eax,0x04(%esi)
00007161	movl	0x04(%edx),%eax
00007164	movl	%eax,0x04(%edi)
00007167	movl	0x08(%edx),%eax
0000716a	movl	%eax,0x08(%edi)
0000716d	movl	0x0c(%edx),%eax
00007170	movl	%eax,0x0c(%edi)
00007173	movl	0x80(%ebp),%eax
00007176	movl	0x80(%ebp),%edx
00007179	movl	0x10(%eax),%eax
0000717c	addl	$0x10,%edx
0000717f	movl	%eax,0x14(%esi)
00007182	movl	0x04(%edx),%eax
00007185	movl	%eax,0x04(%ecx)
00007188	movl	0x08(%edx),%eax
0000718b	movl	%eax,0x08(%ecx)
0000718e	movl	0x0c(%edx),%eax
00007191	movl	%eax,0x0c(%ecx)
00007194	movl	0x80(%ebp),%edx
00007197	movl	0xffffff64(%ebp),%ecx
0000719d	movl	0x20(%edx),%eax
000071a0	movl	%ecx,(%esp)
000071a3	movl	%eax,0x04(%esp)
000071a7	calll	0x0000548f
000071ac	movl	$__mh_dylib_header,0x24(%edi)
000071b3	movl	%eax,0x20(%edi)
000071b6	movl	0x80(%ebp),%edx
000071b9	movl	0xffffff64(%ebp),%ecx
000071bf	movl	0x24(%edx),%eax
000071c2	movl	%ecx,(%esp)
000071c5	movl	%eax,0x04(%esp)
000071c9	calll	0x0000548f
000071ce	movl	$__mh_dylib_header,0x2c(%edi)
000071d5	movl	%eax,0x28(%edi)
000071d8	movl	0x80(%ebp),%edx
000071db	movl	0xffffff64(%ebp),%ecx
000071e1	movl	0x28(%edx),%eax
000071e4	movl	%ecx,(%esp)
000071e7	movl	%eax,0x04(%esp)
000071eb	calll	0x0000548f
000071f0	movl	%eax,0x30(%edi)
000071f3	movl	0x80(%ebp),%edx
000071f6	movl	0xffffff64(%ebp),%ecx
000071fc	movl	0x2c(%edx),%eax
000071ff	movl	%ecx,(%esp)
00007202	movl	%eax,0x04(%esp)
00007206	calll	0x0000548f
0000720b	movl	%eax,0x34(%edi)
0000720e	movl	0x80(%ebp),%edx
00007211	movl	0xffffff64(%ebp),%ecx
00007217	movl	0x30(%edx),%eax
0000721a	movl	%ecx,(%esp)
0000721d	movl	%eax,0x04(%esp)
00007221	calll	0x0000548f
00007226	movl	%eax,0x38(%edi)
00007229	movl	0x80(%ebp),%edx
0000722c	movl	0xffffff64(%ebp),%ecx
00007232	movl	0x34(%edx),%eax
00007235	movl	%ecx,(%esp)
00007238	movl	%eax,0x04(%esp)
0000723c	calll	0x0000548f
00007241	movl	%eax,0x3c(%edi)
00007244	movl	0x80(%ebp),%edx
00007247	movl	0xffffff64(%ebp),%ecx
0000724d	movl	0x38(%edx),%eax
00007250	movl	%ecx,(%esp)
00007253	movl	%eax,0x04(%esp)
00007257	calll	0x0000548f
0000725c	movl	%eax,0x40(%edi)
0000725f	movl	0x80(%ebp),%edx
00007262	movl	0xffffff64(%ebp),%ecx
00007268	movl	0x3c(%edx),%eax
0000726b	movl	%ecx,(%esp)
0000726e	movl	%eax,0x04(%esp)
00007272	calll	0x0000548f
00007277	movl	%eax,0x44(%edi)
0000727a	movl	0x80(%ebp),%edx
0000727d	movl	0xffffff64(%ebp),%ecx
00007283	movl	0x40(%edx),%eax
00007286	movl	%ecx,(%esp)
00007289	movl	%eax,0x04(%esp)
0000728d	calll	0x0000548f
00007292	movl	$__mh_dylib_header,0x4c(%edi)
00007299	movl	%eax,0x48(%edi)
0000729c	incl	0xffffff74(%ebp)
000072a2	addl	$0x50,0xffffff7c(%ebp)
000072a9	addl	$0x44,0x80(%ebp)
000072ad	addl	$0x54,0x84(%ebp)
000072b1	movl	0xffffff70(%ebp),%eax
000072b7	cmpl	%eax,0xffffff74(%ebp)
000072bd	jb	0x00006f68
000072c3	movl	0xffffff64(%ebp),%ecx
000072c9	addl	%eax,0xffffff68(%ebp)
000072cf	incl	0xe4(%ebp)
000072d2	movl	0x2c(%ecx),%edx
000072d5	movl	0xe4(%ebp),%eax
000072d8	cmpl	%eax,%edx
000072da	ja	0x00006f05
000072e0	movl	0xffffff64(%ebp),%eax
000072e6	movl	0xffffff68(%ebp),%ecx
000072ec	cmpl	0x34(%eax),%ecx
000072ef	je	0x00007308
000072f1	leal	0x000058cd(%ebx),%eax
000072f7	movl	%eax,0x0c(%esp)
000072fb	movl	$0x0000035b,0x08(%esp)
00007303	jmp	0x00006b38
00007308	movl	0xffffff64(%ebp),%eax
0000730e	movl	0x0c(%eax),%ecx
00007311	testl	%ecx,%ecx
00007313	je	0x00007358
00007315	cmpl	$0x1b,0x14(%eax)
00007319	jbe	0x00007358
0000731b	testl	%edx,%edx
0000731d	je	0x00007358
0000731f	movl	%eax,%edx
00007321	movl	0x30(%eax),%eax
00007324	testl	%eax,%eax
00007326	je	0x00007358
00007328	movl	(%eax),%eax
0000732a	testl	%eax,%eax
0000732c	je	0x00007358
0000732e	movl	0xffffff68(%ebp),%eax
00007334	testl	%eax,%eax
00007336	je	0x00007358
00007338	movl	0x38(%edx),%eax
0000733b	testl	%eax,%eax
0000733d	je	0x00007358
0000733f	movl	(%eax),%edi
00007341	testl	%edi,%edi
00007343	je	0x00007358
00007345	movl	0x3c(%edx),%esi
00007348	testl	%esi,%esi
0000734a	je	0x00007358
0000734c	movl	0x40(%edx),%ecx
0000734f	movl	$0x00000001,%eax
00007354	testl	%ecx,%ecx
00007356	jne	0x0000735a
00007358	xorl	%eax,%eax
0000735a	testl	%eax,%eax
0000735c	jne	0x00007375
0000735e	leal	0x0000573b(%ebx),%eax
00007364	movl	%eax,0x0c(%esp)
00007368	movl	$0x000002bc,0x08(%esp)
00007370	jmp	0x00006b38
00007375	movl	0xffffff64(%ebp),%ecx
0000737b	cmpb	$__mh_dylib_header,0x28(%ecx)
0000737f	jne	0x000073a0
00007381	movl	0x24(%ecx),%eax
00007384	orl	0x20(%ecx),%eax
00007387	je	0x000073ff
00007389	leal	0x000058ee(%ebx),%eax
0000738f	movl	%eax,0x0c(%esp)
00007393	movl	$0x000002c1,0x08(%esp)
0000739b	jmp	0x00006b38
000073a0	movl	0xffffff54(%ebp),%ecx
000073a6	leal	0x00005903(%ebx),%edx
000073ac	movl	0xffffff64(%ebp),%eax
000073b2	calll	0x000069dc
000073b7	testl	%eax,%eax
000073b9	movl	%eax,0xffffff60(%ebp)
000073bf	jne	0x0000740b
000073c1	leal	0x94(%ebp),%eax
000073c4	movl	%eax,0x08(%esp)
000073c8	movl	0xdc(%ebp),%eax
000073cb	movl	%eax,0x04(%esp)
000073cf	movl	0xffffff64(%ebp),%eax
000073d5	movl	%eax,(%esp)
000073d8	calll	0x00006561
000073dd	testl	%eax,%eax
000073df	movl	%eax,0xffffff60(%ebp)
000073e5	jne	0x0000740b
000073e7	movl	0xffffff64(%ebp),%ecx
000073ed	movl	0x04(%ecx),%eax
000073f0	movl	0x08(%ecx),%edx
000073f3	subl	0xac(%ebp),%eax
000073f6	sbbl	0xb0(%ebp),%edx
000073f9	movl	%eax,0x20(%ecx)
000073fc	movl	%edx,0x24(%ecx)
000073ff	movl	$__mh_dylib_header,0xffffff60(%ebp)
00007409	jmp	0x00007423
0000740b	movl	0xffffff64(%ebp),%eax
00007411	movl	%eax,(%esp)
00007414	calll	0x00004c07
00007419	movl	$__mh_dylib_header,0xffffff64(%ebp)
00007423	movl	0xffffff64(%ebp),%ecx
00007429	xorl	%eax,%eax
0000742b	movl	0x20(%ebp),%edx
0000742e	movl	%ecx,(%edx)
00007430	cmpl	$__mh_dylib_header,0xffffff60(%ebp)
00007437	sete	%al
0000743a	testl	%ecx,%ecx
0000743c	je	0x00007486
0000743e	movl	0x0c(%ecx),%edx
00007441	testl	%edx,%edx
00007443	je	0x00007486
00007445	cmpl	$0x1b,0x14(%ecx)
00007449	jbe	0x00007486
0000744b	movl	0x2c(%ecx),%edi
0000744e	testl	%edi,%edi
00007450	je	0x00007486
00007452	movl	0x30(%ecx),%edx
00007455	testl	%edx,%edx
00007457	je	0x00007486
00007459	movl	(%edx),%esi
0000745b	testl	%esi,%esi
0000745d	je	0x00007486
0000745f	movl	0x34(%ecx),%edx
00007462	testl	%edx,%edx
00007464	je	0x00007486
00007466	movl	0x38(%ecx),%edx
00007469	testl	%edx,%edx
0000746b	je	0x00007486
0000746d	movl	(%edx),%edi
0000746f	testl	%edi,%edi
00007471	je	0x00007486
00007473	movl	0x3c(%ecx),%esi
00007476	testl	%esi,%esi
00007478	je	0x00007486
0000747a	movl	0x40(%ecx),%ecx
0000747d	movl	$0x00000001,%edx
00007482	testl	%ecx,%ecx
00007484	jne	0x00007488
00007486	xorl	%edx,%edx
00007488	cmpl	%edx,%eax
0000748a	je	0x000074b2
0000748c	leal	0x0000590d(%ebx),%eax
00007492	movl	%eax,0x0c(%esp)
00007496	movl	$0x0000036c,0x08(%esp)
0000749e	jmp	0x00006b38
000074a3	movl	$0x0000000c,0xffffff60(%ebp)
000074ad	jmp	0x0000740b
000074b2	movl	0xffffff60(%ebp),%eax
000074b8	addl	$0x000000dc,%esp
000074be	popl	%ebx
000074bf	popl	%esi
000074c0	popl	%edi
000074c1	leave
000074c2	ret
_QMOImageCreateFromLocalImage:
000074c3	pushl	%ebp
000074c4	movl	%esp,%ebp
000074c6	pushl	%ebx
000074c7	subl	$0x24,%esp
000074ca	movl	0x10(%ebp),%ecx
000074cd	calll	0x000074d2
000074d2	popl	%ebx
000074d3	testl	%ecx,%ecx
000074d5	jne	0x000074eb
000074d7	leal	0x00004e26(%ebx),%eax
000074dd	movl	%eax,0x0c(%esp)
000074e1	movl	$0x00000727,0x08(%esp)
000074e9	jmp	0x00007503
000074eb	movl	(%ecx),%eax
000074ed	testl	%eax,%eax
000074ef	je	0x0000751b
000074f1	leal	0x00004e3a(%ebx),%eax
000074f7	movl	%eax,0x0c(%esp)
000074fb	movl	$0x00000728,0x08(%esp)
00007503	leal	0x000049b2(%ebx),%eax
00007509	movl	%eax,0x04(%esp)
0000750d	leal	0x000044b6(%ebx),%eax
00007513	movl	%eax,(%esp)
00007516	calll	___eprintf
0000751b	movl	%ecx,0x18(%esp)
0000751f	leal	0xffffde6a(%ebx),%ecx
00007525	movl	0x08(%ebp),%eax
00007528	movl	%ecx,0x08(%esp)
0000752c	leal	0xffffdd70(%ebx),%ecx
00007532	xorl	%edx,%edx
00007534	movl	%ecx,0x04(%esp)
00007538	movl	0x0c(%ebp),%ecx
0000753b	movl	$__mh_dylib_header,0x14(%esp)
00007543	movl	$__mh_dylib_header,0x10(%esp)
0000754b	movl	$__mh_dylib_header,0x0c(%esp)
00007553	movl	$0x00000001,(%esp)
0000755a	calll	0x00006adf
0000755f	addl	$0x24,%esp
00007562	popl	%ebx
00007563	leave
00007564	ret
_QMOImageCreateFromTask:
00007565	pushl	%ebp
00007566	movl	%esp,%ebp
00007568	pushl	%edi
00007569	pushl	%esi
0000756a	pushl	%ebx
0000756b	subl	$0x2c,%esp
0000756e	movl	0x08(%ebp),%ecx
00007571	calll	0x00007576
00007576	popl	%ebx
00007577	movl	0x0c(%ebp),%esi
0000757a	movl	0x10(%ebp),%edi
0000757d	testl	%ecx,%ecx
0000757f	jne	0x00007595
00007581	leal	0x00003f96(%ebx),%eax
00007587	movl	%eax,0x0c(%esp)
0000758b	movl	$0x0000069b,0x08(%esp)
00007593	jmp	0x000075ae
00007595	movl	0x18(%ebp),%eax
00007598	testl	%eax,%eax
0000759a	jne	0x000075c6
0000759c	leal	0x00004d82(%ebx),%eax
000075a2	movl	%eax,0x0c(%esp)
000075a6	movl	$0x0000069e,0x08(%esp)
000075ae	leal	0x0000490e(%ebx),%eax
000075b4	movl	%eax,0x04(%esp)
000075b8	leal	0x00004412(%ebx),%eax
000075be	movl	%eax,(%esp)
000075c1	calll	___eprintf
000075c6	movl	0x18(%ebp),%eax
000075c9	movl	(%eax),%eax
000075cb	testl	%eax,%eax
000075cd	je	0x000075e3
000075cf	leal	0x00004d96(%ebx),%eax
000075d5	movl	%eax,0x0c(%esp)
000075d9	movl	$0x0000069f,0x08(%esp)
000075e1	jmp	0x000075ae
000075e3	movl	0x00006a8a(%ebx),%eax
000075e9	cmpl	(%eax),%ecx
000075eb	jne	0x0000760e
000075ed	cmpb	$__mh_dylib_header,0x00005a9e(%ebx)
000075f4	je	0x0000760e
000075f6	movl	0x18(%ebp),%ecx
000075f9	movl	0x14(%ebp),%eax
000075fc	movl	%esi,(%esp)
000075ff	movl	%ecx,0x08(%esp)
00007603	movl	%eax,0x04(%esp)
00007607	calll	0x000074c3
0000760c	jmp	0x00007650
0000760e	movl	0x18(%ebp),%eax
00007611	movl	%edi,%edx
00007613	movl	%ecx,0x14(%esp)
00007617	movl	0x14(%ebp),%ecx
0000761a	movl	$__mh_dylib_header,0x10(%esp)
00007622	movl	$__mh_dylib_header,0x0c(%esp)
0000762a	movl	%eax,0x18(%esp)
0000762e	leal	0xffffdc3c(%ebx),%eax
00007634	movl	%eax,0x08(%esp)
00007638	leal	0xffffdaaa(%ebx),%eax
0000763e	movl	%eax,0x04(%esp)
00007642	movl	%esi,%eax
00007644	movl	$0x00000001,(%esp)
0000764b	calll	0x00006adf
00007650	movl	0x18(%ebp),%ecx
00007653	movl	%eax,%esi
00007655	xorl	%eax,%eax
00007657	testl	%esi,%esi
00007659	sete	%al
0000765c	movl	(%ecx),%edx
0000765e	testl	%edx,%edx
00007660	je	0x000076aa
00007662	movl	0x0c(%edx),%edi
00007665	testl	%edi,%edi
00007667	je	0x000076aa
00007669	cmpl	$0x1b,0x14(%edx)
0000766d	jbe	0x000076aa
0000766f	movl	0x2c(%edx),%ecx
00007672	testl	%ecx,%ecx
00007674	je	0x000076aa
00007676	movl	0x30(%edx),%ecx
00007679	testl	%ecx,%ecx
0000767b	je	0x000076aa
0000767d	movl	(%ecx),%edi
0000767f	testl	%edi,%edi
00007681	je	0x000076aa
00007683	movl	0x34(%edx),%ecx
00007686	testl	%ecx,%ecx
00007688	je	0x000076aa
0000768a	movl	0x38(%edx),%ecx
0000768d	testl	%ecx,%ecx
0000768f	je	0x000076aa
00007691	movl	(%ecx),%edi
00007693	testl	%edi,%edi
00007695	je	0x000076aa
00007697	movl	0x3c(%edx),%ecx
0000769a	testl	%ecx,%ecx
0000769c	je	0x000076aa
0000769e	movl	0x40(%edx),%edx
000076a1	movl	$0x00000001,%ecx
000076a6	testl	%edx,%edx
000076a8	jne	0x000076ac
000076aa	xorl	%ecx,%ecx
000076ac	cmpl	%ecx,%eax
000076ae	je	0x000076c7
000076b0	leal	0x00004e8e(%ebx),%eax
000076b6	movl	%eax,0x0c(%esp)
000076ba	movl	$0x000006a7,0x08(%esp)
000076c2	jmp	0x000075ae
000076c7	addl	$0x2c,%esp
000076ca	movl	%esi,%eax
000076cc	popl	%ebx
000076cd	popl	%esi
000076ce	popl	%edi
000076cf	leave
000076d0	ret
_QMOImageCreateFromFile:
000076d1	pushl	%ebp
000076d2	movl	%esp,%ebp
000076d4	pushl	%edi
000076d5	pushl	%esi
000076d6	pushl	%ebx
000076d7	subl	$0x0000008c,%esp
000076dd	movl	0x08(%ebp),%eax
000076e0	calll	0x000076e5
000076e5	popl	%ebx
000076e6	testl	%eax,%eax
000076e8	jne	0x000076fe
000076ea	leal	0x00004d4b(%ebx),%eax
000076f0	movl	%eax,0x0c(%esp)
000076f4	movl	$0x000005e7,0x08(%esp)
000076fc	jmp	0x00007724
000076fe	cmpl	$0xff,0x0c(%ebp)
00007702	sete	%dl
00007705	xorl	%eax,%eax
00007707	cmpl	$__mh_dylib_header,0x10(%ebp)
0000770b	setne	%al
0000770e	testl	%edx,%eax
00007710	je	0x0000773c
00007712	leal	0x00004d5f(%ebx),%eax
00007718	movl	%eax,0x0c(%esp)
0000771c	movl	$0x000005e8,0x08(%esp)
00007724	leal	0x0000479f(%ebx),%eax
0000772a	movl	%eax,0x04(%esp)
0000772e	leal	0x000042a3(%ebx),%eax
00007734	movl	%eax,(%esp)
00007737	calll	___eprintf
0000773c	movl	0x14(%ebp),%eax
0000773f	testl	%eax,%eax
00007741	jne	0x00007757
00007743	leal	0x00004c13(%ebx),%eax
00007749	movl	%eax,0x0c(%esp)
0000774d	movl	$0x000005e9,0x08(%esp)
00007755	jmp	0x00007724
00007757	movl	0x14(%ebp),%eax
0000775a	movl	(%eax),%eax
0000775c	testl	%eax,%eax
0000775e	je	0x00007774
00007760	leal	0x00004c27(%ebx),%eax
00007766	movl	%eax,0x0c(%esp)
0000776a	movl	$0x000005ea,0x08(%esp)
00007772	jmp	0x00007724
00007774	movl	0x08(%ebp),%edx
00007777	movl	$__mh_dylib_header,0x04(%esp)
0000777f	movl	%edx,(%esp)
00007782	calll	0x0000e0db	; symbol stub for: _open
00007787	testl	%eax,%eax
00007789	movl	%eax,%edi
0000778b	jns	0x0000779c
0000778d	calll	0x0000e04a	; symbol stub for: ___error
00007792	movl	(%eax),%esi
00007794	testl	%esi,%esi
00007796	jne	0x00007ad3
0000779c	leal	0xe0(%ebp),%eax
0000779f	movl	$0x00000008,0x08(%esp)
000077a7	movl	%eax,0x04(%esp)
000077ab	movl	%edi,(%esp)
000077ae	calll	0x0000e103	; symbol stub for: _read
000077b3	testl	%eax,%eax
000077b5	jns	0x000077c2
000077b7	calll	0x0000e04a	; symbol stub for: ___error
000077bc	movl	(%eax),%esi
000077be	testl	%esi,%esi
000077c0	jmp	0x000077ca
000077c2	movl	$0x00000020,%esi
000077c7	cmpl	$0x08,%eax
000077ca	jne	0x00007ad3
000077d0	movl	0xe0(%ebp),%eax
000077d3	bswap	%eax
000077d5	cmpl	$0xcafebabe,%eax
000077da	movl	$__mh_dylib_header,0x98(%ebp)
000077e1	movl	$__mh_dylib_header,0x9c(%ebp)
000077e8	jne	0x000079b1
000077ee	movl	0xe4(%ebp),%ecx
000077f1	movl	$0x0000000c,%esi
000077f6	movl	%ecx,0xa4(%ebp)
000077f9	bswap	%ecx
000077fb	leal	(%ecx,%ecx,4),%eax
000077fe	shll	$0x02,%eax
00007801	movl	%ecx,0xa4(%ebp)
00007804	movl	%eax,0x94(%ebp)
00007807	movl	%eax,(%esp)
0000780a	calll	0x0000e0c2	; symbol stub for: _malloc
0000780f	movl	$__mh_dylib_header,0x98(%ebp)
00007816	movl	$__mh_dylib_header,0x9c(%ebp)
0000781d	testl	%eax,%eax
0000781f	movl	%eax,0x90(%ebp)
00007822	je	0x0000799e
00007828	movl	0x94(%ebp),%eax
0000782b	movl	0x90(%ebp),%edx
0000782e	movl	%edi,(%esp)
00007831	movl	%eax,0x08(%esp)
00007835	movl	%edx,0x04(%esp)
00007839	calll	0x0000e103	; symbol stub for: _read
0000783e	testl	%eax,%eax
00007840	jns	0x0000785b
00007842	calll	0x0000e04a	; symbol stub for: ___error
00007847	movl	(%eax),%esi
00007849	movl	$__mh_dylib_header,0x98(%ebp)
00007850	movl	$__mh_dylib_header,0x9c(%ebp)
00007857	testl	%esi,%esi
00007859	jmp	0x00007871
0000785b	cmpl	%eax,0x94(%ebp)
0000785e	movl	$0x00000020,%esi
00007863	movl	$__mh_dylib_header,0x98(%ebp)
0000786a	movl	$__mh_dylib_header,0x9c(%ebp)
00007871	jne	0x0000799e
00007877	movl	0x90(%ebp),%edx
0000787a	xorl	%ecx,%ecx
0000787c	jmp	0x000078a8
0000787e	movl	(%edx),%eax
00007880	incl	%ecx
00007881	bswap	%eax
00007883	movl	%eax,(%edx)
00007885	movl	0x04(%edx),%eax
00007888	bswap	%eax
0000788a	movl	%eax,0x04(%edx)
0000788d	movl	0x08(%edx),%eax
00007890	bswap	%eax
00007892	movl	%eax,0x08(%edx)
00007895	movl	0x0c(%edx),%eax
00007898	bswap	%eax
0000789a	movl	%eax,0x0c(%edx)
0000789d	movl	0x10(%edx),%eax
000078a0	bswap	%eax
000078a2	movl	%eax,0x10(%edx)
000078a5	addl	$0x14,%edx
000078a8	cmpl	0xa4(%ebp),%ecx
000078ab	jb	0x0000787e
000078ad	cmpl	$0xff,0x0c(%ebp)
000078b1	jne	0x0000795a
000078b7	movl	0x10(%ebp),%eax
000078ba	testl	%eax,%eax
000078bc	je	0x000078d5
000078be	leal	0x00004d8e(%ebx),%eax
000078c4	movl	%eax,0x0c(%esp)
000078c8	movl	$0x000005b9,0x08(%esp)
000078d0	jmp	0x00007724
000078d5	movl	0x00005a9b(%ebx),%eax
000078db	testl	%eax,%eax
000078dd	jne	0x000078ea
000078df	calll	0x0000e045	; symbol stub for: _NXGetLocalArchInfo
000078e4	movl	%eax,0x00005a9b(%ebx)
000078ea	movl	0x00005a9b(%ebx),%esi
000078f0	testl	%esi,%esi
000078f2	je	0x0000793d
000078f4	movl	0x90(%ebp),%eax
000078f7	movl	0xa4(%ebp),%ecx
000078fa	movl	%eax,0x08(%esp)
000078fe	movl	%ecx,0x0c(%esp)
00007902	movl	0x08(%esi),%eax
00007905	movl	%eax,0x04(%esp)
00007909	movl	0x04(%esi),%eax
0000790c	movl	%eax,(%esp)
0000790f	calll	0x0000e040	; symbol stub for: _NXFindBestFatArch
00007914	testl	%eax,%eax
00007916	jne	0x00007991
00007918	movl	0xa4(%ebp),%edx
0000791b	movl	0x90(%ebp),%ecx
0000791e	movl	$__mh_dylib_header,0x04(%esp)
00007926	movl	%edx,0x0c(%esp)
0000792a	movl	%ecx,0x08(%esp)
0000792e	movl	0x04(%esi),%eax
00007931	movl	%eax,(%esp)
00007934	calll	0x0000e040	; symbol stub for: _NXFindBestFatArch
00007939	testl	%eax,%eax
0000793b	jne	0x00007991
0000793d	movl	0xa4(%ebp),%eax
00007940	movl	0x90(%ebp),%edx
00007943	movl	$__mh_dylib_header,0x04(%esp)
0000794b	movl	%eax,0x0c(%esp)
0000794f	movl	%edx,0x08(%esp)
00007953	movl	(%edx),%eax
00007955	movl	%eax,(%esp)
00007958	jmp	0x00007975
0000795a	movl	0xa4(%ebp),%ecx
0000795d	movl	0x90(%ebp),%eax
00007960	movl	0x10(%ebp),%edx
00007963	movl	%ecx,0x0c(%esp)
00007967	movl	0x0c(%ebp),%ecx
0000796a	movl	%eax,0x08(%esp)
0000796e	movl	%edx,0x04(%esp)
00007972	movl	%ecx,(%esp)
00007975	calll	0x0000e040	; symbol stub for: _NXFindBestFatArch
0000797a	movl	$0x00000003,%esi
0000797f	movl	$__mh_dylib_header,0x98(%ebp)
00007986	movl	$__mh_dylib_header,0x9c(%ebp)
0000798d	testl	%eax,%eax
0000798f	je	0x0000799e
00007991	movl	0x08(%eax),%edx
00007994	xorl	%ecx,%ecx
00007996	xorl	%esi,%esi
00007998	movl	%ecx,0x9c(%ebp)
0000799b	movl	%edx,0x98(%ebp)
0000799e	movl	0x90(%ebp),%ecx
000079a1	movl	%ecx,(%esp)
000079a4	calll	0x0000e08b	; symbol stub for: _free
000079a9	testl	%esi,%esi
000079ab	jne	0x00007ad3
000079b1	movl	0x98(%ebp),%eax
000079b4	movl	0x9c(%ebp),%edx
000079b7	movl	$0x0000001c,0x08(%esp)
000079bf	movl	%edi,(%esp)
000079c2	movl	%eax,0x0c(%esp)
000079c6	leal	0xb0(%ebp),%eax
000079c9	movl	%edx,0x10(%esp)
000079cd	movl	%eax,0x04(%esp)
000079d1	calll	0x0000e0e5	; symbol stub for: _pread
000079d6	testl	%eax,%eax
000079d8	jns	0x000079e5
000079da	calll	0x0000e04a	; symbol stub for: ___error
000079df	movl	(%eax),%esi
000079e1	testl	%esi,%esi
000079e3	jmp	0x000079ed
000079e5	movl	$0x00000020,%esi
000079ea	cmpl	$0x1c,%eax
000079ed	jne	0x00007ad3
000079f3	movl	0xb8(%ebp),%ecx
000079f6	movl	0xb4(%ebp),%edx
000079f9	movl	$__mh_dylib_header,0xd4(%ebp)
00007a00	movl	$__mh_dylib_header,0xd8(%ebp)
00007a07	movl	%ecx,0x88(%ebp)
00007a0a	movl	%ecx,0xd0(%ebp)
00007a0d	movl	0xb0(%ebp),%ecx
00007a10	movl	%edx,0x8c(%ebp)
00007a13	movl	%edx,0xcc(%ebp)
00007a16	movl	$__mh_dylib_header,0xdc(%ebp)
00007a1d	leal	0x01120532(%ecx),%eax
00007a23	cmpl	$0x01,%eax
00007a26	jbe	0x00007a57
00007a28	cmpl	$0xcefaedfe,%ecx
00007a2e	movl	$0x00000016,%esi
00007a33	sete	%dl
00007a36	cmpl	$0xcffaedfe,%ecx
00007a3c	sete	%al
00007a3f	orb	%al,%dl
00007a41	je	0x00007ad3
00007a47	movl	0x8c(%ebp),%eax
00007a4a	movl	0x88(%ebp),%edx
00007a4d	bswap	%eax
00007a4f	bswap	%edx
00007a51	movl	%eax,0xcc(%ebp)
00007a54	movl	%edx,0xd0(%ebp)
00007a57	leal	0xcc(%ebp),%eax
00007a5a	movl	0x0c(%ebp),%ecx
00007a5d	movl	$0x00000003,%esi
00007a62	movl	%eax,0x08(%esp)
00007a66	movl	0x10(%ebp),%eax
00007a69	cmpl	$0xff,0x0c(%ebp)
00007a6d	cmovel	0xcc(%ebp),%ecx
00007a71	movl	$0x00000001,0x0c(%esp)
00007a79	movl	%eax,0x04(%esp)
00007a7d	movl	%ecx,(%esp)
00007a80	calll	0x0000e040	; symbol stub for: _NXFindBestFatArch
00007a85	testl	%eax,%eax
00007a87	je	0x00007ad3
00007a89	movl	0x14(%ebp),%edx
00007a8c	leal	0xffffd8cf(%ebx),%eax
00007a92	movl	%eax,0x10(%esp)
00007a96	leal	0xffffd861(%ebx),%eax
00007a9c	movl	0x08(%ebp),%ecx
00007a9f	movl	%eax,0x0c(%esp)
00007aa3	leal	0xffffd7b7(%ebx),%eax
00007aa9	movl	%eax,0x08(%esp)
00007aad	leal	0xffffd674(%ebx),%eax
00007ab3	movl	%edx,0x18(%esp)
00007ab7	movl	0x9c(%ebp),%edx
00007aba	movl	%eax,0x04(%esp)
00007abe	movl	0x98(%ebp),%eax
00007ac1	movl	%edi,0x14(%esp)
00007ac5	movl	$__mh_dylib_header,(%esp)
00007acc	calll	0x00006adf
00007ad1	movl	%eax,%esi
00007ad3	testl	%esi,%esi
00007ad5	setne	%dl
00007ad8	cmpl	$0xff,%edi
00007adb	setne	%al
00007ade	testb	%al,%dl
00007ae0	je	0x00007b05
00007ae2	movl	%edi,(%esp)
00007ae5	calll	0x0000e06d	; symbol stub for: _close
00007aea	testl	%eax,%eax
00007aec	je	0x00007b05
00007aee	leal	0x00004845(%ebx),%eax
00007af4	movl	%eax,0x0c(%esp)
00007af8	movl	$0x0000063f,0x08(%esp)
00007b00	jmp	0x00007724
00007b05	movl	0x14(%ebp),%ecx
00007b08	xorl	%eax,%eax
00007b0a	testl	%esi,%esi
00007b0c	sete	%al
00007b0f	movl	(%ecx),%edx
00007b11	testl	%edx,%edx
00007b13	je	0x00007b5d
00007b15	movl	0x0c(%edx),%edi
00007b18	testl	%edi,%edi
00007b1a	je	0x00007b5d
00007b1c	cmpl	$0x1b,0x14(%edx)
00007b20	jbe	0x00007b5d
00007b22	movl	0x2c(%edx),%ecx
00007b25	testl	%ecx,%ecx
00007b27	je	0x00007b5d
00007b29	movl	0x30(%edx),%ecx
00007b2c	testl	%ecx,%ecx
00007b2e	je	0x00007b5d
00007b30	movl	(%ecx),%edi
00007b32	testl	%edi,%edi
00007b34	je	0x00007b5d
00007b36	movl	0x34(%edx),%ecx
00007b39	testl	%ecx,%ecx
00007b3b	je	0x00007b5d
00007b3d	movl	0x38(%edx),%ecx
00007b40	testl	%ecx,%ecx
00007b42	je	0x00007b5d
00007b44	movl	(%ecx),%edi
00007b46	testl	%edi,%edi
00007b48	je	0x00007b5d
00007b4a	movl	0x3c(%edx),%ecx
00007b4d	testl	%ecx,%ecx
00007b4f	je	0x00007b5d
00007b51	movl	0x40(%edx),%edx
00007b54	movl	$0x00000001,%ecx
00007b59	testl	%edx,%edx
00007b5b	jne	0x00007b5f
00007b5d	xorl	%ecx,%ecx
00007b5f	cmpl	%ecx,%eax
00007b61	je	0x00007b7a
00007b63	leal	0x00004d1f(%ebx),%eax
00007b69	movl	%eax,0x0c(%esp)
00007b6d	movl	$0x00000641,0x08(%esp)
00007b75	jmp	0x00007724
00007b7a	addl	$0x0000008c,%esp
00007b80	movl	%esi,%eax
00007b82	popl	%ebx
00007b83	popl	%esi
00007b84	popl	%edi
00007b85	leave
00007b86	ret
_QMOImageGetSegmentByName:
00007b87	pushl	%ebp
00007b88	movl	%esp,%ebp
00007b8a	subl	$0x38,%esp
00007b8d	movl	%edi,0xfc(%ebp)
00007b90	movl	0x08(%ebp),%edi
00007b93	movl	%ebx,0xf4(%ebp)
00007b96	movl	0x0c(%ebp),%edx
00007b99	calll	0x00007b9e
00007b9e	popl	%ebx
00007b9f	movl	%esi,0xf8(%ebp)
00007ba2	testl	%edi,%edi
00007ba4	je	0x00007bee
00007ba6	movl	0x0c(%edi),%eax
00007ba9	testl	%eax,%eax
00007bab	je	0x00007bee
00007bad	cmpl	$0x1b,0x14(%edi)
00007bb1	jbe	0x00007bee
00007bb3	movl	0x2c(%edi),%eax
00007bb6	testl	%eax,%eax
00007bb8	je	0x00007bee
00007bba	movl	0x30(%edi),%eax
00007bbd	testl	%eax,%eax
00007bbf	je	0x00007bee
00007bc1	movl	(%eax),%eax
00007bc3	testl	%eax,%eax
00007bc5	je	0x00007bee
00007bc7	movl	0x34(%edi),%eax
00007bca	testl	%eax,%eax
00007bcc	je	0x00007bee
00007bce	movl	0x38(%edi),%eax
00007bd1	testl	%eax,%eax
00007bd3	je	0x00007bee
00007bd5	movl	(%eax),%eax
00007bd7	testl	%eax,%eax
00007bd9	je	0x00007bee
00007bdb	movl	0x3c(%edi),%esi
00007bde	testl	%esi,%esi
00007be0	je	0x00007bee
00007be2	movl	0x40(%edi),%ecx
00007be5	movl	$0x00000001,%eax
00007bea	testl	%ecx,%ecx
00007bec	jne	0x00007bf0
00007bee	xorl	%eax,%eax
00007bf0	testl	%eax,%eax
00007bf2	jne	0x00007c08
00007bf4	leal	0x00004694(%ebx),%eax
00007bfa	movl	%eax,0x0c(%esp)
00007bfe	movl	$0x0000044d,0x08(%esp)
00007c06	jmp	0x00007c1e
00007c08	testl	%edx,%edx
00007c0a	jne	0x00007c36
00007c0c	leal	0x00004712(%ebx),%eax
00007c12	movl	%eax,0x0c(%esp)
00007c16	movl	$0x0000044e,0x08(%esp)
00007c1e	leal	0x000042e6(%ebx),%eax
00007c24	movl	%eax,0x04(%esp)
00007c28	leal	0x00003dea(%ebx),%eax
00007c2e	movl	%eax,(%esp)
00007c31	calll	___eprintf
00007c36	movl	0x10(%ebp),%eax
00007c39	orl	0x14(%ebp),%eax
00007c3c	jne	0x00007c52
00007c3e	leal	0x000048e6(%ebx),%eax
00007c44	movl	%eax,0x0c(%esp)
00007c48	movl	$0x0000044f,0x08(%esp)
00007c50	jmp	0x00007c1e
00007c52	leal	0xe4(%ebp),%ecx
00007c55	movl	%edi,%eax
00007c57	calll	0x000069dc
00007c5c	testl	%eax,%eax
00007c5e	movl	%eax,%esi
00007c60	jne	0x00007c99
00007c62	movl	0x10(%ebp),%edx
00007c65	testl	%edx,%edx
00007c67	je	0x00007c71
00007c69	movl	0xe4(%ebp),%eax
00007c6c	movl	0x10(%ebp),%edx
00007c6f	movl	%eax,(%edx)
00007c71	movl	0x14(%ebp),%eax
00007c74	testl	%eax,%eax
00007c76	je	0x00007c99
00007c78	imull	$0x54,0xe4(%ebp),%eax
00007c7c	addl	0x30(%edi),%eax
00007c7f	movl	$0x00000048,0x08(%esp)
00007c87	addl	$0x04,%eax
00007c8a	movl	%eax,0x04(%esp)
00007c8e	movl	0x14(%ebp),%eax
00007c91	movl	%eax,(%esp)
00007c94	calll	0x0000e0c7	; symbol stub for: _memcpy
00007c99	movl	%esi,%eax
00007c9b	movl	0xf4(%ebp),%ebx
00007c9e	movl	0xf8(%ebp),%esi
00007ca1	movl	0xfc(%ebp),%edi
00007ca4	leave
00007ca5	ret
_FindTaskDyld:
00007ca6	pushl	%ebp
00007ca7	movl	%esp,%ebp
00007ca9	pushl	%edi
00007caa	pushl	%esi
00007cab	pushl	%ebx
00007cac	subl	$0x000000bc,%esp
00007cb2	calll	0x00007cb7
00007cb7	popl	%ebx
00007cb8	testl	%eax,%eax
00007cba	movl	%eax,0x80(%ebp)
00007cbd	movl	%edx,0xffffff7c(%ebp)
00007cc3	movl	%ecx,0xffffff78(%ebp)
00007cc9	jne	0x00007cdf
00007ccb	leal	0x00003855(%ebx),%eax
00007cd1	movl	%eax,0x0c(%esp)
00007cd5	movl	$0x0000081a,0x08(%esp)
00007cdd	jmp	0x00007cfb
00007cdf	movl	0xffffff78(%ebp),%edx
00007ce5	testl	%edx,%edx
00007ce7	jne	0x00007d13
00007ce9	leal	0x000047f7(%ebx),%eax
00007cef	movl	%eax,0x0c(%esp)
00007cf3	movl	$0x0000081b,0x08(%esp)
00007cfb	leal	0x000041cd(%ebx),%eax
00007d01	movl	%eax,0x04(%esp)
00007d05	leal	0x00003cd1(%ebx),%eax
00007d0b	movl	%eax,(%esp)
00007d0e	calll	___eprintf
00007d13	movl	0x000054dd(%ebx),%eax
00007d19	orl	0x000054d9(%ebx),%eax
00007d1f	jne	0x00007f88
00007d25	movl	0x000054d1(%ebx),%eax
00007d2b	movl	$__mh_dylib_header,0xe4(%ebp)
00007d32	testl	%eax,%eax
00007d34	jne	0x00007e90
00007d3a	calll	0x0000e059	; symbol stub for: __dyld_image_count
00007d3f	movl	0x0000634d(%ebx),%ecx
00007d45	xorl	%esi,%esi
00007d47	addl	$0x000000b0,%ecx
00007d4d	movl	%ecx,0xffffff70(%ebp)
00007d53	movl	0x0000634d(%ebx),%ecx
00007d59	movl	%eax,0x84(%ebp)
00007d5c	leal	0x000043e4(%ebx),%eax
00007d62	movl	%eax,0xffffff74(%ebp)
00007d68	leal	0xe0(%ebp),%eax
00007d6b	movl	%eax,0xffffff58(%ebp)
00007d71	addl	$0x000000b0,%ecx
00007d77	movl	%ecx,0xffffff6c(%ebp)
00007d7d	jmp	0x00007e87
00007d82	movl	%esi,(%esp)
00007d85	calll	0x0000e04f	; symbol stub for: __dyld_get_image_header
00007d8a	cmpl	$0x02,0x0c(%eax)
00007d8e	movl	%eax,%edi
00007d90	jne	0x00007e86
00007d96	cmpb	$__mh_dylib_header,0x000054ce(%ebx)
00007d9d	jne	0x00007dbd
00007d9f	movl	0xffffff74(%ebp),%eax
00007da5	movl	%eax,(%esp)
00007da8	calll	0x0000e095	; symbol stub for: _getenv
00007dad	movb	$0x01,0x000054ce(%ebx)
00007db4	testl	%eax,%eax
00007db6	setne	0x000054cd(%ebx)
00007dbd	cmpb	$__mh_dylib_header,0x000054cd(%ebx)
00007dc4	je	0x00007de2
00007dc6	movl	0xffffff70(%ebp),%ecx
00007dcc	leal	0x0000480d(%ebx),%eax
00007dd2	movl	%edi,0x08(%esp)
00007dd6	movl	%eax,0x04(%esp)
00007dda	movl	%ecx,(%esp)
00007ddd	calll	0x0000e081	; symbol stub for: _fprintf
00007de2	movl	0xffffff58(%ebp),%eax
00007de8	movl	$__mh_dylib_header,0xe0(%ebp)
00007def	movl	$__mh_dylib_header,0x04(%esp)
00007df7	movl	%edi,(%esp)
00007dfa	movl	%eax,0x08(%esp)
00007dfe	calll	0x000074c3
00007e03	testl	%eax,%eax
00007e05	jne	0x00007e79
00007e07	movl	0xe0(%ebp),%eax
00007e0a	movl	$0x0000000e,0x04(%esp)
00007e12	movl	%eax,(%esp)
00007e15	calll	0x0000642c
00007e1a	testl	%eax,%eax
00007e1c	je	0x00007e79
00007e1e	addl	0x08(%eax),%eax
00007e21	cmpb	$__mh_dylib_header,0x000054ce(%ebx)
00007e28	movl	%eax,0x000054d1(%ebx)
00007e2e	jne	0x00007e4e
00007e30	movl	0xffffff74(%ebp),%ecx
00007e36	movl	%ecx,(%esp)
00007e39	calll	0x0000e095	; symbol stub for: _getenv
00007e3e	movb	$0x01,0x000054ce(%ebx)
00007e45	testl	%eax,%eax
00007e47	setne	0x000054cd(%ebx)
00007e4e	cmpb	$__mh_dylib_header,0x000054cd(%ebx)
00007e55	je	0x00007e79
00007e57	movl	0x000054d1(%ebx),%eax
00007e5d	movl	%eax,0x08(%esp)
00007e61	leal	0x00004839(%ebx),%eax
00007e67	movl	%eax,0x04(%esp)
00007e6b	movl	0xffffff6c(%ebp),%eax
00007e71	movl	%eax,(%esp)
00007e74	calll	0x0000e081	; symbol stub for: _fprintf
00007e79	movl	0xe0(%ebp),%eax
00007e7c	movl	%eax,(%esp)
00007e7f	calll	0x00004c07
00007e84	jmp	0x00007e90
00007e86	incl	%esi
00007e87	cmpl	0x84(%ebp),%esi
00007e8a	jb	0x00007d82
00007e90	movl	0x000054d1(%ebx),%eax
00007e96	leal	0x00004860(%ebx),%edx
00007e9c	leal	0xe4(%ebp),%edi
00007e9f	movl	%edi,0x0c(%esp)
00007ea3	movl	$__mh_dylib_header,0x08(%esp)
00007eab	testl	%eax,%eax
00007ead	cmovel	%edx,%eax
00007eb0	movl	$0xffffffff,0x04(%esp)
00007eb8	movl	%eax,(%esp)
00007ebb	calll	0x000076d1
00007ec0	testl	%eax,%eax
00007ec2	jne	0x00007f7d
00007ec8	leal	0x00004743(%ebx),%eax
00007ece	movl	%eax,0x04(%esp)
00007ed2	movl	0xe4(%ebp),%eax
00007ed5	leal	0x88(%ebp),%ecx
00007ed8	movl	%ecx,0x0c(%esp)
00007edc	movl	$__mh_dylib_header,0x08(%esp)
00007ee4	movl	%eax,(%esp)
00007ee7	calll	0x00007b87
00007eec	testl	%eax,%eax
00007eee	jne	0x00007f7d
00007ef4	movl	0xa0(%ebp),%eax
00007ef7	movl	0xa4(%ebp),%edx
00007efa	cmpb	$__mh_dylib_header,0x000054ce(%ebx)
00007f01	movl	%eax,0x000054d9(%ebx)
00007f07	movl	%edx,0x000054dd(%ebx)
00007f0d	jne	0x00007f2d
00007f0f	leal	0x000043e4(%ebx),%eax
00007f15	movl	%eax,(%esp)
00007f18	calll	0x0000e095	; symbol stub for: _getenv
00007f1d	movb	$0x01,0x000054ce(%ebx)
00007f24	testl	%eax,%eax
00007f26	setne	0x000054cd(%ebx)
00007f2d	cmpb	$__mh_dylib_header,0x000054cd(%ebx)
00007f34	je	0x00007f7d
00007f36	movl	0xe4(%ebp),%eax
00007f39	movl	%eax,(%esp)
00007f3c	calll	0x000062c3
00007f41	movl	%eax,%esi
00007f43	movl	0xe4(%ebp),%eax
00007f46	movl	%eax,(%esp)
00007f49	calll	0x0000621f
00007f4e	movl	%esi,0x10(%esp)
00007f52	movl	%eax,0x0c(%esp)
00007f56	movl	0x000054d9(%ebx),%eax
00007f5c	movl	%eax,0x08(%esp)
00007f60	leal	0x00004871(%ebx),%eax
00007f66	movl	%eax,0x04(%esp)
00007f6a	movl	0x0000634d(%ebx),%eax
00007f70	addl	$0x000000b0,%eax
00007f75	movl	%eax,(%esp)
00007f78	calll	0x0000e081	; symbol stub for: _fprintf
00007f7d	movl	0xe4(%ebp),%eax
00007f80	movl	%eax,(%esp)
00007f83	calll	0x00004c07
00007f88	movl	0x000054d9(%ebx),%esi
00007f8e	movl	0x000054dd(%ebx),%edi
00007f94	movl	0xffffff7c(%ebp),%edx
00007f9a	movl	0x80(%ebp),%eax
00007f9d	movl	$0x00000005,0x08(%esp)
00007fa5	movl	%esi,(%esp)
00007fa8	movl	%edi,0x04(%esp)
00007fac	calll	0x00005aee
00007fb1	testb	%al,%al
00007fb3	je	0x00008032
00007fb5	cmpb	$__mh_dylib_header,0x000054ce(%ebx)
00007fbc	jne	0x00007fdc
00007fbe	leal	0x000043e4(%ebx),%eax
00007fc4	movl	%eax,(%esp)
00007fc7	calll	0x0000e095	; symbol stub for: _getenv
00007fcc	movb	$0x01,0x000054ce(%ebx)
00007fd3	testl	%eax,%eax
00007fd5	setne	0x000054cd(%ebx)
00007fdc	cmpb	$__mh_dylib_header,0x000054cd(%ebx)
00007fe3	je	0x0000800a
00007fe5	leal	0x000048d5(%ebx),%eax
00007feb	movl	%eax,0x04(%esp)
00007fef	movl	0x0000634d(%ebx),%eax
00007ff5	movl	%esi,0x08(%esp)
00007ff9	movl	%edi,0x0c(%esp)
00007ffd	addl	$0x000000b0,%eax
00008002	movl	%eax,(%esp)
00008005	calll	0x0000e081	; symbol stub for: _fprintf
0000800a	movl	0xffffff78(%ebp),%eax
00008010	movl	%esi,(%eax)
00008012	xorl	%esi,%esi
00008014	movl	%edi,0x04(%eax)
00008017	jmp	0x00008159
0000801c	movl	0xd8(%ebp),%eax
0000801f	movl	0xdc(%ebp),%edx
00008022	movl	0xffffff78(%ebp),%ecx
00008028	movl	%eax,(%ecx)
0000802a	movl	%edx,0x04(%ecx)
0000802d	jmp	0x00008159
00008032	cmpb	$__mh_dylib_header,0x000054ce(%ebx)
00008039	jne	0x00008059
0000803b	leal	0x000043e4(%ebx),%eax
00008041	movl	%eax,(%esp)
00008044	calll	0x0000e095	; symbol stub for: _getenv
00008049	movb	$0x01,0x000054ce(%ebx)
00008050	testl	%eax,%eax
00008052	setne	0x000054cd(%ebx)
00008059	cmpb	$__mh_dylib_header,0x000054cd(%ebx)
00008060	je	0x0000808f
00008062	movl	0x0000634d(%ebx),%eax
00008068	movl	$0x0000002f,0x08(%esp)
00008070	movl	$0x00000001,0x04(%esp)
00008078	addl	$0x000000b0,%eax
0000807d	movl	%eax,0x0c(%esp)
00008081	leal	0x00004909(%ebx),%eax
00008087	movl	%eax,(%esp)
0000808a	calll	0x0000e090	; symbol stub for: _fwrite
0000808f	leal	0xe0(%ebp),%eax
00008092	leal	0x88(%ebp),%ecx
00008095	movl	%eax,0xffffff64(%ebp)
0000809b	leal	0xd0(%ebp),%eax
0000809e	movl	%ecx,0xffffff60(%ebp)
000080a4	leal	0xd8(%ebp),%ecx
000080a7	movl	$__mh_dylib_header,0xd8(%ebp)
000080ae	leal	0xe4(%ebp),%edi
000080b1	movl	$__mh_dylib_header,0xdc(%ebp)
000080b8	movl	%eax,0xffffff5c(%ebp)
000080be	movl	%ecx,0xffffff68(%ebp)
000080c4	movl	0xffffff64(%ebp),%eax
000080ca	movl	0xffffff60(%ebp),%ecx
000080d0	movl	$0x00000009,0xe0(%ebp)
000080d7	movl	%edi,0x18(%esp)
000080db	movl	%eax,0x14(%esp)
000080df	movl	0xffffff5c(%ebp),%eax
000080e5	movl	%ecx,0x10(%esp)
000080e9	movl	0xffffff68(%ebp),%ecx
000080ef	movl	$0x00000009,0x0c(%esp)
000080f7	movl	%eax,0x08(%esp)
000080fb	movl	0x80(%ebp),%eax
000080fe	movl	%ecx,0x04(%esp)
00008102	movl	%eax,(%esp)
00008105	calll	0x0000e0b3	; symbol stub for: _mach_vm_region
0000810a	movl	%eax,(%esp)
0000810d	calll	0x00002c30
00008112	testl	%eax,%eax
00008114	movl	%eax,%esi
00008116	jne	0x00008159
00008118	movl	0x88(%ebp),%eax
0000811b	movl	0xdc(%ebp),%edx
0000811e	movl	%eax,0x08(%esp)
00008122	movl	0xd8(%ebp),%eax
00008125	movl	%edx,0x04(%esp)
00008129	movl	0xffffff7c(%ebp),%edx
0000812f	movl	%eax,(%esp)
00008132	movl	0x80(%ebp),%eax
00008135	calll	0x00005aee
0000813a	testb	%al,%al
0000813c	jne	0x0000801c
00008142	movl	0xd8(%ebp),%eax
00008145	movl	0xdc(%ebp),%edx
00008148	addl	0xd0(%ebp),%eax
0000814b	adcl	0xd4(%ebp),%edx
0000814e	movl	%eax,0xd8(%ebp)
00008151	movl	%edx,0xdc(%ebp)
00008154	jmp	0x000080c4
00008159	addl	$0x000000bc,%esp
0000815f	movl	%esi,%eax
00008161	popl	%ebx
00008162	popl	%esi
00008163	popl	%edi
00008164	leave
00008165	ret
_QMOImageCreateFromTaskDyld:
00008166	pushl	%ebp
00008167	movl	%esp,%ebp
00008169	pushl	%edi
0000816a	pushl	%esi
0000816b	pushl	%ebx
0000816c	subl	$0x3c,%esp
0000816f	movl	0x08(%ebp),%edi
00008172	calll	0x00008177
00008177	popl	%ebx
00008178	movl	0x0c(%ebp),%esi
0000817b	testl	%edi,%edi
0000817d	jne	0x00008193
0000817f	leal	0x00003395(%ebx),%eax
00008185	movl	%eax,0x0c(%esp)
00008189	movl	$0x000006ba,0x08(%esp)
00008191	jmp	0x000081ac
00008193	movl	0x10(%ebp),%eax
00008196	testl	%eax,%eax
00008198	jne	0x000081c4
0000819a	leal	0x00004181(%ebx),%eax
000081a0	movl	%eax,0x0c(%esp)
000081a4	movl	$0x000006bb,0x08(%esp)
000081ac	leal	0x00003d0d(%ebx),%eax
000081b2	movl	%eax,0x04(%esp)
000081b6	leal	0x00003811(%ebx),%eax
000081bc	movl	%eax,(%esp)
000081bf	calll	___eprintf
000081c4	movl	0x10(%ebp),%eax
000081c7	movl	(%eax),%eax
000081c9	testl	%eax,%eax
000081cb	je	0x000081e1
000081cd	leal	0x00004195(%ebx),%eax
000081d3	movl	%eax,0x0c(%esp)
000081d7	movl	$0x000006bc,0x08(%esp)
000081df	jmp	0x000081ac
000081e1	cmpl	$0xff,%esi
000081e4	movl	$__mh_dylib_header,0xe4(%ebp)
000081eb	jne	0x00008278
000081f1	movl	%edi,(%esp)
000081f4	calll	0x00002e46
000081f9	testb	%al,%al
000081fb	jne	0x00008278
000081fd	leal	0xd8(%ebp),%esi
00008200	movl	$0x00000012,%edx
00008205	movl	%esi,%ecx
00008207	movl	%edi,%eax
00008209	calll	0x00007ca6
0000820e	testl	%eax,%eax
00008210	je	0x0000828e
00008212	cmpb	$__mh_dylib_header,0x0000500e(%ebx)
00008219	jne	0x00008239
0000821b	leal	0x00003f24(%ebx),%eax
00008221	movl	%eax,(%esp)
00008224	calll	0x0000e095	; symbol stub for: _getenv
00008229	movb	$0x01,0x0000500e(%ebx)
00008230	testl	%eax,%eax
00008232	setne	0x0000500d(%ebx)
00008239	cmpb	$__mh_dylib_header,0x0000500d(%ebx)
00008240	je	0x0000826f
00008242	movl	0x00005e8d(%ebx),%eax
00008248	movl	$0x00000054,0x08(%esp)
00008250	movl	$0x00000001,0x04(%esp)
00008258	addl	$0x000000b0,%eax
0000825d	movl	%eax,0x0c(%esp)
00008261	leal	0x00004479(%ebx),%eax
00008267	movl	%eax,(%esp)
0000826a	calll	0x0000e090	; symbol stub for: _fwrite
0000826f	movl	%esi,%ecx
00008271	movl	$0xffffffff,%edx
00008276	jmp	0x0000827d
00008278	leal	0xd8(%ebp),%ecx
0000827b	movl	%esi,%edx
0000827d	movl	%edi,%eax
0000827f	calll	0x00007ca6
00008284	testl	%eax,%eax
00008286	movl	%eax,%ecx
00008288	jne	0x0000833d
0000828e	leal	0xe4(%ebp),%eax
00008291	movl	0xdc(%ebp),%edx
00008294	movl	%eax,0x10(%esp)
00008298	movl	0xd8(%ebp),%eax
0000829b	movl	$__mh_dylib_header,0x0c(%esp)
000082a3	movl	%edi,(%esp)
000082a6	movl	%edx,0x08(%esp)
000082aa	movl	%eax,0x04(%esp)
000082ae	calll	0x00007565
000082b3	testl	%eax,%eax
000082b5	movl	%eax,%ecx
000082b7	jne	0x0000833d
000082bd	movl	0xe4(%ebp),%eax
000082c0	movl	(%eax),%ecx
000082c2	testl	%ecx,%ecx
000082c4	je	0x000082dd
000082c6	leal	0x000044ce(%ebx),%eax
000082cc	movl	%eax,0x0c(%esp)
000082d0	movl	$0x000006d2,0x08(%esp)
000082d8	jmp	0x000081ac
000082dd	movl	$0x0000000f,0x04(%esp)
000082e5	movl	%eax,(%esp)
000082e8	calll	0x0000642c
000082ed	testl	%eax,%eax
000082ef	movl	%eax,%esi
000082f1	je	0x00008316
000082f3	movl	0x08(%eax),%eax
000082f6	movl	%eax,0x04(%esp)
000082fa	movl	0xe4(%ebp),%eax
000082fd	movl	%eax,(%esp)
00008300	calll	0x0000548f
00008305	addl	%esi,%eax
00008307	je	0x00008316
00008309	movl	0xe4(%ebp),%esi
0000830c	movl	%eax,(%esp)
0000830f	calll	0x0000e117	; symbol stub for: _strdup
00008314	movl	%eax,(%esi)
00008316	movl	0xe4(%ebp),%eax
00008319	movl	(%eax),%edx
0000831b	testl	%edx,%edx
0000831d	jne	0x00008336
0000831f	leal	0x000044e9(%ebx),%eax
00008325	movl	%eax,0x0c(%esp)
00008329	movl	$0x000006e1,0x08(%esp)
00008331	jmp	0x000081ac
00008336	movl	0x10(%ebp),%edx
00008339	xorl	%ecx,%ecx
0000833b	movl	%eax,(%edx)
0000833d	movl	0x10(%ebp),%esi
00008340	xorl	%eax,%eax
00008342	testl	%ecx,%ecx
00008344	sete	%al
00008347	movl	(%esi),%edx
00008349	testl	%edx,%edx
0000834b	je	0x00008395
0000834d	movl	0x0c(%edx),%edi
00008350	testl	%edi,%edi
00008352	je	0x00008395
00008354	cmpl	$0x1b,0x14(%edx)
00008358	jbe	0x00008395
0000835a	movl	0x2c(%edx),%esi
0000835d	testl	%esi,%esi
0000835f	je	0x00008395
00008361	movl	0x30(%edx),%esi
00008364	testl	%esi,%esi
00008366	je	0x00008395
00008368	movl	(%esi),%edi
0000836a	testl	%edi,%edi
0000836c	je	0x00008395
0000836e	movl	0x34(%edx),%esi
00008371	testl	%esi,%esi
00008373	je	0x00008395
00008375	movl	0x38(%edx),%esi
00008378	testl	%esi,%esi
0000837a	je	0x00008395
0000837c	movl	(%esi),%edi
0000837e	testl	%edi,%edi
00008380	je	0x00008395
00008382	movl	0x3c(%edx),%esi
00008385	testl	%esi,%esi
00008387	je	0x00008395
00008389	movl	0x40(%edx),%edi
0000838c	movl	$0x00000001,%esi
00008391	testl	%edi,%edi
00008393	jne	0x00008397
00008395	xorl	%esi,%esi
00008397	cmpl	%esi,%eax
00008399	je	0x000083b2
0000839b	leal	0x0000428d(%ebx),%eax
000083a1	movl	%eax,0x0c(%esp)
000083a5	movl	$0x000006e8,0x08(%esp)
000083ad	jmp	0x000081ac
000083b2	addl	$0x3c,%esp
000083b5	movl	%ecx,%eax
000083b7	popl	%ebx
000083b8	popl	%esi
000083b9	popl	%edi
000083ba	leave
000083bb	ret
_QMOImageIterateSymbols:
000083bc	pushl	%ebp
000083bd	movl	%esp,%ebp
000083bf	pushl	%edi
000083c0	pushl	%esi
000083c1	pushl	%ebx
000083c2	subl	$0x0000009c,%esp
000083c8	movl	0x08(%ebp),%esi
000083cb	calll	0x000083d0
000083d0	popl	%ebx
000083d1	testl	%esi,%esi
000083d3	je	0x00008422
000083d5	movl	0x08(%ebp),%eax
000083d8	movl	0x0c(%eax),%ecx
000083db	testl	%ecx,%ecx
000083dd	je	0x00008422
000083df	cmpl	$0x1b,0x14(%eax)
000083e3	jbe	0x00008422
000083e5	movl	0x2c(%eax),%edx
000083e8	testl	%edx,%edx
000083ea	je	0x00008422
000083ec	movl	%eax,%edx
000083ee	movl	0x30(%eax),%eax
000083f1	testl	%eax,%eax
000083f3	je	0x00008422
000083f5	movl	(%eax),%eax
000083f7	testl	%eax,%eax
000083f9	je	0x00008422
000083fb	movl	0x34(%edx),%eax
000083fe	testl	%eax,%eax
00008400	je	0x00008422
00008402	movl	0x38(%edx),%eax
00008405	testl	%eax,%eax
00008407	je	0x00008422
00008409	movl	(%eax),%eax
0000840b	testl	%eax,%eax
0000840d	je	0x00008422
0000840f	movl	0x3c(%edx),%edi
00008412	testl	%edi,%edi
00008414	je	0x00008422
00008416	movl	0x40(%edx),%esi
00008419	movl	$0x00000001,%eax
0000841e	testl	%esi,%esi
00008420	jne	0x00008424
00008422	xorl	%eax,%eax
00008424	testl	%eax,%eax
00008426	jne	0x0000843c
00008428	leal	0x00003e62(%ebx),%eax
0000842e	movl	%eax,0x0c(%esp)
00008432	movl	$0x000008bd,0x08(%esp)
0000843a	jmp	0x00008455
0000843c	movl	0x0c(%ebp),%ecx
0000843f	testl	%ecx,%ecx
00008441	jne	0x0000846d
00008443	leal	0x000042ab(%ebx),%eax
00008449	movl	%eax,0x0c(%esp)
0000844d	movl	$0x000008be,0x08(%esp)
00008455	leal	0x00003ab4(%ebx),%eax
0000845b	movl	%eax,0x04(%esp)
0000845f	leal	0x000035b8(%ebx),%eax
00008465	movl	%eax,(%esp)
00008468	calll	___eprintf
0000846d	movl	0x08(%ebp),%ecx
00008470	movl	$0x00000002,0x04(%esp)
00008478	movl	%ecx,(%esp)
0000847b	calll	0x0000642c
00008480	movl	%eax,0xb0(%ebp)
00008483	movl	0xb0(%ebp),%edx
00008486	movl	$0x00000016,%eax
0000848b	testl	%edx,%edx
0000848d	je	0x00008841
00008493	movl	0x08(%ebp),%eax
00008496	leal	0xe0(%ebp),%ecx
00008499	leal	0x000042bc(%ebx),%edx
0000849f	calll	0x000069dc
000084a4	testl	%eax,%eax
000084a6	jne	0x00008841
000084ac	movl	0x08(%ebp),%eax
000084af	movl	0xe0(%ebp),%edx
000084b2	testl	%eax,%eax
000084b4	je	0x00008501
000084b6	movl	0x08(%ebp),%esi
000084b9	movl	0x0c(%esi),%eax
000084bc	testl	%eax,%eax
000084be	je	0x00008501
000084c0	cmpl	$0x1b,0x14(%esi)
000084c4	jbe	0x00008501
000084c6	movl	0x2c(%esi),%eax
000084c9	testl	%eax,%eax
000084cb	je	0x00008501
000084cd	movl	0x30(%esi),%eax
000084d0	testl	%eax,%eax
000084d2	je	0x00008501
000084d4	movl	(%eax),%eax
000084d6	testl	%eax,%eax
000084d8	je	0x00008501
000084da	movl	0x34(%esi),%eax
000084dd	testl	%eax,%eax
000084df	je	0x00008501
000084e1	movl	0x38(%esi),%eax
000084e4	testl	%eax,%eax
000084e6	je	0x00008501
000084e8	movl	(%eax),%eax
000084ea	testl	%eax,%eax
000084ec	je	0x00008501
000084ee	movl	0x3c(%esi),%edi
000084f1	testl	%edi,%edi
000084f3	je	0x00008501
000084f5	movl	0x40(%esi),%esi
000084f8	movl	$0x00000001,%eax
000084fd	testl	%esi,%esi
000084ff	jne	0x00008503
00008501	xorl	%eax,%eax
00008503	testl	%eax,%eax
00008505	jne	0x0000851e
00008507	leal	0x00003e62(%ebx),%eax
0000850d	movl	%eax,0x0c(%esp)
00008511	movl	$0x000003ad,0x08(%esp)
00008519	jmp	0x00008455
0000851e	movl	0x08(%ebp),%edi
00008521	cmpl	0x2c(%edi),%edx
00008524	jb	0x0000853d
00008526	leal	0x000042c7(%ebx),%eax
0000852c	movl	%eax,0x0c(%esp)
00008530	movl	$0x000003ae,0x08(%esp)
00008538	jmp	0x00008455
0000853d	imull	$0x54,%edx,%edx
00008540	movl	%edx,0xc4(%ebp)
00008543	movl	0x08(%ebp),%edx
00008546	movl	0x30(%edx),%eax
00008549	movl	0xc4(%ebp),%edx
0000854c	addl	%eax,%edx
0000854e	movl	0x4c(%edx),%ecx
00008551	testl	%ecx,%ecx
00008553	jne	0x000085ea
00008559	movl	0x08(%ebp),%ecx
0000855c	cmpb	$__mh_dylib_header,0x28(%ecx)
00008560	je	0x00008582
00008562	movl	0x1c(%edx),%esi
00008565	movl	0x20(%edx),%edi
00008568	movl	%esi,0x90(%ebp)
0000856b	movl	%edi,0x94(%ebp)
0000856e	movl	0x20(%ecx),%esi
00008571	movl	0x24(%ecx),%edi
00008574	addl	%esi,0x90(%ebp)
00008577	adcl	%edi,0x94(%ebp)
0000857a	movl	0x24(%edx),%esi
0000857d	movl	0x28(%edx),%edi
00008580	jmp	0x000085a3
00008582	movl	0x30(%edx),%edi
00008585	movl	0x2c(%edx),%esi
00008588	movl	%edi,0x94(%ebp)
0000858b	movl	0x08(%ebp),%edi
0000858e	movl	%esi,0x90(%ebp)
00008591	movl	0x04(%edi),%esi
00008594	movl	0x08(%edi),%edi
00008597	addl	%esi,0x90(%ebp)
0000859a	adcl	%edi,0x94(%ebp)
0000859d	movl	0x34(%edx),%esi
000085a0	movl	0x38(%edx),%edi
000085a3	leal	0x50(%edx),%eax
000085a6	movl	0x94(%ebp),%ecx
000085a9	movl	%edi,0xcc(%ebp)
000085ac	movl	%eax,0x18(%esp)
000085b0	leal	0x4c(%edx),%eax
000085b3	movl	0xcc(%ebp),%edx
000085b6	movl	%esi,0xc8(%ebp)
000085b9	movl	%eax,0x14(%esp)
000085bd	movl	0xc8(%ebp),%eax
000085c0	movl	%ecx,0x08(%esp)
000085c4	movl	0x08(%ebp),%ecx
000085c7	movl	%edx,0x10(%esp)
000085cb	movl	0x90(%ebp),%edx
000085ce	movl	%eax,0x0c(%esp)
000085d2	movl	%ecx,(%esp)
000085d5	movl	%edx,0x04(%esp)
000085d9	call	*0x3c(%ecx)
000085dc	testl	%eax,%eax
000085de	jne	0x00008841
000085e4	movl	0x08(%ebp),%esi
000085e7	movl	0x30(%esi),%eax
000085ea	movl	0xc4(%ebp),%edi
000085ed	movl	0xb0(%ebp),%edx
000085f0	movl	0x08(%ebp),%ecx
000085f3	movl	0x4c(%edi,%eax),%eax
000085f7	movl	%eax,0xb4(%ebp)
000085fa	movl	0x0c(%edx),%eax
000085fd	movl	%ecx,(%esp)
00008600	movl	%eax,0x04(%esp)
00008604	calll	0x0000548f
00008609	movl	0x08(%ebp),%esi
0000860c	movl	0x08(%ebp),%ecx
0000860f	movl	%eax,0xb8(%ebp)
00008612	movl	0x30(%esi),%edx
00008615	imull	$0x54,0xe0(%ebp),%eax
00008619	movl	0x2c(%eax,%edx),%esi
0000861d	movl	0xb0(%ebp),%edx
00008620	movl	0x10(%edx),%eax
00008623	movl	%ecx,(%esp)
00008626	movl	%eax,0x04(%esp)
0000862a	calll	0x0000548f
0000862f	movl	0xb0(%ebp),%edi
00008632	addl	0xb4(%ebp),%eax
00008635	subl	%esi,%eax
00008637	movl	%eax,0xc0(%ebp)
0000863a	movl	0x08(%edi),%eax
0000863d	movl	%eax,0x04(%esp)
00008641	movl	0x08(%ebp),%eax
00008644	movl	%eax,(%esp)
00008647	calll	0x0000548f
0000864c	movl	0x08(%ebp),%edx
0000864f	movb	$__mh_dylib_header,0xe7(%ebp)
00008653	movl	$__mh_dylib_header,0xd4(%ebp)
0000865a	addl	0xb4(%ebp),%eax
0000865d	movl	$__mh_dylib_header,0xbc(%ebp)
00008664	subl	%esi,%eax
00008666	movl	%eax,0xd0(%ebp)
00008669	movl	%eax,%edi
0000866b	cmpb	$__mh_dylib_header,0x29(%edx)
0000866f	jne	0x00008752
00008675	jmp	0x00008833
0000867a	movl	0x08(%ebp),%ecx
0000867d	leal	0x000030ea(%ebx),%esi
00008683	movl	(%edi),%eax
00008685	movl	%ecx,(%esp)
00008688	movl	%eax,0x04(%esp)
0000868c	calll	0x0000548f
00008691	movl	0xc0(%ebp),%edx
00008694	addl	%eax,%edx
00008696	testl	%eax,%eax
00008698	movl	0x08(%edi),%eax
0000869b	cmovnel	%edx,%esi
0000869e	movl	0x0c(%edi),%edx
000086a1	movl	%eax,0x04(%esp)
000086a5	movl	0x08(%ebp),%eax
000086a8	movl	%edx,0x08(%esp)
000086ac	movl	%eax,(%esp)
000086af	calll	0x00004b93
000086b4	movl	%edx,0xa4(%ebp)
000086b7	movl	0x08(%ebp),%edx
000086ba	movl	%eax,0xa0(%ebp)
000086bd	movzwl	0x06(%edi),%eax
000086c1	movl	%edx,(%esp)
000086c4	movl	%eax,0x04(%esp)
000086c8	calll	0x0000541f
000086cd	movl	0x08(%ebp),%ecx
000086d0	movw	%ax,0xa8(%ebp)
000086d4	movzbl	0x05(%edi),%eax
000086d8	movl	%ecx,(%esp)
000086db	movl	%eax,0x04(%esp)
000086df	calll	0x000053bb
000086e4	movb	%al,0xab(%ebp)
000086e7	movzbl	0x04(%edi),%eax
000086eb	movl	%eax,0x04(%esp)
000086ef	movl	0x08(%ebp),%eax
000086f2	movl	%eax,(%esp)
000086f5	calll	0x000053bb
000086fa	leal	0xe7(%ebp),%edx
000086fd	movl	0xa4(%ebp),%ecx
00008700	movl	%edx,0x20(%esp)
00008704	movl	0x10(%ebp),%edx
00008707	movl	%esi,0x04(%esp)
0000870b	movl	%ecx,0x18(%esp)
0000870f	movl	0x08(%ebp),%ecx
00008712	movl	%edx,0x1c(%esp)
00008716	movl	0xa0(%ebp),%edx
00008719	movzbl	%al,%eax
0000871c	movl	%eax,0x08(%esp)
00008720	movl	%ecx,(%esp)
00008723	movl	%edx,0x14(%esp)
00008727	movzwl	0xa8(%ebp),%edx
0000872b	movl	%edx,0x10(%esp)
0000872f	movzbl	0xab(%ebp),%edx
00008733	movl	%edx,0x0c(%esp)
00008737	call	*0x0c(%ebp)
0000873a	testl	%eax,%eax
0000873c	jne	0x00008841
00008742	addl	$0x10,%edi
00008745	cmpb	$__mh_dylib_header,0xe7(%ebp)
00008749	jne	0x0000883f
0000874f	incl	0xbc(%ebp)
00008752	movl	0xb8(%ebp),%esi
00008755	cmpl	%esi,0xbc(%ebp)
00008758	jb	0x0000867a
0000875e	jmp	0x0000883f
00008763	movl	0xd0(%ebp),%edi
00008766	leal	0x000030ea(%ebx),%esi
0000876c	movl	(%edi),%eax
0000876e	movl	%eax,0x04(%esp)
00008772	movl	0x08(%ebp),%eax
00008775	movl	%eax,(%esp)
00008778	calll	0x0000548f
0000877d	movl	0xc0(%ebp),%edx
00008780	addl	%eax,%edx
00008782	testl	%eax,%eax
00008784	movl	0x08(%edi),%eax
00008787	cmovnel	%edx,%esi
0000878a	movl	0x08(%ebp),%edx
0000878d	movl	%eax,0x04(%esp)
00008791	movl	%edx,(%esp)
00008794	calll	0x0000548f
00008799	movl	0xd0(%ebp),%ecx
0000879c	movl	%eax,%edi
0000879e	movzwl	0x06(%ecx),%eax
000087a2	movl	%eax,0x04(%esp)
000087a6	movl	0x08(%ebp),%eax
000087a9	movl	%eax,(%esp)
000087ac	calll	0x0000541f
000087b1	movl	0xd0(%ebp),%edx
000087b4	movl	0x08(%ebp),%ecx
000087b7	movw	%ax,0xac(%ebp)
000087bb	movzbl	0x05(%edx),%eax
000087bf	movl	%ecx,(%esp)
000087c2	movl	%eax,0x04(%esp)
000087c6	calll	0x000053bb
000087cb	movl	0xd0(%ebp),%edx
000087ce	movl	0x08(%ebp),%ecx
000087d1	movb	%al,0xaf(%ebp)
000087d4	movzbl	0x04(%edx),%eax
000087d8	movl	%ecx,(%esp)
000087db	movl	%eax,0x04(%esp)
000087df	calll	0x000053bb
000087e4	leal	0xe7(%ebp),%edx
000087e7	movl	0x08(%ebp),%ecx
000087ea	movl	%edx,0x20(%esp)
000087ee	movl	0x10(%ebp),%edx
000087f1	movl	%edi,0x14(%esp)
000087f5	movl	$__mh_dylib_header,0x18(%esp)
000087fd	movl	%esi,0x04(%esp)
00008801	movl	%edx,0x1c(%esp)
00008805	movzwl	0xac(%ebp),%edx
00008809	movzbl	%al,%eax
0000880c	movl	%eax,0x08(%esp)
00008810	movl	%ecx,(%esp)
00008813	movl	%edx,0x10(%esp)
00008817	movzbl	0xaf(%ebp),%edx
0000881b	movl	%edx,0x0c(%esp)
0000881f	call	*0x0c(%ebp)
00008822	testl	%eax,%eax
00008824	jne	0x00008841
00008826	addl	$0x0c,0xd0(%ebp)
0000882a	cmpb	$__mh_dylib_header,0xe7(%ebp)
0000882e	jne	0x0000883f
00008830	incl	0xd4(%ebp)
00008833	movl	0xb8(%ebp),%esi
00008836	cmpl	%esi,0xd4(%ebp)
00008839	jb	0x00008763
0000883f	xorl	%eax,%eax
00008841	addl	$0x0000009c,%esp
00008847	popl	%ebx
00008848	popl	%esi
00008849	popl	%edi
0000884a	leave
0000884b	ret
_QMOImageLookupSymbol:
0000884c	pushl	%ebp
0000884d	movl	%esp,%ebp
0000884f	pushl	%esi
00008850	pushl	%ebx
00008851	subl	$0x20,%esp
00008854	movl	0x08(%ebp),%edx
00008857	calll	0x0000885c
0000885c	popl	%ebx
0000885d	movl	0x0c(%ebp),%ecx
00008860	movl	0x10(%ebp),%esi
00008863	testl	%edx,%edx
00008865	je	0x000088ae
00008867	movl	0x0c(%edx),%eax
0000886a	testl	%eax,%eax
0000886c	je	0x000088ae
0000886e	cmpl	$0x1b,0x14(%edx)
00008872	jbe	0x000088ae
00008874	movl	0x2c(%edx),%eax
00008877	testl	%eax,%eax
00008879	je	0x000088ae
0000887b	movl	0x30(%edx),%eax
0000887e	testl	%eax,%eax
00008880	je	0x000088ae
00008882	movl	(%eax),%eax
00008884	testl	%eax,%eax
00008886	je	0x000088ae
00008888	movl	0x34(%edx),%eax
0000888b	testl	%eax,%eax
0000888d	je	0x000088ae
0000888f	movl	0x38(%edx),%eax
00008892	testl	%eax,%eax
00008894	je	0x000088ae
00008896	movl	(%eax),%eax
00008898	testl	%eax,%eax
0000889a	je	0x000088ae
0000889c	movl	0x3c(%edx),%eax
0000889f	testl	%eax,%eax
000088a1	je	0x000088ae
000088a3	cmpl	$__mh_dylib_header,0x40(%edx)
000088a7	movl	$0x00000001,%eax
000088ac	jne	0x000088b0
000088ae	xorl	%eax,%eax
000088b0	testl	%eax,%eax
000088b2	jne	0x000088c8
000088b4	leal	0x000039d6(%ebx),%eax
000088ba	movl	%eax,0x0c(%esp)
000088be	movl	$0x0000095a,0x08(%esp)
000088c6	jmp	0x000088de
000088c8	testl	%ecx,%ecx
000088ca	jne	0x000088f6
000088cc	leal	0x00003e5a(%ebx),%eax
000088d2	movl	%eax,0x0c(%esp)
000088d6	movl	$0x0000095b,0x08(%esp)
000088de	leal	0x00003628(%ebx),%eax
000088e4	movl	%eax,0x04(%esp)
000088e8	leal	0x0000312c(%ebx),%eax
000088ee	movl	%eax,(%esp)
000088f1	calll	___eprintf
000088f6	testl	%esi,%esi
000088f8	jne	0x0000890e
000088fa	leal	0x00002d98(%ebx),%eax
00008900	movl	%eax,0x0c(%esp)
00008904	movl	$0x0000095c,0x08(%esp)
0000890c	jmp	0x000088de
0000890e	leal	0xe8(%ebp),%eax
00008911	movl	%eax,0x08(%esp)
00008915	leal	0x00000104(%ebx),%eax
0000891b	movl	%ecx,0xe8(%ebp)
0000891e	movl	$__mh_dylib_header,0xec(%ebp)
00008925	movl	$__mh_dylib_header,0xf0(%ebp)
0000892c	movb	$__mh_dylib_header,0xf4(%ebp)
00008930	movl	%eax,0x04(%esp)
00008934	movl	%edx,(%esp)
00008937	calll	0x000083bc
0000893c	testl	%eax,%eax
0000893e	movl	%eax,%ecx
00008940	jne	0x00008957
00008942	cmpb	$__mh_dylib_header,0xf4(%ebp)
00008946	jne	0x0000894c
00008948	movb	$0x03,%cl
0000894a	jmp	0x00008957
0000894c	movl	0xec(%ebp),%eax
0000894f	movl	0xf0(%ebp),%edx
00008952	movl	%eax,(%esi)
00008954	movl	%edx,0x04(%esi)
00008957	addl	$0x20,%esp
0000895a	movl	%ecx,%eax
0000895c	popl	%ebx
0000895d	popl	%esi
0000895e	leave
0000895f	ret
_SymbolByNameIterator:
00008960	pushl	%ebp
00008961	movl	%esp,%ebp
00008963	subl	$0x38,%esp
00008966	movl	%edi,0xfc(%ebp)
00008969	movl	0x08(%ebp),%edi
0000896c	movl	0x20(%ebp),%edx
0000896f	movl	0x1c(%ebp),%eax
00008972	movl	%ebx,0xf4(%ebp)
00008975	movl	0x0c(%ebp),%ecx
00008978	calll	0x0000897d
0000897d	popl	%ebx
0000897e	testl	%edi,%edi
00008980	movl	%edx,0xe4(%ebp)
00008983	movzbl	0x10(%ebp),%edx
00008987	movl	%esi,0xf8(%ebp)
0000898a	movl	%eax,0xe0(%ebp)
0000898d	je	0x000089d7
0000898f	movl	0x0c(%edi),%eax
00008992	testl	%eax,%eax
00008994	je	0x000089d7
00008996	cmpl	$0x1b,0x14(%edi)
0000899a	jbe	0x000089d7
0000899c	movl	0x2c(%edi),%eax
0000899f	testl	%eax,%eax
000089a1	je	0x000089d7
000089a3	movl	0x30(%edi),%eax
000089a6	testl	%eax,%eax
000089a8	je	0x000089d7
000089aa	movl	(%eax),%eax
000089ac	testl	%eax,%eax
000089ae	je	0x000089d7
000089b0	movl	0x34(%edi),%eax
000089b3	testl	%eax,%eax
000089b5	je	0x000089d7
000089b7	movl	0x38(%edi),%eax
000089ba	testl	%eax,%eax
000089bc	je	0x000089d7
000089be	movl	(%eax),%eax
000089c0	testl	%eax,%eax
000089c2	je	0x000089d7
000089c4	movl	0x3c(%edi),%eax
000089c7	testl	%eax,%eax
000089c9	je	0x000089d7
000089cb	movl	0x40(%edi),%esi
000089ce	movl	$0x00000001,%eax
000089d3	testl	%esi,%esi
000089d5	jne	0x000089d9
000089d7	xorl	%eax,%eax
000089d9	testl	%eax,%eax
000089db	jne	0x000089f1
000089dd	leal	0x000038b5(%ebx),%eax
000089e3	movl	%eax,0x0c(%esp)
000089e7	movl	$0x0000092e,0x08(%esp)
000089ef	jmp	0x00008a07
000089f1	testl	%ecx,%ecx
000089f3	jne	0x00008a1f
000089f5	leal	0x00003213(%ebx),%eax
000089fb	movl	%eax,0x0c(%esp)
000089ff	movl	$0x0000092f,0x08(%esp)
00008a07	leal	0x00003507(%ebx),%eax
00008a0d	movl	%eax,0x04(%esp)
00008a11	leal	0x0000300b(%ebx),%eax
00008a17	movl	%eax,(%esp)
00008a1a	calll	___eprintf
00008a1f	movl	0x28(%ebp),%eax
00008a22	testl	%eax,%eax
00008a24	jne	0x00008a3a
00008a26	leal	0x00003d4b(%ebx),%eax
00008a2c	movl	%eax,0x0c(%esp)
00008a30	movl	$0x00000930,0x08(%esp)
00008a38	jmp	0x00008a07
00008a3a	movl	0x28(%ebp),%eax
00008a3d	cmpb	$__mh_dylib_header,(%eax)
00008a40	je	0x00008a56
00008a42	leal	0x00003d5b(%ebx),%eax
00008a48	movl	%eax,0x0c(%esp)
00008a4c	movl	$0x00000931,0x08(%esp)
00008a54	jmp	0x00008a07
00008a56	movzbl	%dl,%esi
00008a59	testl	$0x000000e0,%esi
00008a5f	jne	0x00008aaa
00008a61	movl	0x24(%ebp),%edx
00008a64	movl	(%edx),%eax
00008a66	movl	%ecx,(%esp)
00008a69	movl	%eax,0x04(%esp)
00008a6d	calll	0x0000e112	; symbol stub for: _strcmp
00008a72	testl	%eax,%eax
00008a74	jne	0x00008aaa
00008a76	movl	%esi,%eax
00008a78	andl	$0x0e,%eax
00008a7b	cmpl	$0x02,%eax
00008a7e	je	0x00008a91
00008a80	cmpl	$0x0e,%eax
00008a83	jne	0x00008aaa
00008a85	movl	0x20(%edi),%edx
00008a88	movl	0x24(%edi),%ecx
00008a8b	addl	%edx,0xe0(%ebp)
00008a8e	adcl	%ecx,0xe4(%ebp)
00008a91	movl	0xe0(%ebp),%eax
00008a94	movl	0xe4(%ebp),%edx
00008a97	movl	0x24(%ebp),%ecx
00008a9a	movl	%eax,0x04(%ecx)
00008a9d	movl	%edx,0x08(%ecx)
00008aa0	movb	$0x01,0x0c(%ecx)
00008aa4	movl	0x28(%ebp),%eax
00008aa7	movb	$0x01,(%eax)
00008aaa	movl	0xf4(%ebp),%ebx
00008aad	xorl	%eax,%eax
00008aaf	movl	0xf8(%ebp),%esi
00008ab2	movl	0xfc(%ebp),%edi
00008ab5	leave
00008ab6	ret
_ImageListForTaskOldWithNames:
00008ab7	pushl	%ebp
00008ab8	movl	%esp,%ebp
00008aba	pushl	%edi
00008abb	pushl	%esi
00008abc	movl	%ecx,%esi
00008abe	pushl	%ebx
00008abf	calll	0x00008ac4
00008ac4	popl	%ebx
00008ac5	subl	$0x0000047c,%esp
00008acb	movl	0x08(%ebp),%edi
00008ace	movl	%eax,0xfffffba4(%ebp)
00008ad4	movl	%edx,0xfffffba0(%ebp)
00008ada	movl	%edx,(%esp)
00008add	calll	0x00005e8e
00008ae2	testb	%al,%al
00008ae4	je	0x00008afa
00008ae6	leal	0x00003c28(%ebx),%eax
00008aec	movl	%eax,0x0c(%esp)
00008af0	movl	$0x0000014c,0x08(%esp)
00008af8	jmp	0x00008b16
00008afa	movl	0xfffffba4(%ebp),%eax
00008b00	testl	%eax,%eax
00008b02	jne	0x00008b2e
00008b04	leal	0x00002a48(%ebx),%eax
00008b0a	movl	%eax,0x0c(%esp)
00008b0e	movl	$0x0000014e,0x08(%esp)
00008b16	leal	0x00003c48(%ebx),%eax
00008b1c	movl	%eax,0x04(%esp)
00008b20	leal	0x00002ec4(%ebx),%eax
00008b26	movl	%eax,(%esp)
00008b29	calll	___eprintf
00008b2e	movl	0xfffffba0(%ebp),%eax
00008b34	testl	%eax,%eax
00008b36	jne	0x00008b4c
00008b38	leal	0x00003c81(%ebx),%eax
00008b3e	movl	%eax,0x0c(%esp)
00008b42	movl	$0x0000014f,0x08(%esp)
00008b4a	jmp	0x00008b16
00008b4c	testl	%esi,%esi
00008b4e	jne	0x00008b64
00008b50	leal	0x00003c93(%ebx),%eax
00008b56	movl	%eax,0x0c(%esp)
00008b5a	movl	$0x00000150,0x08(%esp)
00008b62	jmp	0x00008b16
00008b64	testl	%edi,%edi
00008b66	jne	0x00008b7c
00008b68	leal	0x00003ca8(%ebx),%eax
00008b6e	movl	%eax,0x0c(%esp)
00008b72	movl	$0x00000151,0x08(%esp)
00008b7a	jmp	0x00008b16
00008b7c	movl	0x0c(%ebp),%eax
00008b7f	testl	%eax,%eax
00008b81	jne	0x00008b9a
00008b83	leal	0x00003cbe(%ebx),%eax
00008b89	movl	%eax,0x0c(%esp)
00008b8d	movl	$0x00000152,0x08(%esp)
00008b95	jmp	0x00008b16
00008b9a	movl	0x10(%ebp),%ecx
00008b9d	testl	%ecx,%ecx
00008b9f	sete	%dl
00008ba2	xorl	%eax,%eax
00008ba4	cmpl	$__mh_dylib_header,0x14(%ebp)
00008ba8	setne	%al
00008bab	testl	%edx,%eax
00008bad	je	0x00008bc6
00008baf	leal	0x00003cd4(%ebx),%eax
00008bb5	movl	%eax,0x0c(%esp)
00008bb9	movl	$0x00000153,0x08(%esp)
00008bc1	jmp	0x00008b16
00008bc6	movl	0x18(%ebp),%edx
00008bc9	testl	%edx,%edx
00008bcb	jne	0x00008be4
00008bcd	leal	0x000031c6(%ebx),%eax
00008bd3	movl	%eax,0x0c(%esp)
00008bd7	movl	$0x00000154,0x08(%esp)
00008bdf	jmp	0x00008b16
00008be4	leal	0xd0(%ebp),%eax
00008be7	movl	%eax,0x08(%esp)
00008beb	movl	0xfffffba0(%ebp),%eax
00008bf1	movl	%esi,0x04(%esp)
00008bf5	movl	%eax,(%esp)
00008bf8	calll	0x0000884c
00008bfd	testl	%eax,%eax
00008bff	movl	%eax,%esi
00008c01	jne	0x00008ee2
00008c07	movl	0xfffffba0(%ebp),%edx
00008c0d	leal	0xc0(%ebp),%eax
00008c10	movl	%eax,0x08(%esp)
00008c14	movl	%edi,0x04(%esp)
00008c18	movl	%edx,(%esp)
00008c1b	calll	0x0000884c
00008c20	testl	%eax,%eax
00008c22	movl	%eax,%esi
00008c24	jne	0x00008ee2
00008c2a	leal	0xc8(%ebp),%eax
00008c2d	movl	0xfffffba0(%ebp),%edx
00008c33	movl	%eax,0x08(%esp)
00008c37	movl	0x0c(%ebp),%eax
00008c3a	movl	%edx,(%esp)
00008c3d	movl	%eax,0x04(%esp)
00008c41	calll	0x0000884c
00008c46	testl	%eax,%eax
00008c48	movl	%eax,%esi
00008c4a	jne	0x00008ee2
00008c50	leal	0xe4(%ebp),%eax
00008c53	movl	0xc4(%ebp),%edx
00008c56	movl	%eax,0x10(%esp)
00008c5a	movl	0xc0(%ebp),%eax
00008c5d	movl	$0x00000004,0x0c(%esp)
00008c65	movl	%edx,0x08(%esp)
00008c69	movl	%eax,0x04(%esp)
00008c6d	movl	0xfffffba4(%ebp),%eax
00008c73	movl	%eax,(%esp)
00008c76	calll	0x00002f7c
00008c7b	testl	%eax,%eax
00008c7d	movl	%eax,%esi
00008c7f	jne	0x00008ee2
00008c85	movl	0xcc(%ebp),%edx
00008c88	leal	0xe0(%ebp),%eax
00008c8b	movl	%eax,0x10(%esp)
00008c8f	movl	0xc8(%ebp),%eax
00008c92	movl	$0x00000004,0x0c(%esp)
00008c9a	movl	%edx,0x08(%esp)
00008c9e	movl	0xfffffba4(%ebp),%edx
00008ca4	movl	%eax,0x04(%esp)
00008ca8	movl	%edx,(%esp)
00008cab	calll	0x00002f7c
00008cb0	testl	%eax,%eax
00008cb2	movl	%eax,%esi
00008cb4	jne	0x00008ee2
00008cba	movl	0xe4(%ebp),%eax
00008cbd	movl	%eax,0x04(%esp)
00008cc1	movl	0xfffffba0(%ebp),%eax
00008cc7	movl	%eax,(%esp)
00008cca	calll	0x0000548f
00008ccf	movl	0xfffffba0(%ebp),%edx
00008cd5	movl	%edx,(%esp)
00008cd8	movl	%eax,0xe4(%ebp)
00008cdb	movl	0xe0(%ebp),%eax
00008cde	movl	%eax,0x04(%esp)
00008ce2	calll	0x0000548f
00008ce7	leal	0xfffffbc0(%ebp),%edx
00008ced	movl	%edx,0xfffffb98(%ebp)
00008cf3	movl	%eax,0xe0(%ebp)
00008cf6	imull	0xe4(%ebp),%eax
00008cfa	addl	$0x08,%eax
00008cfd	movl	%eax,0xfffffba8(%ebp)
00008d03	leal	0xdc(%ebp),%eax
00008d06	movl	%eax,0xfffffb9c(%ebp)
00008d0c	movl	0xfffffb9c(%ebp),%eax
00008d12	movl	0xfffffba8(%ebp),%edx
00008d18	movl	$__mh_dylib_header,0xdc(%ebp)
00008d1f	movl	%eax,0x10(%esp)
00008d23	movl	0xd0(%ebp),%eax
00008d26	movl	%edx,0x0c(%esp)
00008d2a	movl	0xd4(%ebp),%edx
00008d2d	movl	%eax,0x04(%esp)
00008d31	movl	0xfffffba4(%ebp),%eax
00008d37	movl	%edx,0x08(%esp)
00008d3b	movl	%eax,(%esp)
00008d3e	calll	0x0000311c
00008d43	testl	%eax,%eax
00008d45	movl	%eax,%esi
00008d47	jne	0x00008ebd
00008d4d	movl	0xe4(%ebp),%eax
00008d50	xorl	%edi,%edi
00008d52	movl	0xdc(%ebp),%edx
00008d55	imull	0xe0(%ebp),%eax
00008d59	movl	(%eax,%edx),%eax
00008d5c	movl	0xfffffba0(%ebp),%edx
00008d62	movl	%eax,0x04(%esp)
00008d66	movl	%edx,(%esp)
00008d69	calll	0x0000548f
00008d6e	movl	%eax,0xfffffbac(%ebp)
00008d74	jmp	0x00008e83
00008d79	movl	0xdc(%ebp),%eax
00008d7c	movl	%edi,%edx
00008d7e	imull	0xe0(%ebp),%edx
00008d82	movl	0x0c(%edx,%eax),%eax
00008d86	movl	%eax,0x04(%esp)
00008d8a	movl	0xfffffba0(%ebp),%eax
00008d90	movl	%eax,(%esp)
00008d93	calll	0x0000548f
00008d98	testl	%eax,%eax
00008d9a	je	0x00008e82
00008da0	movl	0x10(%ebp),%eax
00008da3	testl	%eax,%eax
00008da5	je	0x00008e79
00008dab	movl	0x18(%ebp),%edx
00008dae	movl	0x14(%ebp),%eax
00008db1	cmpl	(%edx),%eax
00008db3	jbe	0x00008e79
00008db9	movl	0xdc(%ebp),%eax
00008dbc	movl	%edi,%edx
00008dbe	imull	0xe0(%ebp),%edx
00008dc2	movl	0x08(%edx,%eax),%eax
00008dc6	movl	0xfffffba0(%ebp),%edx
00008dcc	movl	%eax,0x04(%esp)
00008dd0	movl	%edx,(%esp)
00008dd3	calll	0x0000548f
00008dd8	movl	%edi,%edx
00008dda	imull	0xe0(%ebp),%edx
00008dde	movl	$__mh_dylib_header,0xfffffbb4(%ebp)
00008de8	movl	%eax,0xfffffbb0(%ebp)
00008dee	movl	0xdc(%ebp),%eax
00008df1	movl	(%edx,%eax),%eax
00008df4	movl	%eax,0x04(%esp)
00008df8	movl	0xfffffba0(%ebp),%eax
00008dfe	movl	%eax,(%esp)
00008e01	calll	0x0000548f
00008e06	movl	0xfffffb98(%ebp),%edx
00008e0c	movl	$0x00000400,0x0c(%esp)
00008e14	movl	$__mh_dylib_header,0x08(%esp)
00008e1c	movl	%edx,0x10(%esp)
00008e20	movl	%eax,0x04(%esp)
00008e24	movl	0xfffffba4(%ebp),%eax
00008e2a	movl	%eax,(%esp)
00008e2d	calll	0x00002f7c
00008e32	testl	%eax,%eax
00008e34	movl	%eax,%esi
00008e36	jne	0x00008e79
00008e38	movl	0x18(%ebp),%edx
00008e3b	movb	$__mh_dylib_header,0xbf(%ebp)
00008e3f	movl	(%edx),%eax
00008e41	movl	0x10(%ebp),%edx
00008e44	leal	(%edx,%eax,4),%eax
00008e47	movl	0xfffffbb4(%ebp),%edx
00008e4d	movl	%eax,0x10(%esp)
00008e51	movl	0xfffffb98(%ebp),%eax
00008e57	movl	%edx,0x08(%esp)
00008e5b	movl	0xfffffba4(%ebp),%edx
00008e61	movl	%eax,0x0c(%esp)
00008e65	movl	0xfffffbb0(%ebp),%eax
00008e6b	movl	%edx,(%esp)
00008e6e	movl	%eax,0x04(%esp)
00008e72	calll	0x00007565
00008e77	movl	%eax,%esi
00008e79	movl	0x18(%ebp),%eax
00008e7c	incl	(%eax)
00008e7e	testl	%esi,%esi
00008e80	jne	0x00008ebd
00008e82	incl	%edi
00008e83	cmpl	0xfffffbac(%ebp),%edi
00008e89	jb	0x00008d79
00008e8f	testl	%esi,%esi
00008e91	jne	0x00008ebd
00008e93	movl	0xe4(%ebp),%eax
00008e96	movl	0xdc(%ebp),%edx
00008e99	imull	0xe0(%ebp),%eax
00008e9d	movl	0x04(%eax,%edx),%eax
00008ea1	movl	0xfffffba0(%ebp),%edx
00008ea7	movl	%eax,0x04(%esp)
00008eab	movl	%edx,(%esp)
00008eae	calll	0x0000548f
00008eb3	movl	$__mh_dylib_header,0xd4(%ebp)
00008eba	movl	%eax,0xd0(%ebp)
00008ebd	movl	0xfffffba8(%ebp),%eax
00008ec3	movl	%eax,0x04(%esp)
00008ec7	movl	0xdc(%ebp),%eax
00008eca	movl	%eax,(%esp)
00008ecd	calll	0x00002cf2
00008ed2	testl	%esi,%esi
00008ed4	jne	0x00008ee2
00008ed6	movl	0xd4(%ebp),%eax
00008ed9	orl	0xd0(%ebp),%eax
00008edc	jne	0x00008d0c
00008ee2	addl	$0x0000047c,%esp
00008ee8	movl	%esi,%eax
00008eea	popl	%ebx
00008eeb	popl	%esi
00008eec	popl	%edi
00008eed	leave
00008eee	ret
_SortByMachHeader:
00008eef	pushl	%ebp
00008ef0	movl	%esp,%ebp
00008ef2	subl	$0x18,%esp
00008ef5	movl	0x08(%ebp),%eax
00008ef8	movl	%esi,0xf8(%ebp)
00008efb	movl	%edi,0xfc(%ebp)
00008efe	movl	(%eax),%eax
00008f00	movl	%eax,(%esp)
00008f03	calll	0x00005fba
00008f08	movl	%eax,%esi
00008f0a	movl	0x0c(%ebp),%eax
00008f0d	movl	%edx,%edi
00008f0f	movl	(%eax),%eax
00008f11	movl	%eax,(%esp)
00008f14	calll	0x00005fba
00008f19	cmpl	%edx,%edi
00008f1b	ja	0x00008f34
00008f1d	jb	0x00008f23
00008f1f	cmpl	%eax,%esi
00008f21	jae	0x00008f2a
00008f23	movl	$0xffffffff,%eax
00008f28	jmp	0x00008f3d
00008f2a	cmpl	%edx,%edi
00008f2c	jb	0x00008f3b
00008f2e	ja	0x00008f34
00008f30	cmpl	%eax,%esi
00008f32	jbe	0x00008f3b
00008f34	movl	$0x00000001,%eax
00008f39	jmp	0x00008f3d
00008f3b	xorl	%eax,%eax
00008f3d	movl	0xf8(%ebp),%esi
00008f40	movl	0xfc(%ebp),%edi
00008f43	leave
00008f44	ret
_QMOImageListDestroy:
00008f45	pushl	%ebp
00008f46	movl	%esp,%ebp
00008f48	pushl	%edi
00008f49	pushl	%esi
00008f4a	pushl	%ebx
00008f4b	subl	$0x1c,%esp
00008f4e	movl	0x08(%ebp),%ecx
00008f51	calll	0x00008f56
00008f56	popl	%ebx
00008f57	testl	%ecx,%ecx
00008f59	sete	%dl
00008f5c	xorl	%eax,%eax
00008f5e	cmpl	$__mh_dylib_header,0x0c(%ebp)
00008f62	setne	%al
00008f65	testl	%edx,%eax
00008f67	je	0x00008f93
00008f69	leal	0x00003872(%ebx),%eax
00008f6f	movl	%eax,0x0c(%esp)
00008f73	leal	0x000037b6(%ebx),%eax
00008f79	movl	%eax,0x04(%esp)
00008f7d	leal	0x00002a32(%ebx),%eax
00008f83	movl	$0x00000204,0x08(%esp)
00008f8b	movl	%eax,(%esp)
00008f8e	calll	___eprintf
00008f93	xorl	%edi,%edi
00008f95	testl	%ecx,%ecx
00008f97	movl	%ecx,%esi
00008f99	jne	0x00008fb1
00008f9b	jmp	0x00008fb6
00008f9d	movl	(%esi),%eax
00008f9f	incl	%edi
00008fa0	movl	%eax,(%esp)
00008fa3	calll	0x00004c07
00008fa8	movl	$__mh_dylib_header,(%esi)
00008fae	addl	$0x04,%esi
00008fb1	cmpl	0x0c(%ebp),%edi
00008fb4	jb	0x00008f9d
00008fb6	addl	$0x1c,%esp
00008fb9	popl	%ebx
00008fba	popl	%esi
00008fbb	popl	%edi
00008fbc	leave
00008fbd	ret
_QMOImageListFromSelf:
00008fbe	pushl	%ebp
00008fbf	movl	%esp,%ebp
00008fc1	pushl	%edi
00008fc2	pushl	%esi
00008fc3	pushl	%ebx
00008fc4	subl	$0x2c,%esp
00008fc7	movl	0x08(%ebp),%ecx
00008fca	calll	0x00008fcf
00008fcf	popl	%ebx
00008fd0	testl	%ecx,%ecx
00008fd2	sete	%dl
00008fd5	xorl	%eax,%eax
00008fd7	cmpl	$__mh_dylib_header,0x0c(%ebp)
00008fdb	setne	%al
00008fde	testl	%edx,%eax
00008fe0	je	0x00008ff6
00008fe2	leal	0x000037f9(%ebx),%eax
00008fe8	movl	%eax,0x0c(%esp)
00008fec	movl	$0x00000227,0x08(%esp)
00008ff4	jmp	0x0000900f
00008ff6	movl	0x10(%ebp),%edx
00008ff9	testl	%edx,%edx
00008ffb	jne	0x00009027
00008ffd	leal	0x00002cbb(%ebx),%eax
00009003	movl	%eax,0x0c(%esp)
00009007	movl	$0x00000228,0x08(%esp)
0000900f	leal	0x0000373d(%ebx),%eax
00009015	movl	%eax,0x04(%esp)
00009019	leal	0x000029b9(%ebx),%eax
0000901f	movl	%eax,(%esp)
00009022	calll	___eprintf
00009027	movl	0x08(%ebp),%eax
0000902a	testl	%eax,%eax
0000902c	je	0x0000904b
0000902e	movl	0x0c(%ebp),%eax
00009031	movl	$__mh_dylib_header,0x04(%esp)
00009039	shll	$0x02,%eax
0000903c	movl	%eax,0x08(%esp)
00009040	movl	0x08(%ebp),%eax
00009043	movl	%eax,(%esp)
00009046	calll	0x0000e0cc	; symbol stub for: _memset
0000904b	calll	0x0000e059	; symbol stub for: __dyld_image_count
00009050	movl	0x10(%ebp),%edx
00009053	xorl	%esi,%esi
00009055	xorl	%edi,%edi
00009057	movl	%eax,(%edx)
00009059	movl	0x08(%ebp),%eax
0000905c	movl	%eax,0xe4(%ebp)
0000905f	jmp	0x000090a3
00009061	movl	0x08(%ebp),%eax
00009064	testl	%eax,%eax
00009066	setne	%dl
00009069	cmpl	0x0c(%ebp),%edi
0000906c	setb	%al
0000906f	testb	%al,%dl
00009071	je	0x0000909e
00009073	movl	%edi,(%esp)
00009076	calll	0x0000e04f	; symbol stub for: __dyld_get_image_header
0000907b	movl	%edi,(%esp)
0000907e	movl	%eax,%esi
00009080	calll	0x0000e054	; symbol stub for: __dyld_get_image_name
00009085	movl	0xe4(%ebp),%edx
00009088	movl	%esi,(%esp)
0000908b	movl	%edx,0x08(%esp)
0000908f	movl	%eax,0x04(%esp)
00009093	calll	0x000074c3
00009098	testl	%eax,%eax
0000909a	movl	%eax,%esi
0000909c	jne	0x000090aa
0000909e	addl	$0x04,0xe4(%ebp)
000090a2	incl	%edi
000090a3	movl	0x10(%ebp),%eax
000090a6	cmpl	(%eax),%edi
000090a8	jb	0x00009061
000090aa	movl	0x08(%ebp),%eax
000090ad	testl	%esi,%esi
000090af	sete	%dl
000090b2	testl	%eax,%eax
000090b4	setne	%al
000090b7	testb	%al,%dl
000090b9	je	0x000090e8
000090bb	movl	0x10(%ebp),%edx
000090be	leal	0xffffff20(%ebx),%eax
000090c4	movl	%eax,0x0c(%esp)
000090c8	movl	$0x00000004,0x08(%esp)
000090d0	movl	(%edx),%eax
000090d2	cmpl	%eax,0x0c(%ebp)
000090d5	cmovbel	0x0c(%ebp),%eax
000090d9	movl	%eax,0x04(%esp)
000090dd	movl	0x08(%ebp),%eax
000090e0	movl	%eax,(%esp)
000090e3	calll	0x0000e0f9	; symbol stub for: _qsort
000090e8	testl	%esi,%esi
000090ea	je	0x000090fe
000090ec	movl	0x0c(%ebp),%edx
000090ef	movl	0x08(%ebp),%eax
000090f2	movl	%edx,0x04(%esp)
000090f6	movl	%eax,(%esp)
000090f9	calll	0x00008f45
000090fe	addl	$0x2c,%esp
00009101	movl	%esi,%eax
00009103	popl	%ebx
00009104	popl	%esi
00009105	popl	%edi
00009106	leave
00009107	ret
_QMOImageListFromTask:
00009108	pushl	%ebp
00009109	movl	%esp,%ebp
0000910b	pushl	%edi
0000910c	pushl	%esi
0000910d	pushl	%ebx
0000910e	subl	$0x0000048c,%esp
00009114	movl	0x08(%ebp),%edi
00009117	calll	0x0000911c
0000911c	popl	%ebx
0000911d	movl	0x0c(%ebp),%esi
00009120	testl	%edi,%edi
00009122	jne	0x00009138
00009124	leal	0x000023f0(%ebx),%eax
0000912a	movl	%eax,0x0c(%esp)
0000912e	movl	$0x0000025b,0x08(%esp)
00009136	jmp	0x0000915f
00009138	movl	0x10(%ebp),%eax
0000913b	testl	%eax,%eax
0000913d	sete	%dl
00009140	xorl	%eax,%eax
00009142	cmpl	$__mh_dylib_header,0x14(%ebp)
00009146	setne	%al
00009149	testl	%edx,%eax
0000914b	je	0x00009177
0000914d	leal	0x000036ac(%ebx),%eax
00009153	movl	%eax,0x0c(%esp)
00009157	movl	$0x0000025c,0x08(%esp)
0000915f	leal	0x000035f0(%ebx),%eax
00009165	movl	%eax,0x04(%esp)
00009169	leal	0x0000286c(%ebx),%eax
0000916f	movl	%eax,(%esp)
00009172	calll	___eprintf
00009177	movl	0x18(%ebp),%eax
0000917a	testl	%eax,%eax
0000917c	jne	0x00009192
0000917e	leal	0x00002b6e(%ebx),%eax
00009184	movl	%eax,0x0c(%esp)
00009188	movl	$0x0000025d,0x08(%esp)
00009190	jmp	0x0000915f
00009192	movl	0x00004ee4(%ebx),%eax
00009198	cmpl	(%eax),%edi
0000919a	jne	0x000091ce
0000919c	calll	0x00005abd
000091a1	cmpl	%eax,%esi
000091a3	jne	0x000091ce
000091a5	cmpb	$__mh_dylib_header,0x00003ef9(%ebx)
000091ac	je	0x000091ce
000091ae	movl	0x18(%ebp),%eax
000091b1	movl	0x14(%ebp),%edx
000091b4	movl	0x10(%ebp),%ecx
000091b7	movl	%eax,0x08(%esp)
000091bb	movl	%edx,0x04(%esp)
000091bf	movl	%ecx,(%esp)
000091c2	calll	0x00008fbe
000091c7	movl	%eax,%esi
000091c9	jmp	0x0000969e
000091ce	movl	0x10(%ebp),%eax
000091d1	testl	%eax,%eax
000091d3	je	0x000091f2
000091d5	movl	0x14(%ebp),%eax
000091d8	movl	$__mh_dylib_header,0x04(%esp)
000091e0	shll	$0x02,%eax
000091e3	movl	%eax,0x08(%esp)
000091e7	movl	0x10(%ebp),%eax
000091ea	movl	%eax,(%esp)
000091ed	calll	0x0000e0cc	; symbol stub for: _memset
000091f2	leal	0xe4(%ebp),%eax
000091f5	movl	%esi,0x04(%esp)
000091f9	movl	$__mh_dylib_header,0xe4(%ebp)
00009200	movl	%eax,0x08(%esp)
00009204	movl	%edi,(%esp)
00009207	calll	0x00008166
0000920c	testl	%eax,%eax
0000920e	movl	%eax,%esi
00009210	jne	0x00009607
00009216	leal	0xd8(%ebp),%eax
00009219	movl	%eax,0x08(%esp)
0000921d	leal	0x000036db(%ebx),%eax
00009223	movl	%eax,0x04(%esp)
00009227	movl	0xe4(%ebp),%eax
0000922a	movl	%eax,(%esp)
0000922d	calll	0x0000884c
00009232	movzbl	0x00003efa(%ebx),%edx
00009239	orl	%edx,%eax
0000923b	jne	0x00009536
00009241	movl	0xe4(%ebp),%esi
00009244	movl	0xd8(%ebp),%edx
00009247	movl	0xdc(%ebp),%ecx
0000924a	testl	%esi,%esi
0000924c	movl	%esi,0xfffffb8c(%ebp)
00009252	jne	0x0000926b
00009254	leal	0x00003629(%ebx),%eax
0000925a	movl	%eax,0x0c(%esp)
0000925e	movl	$0x000000b4,0x08(%esp)
00009266	jmp	0x0000915f
0000926b	movl	%ecx,%eax
0000926d	orl	%edx,%eax
0000926f	jne	0x00009288
00009271	leal	0x000036f1(%ebx),%eax
00009277	movl	%eax,0x0c(%esp)
0000927b	movl	$0x000000b5,0x08(%esp)
00009283	jmp	0x0000915f
00009288	leal	0xc4(%ebp),%eax
0000928b	movl	$__mh_dylib_header,0xe0(%ebp)
00009292	movl	%eax,0x10(%esp)
00009296	movl	$0x00000014,0x0c(%esp)
0000929e	movl	%edx,0x04(%esp)
000092a2	movl	%ecx,0x08(%esp)
000092a6	movl	%edi,(%esp)
000092a9	calll	0x00002f7c
000092ae	movl	$__mh_dylib_header,0xfffffb98(%ebp)
000092b8	testl	%eax,%eax
000092ba	movl	%eax,%esi
000092bc	jne	0x0000951c
000092c2	movl	0xc4(%ebp),%eax
000092c5	movw	$0x0057,%si
000092c9	movl	0xfffffb8c(%ebp),%edx
000092cf	movl	%eax,0x04(%esp)
000092d3	movl	%edx,(%esp)
000092d6	calll	0x0000548f
000092db	movl	$__mh_dylib_header,0xfffffb98(%ebp)
000092e5	decl	%eax
000092e6	jne	0x0000951c
000092ec	jmp	0x00009668
000092f1	movl	0xfffffb8c(%ebp),%ecx
000092f7	movl	0xcc(%ebp),%eax
000092fa	movl	0xd0(%ebp),%edx
000092fd	movl	%ecx,(%esp)
00009300	movl	%eax,0x04(%esp)
00009304	movl	%edx,0x08(%esp)
00009308	calll	0x00004b93
0000930d	movl	0xfffffb90(%ebp),%esi
00009313	movl	%edx,%ecx
00009315	movl	%eax,%edx
00009317	leal	(%esi,%esi,2),%eax
0000931a	shll	$0x03,%eax
0000931d	jmp	0x00009344
0000931f	movl	0xcc(%ebp),%eax
00009322	movl	%eax,0x04(%esp)
00009326	movl	0xfffffb8c(%ebp),%eax
0000932c	movl	%eax,(%esp)
0000932f	calll	0x0000548f
00009334	movl	0xfffffb90(%ebp),%esi
0000933a	xorl	%ecx,%ecx
0000933c	movl	%eax,%edx
0000933e	leal	(%esi,%esi,2),%eax
00009341	shll	$0x02,%eax
00009344	movl	%eax,0xfffffb98(%ebp)
0000934a	leal	0xe0(%ebp),%eax
0000934d	movl	%eax,0x10(%esp)
00009351	movl	0xfffffb98(%ebp),%eax
00009357	movl	%edx,0x04(%esp)
0000935b	movl	%ecx,0x08(%esp)
0000935f	movl	%edi,(%esp)
00009362	movl	%eax,0x0c(%esp)
00009366	calll	0x0000311c
0000936b	testl	%eax,%eax
0000936d	movl	%eax,%esi
0000936f	jne	0x0000951c
00009375	movl	0xfffffb90(%ebp),%ecx
0000937b	movl	0x18(%ebp),%edx
0000937e	movl	%ecx,(%edx)
00009380	movl	0x10(%ebp),%eax
00009383	testl	%eax,%eax
00009385	je	0x0000951c
0000938b	movl	0xfffffb8c(%ebp),%eax
00009391	movl	%eax,(%esp)
00009394	calll	0x00005e8e
00009399	movl	0x10(%ebp),%edx
0000939c	leal	0xfffffbc4(%ebp),%ecx
000093a2	movl	$__mh_dylib_header,0xfffffb94(%ebp)
000093ac	movl	$__mh_dylib_header,0xfffffbb0(%ebp)
000093b6	movl	$__mh_dylib_header,0xfffffbb4(%ebp)
000093c0	movl	%edx,0xfffffbac(%ebp)
000093c6	movl	%ecx,0xfffffb88(%ebp)
000093cc	movb	%al,0xfffffb9f(%ebp)
000093d2	jmp	0x0000950a
000093d7	movl	0x14(%ebp),%eax
000093da	cmpl	%eax,0xfffffb94(%ebp)
000093e0	jae	0x000094ef
000093e6	cmpb	$__mh_dylib_header,0xfffffb9f(%ebp)
000093ed	je	0x00009444
000093ef	movl	0xfffffbb0(%ebp),%ecx
000093f5	movl	0xe0(%ebp),%eax
000093f8	movl	0xfffffb8c(%ebp),%esi
000093fe	movl	0x04(%eax,%ecx),%edx
00009402	movl	(%eax,%ecx),%eax
00009405	movl	%esi,(%esp)
00009408	movl	%edx,0x08(%esp)
0000940c	movl	%eax,0x04(%esp)
00009410	calll	0x00004b93
00009415	movl	0xfffffbb0(%ebp),%ecx
0000941b	movl	%eax,0xfffffba0(%ebp)
00009421	movl	0xe0(%ebp),%eax
00009424	movl	%edx,0xfffffba4(%ebp)
0000942a	movl	0x0c(%eax,%ecx),%edx
0000942e	movl	0x08(%eax,%ecx),%eax
00009432	movl	%esi,(%esp)
00009435	movl	%edx,0x08(%esp)
00009439	movl	%eax,0x04(%esp)
0000943d	calll	0x00004b93
00009442	jmp	0x0000948d
00009444	movl	0xfffffbb4(%ebp),%esi
0000944a	movl	0xe0(%ebp),%eax
0000944d	movl	(%eax,%esi),%eax
00009450	movl	%eax,0x04(%esp)
00009454	movl	0xfffffb8c(%ebp),%eax
0000945a	movl	%eax,(%esp)
0000945d	calll	0x0000548f
00009462	movl	0xfffffb8c(%ebp),%edx
00009468	movl	$__mh_dylib_header,0xfffffba4(%ebp)
00009472	movl	%eax,0xfffffba0(%ebp)
00009478	movl	0xe0(%ebp),%eax
0000947b	movl	0x04(%eax,%esi),%eax
0000947f	movl	%edx,(%esp)
00009482	movl	%eax,0x04(%esp)
00009486	calll	0x0000548f
0000948b	xorl	%edx,%edx
0000948d	movl	0xfffffb88(%ebp),%ecx
00009493	movl	$0x00000400,0x0c(%esp)
0000949b	movl	%eax,0x04(%esp)
0000949f	movl	%edx,0x08(%esp)
000094a3	movl	%ecx,0x10(%esp)
000094a7	movl	%edi,(%esp)
000094aa	calll	0x00002f7c
000094af	testl	%eax,%eax
000094b1	movl	%eax,%esi
000094b3	jne	0x0000951c
000094b5	movl	0xfffffbac(%ebp),%esi
000094bb	movl	0xfffffb88(%ebp),%eax
000094c1	movl	0xfffffba0(%ebp),%edx
000094c7	movl	0xfffffba4(%ebp),%ecx
000094cd	movl	%esi,0x10(%esp)
000094d1	movb	$__mh_dylib_header,0xc3(%ebp)
000094d5	movl	%eax,0x0c(%esp)
000094d9	movl	%edx,0x04(%esp)
000094dd	movl	%ecx,0x08(%esp)
000094e1	movl	%edi,(%esp)
000094e4	calll	0x00007565
000094e9	testl	%eax,%eax
000094eb	movl	%eax,%esi
000094ed	jne	0x0000951c
000094ef	incl	0xfffffb94(%ebp)
000094f5	addl	$0x04,0xfffffbac(%ebp)
000094fc	addl	$0x18,0xfffffbb0(%ebp)
00009503	addl	$0x0c,0xfffffbb4(%ebp)
0000950a	movl	0xfffffb90(%ebp),%ecx
00009510	cmpl	%ecx,0xfffffb94(%ebp)
00009516	jb	0x000093d7
0000951c	movl	0xfffffb98(%ebp),%eax
00009522	movl	%eax,0x04(%esp)
00009526	movl	0xe0(%ebp),%eax
00009529	movl	%eax,(%esp)
0000952c	calll	0x00002cf2
00009531	jmp	0x00009607
00009536	movl	0xe4(%ebp),%edx
00009539	testl	%edx,%edx
0000953b	movl	%edx,0xfffffba8(%ebp)
00009541	jne	0x0000955a
00009543	leal	0x00003629(%ebx),%eax
00009549	movl	%eax,0x0c(%esp)
0000954d	movl	$0x000001bf,0x08(%esp)
00009555	jmp	0x0000915f
0000955a	movl	0xfffffba8(%ebp),%ecx
00009560	movl	%ecx,(%esp)
00009563	calll	0x00005e8e
00009568	testb	%al,%al
0000956a	je	0x00009583
0000956c	leal	0x000035d0(%ebx),%eax
00009572	movl	%eax,0x0c(%esp)
00009576	movl	$0x000001c5,0x08(%esp)
0000957e	jmp	0x0000915f
00009583	movl	0x18(%ebp),%esi
00009586	leal	0x00003707(%ebx),%ecx
0000958c	movl	$__mh_dylib_header,(%esi)
00009592	movl	0x10(%ebp),%edx
00009595	movl	0x14(%ebp),%eax
00009598	movl	%esi,0x10(%esp)
0000959c	movl	%edx,0x08(%esp)
000095a0	movl	0xfffffba8(%ebp),%edx
000095a6	movl	%eax,0x0c(%esp)
000095aa	leal	0x00003717(%ebx),%eax
000095b0	movl	%eax,0x04(%esp)
000095b4	leal	0x0000372f(%ebx),%eax
000095ba	movl	%eax,(%esp)
000095bd	movl	%edi,%eax
000095bf	calll	0x00008ab7
000095c4	testl	%eax,%eax
000095c6	movl	%eax,%esi
000095c8	jne	0x00009607
000095ca	movl	0x10(%ebp),%eax
000095cd	movl	0x18(%ebp),%ecx
000095d0	movl	0x14(%ebp),%esi
000095d3	movl	0xfffffba8(%ebp),%edx
000095d9	movl	%eax,0x08(%esp)
000095dd	leal	0x00003753(%ebx),%eax
000095e3	movl	%eax,0x04(%esp)
000095e7	leal	0x0000376a(%ebx),%eax
000095ed	movl	%ecx,0x10(%esp)
000095f1	leal	0x00003744(%ebx),%ecx
000095f7	movl	%eax,(%esp)
000095fa	movl	%edi,%eax
000095fc	movl	%esi,0x0c(%esp)
00009600	calll	0x00008ab7
00009605	movl	%eax,%esi
00009607	movl	0x10(%ebp),%edi
0000960a	testl	%esi,%esi
0000960c	sete	%dl
0000960f	testl	%edi,%edi
00009611	setne	%al
00009614	testb	%al,%dl
00009616	je	0x00009645
00009618	movl	0x18(%ebp),%edx
0000961b	leal	0xfffffdd3(%ebx),%eax
00009621	movl	%eax,0x0c(%esp)
00009625	movl	0x10(%ebp),%ecx
00009628	movl	$0x00000004,0x08(%esp)
00009630	movl	(%edx),%eax
00009632	cmpl	%eax,0x14(%ebp)
00009635	cmovbel	0x14(%ebp),%eax
00009639	movl	%ecx,(%esp)
0000963c	movl	%eax,0x04(%esp)
00009640	calll	0x0000e0f9	; symbol stub for: _qsort
00009645	movl	0xe4(%ebp),%eax
00009648	movl	%eax,(%esp)
0000964b	calll	0x00004c07
00009650	testl	%esi,%esi
00009652	je	0x0000969e
00009654	movl	0x14(%ebp),%eax
00009657	movl	0x10(%ebp),%edx
0000965a	movl	%eax,0x04(%esp)
0000965e	movl	%edx,(%esp)
00009661	calll	0x00008f45
00009666	jmp	0x0000969e
00009668	movl	0xfffffb8c(%ebp),%ecx
0000966e	movl	0xc8(%ebp),%eax
00009671	movl	%ecx,(%esp)
00009674	movl	%eax,0x04(%esp)
00009678	calll	0x0000548f
0000967d	movl	0xfffffb8c(%ebp),%esi
00009683	movl	%esi,(%esp)
00009686	movl	%eax,0xfffffb90(%ebp)
0000968c	calll	0x00005e8e
00009691	testb	%al,%al
00009693	jne	0x000092f1
00009699	jmp	0x0000931f
0000969e	addl	$0x0000048c,%esp
000096a4	movl	%esi,%eax
000096a6	popl	%ebx
000096a7	popl	%esi
000096a8	popl	%edi
000096a9	leave
000096aa	ret
_QCRIsValid:
000096ab	pushl	%ebp
000096ac	movl	%esp,%ebp
000096ae	pushl	%edi
000096af	pushl	%esi
000096b0	subl	$0x08,%esp
000096b3	testl	%eax,%eax
000096b5	movl	%eax,0xf0(%ebp)
000096b8	je	0x000096f5
000096ba	movl	(%eax),%edx
000096bc	testl	%edx,%edx
000096be	je	0x000096f5
000096c0	cmpl	$0xff,0x08(%eax)
000096c4	je	0x000096f5
000096c6	movl	0x0c(%eax),%edi
000096c9	testl	%edi,%edi
000096cb	je	0x000096f5
000096cd	movl	0x10(%eax),%esi
000096d0	testl	%esi,%esi
000096d2	je	0x000096f5
000096d4	movl	0x14(%eax),%edx
000096d7	testl	%edx,%edx
000096d9	je	0x000096f5
000096db	movl	0x18(%eax),%ecx
000096de	testl	%ecx,%ecx
000096e0	je	0x000096f5
000096e2	movl	0x1c(%eax),%eax
000096e5	cmpl	$0xff,%eax
000096e8	je	0x000096ee
000096ea	cmpl	%eax,%edx
000096ec	jbe	0x000096f5
000096ee	movl	$0x00000001,%eax
000096f3	jmp	0x000096f7
000096f5	xorl	%eax,%eax
000096f7	testb	%al,%al
000096f9	je	0x00009751
000096fb	movl	0xf0(%ebp),%eax
000096fe	xorl	%edi,%edi
00009700	xorl	%esi,%esi
00009702	movl	0x14(%eax),%eax
00009705	movl	%eax,0xf4(%ebp)
00009708	movl	$0x00000001,%eax
0000970d	jmp	0x0000974c
0000970f	movl	0xf0(%ebp),%eax
00009712	movl	%esi,%ecx
00009714	addl	0x18(%eax),%ecx
00009717	movl	(%ecx),%eax
00009719	testl	%eax,%eax
0000971b	je	0x00009746
0000971d	movl	0x0c(%ecx),%eax
00009720	testl	%eax,%eax
00009722	movl	0x10(%ecx),%eax
00009725	setne	%dl
00009728	testl	%eax,%eax
0000972a	sete	%al
0000972d	cmpb	%al,%dl
0000972f	je	0x00009746
00009731	movl	0x18(%ecx),%edx
00009734	testl	%edx,%edx
00009736	je	0x0000973f
00009738	movl	0x14(%ecx),%eax
0000973b	testl	%eax,%eax
0000973d	je	0x00009746
0000973f	movl	$0x00000001,%eax
00009744	jmp	0x00009748
00009746	xorl	%eax,%eax
00009748	incl	%edi
00009749	addl	$0x1c,%esi
0000974c	cmpl	0xf4(%ebp),%edi
0000974f	jb	0x0000970f
00009751	addl	$0x08,%esp
00009754	movzbl	%al,%eax
00009757	popl	%esi
00009758	popl	%edi
00009759	leave
0000975a	ret
_QCRSetCrashedThreadIndex:
0000975b	pushl	%ebp
0000975c	movl	%esp,%ebp
0000975e	subl	$0x38,%esp
00009761	movl	%ebx,0xf4(%ebp)
00009764	calll	0x00009769
00009769	popl	%ebx
0000976a	movl	%esi,0xf8(%ebp)
0000976d	movl	0x08(%ebp),%esi
00009770	movl	%edi,0xfc(%ebp)
00009773	movl	0x0c(%ebp),%edi
00009776	movl	%esi,%eax
00009778	calll	0x000096ab
0000977d	testb	%al,%al
0000977f	jne	0x00009795
00009781	leal	0x00003133(%ebx),%eax
00009787	movl	%eax,0x0c(%esp)
0000978b	movl	$0x000002ca,0x08(%esp)
00009793	jmp	0x000097d9
00009795	cmpl	$0xff,%edi
00009798	je	0x000097a6
0000979a	movl	$0x00000016,0xe4(%ebp)
000097a1	cmpl	0x14(%esi),%edi
000097a4	jae	0x000097bc
000097a6	movl	$__mh_dylib_header,0xe4(%ebp)
000097ad	cmpl	0x1c(%esi),%edi
000097b0	je	0x000097bc
000097b2	movl	%edi,0x1c(%esi)
000097b5	movl	$__mh_dylib_header,0xe4(%ebp)
000097bc	movl	%esi,%eax
000097be	calll	0x000096ab
000097c3	testb	%al,%al
000097c5	jne	0x000097f1
000097c7	leal	0x00003133(%ebx),%eax
000097cd	movl	%eax,0x0c(%esp)
000097d1	movl	$0x000002d4,0x08(%esp)
000097d9	leal	0x00003147(%ebx),%eax
000097df	movl	%eax,0x04(%esp)
000097e3	leal	0x0000221f(%ebx),%eax
000097e9	movl	%eax,(%esp)
000097ec	calll	___eprintf
000097f1	movl	0xe4(%ebp),%eax
000097f4	movl	0xf4(%ebp),%ebx
000097f7	movl	0xf8(%ebp),%esi
000097fa	movl	0xfc(%ebp),%edi
000097fd	leave
000097fe	ret
_QCRDestroy:
000097ff	pushl	%ebp
00009800	movl	%esp,%ebp
00009802	pushl	%edi
00009803	pushl	%esi
00009804	pushl	%ebx
00009805	subl	$0x2c,%esp
00009808	movl	0x08(%ebp),%edi
0000980b	calll	0x00009810
00009810	popl	%ebx
00009811	testl	%edi,%edi
00009813	je	0x000098c1
00009819	movl	0x18(%edi),%ecx
0000981c	testl	%ecx,%ecx
0000981e	je	0x000098a7
00009824	movl	$__mh_dylib_header,0xe0(%ebp)
0000982b	movl	$__mh_dylib_header,0xe4(%ebp)
00009832	jmp	0x0000989f
00009834	movl	0xe4(%ebp),%esi
00009837	addl	0x18(%edi),%esi
0000983a	movl	(%esi),%eax
0000983c	testl	%eax,%eax
0000983e	je	0x00009882
00009840	movl	0x000047f0(%ebx),%edx
00009846	movl	%eax,0x04(%esp)
0000984a	movl	(%edx),%eax
0000984c	movl	%eax,(%esp)
0000984f	calll	0x0000e09a	; symbol stub for: _mach_port_deallocate
00009854	testl	%eax,%eax
00009856	je	0x00009882
00009858	leal	0x0000229c(%ebx),%eax
0000985e	movl	%eax,0x0c(%esp)
00009862	leal	0x000030a0(%ebx),%eax
00009868	movl	%eax,0x04(%esp)
0000986c	leal	0x00002178(%ebx),%eax
00009872	movl	$0x0000016b,0x08(%esp)
0000987a	movl	%eax,(%esp)
0000987d	calll	___eprintf
00009882	movl	0x0c(%esi),%eax
00009885	movl	%eax,(%esp)
00009888	calll	0x0000e08b	; symbol stub for: _free
0000988d	movl	0x14(%esi),%eax
00009890	movl	%eax,(%esp)
00009893	calll	0x0000e08b	; symbol stub for: _free
00009898	incl	0xe0(%ebp)
0000989b	addl	$0x1c,0xe4(%ebp)
0000989f	movl	0xe0(%ebp),%eax
000098a2	cmpl	0x14(%edi),%eax
000098a5	jb	0x00009834
000098a7	movl	0x0c(%edi),%eax
000098aa	movl	%eax,(%esp)
000098ad	calll	0x000034e1
000098b2	movl	%edi,0x08(%ebp)
000098b5	addl	$0x2c,%esp
000098b8	popl	%ebx
000098b9	popl	%esi
000098ba	popl	%edi
000098bb	leave
000098bc	jmp	0x0000e08b	; symbol stub for: _free
000098c1	addl	$0x2c,%esp
000098c4	popl	%ebx
000098c5	popl	%esi
000098c6	popl	%edi
000098c7	leave
000098c8	ret
_QCRCreateFromTask:
000098c9	pushl	%ebp
000098ca	movl	%esp,%ebp
000098cc	pushl	%edi
000098cd	pushl	%esi
000098ce	pushl	%ebx
000098cf	subl	$0x3c,%esp
000098d2	movl	0x08(%ebp),%edi
000098d5	movzbl	0x0c(%ebp),%eax
000098d9	calll	0x000098de
000098de	popl	%ebx
000098df	testl	%edi,%edi
000098e1	movb	%al,0xcb(%ebp)
000098e4	jne	0x000098fa
000098e6	leal	0x00001c2e(%ebx),%eax
000098ec	movl	%eax,0x0c(%esp)
000098f0	movl	$0x000000ef,0x08(%esp)
000098f8	jmp	0x00009913
000098fa	movl	0x18(%ebp),%eax
000098fd	testl	%eax,%eax
000098ff	jne	0x0000992b
00009901	leal	0x00003007(%ebx),%eax
00009907	movl	%eax,0x0c(%esp)
0000990b	movl	$0x000000f1,0x08(%esp)
00009913	leal	0x00002fd2(%ebx),%eax
00009919	movl	%eax,0x04(%esp)
0000991d	leal	0x000020aa(%ebx),%eax
00009923	movl	%eax,(%esp)
00009926	calll	___eprintf
0000992b	movl	0x18(%ebp),%edx
0000992e	movl	(%edx),%eax
00009930	testl	%eax,%eax
00009932	je	0x00009948
00009934	leal	0x00003018(%ebx),%eax
0000993a	movl	%eax,0x0c(%esp)
0000993e	movl	$0x000000f2,0x08(%esp)
00009946	jmp	0x00009913
00009948	movl	$0x00000020,0x04(%esp)
00009950	movl	$0x00000001,(%esp)
00009957	calll	0x0000e068	; symbol stub for: _calloc
0000995c	movl	$0x0000000c,0xcc(%ebp)
00009963	testl	%eax,%eax
00009965	movl	%eax,%esi
00009967	je	0x00009af2
0000996d	movl	%edi,(%eax)
0000996f	movl	$0xffffffff,0x1c(%eax)
00009976	movl	0x14(%ebp),%ecx
00009979	movl	%ecx,0x04(%eax)
0000997c	leal	0x0c(%eax),%eax
0000997f	movl	%eax,0x0c(%esp)
00009983	movzbl	0xcb(%ebp),%eax
00009987	movl	%ecx,0x08(%esp)
0000998b	movl	%edi,(%esp)
0000998e	movl	%eax,0x04(%esp)
00009992	calll	0x00003576
00009997	testl	%eax,%eax
00009999	movl	%eax,0xcc(%ebp)
0000999c	jne	0x00009af2
000099a2	movl	0x0c(%esi),%eax
000099a5	movl	%eax,(%esp)
000099a8	calll	0x00003f0b
000099ad	testl	%eax,%eax
000099af	movl	%eax,0x10(%esi)
000099b2	je	0x00009aeb
000099b8	movl	%eax,(%esp)
000099bb	calll	0x0000621f
000099c0	movl	0x04(%esi),%edx
000099c3	cmpl	$0xff,%edx
000099c6	movl	%eax,0x08(%esi)
000099c9	je	0x000099e6
000099cb	cmpl	%edx,%eax
000099cd	je	0x000099e6
000099cf	leal	0x0000302a(%ebx),%eax
000099d5	movl	%eax,0x0c(%esp)
000099d9	movl	$0x0000010a,0x08(%esp)
000099e1	jmp	0x00009913
000099e6	leal	0xe0(%ebp),%eax
000099e9	movl	%eax,0x08(%esp)
000099ed	leal	0xe4(%ebp),%eax
000099f0	movl	$__mh_dylib_header,0xe4(%ebp)
000099f7	movl	%eax,0x04(%esp)
000099fb	movl	(%esi),%eax
000099fd	movl	%eax,(%esp)
00009a00	calll	0x0000e149	; symbol stub for: _task_threads
00009a05	movl	%eax,(%esp)
00009a08	calll	0x00002c30
00009a0d	testl	%eax,%eax
00009a0f	movl	%eax,0xcc(%ebp)
00009a12	jne	0x00009aab
00009a18	movl	0xe0(%ebp),%eax
00009a1b	movl	%eax,0x14(%esi)
00009a1e	movl	$0x0000001c,0x04(%esp)
00009a26	movl	%eax,(%esp)
00009a29	calll	0x0000e068	; symbol stub for: _calloc
00009a2e	movl	%eax,0x18(%esi)
00009a31	testl	%eax,%eax
00009a33	movl	$0x0000000c,%eax
00009a38	cmovnel	0xcc(%ebp),%eax
00009a3c	xorl	%edi,%edi
00009a3e	movl	$__mh_dylib_header,0xd0(%ebp)
00009a45	movl	$__mh_dylib_header,0xd4(%ebp)
00009a4c	movl	%eax,0xcc(%ebp)
00009a4f	jmp	0x00009aa3
00009a51	movl	0x18(%esi),%edx
00009a54	testl	%edx,%edx
00009a56	jne	0x00009a8d
00009a58	movl	0xe4(%ebp),%eax
00009a5b	movl	0x00004722(%ebx),%edx
00009a61	movl	(%edi,%eax),%eax
00009a64	movl	%eax,0x04(%esp)
00009a68	movl	(%edx),%eax
00009a6a	movl	%eax,(%esp)
00009a6d	calll	0x0000e09a	; symbol stub for: _mach_port_deallocate
00009a72	testl	%eax,%eax
00009a74	je	0x00009a99
00009a76	leal	0x000021ce(%ebx),%eax
00009a7c	movl	%eax,0x0c(%esp)
00009a80	movl	$0x0000012b,0x08(%esp)
00009a88	jmp	0x00009913
00009a8d	movl	0xe4(%ebp),%eax
00009a90	movl	0xd4(%ebp),%ecx
00009a93	movl	(%edi,%eax),%eax
00009a96	movl	%eax,(%ecx,%edx)
00009a99	incl	0xd0(%ebp)
00009a9c	addl	$0x04,%edi
00009a9f	addl	$0x1c,0xd4(%ebp)
00009aa3	movl	0xd0(%ebp),%eax
00009aa6	cmpl	0x14(%esi),%eax
00009aa9	jb	0x00009a51
00009aab	movl	0xe4(%ebp),%edx
00009aae	testl	%edx,%edx
00009ab0	je	0x00009af2
00009ab2	movl	0xe0(%ebp),%eax
00009ab5	movl	%edx,0x04(%esp)
00009ab9	shll	$0x02,%eax
00009abc	movl	%eax,0x08(%esp)
00009ac0	movl	0x00004722(%ebx),%eax
00009ac6	movl	(%eax),%eax
00009ac8	movl	%eax,(%esp)
00009acb	calll	0x0000e158	; symbol stub for: _vm_deallocate
00009ad0	testl	%eax,%eax
00009ad2	je	0x00009af2
00009ad4	leal	0x000021ce(%ebx),%eax
00009ada	movl	%eax,0x0c(%esp)
00009ade	movl	$0x00000134,0x08(%esp)
00009ae6	jmp	0x00009913
00009aeb	movl	$0x00000016,0xcc(%ebp)
00009af2	movl	0xcc(%ebp),%eax
00009af5	testl	%eax,%eax
00009af7	movl	0x10(%ebp),%eax
00009afa	sete	%dl
00009afd	testl	%eax,%eax
00009aff	setne	%al
00009b02	testb	%al,%dl
00009b04	je	0x00009b2c
00009b06	movl	0x14(%esi),%edi
00009b09	xorl	%ecx,%ecx
00009b0b	xorl	%edx,%edx
00009b0d	jmp	0x00009b36
00009b0f	movl	0x18(%esi),%eax
00009b12	movl	(%eax,%edx),%eax
00009b15	addl	$0x1c,%edx
00009b18	cmpl	%eax,0x10(%ebp)
00009b1b	jne	0x00009b35
00009b1d	movl	%ecx,0x04(%esp)
00009b21	movl	%esi,(%esp)
00009b24	calll	0x0000975b
00009b29	movl	%eax,0xcc(%ebp)
00009b2c	movl	0xcc(%ebp),%eax
00009b2f	testl	%eax,%eax
00009b31	je	0x00009b4b
00009b33	jmp	0x00009b41
00009b35	incl	%ecx
00009b36	cmpl	%ecx,%edi
00009b38	ja	0x00009b0f
00009b3a	movl	$0x00000016,0xcc(%ebp)
00009b41	movl	%esi,(%esp)
00009b44	xorl	%esi,%esi
00009b46	calll	0x000097ff
00009b4b	movl	0x18(%ebp),%edx
00009b4e	movl	%esi,(%edx)
00009b50	movl	0xcc(%ebp),%edi
00009b53	testl	%edi,%edi
00009b55	sete	%dl
00009b58	testl	%esi,%esi
00009b5a	setne	%al
00009b5d	xorl	%edx,%eax
00009b5f	testb	$0x01,%al
00009b61	je	0x00009b7a
00009b63	leal	0x0000308a(%ebx),%eax
00009b69	movl	%eax,0x0c(%esp)
00009b6d	movl	$0x0000014d,0x08(%esp)
00009b75	jmp	0x00009913
00009b7a	testl	%esi,%esi
00009b7c	je	0x00009ba0
00009b7e	movl	%esi,%eax
00009b80	calll	0x000096ab
00009b85	testb	%al,%al
00009b87	jne	0x00009ba0
00009b89	leal	0x000030ae(%ebx),%eax
00009b8f	movl	%eax,0x0c(%esp)
00009b93	movl	$0x0000014e,0x08(%esp)
00009b9b	jmp	0x00009913
00009ba0	movl	0xcc(%ebp),%eax
00009ba3	addl	$0x3c,%esp
00009ba6	popl	%ebx
00009ba7	popl	%esi
00009ba8	popl	%edi
00009ba9	leave
00009baa	ret
_QCRCreateFromSelf:
00009bab	pushl	%ebp
00009bac	movl	%esp,%ebp
00009bae	subl	$0x38,%esp
00009bb1	movl	%edi,0xfc(%ebp)
00009bb4	movl	0x08(%ebp),%edi
00009bb7	movl	%ebx,0xf4(%ebp)
00009bba	calll	0x00009bbf
00009bbf	popl	%ebx
00009bc0	movl	%esi,0xf8(%ebp)
00009bc3	testl	%edi,%edi
00009bc5	jne	0x00009bdb
00009bc7	leal	0x00002d26(%ebx),%eax
00009bcd	movl	%eax,0x0c(%esp)
00009bd1	movl	$0x00000156,0x08(%esp)
00009bd9	jmp	0x00009bf3
00009bdb	movl	(%edi),%eax
00009bdd	testl	%eax,%eax
00009bdf	je	0x00009c0b
00009be1	leal	0x00002d37(%ebx),%eax
00009be7	movl	%eax,0x0c(%esp)
00009beb	movl	$0x00000157,0x08(%esp)
00009bf3	leal	0x00002cf1(%ebx),%eax
00009bf9	movl	%eax,0x04(%esp)
00009bfd	leal	0x00001dc9(%ebx),%eax
00009c03	movl	%eax,(%esp)
00009c06	calll	___eprintf
00009c0b	calll	0x00005abd
00009c10	movl	%eax,%esi
00009c12	calll	0x0000e09f	; symbol stub for: _mach_thread_self
00009c17	movl	%edi,0x10(%esp)
00009c1b	movl	%esi,0x0c(%esp)
00009c1f	movl	$__mh_dylib_header,0x04(%esp)
00009c27	movl	%eax,0x08(%esp)
00009c2b	movl	0x00004441(%ebx),%eax
00009c31	movl	(%eax),%eax
00009c33	movl	%eax,(%esp)
00009c36	calll	0x000098c9
00009c3b	movl	0xf4(%ebp),%ebx
00009c3e	movl	0xf8(%ebp),%esi
00009c41	movl	0xfc(%ebp),%edi
00009c44	leave
00009c45	ret
_QCRGetSymbols:
00009c46	pushl	%ebp
00009c47	movl	%esp,%ebp
00009c49	subl	$0x18,%esp
00009c4c	movl	%ebx,0xf8(%ebp)
00009c4f	calll	0x00009c54
00009c54	popl	%ebx
00009c55	movl	%esi,0xfc(%ebp)
00009c58	movl	0x08(%ebp),%esi
00009c5b	movl	%esi,%eax
00009c5d	calll	0x000096ab
00009c62	testb	%al,%al
00009c64	jne	0x00009c90
00009c66	leal	0x00002c48(%ebx),%eax
00009c6c	movl	%eax,0x0c(%esp)
00009c70	leal	0x00002c5c(%ebx),%eax
00009c76	movl	%eax,0x04(%esp)
00009c7a	leal	0x00001d34(%ebx),%eax
00009c80	movl	$0x0000017c,0x08(%esp)
00009c88	movl	%eax,(%esp)
00009c8b	calll	___eprintf
00009c90	movl	0x0c(%esi),%eax
00009c93	movl	0xf8(%ebp),%ebx
00009c96	movl	0xfc(%ebp),%esi
00009c99	leave
00009c9a	ret
_QCRGetThreadCount:
00009c9b	pushl	%ebp
00009c9c	movl	%esp,%ebp
00009c9e	subl	$0x18,%esp
00009ca1	movl	%ebx,0xf8(%ebp)
00009ca4	calll	0x00009ca9
00009ca9	popl	%ebx
00009caa	movl	%esi,0xfc(%ebp)
00009cad	movl	0x08(%ebp),%esi
00009cb0	movl	%esi,%eax
00009cb2	calll	0x000096ab
00009cb7	testb	%al,%al
00009cb9	jne	0x00009ce5
00009cbb	leal	0x00002bf3(%ebx),%eax
00009cc1	movl	%eax,0x0c(%esp)
00009cc5	leal	0x00002c07(%ebx),%eax
00009ccb	movl	%eax,0x04(%esp)
00009ccf	leal	0x00001cdf(%ebx),%eax
00009cd5	movl	$0x00000183,0x08(%esp)
00009cdd	movl	%eax,(%esp)
00009ce0	calll	___eprintf
00009ce5	movl	0x14(%esi),%eax
00009ce8	movl	0xf8(%ebp),%ebx
00009ceb	movl	0xfc(%ebp),%esi
00009cee	leave
00009cef	ret
_QCRGetThreadAtIndex:
00009cf0	pushl	%ebp
00009cf1	movl	%esp,%ebp
00009cf3	subl	$0x18,%esp
00009cf6	movl	%ebx,0xf8(%ebp)
00009cf9	calll	0x00009cfe
00009cfe	popl	%ebx
00009cff	movl	%esi,0xfc(%ebp)
00009d02	movl	0x08(%ebp),%esi
00009d05	movl	%esi,%eax
00009d07	calll	0x000096ab
00009d0c	testb	%al,%al
00009d0e	jne	0x00009d3a
00009d10	leal	0x00002b9e(%ebx),%eax
00009d16	movl	%eax,0x0c(%esp)
00009d1a	leal	0x00002bb2(%ebx),%eax
00009d20	movl	%eax,0x04(%esp)
00009d24	leal	0x00001c8a(%ebx),%eax
00009d2a	movl	$0x0000018a,0x08(%esp)
00009d32	movl	%eax,(%esp)
00009d35	calll	___eprintf
00009d3a	movl	0x18(%esi),%eax
00009d3d	imull	$0x1c,0x0c(%ebp),%edx
00009d41	movl	0xf8(%ebp),%ebx
00009d44	movl	0xfc(%ebp),%esi
00009d47	movl	(%edx,%eax),%eax
00009d4a	leave
00009d4b	ret
_QCRGetImages:
00009d4c	pushl	%ebp
00009d4d	movl	%esp,%ebp
00009d4f	subl	$0x38,%esp
00009d52	movl	%ebx,0xf4(%ebp)
00009d55	movl	0x08(%ebp),%eax
00009d58	calll	0x00009d5d
00009d5d	popl	%ebx
00009d5e	movl	%esi,0xf8(%ebp)
00009d61	movl	0x10(%ebp),%esi
00009d64	movl	%edi,0xfc(%ebp)
00009d67	movl	0x0c(%ebp),%edi
00009d6a	movl	%eax,0xe4(%ebp)
00009d6d	calll	0x000096ab
00009d72	testb	%al,%al
00009d74	jne	0x00009d8a
00009d76	leal	0x00002b3f(%ebx),%eax
00009d7c	movl	%eax,0x0c(%esp)
00009d80	movl	$0x00000195,0x08(%esp)
00009d88	jmp	0x00009da0
00009d8a	testl	%edi,%edi
00009d8c	jne	0x00009db8
00009d8e	leal	0x00001f17(%ebx),%eax
00009d94	movl	%eax,0x0c(%esp)
00009d98	movl	$0x00000196,0x08(%esp)
00009da0	leal	0x00002b53(%ebx),%eax
00009da6	movl	%eax,0x04(%esp)
00009daa	leal	0x00001c2b(%ebx),%eax
00009db0	movl	%eax,(%esp)
00009db3	calll	___eprintf
00009db8	testl	%esi,%esi
00009dba	jne	0x00009dd0
00009dbc	leal	0x00001f2d(%ebx),%eax
00009dc2	movl	%eax,0x0c(%esp)
00009dc6	movl	$0x00000197,0x08(%esp)
00009dce	jmp	0x00009da0
00009dd0	movl	0xe4(%ebp),%edx
00009dd3	movl	%esi,0x10(%ebp)
00009dd6	movl	0xf4(%ebp),%ebx
00009dd9	movl	%edi,0x0c(%ebp)
00009ddc	movl	0xf8(%ebp),%esi
00009ddf	movl	0xfc(%ebp),%edi
00009de2	movl	0x0c(%edx),%eax
00009de5	movl	%eax,0x08(%ebp)
00009de8	leave
00009de9	jmp	0x00003fbd
_ClearThreadStateAndBacktraceAtIndex:
00009dee	pushl	%ebp
00009def	movl	%esp,%ebp
00009df1	pushl	%edi
00009df2	movl	%edx,%edi
00009df4	pushl	%esi
00009df5	movl	%eax,%esi
00009df7	pushl	%ebx
00009df8	calll	0x00009dfd
00009dfd	popl	%ebx
00009dfe	subl	$0x1c,%esp
00009e01	calll	0x000096ab
00009e06	testb	%al,%al
00009e08	jne	0x00009e1e
00009e0a	leal	0x00002a9f(%ebx),%eax
00009e10	movl	%eax,0x0c(%esp)
00009e14	movl	$0x000001b5,0x08(%esp)
00009e1c	jmp	0x00009e35
00009e1e	cmpl	%edi,0x14(%esi)
00009e21	ja	0x00009e4d
00009e23	leal	0x00002bbb(%ebx),%eax
00009e29	movl	%eax,0x0c(%esp)
00009e2d	movl	$0x000001b6,0x08(%esp)
00009e35	leal	0x00002ab3(%ebx),%eax
00009e3b	movl	%eax,0x04(%esp)
00009e3f	leal	0x00001b8b(%ebx),%eax
00009e45	movl	%eax,(%esp)
00009e48	calll	___eprintf
00009e4d	movl	%esi,%eax
00009e4f	calll	0x000096ab
00009e54	testb	%al,%al
00009e56	jne	0x00009e6c
00009e58	leal	0x00002a9f(%ebx),%eax
00009e5e	movl	%eax,0x0c(%esp)
00009e62	movl	$0x000001a3,0x08(%esp)
00009e6a	jmp	0x00009e35
00009e6c	cmpl	0x14(%esi),%edi
00009e6f	jb	0x00009e85
00009e71	leal	0x00002bbb(%ebx),%eax
00009e77	movl	%eax,0x0c(%esp)
00009e7b	movl	$0x000001a4,0x08(%esp)
00009e83	jmp	0x00009e35
00009e85	imull	$0x1c,%edi,%edi
00009e88	movl	0x18(%esi),%eax
00009e8b	movl	0x14(%eax,%edi),%eax
00009e8f	movl	%eax,(%esp)
00009e92	calll	0x0000e08b	; symbol stub for: _free
00009e97	movl	0x18(%esi),%eax
00009e9a	movl	$__mh_dylib_header,0x14(%edi,%eax)
00009ea2	movl	0x18(%esi),%eax
00009ea5	movl	$__mh_dylib_header,0x18(%edi,%eax)
00009ead	movl	%esi,%eax
00009eaf	calll	0x000096ab
00009eb4	testb	%al,%al
00009eb6	jne	0x00009ecf
00009eb8	leal	0x00002a9f(%ebx),%eax
00009ebe	movl	%eax,0x0c(%esp)
00009ec2	movl	$0x000001aa,0x08(%esp)
00009eca	jmp	0x00009e35
00009ecf	movl	0x18(%esi),%eax
00009ed2	movl	0x0c(%edi,%eax),%eax
00009ed6	movl	%eax,(%esp)
00009ed9	calll	0x0000e08b	; symbol stub for: _free
00009ede	movl	0x18(%esi),%eax
00009ee1	movl	$__mh_dylib_header,0x08(%edi,%eax)
00009ee9	movl	0x18(%esi),%eax
00009eec	movl	$__mh_dylib_header,0x0c(%edi,%eax)
00009ef4	movl	0x18(%esi),%eax
00009ef7	movl	$__mh_dylib_header,0x10(%edi,%eax)
00009eff	movl	%esi,%eax
00009f01	calll	0x000096ab
00009f06	testb	%al,%al
00009f08	jne	0x00009f21
00009f0a	leal	0x00002a9f(%ebx),%eax
00009f10	movl	%eax,0x0c(%esp)
00009f14	movl	$0x000001c2,0x08(%esp)
00009f1c	jmp	0x00009e35
00009f21	addl	$0x1c,%esp
00009f24	popl	%ebx
00009f25	popl	%esi
00009f26	popl	%edi
00009f27	leave
00009f28	ret
_QCRGetThreadStateAtIndex:
00009f29	pushl	%ebp
00009f2a	movl	%esp,%ebp
00009f2c	subl	$0x58,%esp
00009f2f	movl	%ebx,0xf4(%ebp)
00009f32	calll	0x00009f37
00009f37	popl	%ebx
00009f38	movl	%esi,0xf8(%ebp)
00009f3b	movl	0x08(%ebp),%esi
00009f3e	movl	%edi,0xfc(%ebp)
00009f41	movl	0x0c(%ebp),%edi
00009f44	movl	%esi,%eax
00009f46	calll	0x000096ab
00009f4b	testb	%al,%al
00009f4d	jne	0x00009f63
00009f4f	leal	0x00002965(%ebx),%eax
00009f55	movl	%eax,0x0c(%esp)
00009f59	movl	$0x000001d1,0x08(%esp)
00009f61	jmp	0x00009fa6
00009f63	movl	$0x00000016,0xe4(%ebp)
00009f6a	cmpl	%edi,0x14(%esi)
00009f6d	jbe	0x0000a0c1
00009f73	imull	$0x1c,%edi,%edi
00009f76	movl	%edi,%edx
00009f78	addl	0x18(%esi),%edx
00009f7b	movl	$__mh_dylib_header,0xe4(%ebp)
00009f82	movl	0x0c(%edx),%eax
00009f85	testl	%eax,%eax
00009f87	jne	0x0000a050
00009f8d	movl	0x10(%edx),%eax
00009f90	testl	%eax,%eax
00009f92	je	0x00009fbe
00009f94	leal	0x00002aa5(%ebx),%eax
00009f9a	movl	%eax,0x0c(%esp)
00009f9e	movl	$0x000001e1,0x08(%esp)
00009fa6	leal	0x00002979(%ebx),%eax
00009fac	movl	%eax,0x04(%esp)
00009fb0	leal	0x00001a51(%ebx),%eax
00009fb6	movl	%eax,(%esp)
00009fb9	calll	___eprintf
00009fbe	leal	0x10(%edx),%eax
00009fc1	movl	%eax,0x18(%esp)
00009fc5	leal	0x0c(%edx),%eax
00009fc8	movl	%eax,0x14(%esp)
00009fcc	leal	0x08(%edx),%eax
00009fcf	movl	%eax,0x10(%esp)
00009fd3	movl	0x0c(%esi),%eax
00009fd6	movl	%eax,0x0c(%esp)
00009fda	movl	0x08(%esi),%eax
00009fdd	movl	%eax,0x08(%esp)
00009fe1	movl	(%edx),%eax
00009fe3	movl	%eax,0x04(%esp)
00009fe7	movl	(%esi),%eax
00009fe9	movl	%eax,(%esp)
00009fec	calll	0x00000bfc
00009ff1	movl	%edi,%ecx
00009ff3	testl	%eax,%eax
00009ff5	sete	%dl
00009ff8	movl	%eax,0xe4(%ebp)
00009ffb	addl	0x18(%esi),%ecx
00009ffe	movl	0x0c(%ecx),%eax
0000a001	testl	%eax,%eax
0000a003	movl	%edx,%eax
0000a005	setne	0xd7(%ebp)
0000a009	andl	$0x01,%eax
0000a00c	cmpb	%dl,0xd7(%ebp)
0000a00f	movl	%eax,0xe0(%ebp)
0000a012	je	0x0000a02b
0000a014	leal	0x00002ad1(%ebx),%eax
0000a01a	movl	%eax,0x0c(%esp)
0000a01e	movl	$0x000001f0,0x08(%esp)
0000a026	jmp	0x00009fa6
0000a02b	xorl	%eax,%eax
0000a02d	cmpl	$__mh_dylib_header,0x10(%ecx)
0000a031	setne	%al
0000a034	cmpl	%eax,0xe0(%ebp)
0000a037	je	0x0000a050
0000a039	leal	0x00002b0d(%ebx),%eax
0000a03f	movl	%eax,0x0c(%esp)
0000a043	movl	$0x000001f1,0x08(%esp)
0000a04b	jmp	0x00009fa6
0000a050	movl	%esi,%eax
0000a052	calll	0x000096ab
0000a057	testb	%al,%al
0000a059	jne	0x0000a072
0000a05b	leal	0x00002965(%ebx),%eax
0000a061	movl	%eax,0x0c(%esp)
0000a065	movl	$0x000001f7,0x08(%esp)
0000a06d	jmp	0x00009fa6
0000a072	movl	0xe4(%ebp),%eax
0000a075	testl	%eax,%eax
0000a077	jne	0x0000a0c1
0000a079	movl	0x10(%ebp),%eax
0000a07c	testl	%eax,%eax
0000a07e	je	0x0000a088
0000a080	movl	0x08(%esi),%eax
0000a083	movl	0x10(%ebp),%edx
0000a086	movl	%eax,(%edx)
0000a088	movl	0x14(%ebp),%eax
0000a08b	testl	%eax,%eax
0000a08d	je	0x0000a09b
0000a08f	movl	0x18(%esi),%eax
0000a092	movl	0x14(%ebp),%edx
0000a095	movl	0x08(%edi,%eax),%eax
0000a099	movl	%eax,(%edx)
0000a09b	movl	0x18(%ebp),%ecx
0000a09e	testl	%ecx,%ecx
0000a0a0	je	0x0000a0ae
0000a0a2	movl	0x18(%esi),%eax
0000a0a5	movl	0x18(%ebp),%edx
0000a0a8	movl	0x0c(%edi,%eax),%eax
0000a0ac	movl	%eax,(%edx)
0000a0ae	movl	0x1c(%ebp),%edx
0000a0b1	testl	%edx,%edx
0000a0b3	je	0x0000a0c1
0000a0b5	movl	0x18(%esi),%eax
0000a0b8	movl	0x1c(%ebp),%edx
0000a0bb	movl	0x10(%edi,%eax),%eax
0000a0bf	movl	%eax,(%edx)
0000a0c1	movl	%esi,%eax
0000a0c3	calll	0x000096ab
0000a0c8	testb	%al,%al
0000a0ca	jne	0x0000a0e3
0000a0cc	leal	0x00002965(%ebx),%eax
0000a0d2	movl	%eax,0x0c(%esp)
0000a0d6	movl	$0x00000209,0x08(%esp)
0000a0de	jmp	0x00009fa6
0000a0e3	movl	0xe4(%ebp),%eax
0000a0e6	movl	0xf4(%ebp),%ebx
0000a0e9	movl	0xf8(%ebp),%esi
0000a0ec	movl	0xfc(%ebp),%edi
0000a0ef	leave
0000a0f0	ret
_QCRSetThreadStateAtIndex:
0000a0f1	pushl	%ebp
0000a0f2	movl	%esp,%ebp
0000a0f4	pushl	%edi
0000a0f5	pushl	%esi
0000a0f6	pushl	%ebx
0000a0f7	calll	0x0000a0fc
0000a0fc	popl	%ebx
0000a0fd	subl	$0x2c,%esp
0000a100	movl	0x08(%ebp),%esi
0000a103	movl	%esi,%eax
0000a105	calll	0x000096ab
0000a10a	testb	%al,%al
0000a10c	jne	0x0000a122
0000a10e	leal	0x000027a0(%ebx),%eax
0000a114	movl	%eax,0x0c(%esp)
0000a118	movl	$0x0000021a,0x08(%esp)
0000a120	jmp	0x0000a13b
0000a122	movl	0x14(%ebp),%eax
0000a125	testl	%eax,%eax
0000a127	jne	0x0000a153
0000a129	leal	0x00002983(%ebx),%eax
0000a12f	movl	%eax,0x0c(%esp)
0000a133	movl	$0x0000021b,0x08(%esp)
0000a13b	leal	0x000027b4(%ebx),%eax
0000a141	movl	%eax,0x04(%esp)
0000a145	leal	0x0000188c(%ebx),%eax
0000a14b	movl	%eax,(%esp)
0000a14e	calll	___eprintf
0000a153	movl	0x18(%ebp),%edi
0000a156	testl	%edi,%edi
0000a158	jne	0x0000a16e
0000a15a	leal	0x00002997(%ebx),%eax
0000a160	movl	%eax,0x0c(%esp)
0000a164	movl	$0x0000021c,0x08(%esp)
0000a16c	jmp	0x0000a13b
0000a16e	testb	$0x03,0x18(%ebp)
0000a172	je	0x0000a188
0000a174	leal	0x000029ac(%ebx),%eax
0000a17a	movl	%eax,0x0c(%esp)
0000a17e	movl	$0x0000021d,0x08(%esp)
0000a186	jmp	0x0000a13b
0000a188	movl	0x0c(%ebp),%eax
0000a18b	movl	$0x00000016,0xe4(%ebp)
0000a192	cmpl	%eax,0x14(%esi)
0000a195	jbe	0x0000a220
0000a19b	movl	0x18(%ebp),%ecx
0000a19e	movl	%ecx,(%esp)
0000a1a1	calll	0x0000e0c2	; symbol stub for: _malloc
0000a1a6	movl	$0x0000000c,0xe4(%ebp)
0000a1ad	testl	%eax,%eax
0000a1af	movl	%eax,%edi
0000a1b1	je	0x0000a220
0000a1b3	movl	0x14(%ebp),%ecx
0000a1b6	movl	0x18(%ebp),%eax
0000a1b9	movl	%edi,(%esp)
0000a1bc	movl	%ecx,0x04(%esp)
0000a1c0	movl	%eax,0x08(%esp)
0000a1c4	calll	0x0000e0c7	; symbol stub for: _memcpy
0000a1c9	movl	0x0c(%ebp),%edx
0000a1cc	movl	%esi,%eax
0000a1ce	calll	0x00009dee
0000a1d3	imull	$0x1c,0x0c(%ebp),%edx
0000a1d7	movl	%edx,%eax
0000a1d9	addl	0x18(%esi),%eax
0000a1dc	movl	0x0c(%eax),%ecx
0000a1df	testl	%ecx,%ecx
0000a1e1	je	0x0000a1fa
0000a1e3	leal	0x000029d8(%ebx),%eax
0000a1e9	movl	%eax,0x0c(%esp)
0000a1ed	movl	$0x0000023a,0x08(%esp)
0000a1f5	jmp	0x0000a13b
0000a1fa	movb	$0x01,0x04(%eax)
0000a1fe	movl	0x18(%esi),%eax
0000a201	movl	0x10(%ebp),%ecx
0000a204	movl	%ecx,0x08(%edx,%eax)
0000a208	movl	0x18(%esi),%eax
0000a20b	movl	%edi,0x0c(%edx,%eax)
0000a20f	movl	0x18(%esi),%eax
0000a212	movl	0x18(%ebp),%ecx
0000a215	movl	%ecx,0x10(%edx,%eax)
0000a219	movl	$__mh_dylib_header,0xe4(%ebp)
0000a220	movl	%esi,%eax
0000a222	calll	0x000096ab
0000a227	testb	%al,%al
0000a229	jne	0x0000a242
0000a22b	leal	0x000027a0(%ebx),%eax
0000a231	movl	%eax,0x0c(%esp)
0000a235	movl	$0x00000241,0x08(%esp)
0000a23d	jmp	0x0000a13b
0000a242	movl	0xe4(%ebp),%eax
0000a245	addl	$0x2c,%esp
0000a248	popl	%ebx
0000a249	popl	%esi
0000a24a	popl	%edi
0000a24b	leave
0000a24c	ret
_QCRGetBacktraceAtIndex:
0000a24d	pushl	%ebp
0000a24e	movl	%esp,%ebp
0000a250	pushl	%edi
0000a251	pushl	%esi
0000a252	pushl	%ebx
0000a253	calll	0x0000a258
0000a258	popl	%ebx
0000a259	subl	$0x7c,%esp
0000a25c	movl	0x08(%ebp),%edi
0000a25f	movl	%edi,%eax
0000a261	calll	0x000096ab
0000a266	testb	%al,%al
0000a268	jne	0x0000a27e
0000a26a	leal	0x00002644(%ebx),%eax
0000a270	movl	%eax,0x0c(%esp)
0000a274	movl	$0x00000250,0x08(%esp)
0000a27c	jmp	0x0000a297
0000a27e	movl	0x10(%ebp),%eax
0000a281	testl	%eax,%eax
0000a283	jne	0x0000a2af
0000a285	leal	0x000028a6(%ebx),%eax
0000a28b	movl	%eax,0x0c(%esp)
0000a28f	movl	$0x00000251,0x08(%esp)
0000a297	leal	0x00002658(%ebx),%eax
0000a29d	movl	%eax,0x04(%esp)
0000a2a1	leal	0x00001730(%ebx),%eax
0000a2a7	movl	%eax,(%esp)
0000a2aa	calll	___eprintf
0000a2af	movl	0x14(%ebp),%eax
0000a2b2	testl	%eax,%eax
0000a2b4	jne	0x0000a2ca
0000a2b6	leal	0x000028bc(%ebx),%eax
0000a2bc	movl	%eax,0x0c(%esp)
0000a2c0	movl	$0x00000252,0x08(%esp)
0000a2c8	jmp	0x0000a297
0000a2ca	movl	0x0c(%ebp),%eax
0000a2cd	movl	$0x00000016,%esi
0000a2d2	cmpl	%eax,0x14(%edi)
0000a2d5	jbe	0x0000a500
0000a2db	imull	$0x1c,%eax,%edx
0000a2de	movl	%edx,0xc4(%ebp)
0000a2e1	movl	0x18(%edi),%eax
0000a2e4	movl	(%eax,%edx),%esi
0000a2e7	calll	0x0000e09f	; symbol stub for: _mach_thread_self
0000a2ec	cmpl	%eax,%esi
0000a2ee	jne	0x0000a34e
0000a2f0	movl	0x18(%edi),%eax
0000a2f3	movl	0xc4(%ebp),%ecx
0000a2f6	cmpb	$__mh_dylib_header,0x04(%ecx,%eax)
0000a2fb	jne	0x0000a34e
0000a2fd	movl	0x0c(%ebp),%edx
0000a300	movl	%edi,%eax
0000a302	calll	0x00009dee
0000a307	movl	0xc4(%ebp),%edx
0000a30a	addl	0x18(%edi),%edx
0000a30d	movl	0x0c(%edx),%esi
0000a310	testl	%esi,%esi
0000a312	je	0x0000a32b
0000a314	leal	0x0000287c(%ebx),%eax
0000a31a	movl	%eax,0x0c(%esp)
0000a31e	movl	$0x00000264,0x08(%esp)
0000a326	jmp	0x0000a297
0000a32b	leal	0x10(%edx),%eax
0000a32e	movl	%eax,0x08(%esp)
0000a332	leal	0x0c(%edx),%eax
0000a335	movl	%eax,0x04(%esp)
0000a339	leal	0x08(%edx),%eax
0000a33c	movl	%eax,(%esp)
0000a33f	calll	0x00000e4d
0000a344	testl	%eax,%eax
0000a346	movl	%eax,%esi
0000a348	jne	0x0000a500
0000a34e	movl	0x0c(%ebp),%eax
0000a351	movl	$__mh_dylib_header,0x14(%esp)
0000a359	movl	$__mh_dylib_header,0x10(%esp)
0000a361	movl	$__mh_dylib_header,0x0c(%esp)
0000a369	movl	$__mh_dylib_header,0x08(%esp)
0000a371	movl	%eax,0x04(%esp)
0000a375	movl	%edi,(%esp)
0000a378	calll	0x00009f29
0000a37d	testl	%eax,%eax
0000a37f	movl	%eax,%esi
0000a381	jne	0x0000a500
0000a387	movl	0x18(%edi),%eax
0000a38a	movl	0xc4(%ebp),%edx
0000a38d	movl	0x14(%eax,%edx),%ecx
0000a391	testl	%ecx,%ecx
0000a393	jne	0x0000a525
0000a399	leal	0x00002658(%ebx),%ecx
0000a39f	leal	0x00001730(%ebx),%eax
0000a3a5	movl	$__mh_dylib_header,0xcc(%ebp)
0000a3ac	movl	$0x00000032,0xd4(%ebp)
0000a3b3	movl	%ecx,0xc0(%ebp)
0000a3b6	movl	%eax,0xbc(%ebp)
0000a3b9	movl	0xd4(%ebp),%edx
0000a3bc	movl	$0x0000000c,%esi
0000a3c1	movl	$0x00000024,0x04(%esp)
0000a3c9	movl	%edx,(%esp)
0000a3cc	calll	0x0000e068	; symbol stub for: _calloc
0000a3d1	movb	$__mh_dylib_header,0xcb(%ebp)
0000a3d5	testl	%eax,%eax
0000a3d7	movl	%eax,0xd0(%ebp)
0000a3da	je	0x0000a4e5
0000a3e0	movl	0xc4(%ebp),%edx
0000a3e3	leal	0xe4(%ebp),%eax
0000a3e6	addl	0x18(%edi),%edx
0000a3e9	movl	0xd4(%ebp),%ecx
0000a3ec	movl	%eax,0x30(%esp)
0000a3f0	movl	0xd0(%ebp),%eax
0000a3f3	movl	$__mh_dylib_header,0x20(%esp)
0000a3fb	movl	$__mh_dylib_header,0x24(%esp)
0000a403	movl	%ecx,0x2c(%esp)
0000a407	movl	%eax,0x28(%esp)
0000a40b	movl	$__mh_dylib_header,0x18(%esp)
0000a413	movl	$__mh_dylib_header,0x1c(%esp)
0000a41b	movl	0x0c(%edi),%eax
0000a41e	movl	%eax,0x14(%esp)
0000a422	movl	0x08(%edi),%eax
0000a425	movl	%eax,0x10(%esp)
0000a429	movl	0x10(%edx),%eax
0000a42c	movl	%eax,0x0c(%esp)
0000a430	movl	0x0c(%edx),%eax
0000a433	movl	%eax,0x08(%esp)
0000a437	movl	0x08(%edx),%eax
0000a43a	movl	%eax,0x04(%esp)
0000a43e	movl	(%edi),%eax
0000a440	movl	%eax,(%esp)
0000a443	calll	0x00001bdc
0000a448	movb	$__mh_dylib_header,0xcb(%ebp)
0000a44c	testl	%eax,%eax
0000a44e	movl	%eax,%esi
0000a450	jne	0x0000a4e5
0000a456	movl	0xe4(%ebp),%eax
0000a459	cmpl	%eax,0xd4(%ebp)
0000a45c	jb	0x0000a4af
0000a45e	movl	0xc4(%ebp),%eax
0000a461	addl	0x18(%edi),%eax
0000a464	movl	0x14(%eax),%edx
0000a467	testl	%edx,%edx
0000a469	je	0x0000a48f
0000a46b	movl	0xc0(%ebp),%edx
0000a46e	leal	0x000028d4(%ebx),%eax
0000a474	movl	0xbc(%ebp),%ecx
0000a477	movl	%eax,0x0c(%esp)
0000a47b	movl	$0x00000298,0x08(%esp)
0000a483	movl	%edx,0x04(%esp)
0000a487	movl	%ecx,(%esp)
0000a48a	jmp	0x0000a2aa
0000a48f	movl	0xd0(%ebp),%edx
0000a492	movl	%edx,0x14(%eax)
0000a495	movl	0x18(%edi),%edx
0000a498	movl	0xe4(%ebp),%eax
0000a49b	movl	0xc4(%ebp),%ecx
0000a49e	movl	%eax,0x18(%edx,%ecx)
0000a4a2	movb	$0x01,0xcb(%ebp)
0000a4a6	movl	$__mh_dylib_header,0xd0(%ebp)
0000a4ad	jmp	0x0000a4e5
0000a4af	incl	0xcc(%ebp)
0000a4b2	cmpl	$0x0a,0xcc(%ebp)
0000a4b6	jg	0x0000a4c1
0000a4b8	movl	%eax,0xd4(%ebp)
0000a4bb	movb	$__mh_dylib_header,0xcb(%ebp)
0000a4bf	jmp	0x0000a4e5
0000a4c1	leal	0x00001428(%ebx),%eax
0000a4c7	movl	0xbc(%ebp),%edx
0000a4ca	movl	%eax,0x0c(%esp)
0000a4ce	movl	0xc0(%ebp),%eax
0000a4d1	movl	$0x000002a2,0x08(%esp)
0000a4d9	movl	%edx,(%esp)
0000a4dc	movl	%eax,0x04(%esp)
0000a4e0	jmp	0x0000a2aa
0000a4e5	movl	0xd0(%ebp),%ecx
0000a4e8	movl	%ecx,(%esp)
0000a4eb	calll	0x0000e08b	; symbol stub for: _free
0000a4f0	testl	%esi,%esi
0000a4f2	jne	0x0000a500
0000a4f4	cmpb	$__mh_dylib_header,0xcb(%ebp)
0000a4f8	je	0x0000a3b9
0000a4fe	jmp	0x0000a522
0000a500	movl	%edi,%eax
0000a502	calll	0x000096ab
0000a507	testb	%al,%al
0000a509	jne	0x0000a55c
0000a50b	leal	0x00002644(%ebx),%eax
0000a511	movl	%eax,0x0c(%esp)
0000a515	movl	$0x000002b8,0x08(%esp)
0000a51d	jmp	0x0000a297
0000a522	movl	0x18(%edi),%eax
0000a525	movl	0xc4(%ebp),%edx
0000a528	xorl	%esi,%esi
0000a52a	movl	0x10(%ebp),%ecx
0000a52d	movl	0x14(%eax,%edx),%eax
0000a531	movl	%eax,(%ecx)
0000a533	movl	0x18(%edi),%eax
0000a536	movl	0x18(%eax,%edx),%eax
0000a53a	movl	0x14(%ebp),%edx
0000a53d	movl	%eax,(%edx)
0000a53f	movl	(%ecx),%eax
0000a541	testl	%eax,%eax
0000a543	jne	0x0000a500
0000a545	leal	0x00002900(%ebx),%eax
0000a54b	movl	%eax,0x0c(%esp)
0000a54f	movl	$0x000002b7,0x08(%esp)
0000a557	jmp	0x0000a297
0000a55c	addl	$0x7c,%esp
0000a55f	movl	%esi,%eax
0000a561	popl	%ebx
0000a562	popl	%esi
0000a563	popl	%edi
0000a564	leave
0000a565	ret
_QCRGetCrashedThreadIndex:
0000a566	pushl	%ebp
0000a567	movl	%esp,%ebp
0000a569	subl	$0x18,%esp
0000a56c	movl	%ebx,0xf8(%ebp)
0000a56f	calll	0x0000a574
0000a574	popl	%ebx
0000a575	movl	%esi,0xfc(%ebp)
0000a578	movl	0x08(%ebp),%esi
0000a57b	movl	%esi,%eax
0000a57d	calll	0x000096ab
0000a582	testb	%al,%al
0000a584	jne	0x0000a5b0
0000a586	leal	0x00002328(%ebx),%eax
0000a58c	movl	%eax,0x0c(%esp)
0000a590	leal	0x0000233c(%ebx),%eax
0000a596	movl	%eax,0x04(%esp)
0000a59a	leal	0x00001414(%ebx),%eax
0000a5a0	movl	$0x000002c0,0x08(%esp)
0000a5a8	movl	%eax,(%esp)
0000a5ab	calll	___eprintf
0000a5b0	movl	0x1c(%esi),%eax
0000a5b3	movl	0xf8(%ebp),%ebx
0000a5b6	movl	0xfc(%ebp),%esi
0000a5b9	leave
0000a5ba	ret
_QCRBacktrace:
0000a5bb	pushl	%ebp
0000a5bc	movl	%esp,%ebp
0000a5be	pushl	%edi
0000a5bf	pushl	%esi
0000a5c0	subl	$0x30,%esp
0000a5c3	leal	0xf4(%ebp),%eax
0000a5c6	movl	$__mh_dylib_header,0xf4(%ebp)
0000a5cd	movl	%eax,(%esp)
0000a5d0	calll	0x00009bab
0000a5d5	testl	%eax,%eax
0000a5d7	jne	0x0000a649
0000a5d9	movl	0xf4(%ebp),%eax
0000a5dc	calll	0x000096ab
0000a5e1	testb	%al,%al
0000a5e3	je	0x0000a649
0000a5e5	movl	0xf4(%ebp),%edx
0000a5e8	leal	0xec(%ebp),%eax
0000a5eb	movl	%eax,0x0c(%esp)
0000a5ef	leal	0xf0(%ebp),%eax
0000a5f2	movl	%eax,0x08(%esp)
0000a5f6	movl	0x1c(%edx),%eax
0000a5f9	movl	%edx,(%esp)
0000a5fc	movl	%eax,0x04(%esp)
0000a600	calll	0x0000a24d
0000a605	testl	%eax,%eax
0000a607	jne	0x0000a649
0000a609	movl	0xf4(%ebp),%eax
0000a60c	xorl	%esi,%esi
0000a60e	movl	0x10(%eax),%eax
0000a611	movl	%eax,(%esp)
0000a614	calll	0x00005e8e
0000a619	movl	0xf0(%ebp),%eax
0000a61c	xorl	%ecx,%ecx
0000a61e	movl	0xec(%ebp),%edi
0000a621	movl	%eax,0xe4(%ebp)
0000a624	jmp	0x0000a636
0000a626	movl	0xe4(%ebp),%edx
0000a629	movl	(%esi,%edx),%eax
0000a62c	addl	$0x24,%esi
0000a62f	movl	0x08(%ebp),%edx
0000a632	movl	%eax,(%edx,%ecx,4)
0000a635	incl	%ecx
0000a636	cmpl	%edi,%ecx
0000a638	setb	%dl
0000a63b	cmpl	0x0c(%ebp),%ecx
0000a63e	setb	%al
0000a641	testb	%al,%dl
0000a643	jne	0x0000a626
0000a645	movl	%ecx,%eax
0000a647	jmp	0x0000a64b
0000a649	xorl	%eax,%eax
0000a64b	addl	$0x30,%esp
0000a64e	popl	%esi
0000a64f	popl	%edi
0000a650	leave
0000a651	ret
_QCRDropboxFormatBacktrace:
0000a652	pushl	%ebp
0000a653	movl	%esp,%ebp
0000a655	pushl	%edi
0000a656	pushl	%esi
0000a657	pushl	%ebx
0000a658	calll	0x0000a65d
0000a65d	popl	%ebx
0000a65e	subl	$0x0000009c,%esp
0000a664	movl	0x08(%ebp),%esi
0000a667	movl	%esi,%eax
0000a669	calll	0x000096ab
0000a66e	testb	%al,%al
0000a670	je	0x0000a884
0000a676	movl	0x0c(%ebp),%eax
0000a679	testl	%eax,%eax
0000a67b	movl	0x10(%ebp),%eax
0000a67e	sete	%dl
0000a681	testl	%eax,%eax
0000a683	sete	%al
0000a686	orb	%al,%dl
0000a688	jne	0x0000a884
0000a68e	leal	0xe0(%ebp),%eax
0000a691	movl	%eax,0x0c(%esp)
0000a695	leal	0xe4(%ebp),%eax
0000a698	movl	%eax,0x08(%esp)
0000a69c	movl	0x1c(%esi),%eax
0000a69f	movl	%esi,(%esp)
0000a6a2	movl	%eax,0x04(%esp)
0000a6a6	calll	0x0000a24d
0000a6ab	testl	%eax,%eax
0000a6ad	jne	0x0000a884
0000a6b3	movl	0xe4(%ebp),%eax
0000a6b6	xorl	%edx,%edx
0000a6b8	movl	0xe0(%ebp),%ecx
0000a6bb	movl	$__mh_dylib_header,0x88(%ebp)
0000a6c2	subl	$0x14,%eax
0000a6c5	jmp	0x0000a6d7
0000a6c7	movl	0x88(%ebp),%esi
0000a6ca	testb	$0x04,(%eax)
0000a6cd	cmovnel	%edx,%esi
0000a6d0	incl	%edx
0000a6d1	movl	%esi,0x88(%ebp)
0000a6d4	addl	$0x24,%eax
0000a6d7	cmpl	%ecx,%edx
0000a6d9	jb	0x0000a6c7
0000a6db	movl	0x88(%ebp),%edx
0000a6de	leal	0xc0(%ebp),%ecx
0000a6e1	leal	0xa0(%ebp),%esi
0000a6e4	movl	$__mh_dylib_header,0x8c(%ebp)
0000a6eb	movl	%ecx,0x84(%ebp)
0000a6ee	leal	(%edx,%edx,8),%eax
0000a6f1	shll	$0x02,%eax
0000a6f4	movl	%eax,0x90(%ebp)
0000a6f7	movl	%edx,0x94(%ebp)
0000a6fa	movl	%esi,0x80(%ebp)
0000a6fd	jmp	0x0000a86d
0000a702	movl	0xe4(%ebp),%eax
0000a705	movl	0x90(%ebp),%edx
0000a708	movl	0x18(%eax,%edx),%esi
0000a70c	testl	%esi,%esi
0000a70e	jne	0x0000a716
0000a710	movb	$__mh_dylib_header,0xc0(%ebp)
0000a714	jmp	0x0000a764
0000a716	movl	%esi,(%esp)
0000a719	calll	0x0000e121	; symbol stub for: _strlen
0000a71e	cmpl	$0x1e,%eax
0000a721	jbe	0x0000a74a
0000a723	movl	0x84(%ebp),%ecx
0000a726	leal	0xed(%esi,%eax),%eax
0000a72a	movl	%eax,0x0c(%esp)
0000a72e	leal	0x00002522(%ebx),%eax
0000a734	movl	%eax,0x08(%esp)
0000a738	movl	$0x00000020,0x04(%esp)
0000a740	movl	%ecx,(%esp)
0000a743	calll	0x0000e108	; symbol stub for: _snprintf
0000a748	jmp	0x0000a761
0000a74a	movl	0x84(%ebp),%eax
0000a74d	movl	$0x00000020,0x08(%esp)
0000a755	movl	%esi,0x04(%esp)
0000a759	movl	%eax,(%esp)
0000a75c	calll	0x0000e11c	; symbol stub for: _strlcpy
0000a761	movl	0xe4(%ebp),%eax
0000a764	addl	0x90(%ebp),%eax
0000a767	movl	0x14(%eax),%edi
0000a76a	testl	%edi,%edi
0000a76c	jne	0x0000a77a
0000a76e	leal	0x00000e5d(%ebx),%edi
0000a774	movb	$__mh_dylib_header,0xa0(%ebp)
0000a778	jmp	0x0000a7a5
0000a77a	movl	0x20(%eax),%edx
0000a77d	movl	0x1c(%eax),%eax
0000a780	movl	$0x00000020,0x04(%esp)
0000a788	movl	%edx,0x10(%esp)
0000a78c	movl	0x80(%ebp),%edx
0000a78f	movl	%eax,0x0c(%esp)
0000a793	leal	0x00002527(%ebx),%eax
0000a799	movl	%eax,0x08(%esp)
0000a79d	movl	%edx,(%esp)
0000a7a0	calll	0x0000e108	; symbol stub for: _snprintf
0000a7a5	testl	%esi,%esi
0000a7a7	movl	0x10(%ebp),%ecx
0000a7aa	setne	%dl
0000a7ad	cmpl	%ecx,0x8c(%ebp)
0000a7b0	setne	%al
0000a7b3	testb	%al,%dl
0000a7b5	je	0x0000a7e2
0000a7b7	leal	0x0000252d(%ebx),%eax
0000a7bd	movl	0x84(%ebp),%esi
0000a7c0	movl	%eax,0x08(%esp)
0000a7c4	movl	%ecx,%eax
0000a7c6	subl	0x8c(%ebp),%eax
0000a7c9	movl	%esi,0x0c(%esp)
0000a7cd	movl	%eax,0x04(%esp)
0000a7d1	movl	0x0c(%ebp),%eax
0000a7d4	addl	0x8c(%ebp),%eax
0000a7d7	movl	%eax,(%esp)
0000a7da	calll	0x0000e108	; symbol stub for: _snprintf
0000a7df	addl	%eax,0x8c(%ebp)
0000a7e2	cmpb	$__mh_dylib_header,(%edi)
0000a7e5	movl	0x10(%ebp),%eax
0000a7e8	setne	%dl
0000a7eb	cmpl	%eax,0x8c(%ebp)
0000a7ee	setne	%al
0000a7f1	testb	%al,%dl
0000a7f3	je	0x0000a825
0000a7f5	leal	0x00002532(%ebx),%eax
0000a7fb	movl	0x80(%ebp),%edx
0000a7fe	movl	%eax,0x08(%esp)
0000a802	movl	0x10(%ebp),%eax
0000a805	subl	0x8c(%ebp),%eax
0000a808	movl	%edi,0x0c(%esp)
0000a80c	movl	%edx,0x10(%esp)
0000a810	movl	%eax,0x04(%esp)
0000a814	movl	0x0c(%ebp),%eax
0000a817	addl	0x8c(%ebp),%eax
0000a81a	movl	%eax,(%esp)
0000a81d	calll	0x0000e108	; symbol stub for: _snprintf
0000a822	addl	%eax,0x8c(%ebp)
0000a825	movl	0x10(%ebp),%ecx
0000a828	cmpl	%ecx,0x8c(%ebp)
0000a82b	je	0x0000a866
0000a82d	movl	0xe4(%ebp),%eax
0000a830	movl	0x90(%ebp),%esi
0000a833	movl	0x04(%esi,%eax),%edx
0000a837	movl	(%esi,%eax),%eax
0000a83a	movl	%edx,0x10(%esp)
0000a83e	movl	%eax,0x0c(%esp)
0000a842	leal	0x00002539(%ebx),%eax
0000a848	movl	%eax,0x08(%esp)
0000a84c	movl	%ecx,%eax
0000a84e	subl	0x8c(%ebp),%eax
0000a851	movl	%eax,0x04(%esp)
0000a855	movl	0x0c(%ebp),%eax
0000a858	addl	0x8c(%ebp),%eax
0000a85b	movl	%eax,(%esp)
0000a85e	calll	0x0000e108	; symbol stub for: _snprintf
0000a863	addl	%eax,0x8c(%ebp)
0000a866	incl	0x94(%ebp)
0000a869	addl	$0x24,0x90(%ebp)
0000a86d	movl	0x94(%ebp),%eax
0000a870	cmpl	0xe0(%ebp),%eax
0000a873	jb	0x0000a702
0000a879	movl	0x88(%ebp),%edx
0000a87c	subl	%edx,%eax
0000a87e	movl	%eax,0x94(%ebp)
0000a881	decl	%eax
0000a882	jmp	0x0000a886
0000a884	xorl	%eax,%eax
0000a886	addl	$0x0000009c,%esp
0000a88c	popl	%ebx
0000a88d	popl	%esi
0000a88e	popl	%edi
0000a88f	leave
0000a890	ret
_QCRPrintBacktraces:
0000a891	pushl	%ebp
0000a892	movl	%esp,%ebp
0000a894	pushl	%edi
0000a895	pushl	%esi
0000a896	pushl	%ebx
0000a897	calll	0x0000a89c
0000a89c	popl	%ebx
0000a89d	subl	$0x000000ac,%esp
0000a8a3	movl	0x08(%ebp),%eax
0000a8a6	calll	0x000096ab
0000a8ab	testb	%al,%al
0000a8ad	jne	0x0000a8c3
0000a8af	leal	0x00002000(%ebx),%eax
0000a8b5	movl	%eax,0x0c(%esp)
0000a8b9	movl	$0x0000033f,0x08(%esp)
0000a8c1	jmp	0x0000a8dc
0000a8c3	movl	0x0c(%ebp),%eax
0000a8c6	testl	%eax,%eax
0000a8c8	jne	0x0000a8f4
0000a8ca	leal	0x00002303(%ebx),%eax
0000a8d0	movl	%eax,0x0c(%esp)
0000a8d4	movl	$0x00000340,0x08(%esp)
0000a8dc	leal	0x00002014(%ebx),%eax
0000a8e2	movl	%eax,0x04(%esp)
0000a8e6	leal	0x000010ec(%ebx),%eax
0000a8ec	movl	%eax,(%esp)
0000a8ef	calll	___eprintf
0000a8f4	movl	0x08(%ebp),%edx
0000a8f7	movl	0x10(%edx),%eax
0000a8fa	movl	%eax,(%esp)
0000a8fd	calll	0x00005e8e
0000a902	movl	$__mh_dylib_header,0x84(%ebp)
0000a909	movb	%al,0x83(%ebp)
0000a90c	jmp	0x0000ab10
0000a911	movl	0x08(%ebp),%ecx
0000a914	leal	0x0000230d(%ebx),%eax
0000a91a	movl	0x84(%ebp),%edx
0000a91d	cmpl	0x1c(%ecx),%edx
0000a920	leal	0x00000c1e(%ebx),%edx
0000a926	movl	0x84(%ebp),%ecx
0000a929	cmovnel	%edx,%eax
0000a92c	movl	%eax,0x0c(%esp)
0000a930	leal	0x00002316(%ebx),%eax
0000a936	movl	%eax,0x04(%esp)
0000a93a	movl	0x0c(%ebp),%eax
0000a93d	movl	%ecx,0x08(%esp)
0000a941	movl	%eax,(%esp)
0000a944	calll	0x0000e081	; symbol stub for: _fprintf
0000a949	movl	0x84(%ebp),%edx
0000a94c	leal	0xe0(%ebp),%eax
0000a94f	movl	0x08(%ebp),%ecx
0000a952	movl	%eax,0x0c(%esp)
0000a956	leal	0xe4(%ebp),%eax
0000a959	movl	%eax,0x08(%esp)
0000a95d	movl	%edx,0x04(%esp)
0000a961	movl	%ecx,(%esp)
0000a964	calll	0x0000a24d
0000a969	testl	%eax,%eax
0000a96b	jne	0x0000aafa
0000a971	movl	0x08(%ebp),%eax
0000a974	xorl	%ecx,%ecx
0000a976	movl	0x84(%ebp),%edx
0000a979	cmpl	0x1c(%eax),%edx
0000a97c	jne	0x0000a999
0000a97e	movl	0xe4(%ebp),%eax
0000a981	xorl	%edx,%edx
0000a983	movl	0xe0(%ebp),%esi
0000a986	subl	$0x14,%eax
0000a989	jmp	0x0000a995
0000a98b	testb	$0x04,(%eax)
0000a98e	cmovnel	%edx,%ecx
0000a991	incl	%edx
0000a992	addl	$0x24,%eax
0000a995	cmpl	%esi,%edx
0000a997	jb	0x0000a98b
0000a999	leal	(%ecx,%ecx,8),%eax
0000a99c	shll	$0x02,%eax
0000a99f	movl	%eax,0x90(%ebp)
0000a9a2	movl	%ecx,0x94(%ebp)
0000a9a5	movl	$__mh_dylib_header,0x8c(%ebp)
0000a9ac	jmp	0x0000aaee
0000a9b1	movl	0xe4(%ebp),%eax
0000a9b4	movl	0x90(%ebp),%ecx
0000a9b7	movl	0x18(%eax,%ecx),%esi
0000a9bb	testl	%esi,%esi
0000a9bd	jne	0x0000a9ce
0000a9bf	leal	0xc0(%ebp),%edx
0000a9c2	movb	$__mh_dylib_header,0xc0(%ebp)
0000a9c6	movl	%edx,0xffffff7c(%ebp)
0000a9cc	jmp	0x0000aa28
0000a9ce	movl	%esi,(%esp)
0000a9d1	calll	0x0000e121	; symbol stub for: _strlen
0000a9d6	cmpl	$0x1e,%eax
0000a9d9	jbe	0x0000aa08
0000a9db	leal	0xe5(%esi,%eax),%eax
0000a9df	leal	0xc0(%ebp),%ecx
0000a9e2	movl	%eax,0x0c(%esp)
0000a9e6	leal	0x00002325(%ebx),%eax
0000a9ec	movl	%eax,0x08(%esp)
0000a9f0	movl	$0x00000020,0x04(%esp)
0000a9f8	movl	%ecx,0xffffff7c(%ebp)
0000a9fe	movl	%ecx,(%esp)
0000aa01	calll	0x0000e108	; symbol stub for: _snprintf
0000aa06	jmp	0x0000aa25
0000aa08	leal	0xc0(%ebp),%eax
0000aa0b	movl	$0x00000020,0x08(%esp)
0000aa13	movl	%esi,0x04(%esp)
0000aa17	movl	%eax,0xffffff7c(%ebp)
0000aa1d	movl	%eax,(%esp)
0000aa20	calll	0x0000e11c	; symbol stub for: _strlcpy
0000aa25	movl	0xe4(%ebp),%eax
0000aa28	movl	0x90(%ebp),%ecx
0000aa2b	addl	%eax,%ecx
0000aa2d	movl	0x14(%ecx),%edx
0000aa30	testl	%edx,%edx
0000aa32	movl	%edx,0x88(%ebp)
0000aa35	jne	0x0000aa4f
0000aa37	leal	0x00000c1e(%ebx),%ecx
0000aa3d	leal	0xa0(%ebp),%edx
0000aa40	movb	$__mh_dylib_header,0xa0(%ebp)
0000aa44	movl	%ecx,0x88(%ebp)
0000aa47	movl	%edx,0xffffff78(%ebp)
0000aa4d	jmp	0x0000aa83
0000aa4f	movl	0x1c(%ecx),%eax
0000aa52	movl	0x20(%ecx),%edx
0000aa55	leal	0xa0(%ebp),%ecx
0000aa58	movl	$0x00000020,0x04(%esp)
0000aa60	movl	%ecx,0xffffff78(%ebp)
0000aa66	movl	%eax,0x0c(%esp)
0000aa6a	leal	0x0000232b(%ebx),%eax
0000aa70	movl	%edx,0x10(%esp)
0000aa74	movl	%eax,0x08(%esp)
0000aa78	movl	%ecx,(%esp)
0000aa7b	calll	0x0000e108	; symbol stub for: _snprintf
0000aa80	movl	0xe4(%ebp),%eax
0000aa83	movl	0x90(%ebp),%edx
0000aa86	cmpb	$__mh_dylib_header,0x83(%ebp)
0000aa8a	movl	(%eax,%edx),%esi
0000aa8d	movl	0x04(%eax,%edx),%edi
0000aa91	movl	$0x00000012,%eax
0000aa96	jne	0x0000aaa1
0000aa98	xorl	%edx,%edx
0000aa9a	movl	$0x0000000a,%eax
0000aa9f	movl	%edx,%edi
0000aaa1	movl	0xffffff78(%ebp),%ecx
0000aaa7	movl	0x88(%ebp),%edx
0000aaaa	movl	%eax,0x10(%esp)
0000aaae	movl	0x8c(%ebp),%eax
0000aab1	movl	%esi,0x14(%esp)
0000aab5	movl	%ecx,0x20(%esp)
0000aab9	movl	0xffffff7c(%ebp),%ecx
0000aabf	movl	%edx,0x1c(%esp)
0000aac3	movl	0x0c(%ebp),%edx
0000aac6	movl	%eax,0x08(%esp)
0000aaca	leal	0x00002333(%ebx),%eax
0000aad0	movl	%edi,0x18(%esp)
0000aad4	movl	%ecx,0x0c(%esp)
0000aad8	movl	%eax,0x04(%esp)
0000aadc	movl	%edx,(%esp)
0000aadf	calll	0x0000e081	; symbol stub for: _fprintf
0000aae4	incl	0x94(%ebp)
0000aae7	incl	0x8c(%ebp)
0000aaea	addl	$0x24,0x90(%ebp)
0000aaee	movl	0x94(%ebp),%ecx
0000aaf1	cmpl	0xe0(%ebp),%ecx
0000aaf4	jb	0x0000a9b1
0000aafa	movl	0x0c(%ebp),%eax
0000aafd	movl	$0x0000000a,(%esp)
0000ab04	movl	%eax,0x04(%esp)
0000ab08	calll	0x0000e086	; symbol stub for: _fputc
0000ab0d	incl	0x84(%ebp)
0000ab10	movl	0x08(%ebp),%edx
0000ab13	movl	0x84(%ebp),%ecx
0000ab16	cmpl	0x14(%edx),%ecx
0000ab19	jb	0x0000a911
0000ab1f	addl	$0x000000ac,%esp
0000ab25	popl	%ebx
0000ab26	popl	%esi
0000ab27	popl	%edi
0000ab28	leave
0000ab29	ret
_QCRPrintThreadState:
0000ab2a	pushl	%ebp
0000ab2b	movl	%esp,%ebp
0000ab2d	pushl	%edi
0000ab2e	pushl	%esi
0000ab2f	pushl	%ebx
0000ab30	calll	0x0000ab35
0000ab35	popl	%ebx
0000ab36	subl	$0x000000ac,%esp
0000ab3c	movl	0x08(%ebp),%esi
0000ab3f	movl	0x0c(%ebp),%edi
0000ab42	movl	%esi,%eax
0000ab44	calll	0x000096ab
0000ab49	testb	%al,%al
0000ab4b	jne	0x0000ab61
0000ab4d	leal	0x00001d67(%ebx),%eax
0000ab53	movl	%eax,0x0c(%esp)
0000ab57	movl	$0x0000048e,0x08(%esp)
0000ab5f	jmp	0x0000ab77
0000ab61	testl	%edi,%edi
0000ab63	jne	0x0000ab8f
0000ab65	leal	0x0000206a(%ebx),%eax
0000ab6b	movl	%eax,0x0c(%esp)
0000ab6f	movl	$0x0000048f,0x08(%esp)
0000ab77	leal	0x00001d7b(%ebx),%eax
0000ab7d	movl	%eax,0x04(%esp)
0000ab81	leal	0x00000e53(%ebx),%eax
0000ab87	movl	%eax,(%esp)
0000ab8a	calll	___eprintf
0000ab8f	movl	$__mh_dylib_header,0x14(%esp)
0000ab97	movl	$__mh_dylib_header,0x10(%esp)
0000ab9f	movl	$__mh_dylib_header,0x0c(%esp)
0000aba7	movl	$__mh_dylib_header,0x08(%esp)
0000abaf	movl	0x1c(%esi),%eax
0000abb2	movl	%esi,(%esp)
0000abb5	movl	%eax,0x04(%esp)
0000abb9	calll	0x00009f29
0000abbe	testl	%eax,%eax
0000abc0	jne	0x0000b29b
0000abc6	movl	0x1c(%esi),%eax
0000abc9	movl	$0x00000020,0x04(%esp)
0000abd1	movl	%eax,0x0c(%esp)
0000abd5	leal	0x00002132(%ebx),%eax
0000abdb	movl	%eax,0x08(%esp)
0000abdf	leal	0xc8(%ebp),%eax
0000abe2	movl	%eax,0xffffff78(%ebp)
0000abe8	movl	%eax,(%esp)
0000abeb	calll	0x0000e108	; symbol stub for: _snprintf
0000abf0	movl	0x08(%esi),%eax
0000abf3	cmpl	$0x12,%eax
0000abf6	je	0x0000ac23
0000abf8	cmpl	$0x01000007,%eax
0000abfd	je	0x0000affd
0000ac03	cmpl	$0x07,%eax
0000ac06	je	0x0000affd
0000ac0c	leal	0x00000b4b(%ebx),%eax
0000ac12	movl	%eax,0x0c(%esp)
0000ac16	movl	$0x000004bd,0x08(%esp)
0000ac1e	jmp	0x0000ab77
0000ac23	imull	$0x1c,0x1c(%esi),%eax
0000ac27	movl	0x18(%esi),%edx
0000ac2a	movl	0x08(%eax,%edx),%eax
0000ac2e	cmpl	$0x01,%eax
0000ac31	je	0x0000ac53
0000ac33	cmpl	$0x05,%eax
0000ac36	je	0x0000ae11
0000ac3c	leal	0x00000b4b(%ebx),%eax
0000ac42	movl	%eax,0x0c(%esp)
0000ac46	movl	$0x000004a8,0x08(%esp)
0000ac4e	jmp	0x0000ab77
0000ac53	movl	%esi,%eax
0000ac55	calll	0x000096ab
0000ac5a	testb	%al,%al
0000ac5c	jne	0x0000ac75
0000ac5e	leal	0x00001d67(%ebx),%eax
0000ac64	movl	%eax,0x0c(%esp)
0000ac68	movl	$0x000003a8,0x08(%esp)
0000ac70	jmp	0x0000ab77
0000ac75	movl	0x1c(%esi),%eax
0000ac78	cmpl	$0xff,%eax
0000ac7b	jne	0x0000ac94
0000ac7d	leal	0x0000213f(%ebx),%eax
0000ac83	movl	%eax,0x0c(%esp)
0000ac87	movl	$0x000003a9,0x08(%esp)
0000ac8f	jmp	0x0000ab77
0000ac94	imull	$0x1c,%eax,%eax
0000ac97	addl	0x18(%esi),%eax
0000ac9a	movl	0x0c(%eax),%esi
0000ac9d	testl	%esi,%esi
0000ac9f	jne	0x0000acb8
0000aca1	leal	0x0000216b(%ebx),%eax
0000aca7	movl	%eax,0x0c(%esp)
0000acab	movl	$0x000003aa,0x08(%esp)
0000acb3	jmp	0x0000ab77
0000acb8	cmpl	$0x01,0x08(%eax)
0000acbc	je	0x0000acd5
0000acbe	leal	0x000021a3(%ebx),%eax
0000acc4	movl	%eax,0x0c(%esp)
0000acc8	movl	$0x000003ab,0x08(%esp)
0000acd0	jmp	0x0000ab77
0000acd5	cmpl	$0x000000a0,0x10(%eax)
0000acdc	jne	0x0000b29b
0000ace2	movl	0xffffff78(%ebp),%edx
0000ace8	leal	0x000021ef(%ebx),%eax
0000acee	movl	%eax,0x04(%esp)
0000acf2	movl	%edi,(%esp)
0000acf5	movl	%edx,0x08(%esp)
0000acf9	calll	0x0000e081	; symbol stub for: _fprintf
0000acfe	movl	0x0000009c(%esi),%eax
0000ad04	movl	%eax,0x10(%esp)
0000ad08	movl	0x04(%esi),%eax
0000ad0b	movl	%eax,0x0c(%esp)
0000ad0f	movl	(%esi),%eax
0000ad11	movl	%edi,(%esp)
0000ad14	movl	%eax,0x08(%esp)
0000ad18	leal	0x00002213(%ebx),%eax
0000ad1e	movl	%eax,0x04(%esp)
0000ad22	calll	0x0000e081	; symbol stub for: _fprintf
0000ad27	movl	0x00000098(%esi),%eax
0000ad2d	movl	%eax,0x14(%esp)
0000ad31	movl	0x00000094(%esi),%eax
0000ad37	movl	%eax,0x10(%esp)
0000ad3b	movl	0x00000090(%esi),%eax
0000ad41	movl	%eax,0x0c(%esp)
0000ad45	movl	0x0000008c(%esi),%eax
0000ad4b	addl	$0x08,%esi
0000ad4e	movl	%edi,(%esp)
0000ad51	movl	%eax,0x08(%esp)
0000ad55	leal	0x0000224f(%ebx),%eax
0000ad5b	movl	%eax,0x04(%esp)
0000ad5f	calll	0x0000e081	; symbol stub for: _fprintf
0000ad64	leal	0x00002286(%ebx),%ecx
0000ad6a	leal	0xa8(%ebp),%eax
0000ad6d	leal	0x0000228a(%ebx),%edx
0000ad73	movl	%esi,0x90(%ebp)
0000ad76	xorl	%esi,%esi
0000ad78	movl	%ecx,0x84(%ebp)
0000ad7b	movl	%eax,0x8c(%ebp)
0000ad7e	movl	%edx,0xffffff7c(%ebp)
0000ad84	testl	$0x00000003,%esi
0000ad8a	jne	0x0000ad9c
0000ad8c	movl	%edi,0x04(%esp)
0000ad90	movl	$0x00000020,(%esp)
0000ad97	calll	0x0000e086	; symbol stub for: _fputc
0000ad9c	movl	0x84(%ebp),%ecx
0000ad9f	movl	0x8c(%ebp),%eax
0000ada2	movl	%esi,0x0c(%esp)
0000ada6	movl	$0x00000020,0x04(%esp)
0000adae	movl	%ecx,0x08(%esp)
0000adb2	movl	%eax,(%esp)
0000adb5	calll	0x0000e108	; symbol stub for: _snprintf
0000adba	movl	0x90(%ebp),%edx
0000adbd	movl	0x8c(%ebp),%ecx
0000adc0	movl	(%edx,%esi,4),%eax
0000adc3	movl	%ecx,0x08(%esp)
0000adc7	movl	%edi,(%esp)
0000adca	movl	%eax,0x0c(%esp)
0000adce	movl	0xffffff7c(%ebp),%eax
0000add4	movl	%eax,0x04(%esp)
0000add8	calll	0x0000e081	; symbol stub for: _fprintf
0000addd	movl	%esi,%edx
0000addf	sarl	$0x1f,%edx
0000ade2	shrl	$0x1e,%edx
0000ade5	leal	(%esi,%edx),%eax
0000ade8	andl	$0x03,%eax
0000adeb	subl	%edx,%eax
0000aded	cmpl	$0x03,%eax
0000adf0	jne	0x0000ae02
0000adf2	movl	%edi,0x04(%esp)
0000adf6	movl	$0x0000000a,(%esp)
0000adfd	calll	0x0000e086	; symbol stub for: _fputc
0000ae02	incl	%esi
0000ae03	cmpl	$0x20,%esi
0000ae06	jne	0x0000ad84
0000ae0c	jmp	0x0000b28b
0000ae11	movl	%esi,%eax
0000ae13	calll	0x000096ab
0000ae18	testb	%al,%al
0000ae1a	jne	0x0000ae33
0000ae1c	leal	0x00001d67(%ebx),%eax
0000ae22	movl	%eax,0x0c(%esp)
0000ae26	movl	$0x000003e6,0x08(%esp)
0000ae2e	jmp	0x0000ab77
0000ae33	movl	0x1c(%esi),%eax
0000ae36	cmpl	$0xff,%eax
0000ae39	jne	0x0000ae52
0000ae3b	leal	0x0000213f(%ebx),%eax
0000ae41	movl	%eax,0x0c(%esp)
0000ae45	movl	$0x000003e7,0x08(%esp)
0000ae4d	jmp	0x0000ab77
0000ae52	imull	$0x1c,%eax,%eax
0000ae55	addl	0x18(%esi),%eax
0000ae58	movl	0x0c(%eax),%esi
0000ae5b	testl	%esi,%esi
0000ae5d	jne	0x0000ae76
0000ae5f	leal	0x0000216b(%ebx),%eax
0000ae65	movl	%eax,0x0c(%esp)
0000ae69	movl	$0x000003e8,0x08(%esp)
0000ae71	jmp	0x0000ab77
0000ae76	cmpl	$0x05,0x08(%eax)
0000ae7a	je	0x0000ae93
0000ae7c	leal	0x00002297(%ebx),%eax
0000ae82	movl	%eax,0x0c(%esp)
0000ae86	movl	$0x000003e9,0x08(%esp)
0000ae8e	jmp	0x0000ab77
0000ae93	cmpl	$0x00000130,0x10(%eax)
0000ae9a	jne	0x0000b29b
0000aea0	movl	0xffffff78(%ebp),%edx
0000aea6	leal	0x000021ef(%ebx),%eax
0000aeac	movl	%eax,0x04(%esp)
0000aeb0	movl	%edi,(%esp)
0000aeb3	movl	%edx,0x08(%esp)
0000aeb7	calll	0x0000e081	; symbol stub for: _fprintf
0000aebc	movl	0x0000012c(%esi),%eax
0000aec2	movl	%eax,0x18(%esp)
0000aec6	movl	0x08(%esi),%eax
0000aec9	movl	0x0c(%esi),%edx
0000aecc	movl	%eax,0x10(%esp)
0000aed0	movl	%edx,0x14(%esp)
0000aed4	movl	(%esi),%eax
0000aed6	movl	0x04(%esi),%edx
0000aed9	movl	%edi,(%esp)
0000aedc	movl	%eax,0x08(%esp)
0000aee0	leal	0x000022e3(%ebx),%eax
0000aee6	movl	%edx,0x0c(%esp)
0000aeea	movl	%eax,0x04(%esp)
0000aeee	calll	0x0000e081	; symbol stub for: _fprintf
0000aef3	movl	0x00000124(%esi),%eax
0000aef9	movl	0x00000128(%esi),%edx
0000aeff	movl	%eax,0x1c(%esp)
0000af03	movl	%edx,0x20(%esp)
0000af07	movl	0x0000011c(%esi),%eax
0000af0d	movl	0x00000120(%esi),%edx
0000af13	movl	%eax,0x14(%esp)
0000af17	movl	%edx,0x18(%esp)
0000af1b	movl	0x00000114(%esi),%eax
0000af21	movl	0x00000118(%esi),%edx
0000af27	movl	%eax,0x0c(%esp)
0000af2b	movl	%edx,0x10(%esp)
0000af2f	movl	0x00000110(%esi),%eax
0000af35	addl	$0x10,%esi
0000af38	movl	%edi,(%esp)
0000af3b	movl	%eax,0x08(%esp)
0000af3f	leal	0x0000232f(%ebx),%eax
0000af45	movl	%eax,0x04(%esp)
0000af49	calll	0x0000e081	; symbol stub for: _fprintf
0000af4e	leal	0x00002286(%ebx),%ecx
0000af54	leal	0xa8(%ebp),%eax
0000af57	leal	0x00002377(%ebx),%edx
0000af5d	movl	%esi,0x94(%ebp)
0000af60	xorl	%esi,%esi
0000af62	movl	%ecx,0x84(%ebp)
0000af65	movl	%eax,0x8c(%ebp)
0000af68	movl	%edx,0x88(%ebp)
0000af6b	testl	$0x00000003,%esi
0000af71	jne	0x0000af83
0000af73	movl	%edi,0x04(%esp)
0000af77	movl	$0x00000020,(%esp)
0000af7e	calll	0x0000e086	; symbol stub for: _fputc
0000af83	movl	0x84(%ebp),%ecx
0000af86	movl	0x8c(%ebp),%eax
0000af89	movl	%esi,0x0c(%esp)
0000af8d	movl	$0x00000020,0x04(%esp)
0000af95	movl	%ecx,0x08(%esp)
0000af99	movl	%eax,(%esp)
0000af9c	calll	0x0000e108	; symbol stub for: _snprintf
0000afa1	movl	0x94(%ebp),%ecx
0000afa4	movl	(%ecx,%esi,8),%eax
0000afa7	movl	0x04(%ecx,%esi,8),%edx
0000afab	movl	%edi,(%esp)
0000afae	movl	%eax,0x0c(%esp)
0000afb2	movl	0x8c(%ebp),%eax
0000afb5	movl	%edx,0x10(%esp)
0000afb9	movl	0x88(%ebp),%edx
0000afbc	movl	%eax,0x08(%esp)
0000afc0	movl	%edx,0x04(%esp)
0000afc4	calll	0x0000e081	; symbol stub for: _fprintf
0000afc9	movl	%esi,%edx
0000afcb	sarl	$0x1f,%edx
0000afce	shrl	$0x1e,%edx
0000afd1	leal	(%esi,%edx),%eax
0000afd4	andl	$0x03,%eax
0000afd7	subl	%edx,%eax
0000afd9	cmpl	$0x03,%eax
0000afdc	jne	0x0000afee
0000afde	movl	%edi,0x04(%esp)
0000afe2	movl	$0x0000000a,(%esp)
0000afe9	calll	0x0000e086	; symbol stub for: _fputc
0000afee	incl	%esi
0000afef	cmpl	$0x20,%esi
0000aff2	jne	0x0000af6b
0000aff8	jmp	0x0000b28b
0000affd	imull	$0x1c,0x1c(%esi),%eax
0000b001	movl	0x18(%esi),%edx
0000b004	movl	0x08(%eax,%edx),%eax
0000b008	cmpl	$0x01,%eax
0000b00b	je	0x0000b02d
0000b00d	cmpl	$0x04,%eax
0000b010	je	0x0000b160
0000b016	leal	0x00000b4b(%ebx),%eax
0000b01c	movl	%eax,0x0c(%esp)
0000b020	movl	$0x000004b7,0x08(%esp)
0000b028	jmp	0x0000ab77
0000b02d	movl	%esi,%eax
0000b02f	calll	0x000096ab
0000b034	testb	%al,%al
0000b036	jne	0x0000b04f
0000b038	leal	0x00001d67(%ebx),%eax
0000b03e	movl	%eax,0x0c(%esp)
0000b042	movl	$0x0000042d,0x08(%esp)
0000b04a	jmp	0x0000ab77
0000b04f	movl	0x1c(%esi),%eax
0000b052	cmpl	$0xff,%eax
0000b055	jne	0x0000b06e
0000b057	leal	0x0000213f(%ebx),%eax
0000b05d	movl	%eax,0x0c(%esp)
0000b061	movl	$0x0000042e,0x08(%esp)
0000b069	jmp	0x0000ab77
0000b06e	imull	$0x1c,%eax,%eax
0000b071	addl	0x18(%esi),%eax
0000b074	movl	0x0c(%eax),%ecx
0000b077	testl	%ecx,%ecx
0000b079	movl	%ecx,0x98(%ebp)
0000b07c	jne	0x0000b095
0000b07e	leal	0x0000216b(%ebx),%eax
0000b084	movl	%eax,0x0c(%esp)
0000b088	movl	$0x0000042f,0x08(%esp)
0000b090	jmp	0x0000ab77
0000b095	cmpl	$0x01,0x08(%eax)
0000b099	je	0x0000b0b2
0000b09b	leal	0x00002387(%ebx),%eax
0000b0a1	movl	%eax,0x0c(%esp)
0000b0a5	movl	$0x00000430,0x08(%esp)
0000b0ad	jmp	0x0000ab77
0000b0b2	cmpl	$0x40,0x10(%eax)
0000b0b6	jne	0x0000b29b
0000b0bc	movl	0xffffff78(%ebp),%eax
0000b0c2	xorl	%esi,%esi
0000b0c4	movl	%edi,(%esp)
0000b0c7	movl	%eax,0x08(%esp)
0000b0cb	leal	0x000023d3(%ebx),%eax
0000b0d1	movl	%eax,0x04(%esp)
0000b0d5	calll	0x0000e081	; symbol stub for: _fprintf
0000b0da	leal	0x0000254b(%ebx),%edx
0000b0e0	leal	0x0000228a(%ebx),%ecx
0000b0e6	movl	%edx,0xa0(%ebp)
0000b0e9	movl	%ecx,0xffffff7c(%ebp)
0000b0ef	testl	$0x00000003,%esi
0000b0f5	jne	0x0000b107
0000b0f7	movl	%edi,0x04(%esp)
0000b0fb	movl	$0x00000020,(%esp)
0000b102	calll	0x0000e086	; symbol stub for: _fputc
0000b107	movl	0x98(%ebp),%edx
0000b10a	movl	0xa0(%ebp),%ecx
0000b10d	movl	(%edx,%esi,4),%eax
0000b110	movl	%eax,0x0c(%esp)
0000b114	movl	(%ecx),%eax
0000b116	movl	%edi,(%esp)
0000b119	movl	%eax,0x08(%esp)
0000b11d	movl	0xffffff7c(%ebp),%eax
0000b123	movl	%eax,0x04(%esp)
0000b127	calll	0x0000e081	; symbol stub for: _fprintf
0000b12c	movl	%esi,%edx
0000b12e	sarl	$0x1f,%edx
0000b131	shrl	$0x1e,%edx
0000b134	leal	(%esi,%edx),%eax
0000b137	andl	$0x03,%eax
0000b13a	subl	%edx,%eax
0000b13c	cmpl	$0x03,%eax
0000b13f	jne	0x0000b151
0000b141	movl	%edi,0x04(%esp)
0000b145	movl	$0x0000000a,(%esp)
0000b14c	calll	0x0000e086	; symbol stub for: _fputc
0000b151	incl	%esi
0000b152	addl	$0x04,0xa0(%ebp)
0000b156	cmpl	$0x10,%esi
0000b159	jne	0x0000b0ef
0000b15b	jmp	0x0000b28b
0000b160	movl	%esi,%eax
0000b162	calll	0x000096ab
0000b167	testb	%al,%al
0000b169	jne	0x0000b182
0000b16b	leal	0x00001d67(%ebx),%eax
0000b171	movl	%eax,0x0c(%esp)
0000b175	movl	$0x00000465,0x08(%esp)
0000b17d	jmp	0x0000ab77
0000b182	movl	0x1c(%esi),%eax
0000b185	cmpl	$0xff,%eax
0000b188	jne	0x0000b1a1
0000b18a	leal	0x0000213f(%ebx),%eax
0000b190	movl	%eax,0x0c(%esp)
0000b194	movl	$0x00000466,0x08(%esp)
0000b19c	jmp	0x0000ab77
0000b1a1	imull	$0x1c,%eax,%eax
0000b1a4	addl	0x18(%esi),%eax
0000b1a7	movl	0x0c(%eax),%edx
0000b1aa	testl	%edx,%edx
0000b1ac	movl	%edx,0x9c(%ebp)
0000b1af	jne	0x0000b1c8
0000b1b1	leal	0x0000216b(%ebx),%eax
0000b1b7	movl	%eax,0x0c(%esp)
0000b1bb	movl	$0x00000467,0x08(%esp)
0000b1c3	jmp	0x0000ab77
0000b1c8	cmpl	$0x04,0x08(%eax)
0000b1cc	je	0x0000b1e5
0000b1ce	leal	0x000023ff(%ebx),%eax
0000b1d4	movl	%eax,0x0c(%esp)
0000b1d8	movl	$0x00000468,0x08(%esp)
0000b1e0	jmp	0x0000ab77
0000b1e5	cmpl	$0x000000a8,0x10(%eax)
0000b1ec	jne	0x0000b29b
0000b1f2	movl	0xffffff78(%ebp),%ecx
0000b1f8	leal	0x0000244b(%ebx),%eax
0000b1fe	xorl	%esi,%esi
0000b200	movl	%eax,0x04(%esp)
0000b204	movl	%edi,(%esp)
0000b207	movl	%ecx,0x08(%esp)
0000b20b	calll	0x0000e081	; symbol stub for: _fprintf
0000b210	leal	0x000024eb(%ebx),%eax
0000b216	leal	0x00002477(%ebx),%edx
0000b21c	movl	%eax,0xa4(%ebp)
0000b21f	movl	%edx,0x80(%ebp)
0000b222	movl	0x9c(%ebp),%ecx
0000b225	movl	0x04(%ecx,%esi,8),%edx
0000b229	movl	(%ecx,%esi,8),%eax
0000b22c	movl	0x80(%ebp),%ecx
0000b22f	movl	%edx,0x10(%esp)
0000b233	movl	0xa4(%ebp),%edx
0000b236	movl	%eax,0x0c(%esp)
0000b23a	movl	(%edx),%eax
0000b23c	movl	%ecx,0x04(%esp)
0000b240	movl	%edi,(%esp)
0000b243	movl	%eax,0x08(%esp)
0000b247	calll	0x0000e081	; symbol stub for: _fprintf
0000b24c	movl	%esi,%edx
0000b24e	sarl	$0x1f,%edx
0000b251	shrl	$0x1e,%edx
0000b254	leal	(%esi,%edx),%eax
0000b257	andl	$0x03,%eax
0000b25a	subl	%edx,%eax
0000b25c	cmpl	$0x03,%eax
0000b25f	jne	0x0000b271
0000b261	movl	%edi,0x04(%esp)
0000b265	movl	$0x0000000a,(%esp)
0000b26c	calll	0x0000e086	; symbol stub for: _fputc
0000b271	incl	%esi
0000b272	addl	$0x04,0xa4(%ebp)
0000b276	cmpl	$0x12,%esi
0000b279	jne	0x0000b222
0000b27b	movl	%edi,0x04(%esp)
0000b27f	movl	$0x0000000a,(%esp)
0000b286	calll	0x0000e086	; symbol stub for: _fputc
0000b28b	movl	%edi,0x04(%esp)
0000b28f	movl	$0x0000000a,(%esp)
0000b296	calll	0x0000e086	; symbol stub for: _fputc
0000b29b	addl	$0x000000ac,%esp
0000b2a1	popl	%ebx
0000b2a2	popl	%esi
0000b2a3	popl	%edi
0000b2a4	leave
0000b2a5	ret
_QCRPrintImages:
0000b2a6	pushl	%ebp
0000b2a7	movl	%esp,%ebp
0000b2a9	pushl	%edi
0000b2aa	pushl	%esi
0000b2ab	pushl	%ebx
0000b2ac	calll	0x0000b2b1
0000b2b1	popl	%ebx
0000b2b2	subl	$0x0000009c,%esp
0000b2b8	movl	0x08(%ebp),%esi
0000b2bb	movl	%esi,%eax
0000b2bd	calll	0x000096ab
0000b2c2	testb	%al,%al
0000b2c4	jne	0x0000b2da
0000b2c6	leal	0x000015eb(%ebx),%eax
0000b2cc	movl	%eax,0x0c(%esp)
0000b2d0	movl	$0x000004d0,0x08(%esp)
0000b2d8	jmp	0x0000b2f3
0000b2da	movl	0x0c(%ebp),%eax
0000b2dd	testl	%eax,%eax
0000b2df	jne	0x0000b30b
0000b2e1	leal	0x000018ee(%ebx),%eax
0000b2e7	movl	%eax,0x0c(%esp)
0000b2eb	movl	$0x000004d1,0x08(%esp)
0000b2f3	leal	0x000015ff(%ebx),%eax
0000b2f9	movl	%eax,0x04(%esp)
0000b2fd	leal	0x000006d7(%ebx),%eax
0000b303	movl	%eax,(%esp)
0000b306	calll	___eprintf
0000b30b	movl	0x0c(%ebp),%eax
0000b30e	movl	$0x0000001b,0x08(%esp)
0000b316	movl	$0x00000001,0x04(%esp)
0000b31e	movl	%eax,0x0c(%esp)
0000b322	leal	0x00001d09(%ebx),%eax
0000b328	movl	%eax,(%esp)
0000b32b	calll	0x0000e090	; symbol stub for: _fwrite
0000b330	movl	0x10(%esi),%eax
0000b333	movl	%eax,(%esp)
0000b336	calll	0x00005e8e
0000b33b	movl	%esi,(%esp)
0000b33e	cmpb	$0x01,%al
0000b340	sbbl	%edx,%edx
0000b342	leal	0xe0(%ebp),%eax
0000b345	andl	$0xf8,%edx
0000b348	addl	$0x12,%edx
0000b34b	movl	%eax,0x08(%esp)
0000b34f	leal	0xe4(%ebp),%eax
0000b352	movl	%edx,0x90(%ebp)
0000b355	movl	%eax,0x04(%esp)
0000b359	calll	0x00009d4c
0000b35e	movl	$__mh_dylib_header,0x94(%ebp)
0000b365	jmp	0x0000b425
0000b36a	movl	0xe4(%ebp),%eax
0000b36d	movl	0x94(%ebp),%ecx
0000b370	movl	(%eax,%ecx,4),%edi
0000b373	leal	0x98(%ebp),%eax
0000b376	movl	%eax,0x0c(%esp)
0000b37a	leal	0x00001149(%ebx),%eax
0000b380	movl	$__mh_dylib_header,0x08(%esp)
0000b388	movl	%eax,0x04(%esp)
0000b38c	movl	%edi,(%esp)
0000b38f	calll	0x00007b87
0000b394	testl	%eax,%eax
0000b396	je	0x0000b3af
0000b398	leal	0x00001d28(%ebx),%eax
0000b39e	movl	%eax,0x0c(%esp)
0000b3a2	movl	$0x000004de,0x08(%esp)
0000b3aa	jmp	0x0000b2f3
0000b3af	movl	%edi,(%esp)
0000b3b2	calll	0x000060e7
0000b3b7	movl	0xb4(%ebp),%edx
0000b3ba	movl	%edi,(%esp)
0000b3bd	movl	%edx,0x8c(%ebp)
0000b3c0	testl	%eax,%eax
0000b3c2	movl	%eax,%esi
0000b3c4	leal	0x00000209(%ebx),%eax
0000b3ca	cmovel	%eax,%esi
0000b3cd	movl	0xb0(%ebp),%eax
0000b3d0	movl	%eax,0x88(%ebp)
0000b3d3	calll	0x00005df6
0000b3d8	movl	0x90(%ebp),%ecx
0000b3db	movl	%esi,0x20(%esp)
0000b3df	addl	0x88(%ebp),%eax
0000b3e2	adcl	0x8c(%ebp),%edx
0000b3e5	movl	%ecx,0x14(%esp)
0000b3e9	movl	%eax,%esi
0000b3eb	movl	%eax,0x0c(%esp)
0000b3ef	leal	0x00001d31(%ebx),%eax
0000b3f5	movl	%edx,%edi
0000b3f7	addl	0xb8(%ebp),%esi
0000b3fa	movl	%eax,0x04(%esp)
0000b3fe	movl	0x0c(%ebp),%eax
0000b401	adcl	0xbc(%ebp),%edi
0000b404	addl	$0xff,%esi
0000b407	movl	%esi,0x18(%esp)
0000b40b	adcl	$0xff,%edi
0000b40e	movl	%edi,0x1c(%esp)
0000b412	movl	%edx,0x10(%esp)
0000b416	movl	%ecx,0x08(%esp)
0000b41a	movl	%eax,(%esp)
0000b41d	calll	0x0000e081	; symbol stub for: _fprintf
0000b422	incl	0x94(%ebp)
0000b425	movl	0x94(%ebp),%edx
0000b428	cmpl	0xe0(%ebp),%edx
0000b42b	jb	0x0000b36a
0000b431	movl	0x0c(%ebp),%ecx
0000b434	movl	$0x0000000a,(%esp)
0000b43b	movl	%ecx,0x04(%esp)
0000b43f	calll	0x0000e086	; symbol stub for: _fputc
0000b444	addl	$0x0000009c,%esp
0000b44a	popl	%ebx
0000b44b	popl	%esi
0000b44c	popl	%edi
0000b44d	leave
0000b44e	ret
0000b44f	nop
___eprintf:
0000b450	pushl	%ebp
0000b451	movl	%esp,%ebp
0000b453	subl	$0x28,%esp
0000b456	movl	0x14(%ebp),%eax
0000b459	movl	%ebx,0xf8(%ebp)
0000b45c	calll	0x0000b461
0000b461	popl	%ebx
0000b462	movl	%esi,0xfc(%ebp)
0000b465	movl	%eax,0x10(%esp)
0000b469	movl	0x10(%ebp),%eax
0000b46c	movl	%eax,0x0c(%esp)
0000b470	movl	0x0c(%ebp),%eax
0000b473	movl	0x00002ba7(%ebx),%esi
0000b479	movl	%eax,0x08(%esp)
0000b47d	movl	0x08(%ebp),%eax
0000b480	movl	%eax,0x04(%esp)
0000b484	movl	(%esi),%eax
0000b486	movl	%eax,(%esp)
0000b489	calll	0x0000e081	; symbol stub for: _fprintf
0000b48e	movl	(%esi),%eax
0000b490	movl	%eax,(%esp)
0000b493	calll	0x0000e077	; symbol stub for: _fflush
0000b498	calll	0x0000e05e	; symbol stub for: _abort
/Applications/Dropbox.app/Contents/Frameworks/libQCR.dylib (architecture ppc):
(__TEXT,__text) section
dyld_stub_binding_helper:
00001290	mfspr	r0,lr
00001294	bcl	20,31,0x1298
00001298	mfspr	r12,lr
0000129c	mtspr	lr,r0
000012a0	or	r0,r12,r12
000012a4	addis	r12,r12,0x1
000012a8	lwz	r12,0xdd88(r12)
000012ac	mtspr	ctr,r12
000012b0	or	r12,r0,r0
000012b4	addis	r12,r12,0x1
000012b8	lwz	r12,0xdd68(r12)
000012bc	bctr
cfm_stub_binding_helper:
000012c0	or	r11,r12,r12
000012c4	b	dyld_stub_binding_helper
__dyld_func_lookup:
000012c8	mfspr	r0,lr
000012cc	bcl	20,31,0x12d0
000012d0	mfspr	r11,lr
000012d4	mtspr	lr,r0
000012d8	addis	r11,r11,0x1
000012dc	lwz	r11,0xdd54(r11)
000012e0	mtspr	ctr,r11
000012e4	bctr
___initialize_Cplusplus:
000012e8	mfspr	r0,lr
000012ec	stw	r31,0xfffc(r1)
000012f0	bcl	20,31,0x12f4
000012f4	mfspr	r31,lr
000012f8	stw	r0,0x8(r1)
000012fc	stwu	r1,0xffa0(r1)
00001300	addis	r3,r31,0x1
00001304	addi	r3,r3,0xc28c
00001308	addi	r4,r1,0x38
0000130c	bl	__dyld_func_lookup
00001310	lwz	r0,0x38(r1)
00001314	cmpwi	cr7,r0,__mh_dylib_header
00001318	beq	cr7,0x1330
0000131c	mtspr	ctr,r0
00001320	addis	r3,r31,0x1
00001324	or	r12,r0,r0
00001328	lwz	r3,0xde08(r3)
0000132c	bctrl
00001330	addi	r1,r1,0x60
00001334	lwz	r0,0x8(r1)
00001338	lwz	r31,0xfffc(r1)
0000133c	mtspr	lr,r0
00001340	blr
_GetTaskArch:
00001344	mfspr	r0,lr
00001348	stmw	r28,0xfff0(r1)
0000134c	or.	r29,r3,r3
00001350	bcl	20,31,0x1354
00001354	mfspr	r31,lr
00001358	stw	r0,0x8(r1)
0000135c	stwu	r1,0xffb0(r1)
00001360	bne+	0x1384
00001364	addis	r3,r31,0x1
00001368	addis	r4,r31,0x1
0000136c	addis	r6,r31,0x1
00001370	li	r5,0x11e
00001374	addi	r3,r3,0xc25c
00001378	addi	r4,r4,0xc27c
0000137c	addi	r6,r6,_QCRBacktrace
00001380	bl	___eprintf
00001384	bl	_QMOImageIs64Bit
00001388	or	r28,r3,r3
0000138c	or	r3,r29,r29
00001390	bl	_QMOImageGetCPUType
00001394	or	r30,r3,r3
00001398	or	r3,r29,r29
0000139c	bl	_QMOImageGetCPUSubType
000013a0	addis	r2,r31,0x1
000013a4	or	r11,r3,r3
000013a8	li	r3,__mh_dylib_header
000013ac	addi	r2,r2,0xddb4
000013b0	b	0x13e8
000013b4	cmpw	cr7,r30,r9
000013b8	bne	cr7,0x13e4
000013bc	lwz	r0,0x8(r2)
000013c0	cmpwi	cr7,r0,__mh_dylib_header
000013c4	beq	cr7,0x13d0
000013c8	cmpw	cr7,r11,r0
000013cc	bne	cr7,0x13e4
000013d0	lwz	r0,0xc(r2)
000013d4	cmpw	cr7,r28,r0
000013d8	bne	cr7,0x13e4
000013dc	or	r3,r2,r2
000013e0	b	0x13ec
000013e4	addi	r2,r2,0x30
000013e8	lwz	r9,0x4(r2)
000013ec	cmpwi	cr7,r9,__mh_dylib_header
000013f0	beq	cr7,0x13fc
000013f4	cmpwi	cr7,r3,__mh_dylib_header
000013f8	beq	cr7,0x13b4
000013fc	addi	r1,r1,0x50
00001400	lwz	r0,0x8(r1)
00001404	lmw	r28,0xfff0(r1)
00001408	mtspr	lr,r0
0000140c	blr
_ReadAddr:
00001410	mfspr	r0,lr
00001414	stmw	r29,0xfff4(r1)
00001418	or.	r30,r3,r3
0000141c	bcl	20,31,0x1420
00001420	or	r29,r6,r6
00001424	mfspr	r31,lr
00001428	stw	r0,0x8(r1)
0000142c	stwu	r1,0xff90(r1)
00001430	beq	0x14f4
00001434	lwz	r0,__mh_dylib_header(r30)
00001438	cmpwi	cr7,r0,__mh_dylib_header
0000143c	beq	cr7,0x14f4
00001440	lwz	r0,0x4(r30)
00001444	cmpwi	cr7,r0,__mh_dylib_header
00001448	beq	cr7,0x14f4
0000144c	lwz	r0,0x8(r30)
00001450	cmpwi	cr7,r0,__mh_dylib_header
00001454	beq	cr7,0x14f4
00001458	lwz	r2,0x14(r30)
0000145c	lwz	r0,0x18(r30)
00001460	addic	r11,r2,0xffff
00001464	subfe	r9,r11,r2
00001468	subfic	r2,r0,__mh_dylib_header
0000146c	adde	r0,r2,r0
00001470	cmpw	cr7,r9,r0
00001474	beq	cr7,0x14f4
00001478	lwz	r0,0x1c(r30)
0000147c	cmpwi	cr7,r0,__mh_dylib_header
00001480	beq	cr7,0x14f4
00001484	lwz	r2,0x24(r30)
00001488	lwz	r3,0x28(r30)
0000148c	or.	r11,r2,r3
00001490	beq	0x14f4
00001494	lwz	r9,0x2c(r30)
00001498	lwz	r10,0x30(r30)
0000149c	cmplw	cr7,r9,r2
000014a0	bgt	cr7,0x14b4
000014a4	cmpw	cr7,r9,r2
000014a8	bne	cr7,0x14f4
000014ac	cmplw	cr7,r10,r3
000014b0	ble	cr7,0x14f4
000014b4	lwz	r9,0x34(r30)
000014b8	lwz	r2,0x3c(r30)
000014bc	lwz	r10,0x38(r30)
000014c0	lwz	r3,0x40(r30)
000014c4	cmplw	cr7,r9,r2
000014c8	bgt	cr7,0x14f4
000014cc	cmpw	cr7,r9,r2
000014d0	bne	cr7,0x14dc
000014d4	cmplw	cr7,r10,r3
000014d8	bgt	cr7,0x14f4
000014dc	lwz	r0,0x48(r30)
000014e0	cmpwi	cr7,r0,__mh_dylib_header
000014e4	beq	cr7,0x1514
000014e8	lwz	r0,0x44(r30)
000014ec	cmpwi	cr7,r0,__mh_dylib_header
000014f0	bne	cr7,0x1514
000014f4	addis	r3,r31,0x1
000014f8	addis	r4,r31,0x1
000014fc	addis	r6,r31,0x1
00001500	li	r5,0x200
00001504	addi	r3,r3,0xc190
00001508	addi	r4,r4,0xc1b0
0000150c	addi	r6,r6,0xc1f8
00001510	b	0x1538
00001514	cmpwi	cr7,r29,__mh_dylib_header
00001518	bne+	cr7,0x153c
0000151c	addis	r3,r31,0x1
00001520	addis	r4,r31,0x1
00001524	addis	r6,r31,0x1
00001528	li	r5,0x201
0000152c	addi	r3,r3,0xc190
00001530	addi	r4,r4,0xc1b0
00001534	addi	r6,r6,0xc214
00001538	bl	___eprintf
0000153c	lwz	r2,__mh_dylib_header(r30)
00001540	lwz	r0,0xc(r2)
00001544	cmpwi	cr7,r0,__mh_dylib_header
00001548	beq	cr7,0x15bc
0000154c	lwz	r0,0x1c(r30)
00001550	or	r3,r30,r30
00001554	addi	r6,r1,0x40
00001558	li	r7,0x8
0000155c	mtspr	ctr,r0
00001560	or	r12,r0,r0
00001564	bctrl
00001568	cmpwi	r3,__mh_dylib_header
0000156c	bne	0x1634
00001570	lwz	r0,0x20(r30)
00001574	cmpwi	cr7,r0,__mh_dylib_header
00001578	beq	cr7,0x1620
0000157c	lwz	r9,0x40(r1)
00001580	lwz	r10,0x44(r1)
00001584	addi	r0,r1,0x48
00001588	li	r2,0x4
0000158c	stw	r10,0x4c(r1)
00001590	stw	r9,0x48(r1)
00001594	nop
00001598	nop
0000159c	lwbrx	r9,0,r0
000015a0	lwbrx	r11,r2,r0
000015a4	stw	r9,0x54(r1)
000015a8	stw	r11,0x50(r1)
000015ac	nop
000015b0	lwz	r10,0x54(r1)
000015b4	lwz	r9,0x50(r1)
000015b8	b	0x1614
000015bc	lwz	r0,0x1c(r30)
000015c0	or	r3,r30,r30
000015c4	addi	r6,r1,0x38
000015c8	li	r7,0x4
000015cc	mtspr	ctr,r0
000015d0	or	r12,r0,r0
000015d4	bctrl
000015d8	cmpwi	r3,__mh_dylib_header
000015dc	bne	0x1634
000015e0	lwz	r0,0x20(r30)
000015e4	cmpwi	cr7,r0,__mh_dylib_header
000015e8	beq	cr7,0x1604
000015ec	lwz	r2,0x38(r1)
000015f0	addi	r0,r1,0x48
000015f4	stw	r2,0x48(r1)
000015f8	nop
000015fc	lwbrx	r0,0,r0
00001600	stw	r0,0x38(r1)
00001604	lwz	r3,0x38(r1)
00001608	li	r2,__mh_dylib_header
0000160c	or	r9,r2,r2
00001610	or	r10,r3,r3
00001614	stw	r9,0x40(r1)
00001618	stw	r10,0x44(r1)
0000161c	b	0x1628
00001620	lwz	r9,0x40(r1)
00001624	lwz	r10,0x44(r1)
00001628	stw	r9,__mh_dylib_header(r29)
0000162c	stw	r10,0x4(r29)
00001630	li	r3,__mh_dylib_header
00001634	addi	r1,r1,0x70
00001638	lwz	r0,0x8(r1)
0000163c	lmw	r29,0xfff4(r1)
00001640	mtspr	lr,r0
00001644	blr
_QBacktraceDisposeSymbols:
00001648	mfspr	r0,lr
0000164c	cmpwi	r3,__mh_dylib_header
00001650	stmw	r27,0xffec(r1)
00001654	or	r27,r4,r4
00001658	stw	r0,0x8(r1)
0000165c	stwu	r1,0xffa0(r1)
00001660	beq	0x16a4
00001664	or	r30,r3,r3
00001668	li	r29,__mh_dylib_header
0000166c	li	r28,__mh_dylib_header
00001670	b	0x169c
00001674	lwz	r0,0x10(r30)
00001678	andi.	r2,r0,0x100
0000167c	beq	0x1690
00001680	lwz	r3,0x14(r30)
00001684	bl	0xd0c0	; symbol stub for: _free
00001688	lwz	r3,0x18(r30)
0000168c	bl	0xd0c0	; symbol stub for: _free
00001690	stw	r28,0x14(r30)
00001694	addi	r29,r29,0x1
00001698	addi	r30,r30,0x28
0000169c	cmplw	cr7,r29,r27
000016a0	blt	cr7,0x1674
000016a4	addi	r1,r1,0x60
000016a8	lwz	r0,0x8(r1)
000016ac	lmw	r27,0xffec(r1)
000016b0	mtspr	lr,r0
000016b4	blr
_PowerPCIsSystemCall:
000016b8	mfspr	r0,lr
000016bc	stmw	r27,0xffec(r1)
000016c0	or	r27,r3,r3
000016c4	or	r30,r5,r5
000016c8	or	r29,r4,r4
000016cc	li	r28,__mh_dylib_header
000016d0	stw	r0,0x8(r1)
000016d4	stwu	r1,0xff90(r1)
000016d8	lwz	r0,0x1c(r27)
000016dc	or	r3,r27,r27
000016e0	or	r4,r29,r29
000016e4	or	r5,r30,r30
000016e8	addi	r6,r1,0x38
000016ec	li	r7,0x4
000016f0	mtspr	ctr,r0
000016f4	or	r12,r0,r0
000016f8	bctrl
000016fc	cmpwi	cr7,r3,__mh_dylib_header
00001700	bne	cr7,0x173c
00001704	lbz	r0,0x38(r1)
00001708	cmpwi	cr7,r0,0x44
0000170c	bne	cr7,0x1744
00001710	lbz	r0,0x39(r1)
00001714	cmpwi	cr7,r0,__mh_dylib_header
00001718	bne	cr7,0x1744
0000171c	lbz	r0,0x3a(r1)
00001720	cmpwi	cr7,r0,__mh_dylib_header
00001724	bne	cr7,0x1744
00001728	lbz	r0,0x3b(r1)
0000172c	cmpwi	cr7,r0,0x2
00001730	bne	cr7,0x1744
00001734	li	r3,0x1
00001738	b	0x175c
0000173c	li	r3,__mh_dylib_header
00001740	b	0x175c
00001744	cmpwi	cr7,r28,0x2
00001748	addic	r30,r30,0xfffc
0000174c	addme	r29,r29
00001750	addi	r28,r28,0x1
00001754	bne	cr7,0x16d8
00001758	b	0x173c
0000175c	addi	r1,r1,0x70
00001760	lwz	r0,0x8(r1)
00001764	lmw	r27,0xffec(r1)
00001768	mtspr	lr,r0
0000176c	blr
_PowerPCValidPC:
00001770	mfspr	r0,lr
00001774	li	r9,__mh_dylib_header
00001778	rlwinm	r10,r5,0,30,31
0000177c	stw	r0,0x8(r1)
00001780	or.	r0,r9,r10
00001784	stwu	r1,0xffa0(r1)
00001788	bne	0x17b0
0000178c	lwz	r0,0x1c(r3)
00001790	addi	r6,r1,0x38
00001794	li	r7,0x4
00001798	mtspr	ctr,r0
0000179c	or	r12,r0,r0
000017a0	bctrl
000017a4	li	r0,0x1
000017a8	cmpwi	cr7,r3,__mh_dylib_header
000017ac	beq	cr7,0x17b4
000017b0	li	r0,__mh_dylib_header
000017b4	addi	r1,r1,0x60
000017b8	or	r3,r0,r0
000017bc	lwz	r0,0x8(r1)
000017c0	mtspr	lr,r0
000017c4	blr
_PowerPCGetFrameNextPC:
000017c8	lwz	r2,__mh_dylib_header(r3)
000017cc	li	r4,__mh_dylib_header
000017d0	li	r5,0x10
000017d4	lwz	r0,0xc(r2)
000017d8	cmpwi	cr7,r0,__mh_dylib_header
000017dc	bne	cr7,0x17e8
000017e0	li	r4,__mh_dylib_header
000017e4	li	r5,0x8
000017e8	addc	r5,r5,r7
000017ec	adde	r4,r4,r6
000017f0	or	r6,r8,r8
000017f4	b	_ReadAddr
_PPCCheckFrameStyle:
000017f8	mfspr	r0,lr
000017fc	stmw	r22,0xffd8(r1)
00001800	or.	r26,r3,r3
00001804	bcl	20,31,0x1808
00001808	or	r12,r5,r5
0000180c	or	r11,r4,r4
00001810	mfspr	r31,lr
00001814	stw	r0,0x8(r1)
00001818	or	r25,r7,r7
0000181c	or	r27,r8,r8
00001820	stwu	r1,0xff70(r1)
00001824	or	r24,r6,r6
00001828	or	r28,r9,r9
0000182c	stw	r10,0xc4(r1)
00001830	lwz	r4,0xcc(r1)
00001834	lwz	r5,0xd0(r1)
00001838	lwz	r22,0xd4(r1)
0000183c	lwz	r23,0xd8(r1)
00001840	lwz	r8,0xc8(r1)
00001844	lwz	r7,0xc4(r1)
00001848	bne+	0x186c
0000184c	addis	r3,r31,0x1
00001850	addis	r4,r31,0x1
00001854	addis	r6,r31,0x1
00001858	li	r5,0x4f7
0000185c	addi	r3,r3,0xbda8
00001860	addi	r4,r4,0xbdc8
00001864	addi	r6,r6,0xbe40
00001868	b	0x1898
0000186c	lwz	r2,__mh_dylib_header(r26)
00001870	lwz	r0,0xc(r2)
00001874	cmpwi	cr7,r0,__mh_dylib_header
00001878	beq+	cr7,0x189c
0000187c	addis	r3,r31,0x1
00001880	addis	r4,r31,0x1
00001884	addis	r6,r31,0x1
00001888	li	r5,0x4f8
0000188c	addi	r3,r3,0xbda8
00001890	addi	r4,r4,0xbdc8
00001894	addi	r6,r6,0xbe50
00001898	bl	___eprintf
0000189c	addc	r10,r12,r5
000018a0	adde	r9,r11,r4
000018a4	addi	r6,r1,0x38
000018a8	addic	r30,r10,0x70
000018ac	addze	r29,r9
000018b0	addc	r12,r30,r28
000018b4	adde	r11,r29,r27
000018b8	addic	r5,r12,0x1c
000018bc	addze	r4,r11
000018c0	addc	r28,r12,r8
000018c4	adde	r27,r11,r7
000018c8	bl	_ReadAddr
000018cc	cmpwi	cr7,r3,__mh_dylib_header
000018d0	bne	cr7,0x1948
000018d4	addc	r5,r30,r25
000018d8	adde	r4,r29,r24
000018dc	or	r3,r26,r26
000018e0	addi	r6,r1,0x40
000018e4	bl	_ReadAddr
000018e8	cmpwi	cr7,r3,__mh_dylib_header
000018ec	bne	cr7,0x1948
000018f0	or	r3,r26,r26
000018f4	addc	r5,r28,r23
000018f8	adde	r4,r27,r22
000018fc	addi	r6,r1,0x48
00001900	bl	_ReadAddr
00001904	cmpwi	cr7,r3,__mh_dylib_header
00001908	bne	cr7,0x1948
0000190c	lwz	r0,0x38(r1)
00001910	cmpw	cr7,r0,r27
00001914	bne	cr7,0x1948
00001918	lwz	r0,0x3c(r1)
0000191c	cmpw	cr7,r0,r28
00001920	bne	cr7,0x1948
00001924	lwz	r0,0x40(r1)
00001928	lwz	r2,0x48(r1)
0000192c	cmpw	cr7,r0,r2
00001930	bne	cr7,0x1948
00001934	lwz	r0,0x44(r1)
00001938	lwz	r2,0x4c(r1)
0000193c	li	r3,0x1
00001940	cmpw	cr7,r0,r2
00001944	beq	cr7,0x194c
00001948	li	r3,__mh_dylib_header
0000194c	addi	r1,r1,0x90
00001950	lwz	r0,0x8(r1)
00001954	lmw	r22,0xffd8(r1)
00001958	mtspr	lr,r0
0000195c	blr
_QBTCreateThreadState:
00001960	mfspr	r0,lr
00001964	stmw	r23,0xffdc(r1)
00001968	or	r26,r4,r4
0000196c	mfcr	r2
00001970	bcl	20,31,0x1974
00001974	cmpwi	cr7,r3,__mh_dylib_header
00001978	stw	r0,0x8(r1)
0000197c	or	r4,r5,r5
00001980	mfspr	r31,lr
00001984	or	r24,r7,r7
00001988	or	r28,r8,r8
0000198c	or	r27,r9,r9
00001990	stw	r2,0x4(r1)
00001994	stwu	r1,0xff80(r1)
00001998	bne+	cr7,0x19bc
0000199c	addis	r3,r31,0x1
000019a0	addis	r4,r31,0x1
000019a4	addis	r6,r31,0x1
000019a8	li	r5,0x931
000019ac	addi	r3,r3,0xbc3c
000019b0	addi	r4,r4,0xbc5c
000019b4	addi	r6,r6,0xbd00
000019b8	b	0x19e0
000019bc	cmpwi	cr7,r26,__mh_dylib_header
000019c0	bne+	cr7,0x19e4
000019c4	addis	r3,r31,0x1
000019c8	addis	r4,r31,0x1
000019cc	addis	r6,r31,0x1
000019d0	li	r5,0x932
000019d4	addi	r3,r3,0xbc3c
000019d8	addi	r4,r4,0xbc5c
000019dc	addi	r6,r6,0xbd18
000019e0	bl	___eprintf
000019e4	cmpwi	cr7,r7,__mh_dylib_header
000019e8	bne+	cr7,0x1a0c
000019ec	addis	r3,r31,0x1
000019f0	addis	r4,r31,0x1
000019f4	addis	r6,r31,0x1
000019f8	li	r5,0x935
000019fc	addi	r3,r3,0xbc3c
00001a00	addi	r4,r4,0xbc5c
00001a04	addi	r6,r6,0xbd34
00001a08	b	0x19e0
00001a0c	cmpwi	cr7,r8,__mh_dylib_header
00001a10	bne+	cr7,0x1a34
00001a14	addis	r3,r31,0x1
00001a18	addis	r4,r31,0x1
00001a1c	addis	r6,r31,0x1
00001a20	li	r5,0x936
00001a24	addi	r3,r3,0xbc3c
00001a28	addi	r4,r4,0xbc5c
00001a2c	addi	r6,r6,0xbd4c
00001a30	b	0x19e0
00001a34	lwz	r0,__mh_dylib_header(r8)
00001a38	cmpwi	cr7,r0,__mh_dylib_header
00001a3c	beq+	cr7,0x1a60
00001a40	addis	r3,r31,0x1
00001a44	addis	r4,r31,0x1
00001a48	addis	r6,r31,0x1
00001a4c	li	r5,0x937
00001a50	addi	r3,r3,0xbc3c
00001a54	addi	r4,r4,0xbc5c
00001a58	addi	r6,r6,0xbd60
00001a5c	b	0x19e0
00001a60	cmpwi	cr7,r9,__mh_dylib_header
00001a64	bne+	cr7,0x1a88
00001a68	addis	r3,r31,0x1
00001a6c	addis	r4,r31,0x1
00001a70	addis	r6,r31,0x1
00001a74	li	r5,0x938
00001a78	addi	r3,r3,0xbc3c
00001a7c	addi	r4,r4,0xbc5c
00001a80	addi	r6,r6,0xbd74
00001a84	b	0x19e0
00001a88	lwz	r0,__mh_dylib_header(r9)
00001a8c	cmpwi	cr7,r0,__mh_dylib_header
00001a90	beq+	cr7,0x1ab4
00001a94	addis	r3,r31,0x1
00001a98	addis	r4,r31,0x1
00001a9c	addis	r6,r31,0x1
00001aa0	li	r5,0x939
00001aa4	addi	r3,r3,0xbc3c
00001aa8	addi	r4,r4,0xbc5c
00001aac	addi	r6,r6,0xbd8c
00001ab0	b	0x19e0
00001ab4	cmpwi	cr7,r6,__mh_dylib_header
00001ab8	stw	r0,0x38(r1)
00001abc	bne+	cr7,0x1ae0
00001ac0	addi	r5,r1,0x38
00001ac4	li	r23,0x1
00001ac8	bl	_QMOImageCreateFromTaskDyld
00001acc	cmpwi	cr4,r3,__mh_dylib_header
00001ad0	or	r29,r3,r3
00001ad4	beq	cr4,0x1af0
00001ad8	li	r25,__mh_dylib_header
00001adc	b	0x1b28
00001ae0	or	r3,r6,r6
00001ae4	li	r23,__mh_dylib_header
00001ae8	bl	_QSymGetDyldImage
00001aec	stw	r3,0x38(r1)
00001af0	lwz	r3,0x38(r1)
00001af4	bl	_GetTaskArch
00001af8	or.	r30,r3,r3
00001afc	bne	0x1bb0
00001b00	li	r29,0x16
00001b04	li	r25,__mh_dylib_header
00001b08	b	0x1bc8
00001b0c	stw	r25,__mh_dylib_header(r28)
00001b10	li	r25,__mh_dylib_header
00001b14	lwz	r2,0x28(r30)
00001b18	stw	r2,__mh_dylib_header(r24)
00001b1c	lwz	r0,0x2c(r30)
00001b20	rlwinm	r0,r0,2,0,29
00001b24	stw	r0,__mh_dylib_header(r27)
00001b28	or	r3,r25,r25
00001b2c	bl	0xd0c0	; symbol stub for: _free
00001b30	cmpwi	cr7,r23,__mh_dylib_header
00001b34	beq	cr7,0x1b40
00001b38	lwz	r3,0x38(r1)
00001b3c	bl	_QMOImageDestroy
00001b40	mfcr	r3
00001b44	rlwinm	r3,r3,19,31,31
00001b48	lwz	r0,__mh_dylib_header(r28)
00001b4c	addic	r9,r0,0xffff
00001b50	subfe	r2,r9,r0
00001b54	cmpw	cr7,r3,r2
00001b58	beq+	cr7,0x1b7c
00001b5c	addis	r3,r31,0x1
00001b60	addis	r4,r31,0x1
00001b64	addis	r6,r31,0x1
00001b68	li	r5,0x971
00001b6c	addi	r3,r3,0xbc3c
00001b70	addi	r4,r4,0xbc5c
00001b74	addi	r6,r6,0xbda0
00001b78	b	0x19e0
00001b7c	lwz	r0,__mh_dylib_header(r27)
00001b80	addic	r9,r0,0xffff
00001b84	subfe	r2,r9,r0
00001b88	cmpw	cr7,r3,r2
00001b8c	beq+	cr7,0x1c00
00001b90	addis	r3,r31,0x1
00001b94	addis	r4,r31,0x1
00001b98	addis	r6,r31,0x1
00001b9c	li	r5,0x972
00001ba0	addi	r3,r3,0xbc3c
00001ba4	addi	r4,r4,0xbc5c
00001ba8	addi	r6,r6,0xbdc4
00001bac	b	0x19e0
00001bb0	lwz	r3,0x2c(r30)
00001bb4	li	r4,0x4
00001bb8	bl	0xcfe0	; symbol stub for: _calloc
00001bbc	or.	r25,r3,r3
00001bc0	bne	0x1bd0
00001bc4	li	r29,0xc
00001bc8	cmpwi	cr4,r29,__mh_dylib_header
00001bcc	b	0x1b28
00001bd0	lwz	r0,0x2c(r30)
00001bd4	or	r5,r25,r25
00001bd8	addi	r6,r1,0x3c
00001bdc	or	r3,r26,r26
00001be0	stw	r0,0x3c(r1)
00001be4	lwz	r4,0x28(r30)
00001be8	bl	0xd4a0	; symbol stub for: _thread_get_state
00001bec	bl	_QTMErrnoFromMachError
00001bf0	cmpwi	cr4,r3,__mh_dylib_header
00001bf4	or	r29,r3,r3
00001bf8	beq	cr4,0x1b0c
00001bfc	b	0x1b28
00001c00	addi	r1,r1,0x80
00001c04	or	r3,r29,r29
00001c08	lwz	r0,0x8(r1)
00001c0c	lwz	r11,0x4(r1)
00001c10	lmw	r23,0xffdc(r1)
00001c14	mtspr	lr,r0
00001c18	mtocrf	0x08,r11
00001c1c	blr
_QBTCreateThreadStateSelf:
00001c20	mfspr	r0,lr
00001c24	stmw	r26,0xffe8(r1)
00001c28	or.	r26,r3,r3
00001c2c	bcl	20,31,0x1c30
00001c30	or	r28,r4,r4
00001c34	or	r27,r5,r5
00001c38	mfspr	r31,lr
00001c3c	stw	r0,0x8(r1)
00001c40	stwu	r1,0xffa0(r1)
00001c44	bne+	0x1c68
00001c48	addis	r3,r31,0x1
00001c4c	addis	r4,r31,0x1
00001c50	addis	r6,r31,0x1
00001c54	li	r5,0x986
00001c58	addi	r3,r3,0xb980
00001c5c	addi	r4,r4,0xb9a0
00001c60	addi	r6,r6,0xba78
00001c64	b	0x1c8c
00001c68	cmpwi	cr7,r4,__mh_dylib_header
00001c6c	bne+	cr7,0x1c90
00001c70	addis	r3,r31,0x1
00001c74	addis	r4,r31,0x1
00001c78	addis	r6,r31,0x1
00001c7c	li	r5,0x987
00001c80	addi	r3,r3,0xb980
00001c84	addi	r4,r4,0xb9a0
00001c88	addi	r6,r6,0xba90
00001c8c	bl	___eprintf
00001c90	lwz	r0,__mh_dylib_header(r4)
00001c94	cmpwi	cr7,r0,__mh_dylib_header
00001c98	beq+	cr7,0x1cbc
00001c9c	addis	r3,r31,0x1
00001ca0	addis	r4,r31,0x1
00001ca4	addis	r6,r31,0x1
00001ca8	li	r5,0x988
00001cac	addi	r3,r3,0xb980
00001cb0	addi	r4,r4,0xb9a0
00001cb4	addi	r6,r6,0xbaa4
00001cb8	b	0x1c8c
00001cbc	cmpwi	cr7,r5,__mh_dylib_header
00001cc0	bne+	cr7,0x1ce4
00001cc4	addis	r3,r31,0x1
00001cc8	addis	r4,r31,0x1
00001ccc	addis	r6,r31,0x1
00001cd0	li	r5,0x989
00001cd4	addi	r3,r3,0xb980
00001cd8	addi	r4,r4,0xb9a0
00001cdc	addi	r6,r6,0xbab8
00001ce0	b	0x1c8c
00001ce4	lwz	r0,__mh_dylib_header(r5)
00001ce8	cmpwi	cr7,r0,__mh_dylib_header
00001cec	beq+	cr7,0x1d10
00001cf0	addis	r3,r31,0x1
00001cf4	addis	r4,r31,0x1
00001cf8	addis	r6,r31,0x1
00001cfc	li	r5,0x98a
00001d00	addi	r3,r3,0xb980
00001d04	addi	r4,r4,0xb9a0
00001d08	addi	r6,r6,0xbad0
00001d0c	b	0x1c8c
00001d10	lwz	r30,__mh_dylib_header(r1)
00001d14	li	r3,0x1
00001d18	li	r4,0xa0
00001d1c	lwz	r29,0x8(r30)
00001d20	bl	0xcfe0	; symbol stub for: _calloc
00001d24	li	r11,0xc
00001d28	cmpwi	r3,__mh_dylib_header
00001d2c	beq	0x1d50
00001d30	li	r0,0x1
00001d34	stw	r29,__mh_dylib_header(r3)
00001d38	stw	r30,0xc(r3)
00001d3c	stw	r0,__mh_dylib_header(r26)
00001d40	li	r0,0xa0
00001d44	stw	r3,__mh_dylib_header(r28)
00001d48	li	r11,__mh_dylib_header
00001d4c	stw	r0,__mh_dylib_header(r27)
00001d50	lwz	r0,__mh_dylib_header(r28)
00001d54	subfic	r2,r11,__mh_dylib_header
00001d58	adde	r9,r2,r11
00001d5c	addic	r10,r0,0xffff
00001d60	subfe	r2,r10,r0
00001d64	cmpw	cr7,r9,r2
00001d68	beq+	cr7,0x1d8c
00001d6c	addis	r3,r31,0x1
00001d70	addis	r4,r31,0x1
00001d74	addis	r6,r31,0x1
00001d78	li	r5,0x9ce
00001d7c	addi	r3,r3,0xb980
00001d80	addi	r4,r4,0xb9a0
00001d84	addi	r6,r6,0xbae4
00001d88	b	0x1c8c
00001d8c	lwz	r0,__mh_dylib_header(r27)
00001d90	addic	r10,r0,0xffff
00001d94	subfe	r2,r10,r0
00001d98	cmpw	cr7,r9,r2
00001d9c	beq+	cr7,0x1dc0
00001da0	addis	r3,r31,0x1
00001da4	addis	r4,r31,0x1
00001da8	addis	r6,r31,0x1
00001dac	li	r5,0x9cf
00001db0	addi	r3,r3,0xb980
00001db4	addi	r4,r4,0xb9a0
00001db8	addi	r6,r6,0xbb08
00001dbc	b	0x1c8c
00001dc0	addi	r1,r1,0x60
00001dc4	or	r3,r11,r11
00001dc8	lwz	r0,0x8(r1)
00001dcc	lmw	r26,0xffe8(r1)
00001dd0	mtspr	lr,r0
00001dd4	blr
_MachReadBytes:
00001dd8	mfspr	r0,lr
00001ddc	cmpwi	r3,__mh_dylib_header
00001de0	stw	r31,0xfffc(r1)
00001de4	or	r11,r6,r6
00001de8	bcl	20,31,0x1dec
00001dec	or	r6,r7,r7
00001df0	mfspr	r31,lr
00001df4	stw	r0,0x8(r1)
00001df8	stwu	r1,0xffb0(r1)
00001dfc	beq	0x1ec0
00001e00	lwz	r0,__mh_dylib_header(r3)
00001e04	cmpwi	cr7,r0,__mh_dylib_header
00001e08	beq	cr7,0x1ec0
00001e0c	lwz	r0,0x4(r3)
00001e10	cmpwi	cr7,r0,__mh_dylib_header
00001e14	beq	cr7,0x1ec0
00001e18	lwz	r0,0x8(r3)
00001e1c	cmpwi	cr7,r0,__mh_dylib_header
00001e20	beq	cr7,0x1ec0
00001e24	lwz	r2,0x14(r3)
00001e28	lwz	r0,0x18(r3)
00001e2c	addic	r10,r2,0xffff
00001e30	subfe	r9,r10,r2
00001e34	subfic	r2,r0,__mh_dylib_header
00001e38	adde	r0,r2,r0
00001e3c	cmpw	cr7,r9,r0
00001e40	beq	cr7,0x1ec0
00001e44	lwz	r0,0x1c(r3)
00001e48	cmpwi	cr7,r0,__mh_dylib_header
00001e4c	beq	cr7,0x1ec0
00001e50	lwz	r9,0x24(r3)
00001e54	lwz	r10,0x28(r3)
00001e58	or.	r0,r9,r10
00001e5c	beq	0x1ec0
00001e60	lwz	r0,0x2c(r3)
00001e64	cmplw	cr7,r0,r9
00001e68	bgt	cr7,0x1e80
00001e6c	cmpw	cr7,r0,r9
00001e70	bne	cr7,0x1ec0
00001e74	lwz	r0,0x30(r3)
00001e78	cmplw	cr7,r0,r10
00001e7c	ble	cr7,0x1ec0
00001e80	lwz	r2,0x34(r3)
00001e84	lwz	r0,0x3c(r3)
00001e88	cmplw	cr7,r2,r0
00001e8c	bgt	cr7,0x1ec0
00001e90	cmpw	cr7,r2,r0
00001e94	bne	cr7,0x1ea8
00001e98	lwz	r0,0x38(r3)
00001e9c	lwz	r2,0x40(r3)
00001ea0	cmplw	cr7,r0,r2
00001ea4	bgt	cr7,0x1ec0
00001ea8	lwz	r0,0x48(r3)
00001eac	cmpwi	cr7,r0,__mh_dylib_header
00001eb0	beq	cr7,0x1ee0
00001eb4	lwz	r0,0x44(r3)
00001eb8	cmpwi	cr7,r0,__mh_dylib_header
00001ebc	bne	cr7,0x1ee0
00001ec0	addis	r3,r31,0x1
00001ec4	addis	r4,r31,0x1
00001ec8	addis	r6,r31,0x1
00001ecc	li	r5,0x32b
00001ed0	addi	r3,r3,0xb7c4
00001ed4	addi	r4,r4,0xb7e4
00001ed8	addi	r6,r6,0xb82c
00001edc	b	0x1f04
00001ee0	cmpwi	cr7,r11,__mh_dylib_header
00001ee4	bne+	cr7,0x1f08
00001ee8	addis	r3,r31,0x1
00001eec	addis	r4,r31,0x1
00001ef0	addis	r6,r31,0x1
00001ef4	li	r5,0x32c
00001ef8	addi	r3,r3,0xb7c4
00001efc	addi	r4,r4,0xb7e4
00001f00	addi	r6,r6,0xb970
00001f04	bl	___eprintf
00001f08	cmpwi	cr7,r6,__mh_dylib_header
00001f0c	bne+	cr7,0x1f30
00001f10	addis	r3,r31,0x1
00001f14	addis	r4,r31,0x1
00001f18	addis	r6,r31,0x1
00001f1c	li	r5,0x32d
00001f20	addi	r3,r3,0xb7c4
00001f24	addi	r4,r4,0xb7e4
00001f28	addi	r6,r6,_ClearThreadStateAndBacktraceAtIndex
00001f2c	b	0x1f04
00001f30	addi	r1,r1,0x50
00001f34	lwz	r3,0x4(r3)
00001f38	or	r7,r11,r11
00001f3c	lwz	r0,0x8(r1)
00001f40	lwz	r31,0xfffc(r1)
00001f44	mtspr	lr,r0
00001f48	b	_QTMRead
_QBacktraceMachThreadState:
00001f4c	mfspr	r0,lr
00001f50	stmw	r18,0xffc8(r1)
00001f54	or	r19,r4,r4
00001f58	mfcr	r2
00001f5c	bcl	20,31,0x1f60
00001f60	stw	r0,0x8(r1)
00001f64	or.	r26,r3,r3
00001f68	or	r24,r5,r5
00001f6c	mfspr	r31,lr
00001f70	or	r22,r6,r6
00001f74	or	r23,r7,r7
00001f78	or	r25,r8,r8
00001f7c	or	r30,r10,r10
00001f80	stw	r2,0x4(r1)
00001f84	stwu	r1,0xfec0(r1)
00001f88	or	r29,r9,r9
00001f8c	lwz	r27,0x178(r1)
00001f90	lwz	r28,0x17c(r1)
00001f94	lwz	r21,0x180(r1)
00001f98	lwz	r20,0x184(r1)
00001f9c	bne+	0x1fc0
00001fa0	addis	r3,r31,0x1
00001fa4	addis	r4,r31,0x1
00001fa8	addis	r6,r31,0x1
00001fac	li	r5,0x8e1
00001fb0	addi	r3,r3,0xb650
00001fb4	addi	r4,r4,0xb670
00001fb8	addi	r6,r6,0xb714
00001fbc	b	0x1fe4
00001fc0	cmpwi	cr7,r5,__mh_dylib_header
00001fc4	bne+	cr7,0x1fe8
00001fc8	addis	r3,r31,0x1
00001fcc	addis	r4,r31,0x1
00001fd0	addis	r6,r31,0x1
00001fd4	li	r5,0x8e2
00001fd8	addi	r3,r3,0xb650
00001fdc	addi	r4,r4,0xb670
00001fe0	addi	r6,r6,0xb814
00001fe4	bl	___eprintf
00001fe8	cmpwi	cr4,r6,__mh_dylib_header
00001fec	bne+	cr4,0x2010
00001ff0	addis	r3,r31,0x1
00001ff4	addis	r4,r31,0x1
00001ff8	addis	r6,r31,0x1
00001ffc	li	r5,0x8e3
00002000	addi	r3,r3,0xb650
00002004	addi	r4,r4,0xb670
00002008	addi	r6,r6,0xb824
0000200c	b	0x1fe4
00002010	or.	r0,r9,r10
00002014	bne	0x2020
00002018	or.	r2,r27,r28
0000201c	beq	0x2058
00002020	cmplw	cr7,r27,r29
00002024	bgt	cr7,0x2058
00002028	cmpw	cr7,r27,r29
0000202c	bne	cr7,0x2038
00002030	cmplw	cr7,r28,r30
00002034	bgt	cr7,0x2058
00002038	addis	r3,r31,0x1
0000203c	addis	r4,r31,0x1
00002040	addis	r6,r31,0x1
00002044	li	r5,0x8e4
00002048	addi	r3,r3,0xb650
0000204c	addi	r4,r4,0xb670
00002050	addi	r6,r6,0xb834
00002054	b	0x1fe4
00002058	cmpwi	cr6,r20,__mh_dylib_header
0000205c	beq	cr6,0x2088
00002060	cmpwi	cr7,r21,__mh_dylib_header
00002064	bne	cr7,0x2088
00002068	addis	r3,r31,0x1
0000206c	addis	r4,r31,0x1
00002070	addis	r6,r31,0x1
00002074	li	r5,0x8e5
00002078	addi	r3,r3,0xb650
0000207c	addi	r4,r4,0xb670
00002080	addi	r6,r6,0xb884
00002084	b	0x1fe4
00002088	lwz	r0,0x188(r1)
0000208c	cmpwi	cr7,r0,__mh_dylib_header
00002090	bne+	cr7,0x20b4
00002094	addis	r3,r31,0x1
00002098	addis	r4,r31,0x1
0000209c	addis	r6,r31,0x1
000020a0	li	r5,0x8e6
000020a4	addi	r3,r3,0xb650
000020a8	addi	r4,r4,0xb670
000020ac	addi	r6,r6,0xb8b4
000020b0	b	0x1fe4
000020b4	or.	r0,r29,r30
000020b8	bne	0x20c4
000020bc	or.	r2,r27,r28
000020c0	beq	0x20fc
000020c4	cmplw	cr7,r27,r29
000020c8	bgt	cr7,0x20fc
000020cc	cmpw	cr7,r27,r29
000020d0	bne	cr7,0x20dc
000020d4	cmplw	cr7,r28,r30
000020d8	bgt	cr7,0x20fc
000020dc	addis	r3,r31,0x1
000020e0	addis	r4,r31,0x1
000020e4	addis	r6,r31,0x1
000020e8	li	r5,0x34f
000020ec	addi	r3,r3,0xb650
000020f0	addi	r4,r4,0xb670
000020f4	addi	r6,r6,0xb834
000020f8	b	0x1fe4
000020fc	beq	cr6,0x2128
00002100	cmpwi	cr7,r21,__mh_dylib_header
00002104	bne	cr7,0x2128
00002108	addis	r3,r31,0x1
0000210c	addis	r4,r31,0x1
00002110	addis	r6,r31,0x1
00002114	li	r5,0x350
00002118	addi	r3,r3,0xb650
0000211c	addi	r4,r4,0xb670
00002120	addi	r6,r6,0xb884
00002124	b	0x1fe4
00002128	addi	r18,r1,0xa0
0000212c	li	r4,__mh_dylib_header
00002130	li	r5,0x50
00002134	or	r3,r18,r18
00002138	bl	0xd1a0	; symbol stub for: _memset
0000213c	cmpwi	cr7,r21,__mh_dylib_header
00002140	beq	cr7,0x2154
00002144	mulli	r5,r20,0x28
00002148	or	r3,r21,r21
0000214c	li	r4,__mh_dylib_header
00002150	bl	0xd1a0	; symbol stub for: _memset
00002154	cmpwi	cr7,r25,__mh_dylib_header
00002158	addis	r2,r31,__mh_dylib_header
0000215c	stw	r29,0xd4(r1)
00002160	stw	r30,0xd8(r1)
00002164	stw	r27,0xdc(r1)
00002168	stw	r28,0xe0(r1)
0000216c	stw	r21,0xe4(r1)
00002170	stw	r20,0xe8(r1)
00002174	stw	r26,0xa4(r1)
00002178	addi	r2,r2,0xfe78
0000217c	stw	r2,0xbc(r1)
00002180	bne	cr7,0x21c0
00002184	addis	r2,r31,0x1
00002188	li	r0,0x1
0000218c	or	r3,r26,r26
00002190	or	r5,r23,r23
00002194	lwz	r2,0xd1a0(r2)
00002198	stw	r0,0xac(r1)
0000219c	addi	r6,r1,0xa8
000021a0	lwz	r9,__mh_dylib_header(r2)
000021a4	xor	r9,r26,r9
000021a8	addic	r0,r9,0xffff
000021ac	subfe	r4,r0,r9
000021b0	bl	_QSymCreateFromTask
000021b4	or.	r29,r3,r3
000021b8	beq	0x21c4
000021bc	b	0x2334
000021c0	stw	r25,0xa8(r1)
000021c4	lwz	r3,0xa8(r1)
000021c8	bl	_QSymGetExecutableImage
000021cc	or.	r30,r3,r3
000021d0	beq	0x232c
000021d4	bl	_QMOImageIsByteSwapped
000021d8	stw	r3,0xc0(r1)
000021dc	or	r3,r30,r30
000021e0	bl	_GetTaskArch
000021e4	cmpwi	cr7,r3,__mh_dylib_header
000021e8	stw	r3,0xa0(r1)
000021ec	bne	cr7,0x2c14
000021f0	b	0x232c
000021f4	lwz	r9,0x64(r1)
000021f8	lwz	r10,0x68(r1)
000021fc	or	r4,r30,r30
00002200	addi	r5,r1,0x78
00002204	lwz	r3,0xa8(r1)
00002208	stw	r9,0xc4(r1)
0000220c	stw	r10,0xc8(r1)
00002210	bl	_QSymGetNextSymbol
00002214	cmpwi	cr7,r3,__mh_dylib_header
00002218	bne	cr7,0x223c
0000221c	lwz	r2,0x84(r1)
00002220	lwz	r3,0x88(r1)
00002224	stw	r2,0xcc(r1)
00002228	stw	r3,0xd0(r1)
0000222c	lwz	r0,0xa0(r1)
00002230	cmpwi	cr7,r0,__mh_dylib_header
00002234	bne	cr7,0x2258
00002238	b	0x230c
0000223c	lwz	r2,0xc4(r1)
00002240	lwz	r3,0xc8(r1)
00002244	addic	r10,r3,0x100
00002248	addze	r9,r2
0000224c	stw	r9,0xcc(r1)
00002250	stw	r10,0xd0(r1)
00002254	b	0x222c
00002258	lwz	r0,0xa4(r1)
0000225c	cmpwi	cr7,r0,__mh_dylib_header
00002260	beq	cr7,0x230c
00002264	lwz	r0,0xa8(r1)
00002268	cmpwi	cr7,r0,__mh_dylib_header
0000226c	beq	cr7,0x230c
00002270	lwz	r2,0xb4(r1)
00002274	addic	r0,r2,0xffff
00002278	subfe	r9,r0,r2
0000227c	lwz	r0,0xb8(r1)
00002280	subfic	r2,r0,__mh_dylib_header
00002284	adde	r0,r2,r0
00002288	cmpw	cr7,r9,r0
0000228c	beq	cr7,0x230c
00002290	lwz	r0,0xbc(r1)
00002294	cmpwi	cr7,r0,__mh_dylib_header
00002298	beq	cr7,0x230c
0000229c	lwz	r2,0xc4(r1)
000022a0	lwz	r3,0xc8(r1)
000022a4	or.	r9,r2,r3
000022a8	beq	0x230c
000022ac	lwz	r0,0xcc(r1)
000022b0	cmplw	cr7,r0,r2
000022b4	bgt	cr7,0x22cc
000022b8	cmpw	cr7,r0,r2
000022bc	bne	cr7,0x230c
000022c0	lwz	r0,0xd0(r1)
000022c4	cmplw	cr7,r0,r3
000022c8	ble	cr7,0x230c
000022cc	lwz	r2,0xd4(r1)
000022d0	lwz	r0,0xdc(r1)
000022d4	cmplw	cr7,r2,r0
000022d8	bgt	cr7,0x230c
000022dc	cmpw	cr7,r2,r0
000022e0	bne	cr7,0x22f4
000022e4	lwz	r0,0xd8(r1)
000022e8	lwz	r2,0xe0(r1)
000022ec	cmplw	cr7,r0,r2
000022f0	bgt	cr7,0x230c
000022f4	lwz	r0,0xe8(r1)
000022f8	cmpwi	cr7,r0,__mh_dylib_header
000022fc	beq	cr7,0x2344
00002300	lwz	r0,0xe4(r1)
00002304	cmpwi	cr7,r0,__mh_dylib_header
00002308	bne	cr7,0x2344
0000230c	addis	r3,r31,0x1
00002310	addis	r4,r31,0x1
00002314	addis	r6,r31,0x1
00002318	li	r5,0x39d
0000231c	addi	r3,r3,0xb650
00002320	addi	r4,r4,0xb670
00002324	addi	r6,r6,0xb8cc
00002328	b	0x1fe4
0000232c	li	r29,0x16
00002330	b	0x2b48
00002334	cmpwi	cr7,r29,__mh_dylib_header
00002338	mfcr	r30
0000233c	rlwinm	r30,r30,28,0,3
00002340	bne	cr7,0x2b50
00002344	lwz	r9,0xa0(r1)
00002348	stw	r19,0xb0(r1)
0000234c	stw	r22,0xb8(r1)
00002350	stw	r24,0xb4(r1)
00002354	cmpwi	cr7,r9,__mh_dylib_header
00002358	beq	cr7,0x2408
0000235c	lwz	r0,0xa4(r1)
00002360	cmpwi	cr7,r0,__mh_dylib_header
00002364	beq	cr7,0x2408
00002368	lwz	r0,0xa8(r1)
0000236c	cmpwi	cr7,r0,__mh_dylib_header
00002370	beq	cr7,0x2408
00002374	mfcr	r0
00002378	rlwinm	r0,r0,19,31,31
0000237c	addic	r11,r24,0xffff
00002380	subfe	r2,r11,r24
00002384	cmpw	cr7,r2,r0
00002388	beq	cr7,0x2408
0000238c	lwz	r0,0xbc(r1)
00002390	cmpwi	cr7,r0,__mh_dylib_header
00002394	beq	cr7,0x2408
00002398	lwz	r2,0xc4(r1)
0000239c	lwz	r3,0xc8(r1)
000023a0	or.	r0,r2,r3
000023a4	beq	0x2408
000023a8	lwz	r0,0xcc(r1)
000023ac	cmplw	cr7,r0,r2
000023b0	bgt	cr7,0x23c8
000023b4	cmpw	cr7,r0,r2
000023b8	bne	cr7,0x2408
000023bc	lwz	r0,0xd0(r1)
000023c0	cmplw	cr7,r0,r3
000023c4	ble	cr7,0x2408
000023c8	lwz	r2,0xd4(r1)
000023cc	lwz	r0,0xdc(r1)
000023d0	cmplw	cr7,r2,r0
000023d4	bgt	cr7,0x2408
000023d8	cmpw	cr7,r2,r0
000023dc	bne	cr7,0x23f0
000023e0	lwz	r0,0xd8(r1)
000023e4	lwz	r2,0xe0(r1)
000023e8	cmplw	cr7,r0,r2
000023ec	bgt	cr7,0x2408
000023f0	lwz	r0,0xe8(r1)
000023f4	cmpwi	cr7,r0,__mh_dylib_header
000023f8	beq	cr7,0x2428
000023fc	lwz	r0,0xe4(r1)
00002400	cmpwi	cr7,r0,__mh_dylib_header
00002404	bne	cr7,0x2428
00002408	addis	r3,r31,0x1
0000240c	addis	r4,r31,0x1
00002410	addis	r6,r31,0x1
00002414	li	r5,0x24b
00002418	addi	r3,r3,0xb650
0000241c	addi	r4,r4,0xb670
00002420	addi	r6,r6,0xb6b8
00002424	b	0x1fe4
00002428	lwz	r10,0xe4(r1)
0000242c	cmpwi	cr7,r10,__mh_dylib_header
00002430	beq	cr7,0x2498
00002434	lwz	r2,0xe8(r1)
00002438	li	r11,__mh_dylib_header
0000243c	rlwinm	r0,r2,5,0,26
00002440	rlwinm	r2,r2,3,0,28
00002444	add	r2,r2,r0
00002448	cmpwi	cr7,r2,__mh_dylib_header
0000244c	addi	r2,r2,0x1
00002450	mtspr	ctr,r2
00002454	bne+	cr7,0x2494
00002458	li	r0,0x1
0000245c	mtspr	ctr,r0
00002460	b	0x2494
00002464	lbzx	r0,r11,r10
00002468	cmpwi	cr7,r0,__mh_dylib_header
0000246c	beq+	cr7,0x2490
00002470	addis	r3,r31,0x1
00002474	addis	r4,r31,0x1
00002478	addis	r6,r31,0x1
0000247c	li	r5,0x25a
00002480	addi	r3,r3,0xb650
00002484	addi	r4,r4,0xb670
00002488	addi	r6,r6,0xb8f8
0000248c	b	0x1fe4
00002490	addi	r11,r11,0x1
00002494	bdnz	0x2464
00002498	lwz	r24,0xdc(r1)
0000249c	lwz	r25,0xe0(r1)
000024a0	lwz	r27,0xd4(r1)
000024a4	lwz	r28,0xd8(r1)
000024a8	or.	r0,r24,r25
000024ac	bne	0x24cc
000024b0	lwz	r0,0xc(r9)
000024b4	li	r24,0xffff
000024b8	li	r25,0xffff
000024bc	cmpwi	cr7,r0,__mh_dylib_header
000024c0	bne	cr7,0x24d4
000024c4	li	r24,0x1
000024c8	li	r25,__mh_dylib_header
000024cc	cmplw	cr7,r27,r24
000024d0	bgt	cr7,0x24e4
000024d4	cmpw	cr7,r27,r24
000024d8	bne+	cr7,0x2504
000024dc	cmplw	cr7,r28,r25
000024e0	ble+	cr7,0x2504
000024e4	addis	r3,r31,0x1
000024e8	addis	r4,r31,0x1
000024ec	addis	r6,r31,0x1
000024f0	li	r5,0x26e
000024f4	addi	r3,r3,0xb650
000024f8	addi	r4,r4,0xb670
000024fc	addi	r6,r6,0xb914
00002500	b	0x1fe4
00002504	lwz	r0,0xec(r1)
00002508	cmpwi	cr7,r0,__mh_dylib_header
0000250c	beq+	cr7,0x2530
00002510	addis	r3,r31,0x1
00002514	addis	r4,r31,0x1
00002518	addis	r6,r31,0x1
0000251c	li	r5,0x274
00002520	addi	r3,r3,0xb650
00002524	addi	r4,r4,0xb670
00002528	addi	r6,r6,0xb930
0000252c	b	0x1fe4
00002530	lwz	r0,0x18(r9)
00002534	or	r3,r18,r18
00002538	addi	r4,r1,0x40
0000253c	addi	r5,r1,0x48
00002540	mtspr	ctr,r0
00002544	or	r12,r0,r0
00002548	bctrl
0000254c	or.	r29,r3,r3
00002550	bne	0x2a14
00002554	li	r22,0xffff
00002558	li	r23,0xffff
0000255c	lwz	r9,0xe4(r1)
00002560	cmpwi	cr7,r9,__mh_dylib_header
00002564	beq	cr7,0x2584
00002568	lwz	r2,0xec(r1)
0000256c	lwz	r0,0xe8(r1)
00002570	cmplw	cr7,r2,r0
00002574	bge	cr7,0x2584
00002578	mulli	r0,r2,0x28
0000257c	add	r26,r9,r0
00002580	b	0x2588
00002584	addi	r26,r1,0x78
00002588	lwz	r9,0x40(r1)
0000258c	lwz	r10,0x44(r1)
00002590	li	r8,__mh_dylib_header
00002594	or	r3,r18,r18
00002598	stw	r9,__mh_dylib_header(r26)
0000259c	stw	r10,0x4(r26)
000025a0	lwz	r12,0x4c(r1)
000025a4	lwz	r11,0x48(r1)
000025a8	stw	r8,0x10(r26)
000025ac	stw	r12,0xc(r26)
000025b0	stw	r11,0x8(r26)
000025b4	lwz	r2,0xa0(r1)
000025b8	lwz	r4,0x40(r1)
000025bc	lwz	r5,0x44(r1)
000025c0	lwz	r0,0x1c(r2)
000025c4	mtspr	ctr,r0
000025c8	or	r12,r0,r0
000025cc	bctrl
000025d0	cmpwi	cr7,r3,__mh_dylib_header
000025d4	bne	cr7,0x25e8
000025d8	lwz	r8,0x10(r26)
000025dc	ori	r8,r8,0x2
000025e0	stw	r8,0x10(r26)
000025e4	b	0x25ec
000025e8	lwz	r8,0x10(r26)
000025ec	lwz	r4,0x48(r1)
000025f0	lwz	r5,0x4c(r1)
000025f4	or.	r0,r4,r5
000025f8	beq	0x2648
000025fc	lwz	r9,0xa0(r1)
00002600	lwz	r11,0x14(r9)
00002604	lwz	r0,0x10(r9)
00002608	and	r3,r11,r5
0000260c	and	r2,r0,r4
00002610	or.	r9,r2,r3
00002614	bne	0x2648
00002618	cmplw	cr7,r27,r4
0000261c	bgt	cr7,0x2648
00002620	cmpw	cr7,r27,r4
00002624	bne	cr7,0x2630
00002628	cmplw	cr7,r28,r5
0000262c	bgt	cr7,0x2648
00002630	cmplw	cr7,r24,r4
00002634	bgt	cr7,0x2660
00002638	cmpw	cr7,r24,r4
0000263c	bne	cr7,0x2648
00002640	cmplw	cr7,r25,r5
00002644	bgt	cr7,0x2660
00002648	ori	r8,r8,0x1
0000264c	stw	r8,0x10(r26)
00002650	lwz	r0,0xe4(r1)
00002654	cmpwi	r0,__mh_dylib_header
00002658	bne	0x27c0
0000265c	b	0x2a50
00002660	andi.	r11,r8,0x2
00002664	bne	0x26e8
00002668	lwz	r2,0x40(r1)
0000266c	lwz	r0,0xc4(r1)
00002670	lwz	r3,0x44(r1)
00002674	cmplw	cr7,r0,r2
00002678	bgt	cr7,0x26e8
0000267c	cmpw	cr7,r0,r2
00002680	bne	cr7,0x2690
00002684	lwz	r0,0xc8(r1)
00002688	cmplw	cr7,r0,r3
0000268c	bgt	cr7,0x26e8
00002690	lwz	r0,0xcc(r1)
00002694	cmplw	cr7,r0,r2
00002698	bgt	cr7,0x26b0
0000269c	cmpw	cr7,r0,r2
000026a0	bne	cr7,0x26e8
000026a4	lwz	r0,0xd0(r1)
000026a8	cmplw	cr7,r0,r3
000026ac	ble	cr7,0x26e8
000026b0	ori	r8,r8,0x4
000026b4	or	r3,r18,r18
000026b8	addi	r6,r1,0x38
000026bc	addi	r7,r1,0x50
000026c0	stw	r8,0x10(r26)
000026c4	lwz	r2,0xa0(r1)
000026c8	lwz	r4,0x48(r1)
000026cc	lwz	r5,0x4c(r1)
000026d0	lwz	r0,0x24(r2)
000026d4	mtspr	ctr,r0
000026d8	or	r12,r0,r0
000026dc	bctrl
000026e0	cmpwi	cr7,r3,__mh_dylib_header
000026e4	b	0x2784
000026e8	or	r3,r18,r18
000026ec	addi	r6,r1,0x50
000026f0	bl	_ReadAddr
000026f4	or.	r29,r3,r3
000026f8	mfcr	r30
000026fc	bne	0x2708
00002700	li	r28,__mh_dylib_header
00002704	b	0x2730
00002708	lwz	r0,0x10(r26)
0000270c	li	r29,__mh_dylib_header
00002710	li	r28,0x1
00002714	cmpwi	cr7,r29,__mh_dylib_header
00002718	ori	r0,r0,0x1
0000271c	mfcr	r30
00002720	rlwinm	r30,r30,28,0,3
00002724	stw	r0,0x10(r26)
00002728	stw	r22,0x50(r1)
0000272c	stw	r23,0x54(r1)
00002730	lwz	r0,0x10(r26)
00002734	andi.	r2,r0,0x1
00002738	bne	0x2770
0000273c	lwz	r2,0xa0(r1)
00002740	or	r3,r18,r18
00002744	lwz	r4,0x48(r1)
00002748	addi	r8,r1,0x38
0000274c	lwz	r5,0x4c(r1)
00002750	lwz	r6,0x50(r1)
00002754	lwz	r7,0x54(r1)
00002758	lwz	r0,0x20(r2)
0000275c	mtspr	ctr,r0
00002760	or	r12,r0,r0
00002764	bctrl
00002768	cmpwi	cr7,r3,__mh_dylib_header
0000276c	beq	cr7,0x2778
00002770	stw	r22,0x38(r1)
00002774	stw	r23,0x3c(r1)
00002778	mtocrf	0x80,r30
0000277c	bne	0x2a14
00002780	cmpwi	cr7,r28,__mh_dylib_header
00002784	bne	cr7,0x2650
00002788	lwz	r2,0xec(r1)
0000278c	lwz	r27,0x48(r1)
00002790	lwz	r28,0x4c(r1)
00002794	lwz	r3,0x3c(r1)
00002798	lwz	r9,0x50(r1)
0000279c	lwz	r10,0x54(r1)
000027a0	addi	r2,r2,0x1
000027a4	stw	r3,0x44(r1)
000027a8	stw	r2,0xec(r1)
000027ac	lwz	r2,0x38(r1)
000027b0	stw	r9,0x48(r1)
000027b4	stw	r10,0x4c(r1)
000027b8	stw	r2,0x40(r1)
000027bc	b	0x255c
000027c0	lwz	r27,0xe8(r1)
000027c4	cmpwi	cr6,r27,__mh_dylib_header
000027c8	beq	cr6,0x2a50
000027cc	lwz	r2,0xec(r1)
000027d0	cmpwi	cr1,r2,__mh_dylib_header
000027d4	beq	cr1,0x2a54
000027d8	lwz	r0,0xa8(r1)
000027dc	cmpwi	cr7,r0,__mh_dylib_header
000027e0	bne+	cr7,0x2804
000027e4	addis	r3,r31,0x1
000027e8	addis	r4,r31,0x1
000027ec	addis	r6,r31,0x1
000027f0	li	r5,0x1a1
000027f4	addi	r3,r3,0xb650
000027f8	addi	r4,r4,0xb670
000027fc	addi	r6,r6,0xb94c
00002800	b	0x1fe4
00002804	bne+	0x2828
00002808	addis	r3,r31,0x1
0000280c	addis	r4,r31,0x1
00002810	addis	r6,r31,0x1
00002814	li	r5,0x1a2
00002818	addi	r3,r3,0xb650
0000281c	addi	r4,r4,0xb670
00002820	addi	r6,r6,0xb964
00002824	b	0x1fe4
00002828	cmplw	cr7,r27,r2
0000282c	blt	cr7,0x2838
00002830	mcrf	cr6,cr1
00002834	or	r27,r2,r2
00002838	bne+	cr6,0x285c
0000283c	addis	r3,r31,0x1
00002840	addis	r4,r31,0x1
00002844	addis	r6,r31,0x1
00002848	li	r5,0x1ac
0000284c	addi	r3,r3,0xb650
00002850	addi	r4,r4,0xb670
00002854	addi	r6,r6,0xb9bc
00002858	b	0x1fe4
0000285c	li	r4,0x8
00002860	or	r3,r27,r27
00002864	bl	0xcfe0	; symbol stub for: _calloc
00002868	li	r4,0x1c
0000286c	or	r26,r3,r3
00002870	or	r3,r27,r27
00002874	bl	0xcfe0	; symbol stub for: _calloc
00002878	cmpwi	cr7,r26,__mh_dylib_header
0000287c	or	r25,r3,r3
00002880	beq	cr7,0x29ec
00002884	cmpwi	cr7,r3,__mh_dylib_header
00002888	beq	cr7,0x29ec
0000288c	cmpwi	cr7,r27,__mh_dylib_header
00002890	addi	r0,r27,0x1
00002894	lwz	r9,0xe4(r1)
00002898	or	r11,r26,r26
0000289c	mtspr	ctr,r0
000028a0	bne+	cr7,0x28c8
000028a4	li	r2,0x1
000028a8	mtspr	ctr,r2
000028ac	b	0x28c8
000028b0	lwz	r2,__mh_dylib_header(r9)
000028b4	lwz	r3,0x4(r9)
000028b8	addi	r9,r9,0x28
000028bc	stw	r2,__mh_dylib_header(r11)
000028c0	stw	r3,0x4(r11)
000028c4	addi	r11,r11,0x8
000028c8	bdnz	0x28b0
000028cc	lwz	r3,0xa8(r1)
000028d0	or	r4,r27,r27
000028d4	or	r5,r26,r26
000028d8	or	r6,r25,r25
000028dc	bl	_QSymGetSymbolsForAddresses
000028e0	or.	r29,r3,r3
000028e4	mfcr	r30
000028e8	bne	0x29fc
000028ec	or	r30,r25,r25
000028f0	li	r24,__mh_dylib_header
000028f4	li	r28,__mh_dylib_header
000028f8	b	0x29d4
000028fc	lwz	r0,__mh_dylib_header(r30)
00002900	cmpwi	cr7,r0,__mh_dylib_header
00002904	beq	cr7,0x29c8
00002908	lwz	r0,0xac(r1)
0000290c	cmpwi	cr7,r0,__mh_dylib_header
00002910	beq	cr7,0x2960
00002914	lwz	r29,0xe4(r1)
00002918	lwz	r3,0x8(r30)
0000291c	add	r29,r28,r29
00002920	bl	0xd360	; symbol stub for: _strdup
00002924	stw	r3,0x14(r29)
00002928	lwz	r3,0x4(r30)
0000292c	bl	_QMOImageGetFilePath
00002930	cmpwi	cr7,r3,__mh_dylib_header
00002934	beq	cr7,0x2948
00002938	lwz	r29,0xe4(r1)
0000293c	bl	0xd360	; symbol stub for: _strdup
00002940	add	r29,r28,r29
00002944	stw	r3,0x18(r29)
00002948	lwz	r2,0xe4(r1)
0000294c	add	r2,r28,r2
00002950	lwz	r0,0x10(r2)
00002954	ori	r0,r0,0x100
00002958	stw	r0,0x10(r2)
0000295c	b	0x29b0
00002960	lwz	r0,0x4(r30)
00002964	cmpwi	cr7,r0,__mh_dylib_header
00002968	bne+	cr7,0x298c
0000296c	addis	r3,r31,0x1
00002970	addis	r4,r31,0x1
00002974	addis	r6,r31,0x1
00002978	li	r5,0x1e1
0000297c	addi	r3,r3,0xb650
00002980	addi	r4,r4,0xb670
00002984	addi	r6,r6,0xb9cc
00002988	b	0x1fe4
0000298c	lwz	r2,0xe4(r1)
00002990	lwz	r0,0x8(r30)
00002994	add	r2,r2,r28
00002998	stw	r0,0x14(r2)
0000299c	lwz	r29,0xe4(r1)
000029a0	lwz	r3,0x4(r30)
000029a4	add	r29,r28,r29
000029a8	bl	_QMOImageGetFilePath
000029ac	stw	r3,0x18(r29)
000029b0	lwz	r2,0xe4(r1)
000029b4	lwz	r0,0x14(r30)
000029b8	add	r2,r2,r28
000029bc	stw	r0,0x1c(r2)
000029c0	lwz	r9,0x18(r30)
000029c4	stw	r9,0x20(r2)
000029c8	addi	r24,r24,0x1
000029cc	addi	r28,r28,0x28
000029d0	addi	r30,r30,0x1c
000029d4	cmplw	cr7,r27,r24
000029d8	bgt	cr7,0x28fc
000029dc	li	r29,__mh_dylib_header
000029e0	cmpwi	r29,__mh_dylib_header
000029e4	mfcr	r30
000029e8	b	0x29fc
000029ec	li	r29,0xc
000029f0	cmpwi	cr7,r29,__mh_dylib_header
000029f4	mfcr	r30
000029f8	rlwinm	r30,r30,28,0,3
000029fc	or	r3,r26,r26
00002a00	bl	0xd0c0	; symbol stub for: _free
00002a04	or	r3,r25,r25
00002a08	bl	0xd0c0	; symbol stub for: _free
00002a0c	mtocrf	0x80,r30
00002a10	beq	0x2a5c
00002a14	lwz	r3,0xe4(r1)
00002a18	lwz	r4,0xe8(r1)
00002a1c	bl	_QBacktraceDisposeSymbols
00002a20	lwz	r3,0xe4(r1)
00002a24	cmpwi	cr7,r3,__mh_dylib_header
00002a28	beq	cr7,0x2a44
00002a2c	lwz	r5,0xe8(r1)
00002a30	li	r4,__mh_dylib_header
00002a34	rlwinm	r0,r5,5,0,26
00002a38	rlwinm	r5,r5,3,0,28
00002a3c	add	r5,r5,r0
00002a40	bl	0xd1a0	; symbol stub for: _memset
00002a44	li	r2,__mh_dylib_header
00002a48	stw	r2,0xec(r1)
00002a4c	b	0x2a60
00002a50	lwz	r2,0xec(r1)
00002a54	li	r29,__mh_dylib_header
00002a58	b	0x2a60
00002a5c	lwz	r2,0xec(r1)
00002a60	lwz	r0,0xa0(r1)
00002a64	lwz	r9,0x188(r1)
00002a68	cmpwi	cr7,r0,__mh_dylib_header
00002a6c	stw	r2,__mh_dylib_header(r9)
00002a70	beq	cr7,0x2b28
00002a74	lwz	r0,0xa4(r1)
00002a78	cmpwi	cr7,r0,__mh_dylib_header
00002a7c	beq	cr7,0x2b28
00002a80	lwz	r0,0xa8(r1)
00002a84	cmpwi	cr7,r0,__mh_dylib_header
00002a88	beq	cr7,0x2b28
00002a8c	lwz	r2,0xb4(r1)
00002a90	lwz	r0,0xb8(r1)
00002a94	addic	r11,r2,0xffff
00002a98	subfe	r9,r11,r2
00002a9c	subfic	r2,r0,__mh_dylib_header
00002aa0	adde	r0,r2,r0
00002aa4	cmpw	cr7,r9,r0
00002aa8	beq	cr7,0x2b28
00002aac	lwz	r0,0xbc(r1)
00002ab0	cmpwi	cr7,r0,__mh_dylib_header
00002ab4	beq	cr7,0x2b28
00002ab8	lwz	r2,0xc4(r1)
00002abc	lwz	r3,0xc8(r1)
00002ac0	or.	r9,r2,r3
00002ac4	beq	0x2b28
00002ac8	lwz	r0,0xcc(r1)
00002acc	cmplw	cr7,r0,r2
00002ad0	bgt	cr7,0x2ae8
00002ad4	cmpw	cr7,r0,r2
00002ad8	bne	cr7,0x2b28
00002adc	lwz	r0,0xd0(r1)
00002ae0	cmplw	cr7,r0,r3
00002ae4	ble	cr7,0x2b28
00002ae8	lwz	r2,0xd4(r1)
00002aec	lwz	r0,0xdc(r1)
00002af0	cmplw	cr7,r2,r0
00002af4	bgt	cr7,0x2b28
00002af8	cmpw	cr7,r2,r0
00002afc	bne	cr7,0x2b10
00002b00	lwz	r0,0xd8(r1)
00002b04	lwz	r2,0xe0(r1)
00002b08	cmplw	cr7,r0,r2
00002b0c	bgt	cr7,0x2b28
00002b10	lwz	r0,0xe8(r1)
00002b14	cmpwi	cr7,r0,__mh_dylib_header
00002b18	beq	cr7,0x2b48
00002b1c	lwz	r0,0xe4(r1)
00002b20	cmpwi	cr7,r0,__mh_dylib_header
00002b24	bne	cr7,0x2b48
00002b28	addis	r3,r31,0x1
00002b2c	addis	r4,r31,0x1
00002b30	addis	r6,r31,0x1
00002b34	li	r5,0x31d
00002b38	addi	r3,r3,0xb650
00002b3c	addi	r4,r4,0xb670
00002b40	addi	r6,r6,0xb6b8
00002b44	b	0x1fe4
00002b48	cmpwi	r29,__mh_dylib_header
00002b4c	mfcr	r30
00002b50	lwz	r0,0xac(r1)
00002b54	cmpwi	cr7,r0,__mh_dylib_header
00002b58	beq	cr7,0x2b64
00002b5c	lwz	r3,0xa8(r1)
00002b60	bl	_QSymDestroy
00002b64	mtocrf	0x80,r30
00002b68	beq	0x2bd0
00002b6c	cmpwi	cr7,r20,__mh_dylib_header
00002b70	addi	r20,r20,0x1
00002b74	or	r3,r21,r21
00002b78	li	r2,__mh_dylib_header
00002b7c	mtspr	ctr,r20
00002b80	bne+	cr7,0x2ba4
00002b84	li	r0,0x1
00002b88	mtspr	ctr,r0
00002b8c	b	0x2ba4
00002b90	lwz	r0,0x10(r3)
00002b94	andi.	r9,r0,0x100
00002b98	beq	0x2ba0
00002b9c	li	r2,0x1
00002ba0	addi	r3,r3,0x28
00002ba4	bdnz	0x2b90
00002ba8	cmpwi	cr7,r2,__mh_dylib_header
00002bac	beq	cr7,0x2bd0
00002bb0	addis	r3,r31,0x1
00002bb4	addis	r4,r31,0x1
00002bb8	addis	r6,r31,0x1
00002bbc	li	r5,0x909
00002bc0	addi	r3,r3,0xb650
00002bc4	addi	r4,r4,0xb670
00002bc8	addi	r6,r6,0xb9f4
00002bcc	b	0x1fe4
00002bd0	mtocrf	0x80,r30
00002bd4	lwz	r2,0x188(r1)
00002bd8	mfcr	r9
00002bdc	rlwinm	r9,r9,3,31,31
00002be0	lwz	r0,__mh_dylib_header(r2)
00002be4	addic	r11,r0,0xffff
00002be8	subfe	r2,r11,r0
00002bec	cmpw	cr7,r9,r2
00002bf0	beq+	cr7,0x2c40
00002bf4	addis	r3,r31,0x1
00002bf8	addis	r4,r31,0x1
00002bfc	addis	r6,r31,0x1
00002c00	li	r5,0x90a
00002c04	addi	r3,r3,0xb650
00002c08	addi	r4,r4,0xb670
00002c0c	addi	r6,r6,0xba38
00002c10	b	0x1fe4
00002c14	addi	r30,r1,0x58
00002c18	lwz	r3,0xa8(r1)
00002c1c	addis	r4,r31,0x1
00002c20	addis	r5,r31,0x1
00002c24	addi	r4,r4,0xba5c
00002c28	or	r6,r30,r30
00002c2c	addi	r5,r5,0xba78
00002c30	bl	_QSymGetAddressForSymbol
00002c34	or.	r29,r3,r3
00002c38	bne	0x2334
00002c3c	b	0x21f4
00002c40	addi	r1,r1,0x140
00002c44	or	r3,r29,r29
00002c48	lwz	r0,0x8(r1)
00002c4c	lwz	r11,0x4(r1)
00002c50	lmw	r18,0xffc8(r1)
00002c54	mtspr	lr,r0
00002c58	mtocrf	0x08,r11
00002c5c	blr
_QBacktraceMachThread:
00002c60	mfspr	r0,lr
00002c64	stmw	r21,0xffd4(r1)
00002c68	or	r26,r4,r4
00002c6c	mfcr	r2
00002c70	bcl	20,31,0x2c74
00002c74	stw	r0,0x8(r1)
00002c78	or.	r25,r3,r3
00002c7c	or	r22,r5,r5
00002c80	mfspr	r31,lr
00002c84	or	r21,r6,r6
00002c88	or	r30,r8,r8
00002c8c	or	r29,r7,r7
00002c90	or	r28,r10,r10
00002c94	stw	r2,0x4(r1)
00002c98	stwu	r1,0xff60(r1)
00002c9c	or	r27,r9,r9
00002ca0	lwz	r24,0xdc(r1)
00002ca4	lwz	r23,0xe0(r1)
00002ca8	bne+	0x2ccc
00002cac	addis	r3,r31,0x1
00002cb0	addis	r4,r31,0x1
00002cb4	addis	r6,r31,0x1
00002cb8	li	r5,0x892
00002cbc	addi	r3,r3,0xa93c
00002cc0	addi	r4,r4,0xa95c
00002cc4	addi	r6,r6,0xaa00
00002cc8	b	0x2cf0
00002ccc	cmpwi	cr7,r4,__mh_dylib_header
00002cd0	bne+	cr7,0x2cf4
00002cd4	addis	r3,r31,0x1
00002cd8	addis	r4,r31,0x1
00002cdc	addis	r6,r31,0x1
00002ce0	li	r5,0x893
00002ce4	addi	r3,r3,0xa93c
00002ce8	addi	r4,r4,0xa95c
00002cec	addi	r6,r6,0xaa18
00002cf0	bl	___eprintf
00002cf4	or.	r0,r7,r8
00002cf8	bne	0x2d04
00002cfc	or.	r11,r9,r10
00002d00	beq	0x2d3c
00002d04	cmplw	cr7,r27,r29
00002d08	bgt	cr7,0x2d3c
00002d0c	cmpw	cr7,r27,r29
00002d10	bne	cr7,0x2d1c
00002d14	cmplw	cr7,r28,r30
00002d18	bgt	cr7,0x2d3c
00002d1c	addis	r3,r31,0x1
00002d20	addis	r4,r31,0x1
00002d24	addis	r6,r31,0x1
00002d28	li	r5,0x894
00002d2c	addi	r3,r3,0xa93c
00002d30	addi	r4,r4,0xa95c
00002d34	addi	r6,r6,0xab20
00002d38	b	0x2cf0
00002d3c	cmpwi	cr7,r24,__mh_dylib_header
00002d40	beq	cr7,0x2d70
00002d44	lwz	r0,0xd8(r1)
00002d48	cmpwi	cr7,r0,__mh_dylib_header
00002d4c	bne	cr7,0x2d70
00002d50	addis	r3,r31,0x1
00002d54	addis	r4,r31,0x1
00002d58	addis	r6,r31,0x1
00002d5c	li	r5,0x895
00002d60	addi	r3,r3,0xa93c
00002d64	addi	r4,r4,0xa95c
00002d68	addi	r6,r6,0xab70
00002d6c	b	0x2cf0
00002d70	cmpwi	cr7,r23,__mh_dylib_header
00002d74	li	r0,__mh_dylib_header
00002d78	bne+	cr7,0x2d9c
00002d7c	addis	r3,r31,0x1
00002d80	addis	r4,r31,0x1
00002d84	addis	r6,r31,0x1
00002d88	li	r5,0x896
00002d8c	addi	r3,r3,0xa93c
00002d90	addi	r4,r4,0xa95c
00002d94	addi	r6,r6,0xaba0
00002d98	b	0x2cf0
00002d9c	stw	r0,0x60(r1)
00002da0	stw	r0,0x5c(r1)
00002da4	bl	0xd140	; symbol stub for: _mach_thread_self
00002da8	cmpw	cr7,r26,r3
00002dac	bne	cr7,0x2df8
00002db0	addis	r2,r31,0x1
00002db4	lwz	r2,0xc48c(r2)
00002db8	lwz	r0,__mh_dylib_header(r2)
00002dbc	cmpw	cr7,r25,r0
00002dc0	beq+	cr7,0x2de4
00002dc4	addis	r3,r31,0x1
00002dc8	addis	r4,r31,0x1
00002dcc	addis	r6,r31,0x1
00002dd0	li	r5,0x89e
00002dd4	addi	r3,r3,0xa93c
00002dd8	addi	r4,r4,0xa95c
00002ddc	addi	r6,r6,0xad70
00002de0	b	0x2cf0
00002de4	addi	r3,r1,0x58
00002de8	addi	r4,r1,0x5c
00002dec	addi	r5,r1,0x60
00002df0	bl	_QBTCreateThreadStateSelf
00002df4	b	0x2e18
00002df8	or	r4,r26,r26
00002dfc	or	r3,r25,r25
00002e00	or	r5,r22,r22
00002e04	or	r6,r21,r21
00002e08	addi	r7,r1,0x58
00002e0c	addi	r8,r1,0x5c
00002e10	addi	r9,r1,0x60
00002e14	bl	_QBTCreateThreadState
00002e18	cmpwi	cr4,r3,__mh_dylib_header
00002e1c	or	r26,r3,r3
00002e20	bne	cr4,0x2e68
00002e24	lwz	r0,0xd8(r1)
00002e28	lwz	r4,0x58(r1)
00002e2c	or	r3,r25,r25
00002e30	or	r7,r22,r22
00002e34	lwz	r5,0x5c(r1)
00002e38	lwz	r6,0x60(r1)
00002e3c	or	r8,r21,r21
00002e40	or	r9,r29,r29
00002e44	or	r10,r30,r30
00002e48	stw	r27,0x38(r1)
00002e4c	stw	r28,0x3c(r1)
00002e50	stw	r24,0x44(r1)
00002e54	stw	r23,0x48(r1)
00002e58	stw	r0,0x40(r1)
00002e5c	bl	_QBacktraceMachThreadState
00002e60	cmpwi	cr4,r3,__mh_dylib_header
00002e64	or	r26,r3,r3
00002e68	lwz	r3,0x5c(r1)
00002e6c	bl	0xd0c0	; symbol stub for: _free
00002e70	beq	cr4,0x2ed8
00002e74	cmpwi	cr7,r24,__mh_dylib_header
00002e78	addi	r24,r24,0x1
00002e7c	lwz	r2,0xd8(r1)
00002e80	li	r9,__mh_dylib_header
00002e84	mtspr	ctr,r24
00002e88	bne+	cr7,0x2eac
00002e8c	li	r0,0x1
00002e90	mtspr	ctr,r0
00002e94	b	0x2eac
00002e98	lwz	r0,0x10(r2)
00002e9c	andi.	r11,r0,0x100
00002ea0	beq	0x2ea8
00002ea4	li	r9,0x1
00002ea8	addi	r2,r2,0x28
00002eac	bdnz	0x2e98
00002eb0	cmpwi	cr7,r9,__mh_dylib_header
00002eb4	beq	cr7,0x2ed8
00002eb8	addis	r3,r31,0x1
00002ebc	addis	r4,r31,0x1
00002ec0	addis	r6,r31,0x1
00002ec4	li	r5,0x8c9
00002ec8	addi	r3,r3,0xa93c
00002ecc	addi	r4,r4,0xa95c
00002ed0	addi	r6,r6,0xace0
00002ed4	b	0x2cf0
00002ed8	mfcr	r9
00002edc	rlwinm	r9,r9,19,31,31
00002ee0	lwz	r0,__mh_dylib_header(r23)
00002ee4	addic	r11,r0,0xffff
00002ee8	subfe	r2,r11,r0
00002eec	cmpw	cr7,r9,r2
00002ef0	beq+	cr7,0x2f14
00002ef4	addis	r3,r31,0x1
00002ef8	addis	r4,r31,0x1
00002efc	addis	r6,r31,0x1
00002f00	li	r5,0x8ca
00002f04	addi	r3,r3,0xa93c
00002f08	addi	r4,r4,0xa95c
00002f0c	addi	r6,r6,0xad24
00002f10	b	0x2cf0
00002f14	addi	r1,r1,0xa0
00002f18	or	r3,r26,r26
00002f1c	lwz	r0,0x8(r1)
00002f20	lwz	r11,0x4(r1)
00002f24	lmw	r21,0xffd4(r1)
00002f28	mtspr	lr,r0
00002f2c	mtocrf	0x08,r11
00002f30	blr
_QBacktraceMachSelf:
00002f34	mfspr	r0,lr
00002f38	stmw	r21,0xffd4(r1)
00002f3c	or.	r24,r5,r5
00002f40	bcl	20,31,0x2f44
00002f44	or	r21,r3,r3
00002f48	or	r22,r4,r4
00002f4c	mfspr	r31,lr
00002f50	stw	r0,0x8(r1)
00002f54	or	r23,r6,r6
00002f58	stwu	r1,0xff10(r1)
00002f5c	beq	0x2f88
00002f60	cmpwi	cr7,r4,__mh_dylib_header
00002f64	bne	cr7,0x2f88
00002f68	addis	r3,r31,0x1
00002f6c	addis	r4,r31,0x1
00002f70	addis	r6,r31,0x1
00002f74	li	r5,0x843
00002f78	addi	r3,r3,0xa66c
00002f7c	addi	r4,r4,0xa68c
00002f80	addi	r6,r6,0xa8a0
00002f84	b	0x2fb0
00002f88	cmpwi	cr7,r23,__mh_dylib_header
00002f8c	li	r0,__mh_dylib_header
00002f90	bne+	cr7,0x2fb4
00002f94	addis	r3,r31,0x1
00002f98	addis	r4,r31,0x1
00002f9c	addis	r6,r31,0x1
00002fa0	li	r5,0x844
00002fa4	addi	r3,r3,0xa66c
00002fa8	addi	r4,r4,0xa68c
00002fac	addi	r6,r6,0xa8d0
00002fb0	bl	___eprintf
00002fb4	stw	r0,0x60(r1)
00002fb8	stw	r0,0x5c(r1)
00002fbc	bl	0xd2a0	; symbol stub for: _pthread_self
00002fc0	bl	0xd260	; symbol stub for: _pthread_get_stackaddr_np
00002fc4	or	r30,r3,r3
00002fc8	bl	0xd2a0	; symbol stub for: _pthread_self
00002fcc	bl	0xd280	; symbol stub for: _pthread_get_stacksize_np
00002fd0	addi	r0,r1,0x64
00002fd4	subf	r25,r3,r30
00002fd8	cmplw	cr7,r25,r0
00002fdc	bgt	cr7,0x3028
00002fe0	cmplw	cr7,r30,r0
00002fe4	ble	cr7,0x3028
00002fe8	cmpwi	cr7,r25,__mh_dylib_header
00002fec	bne	cr7,0x3000
00002ff0	cmpwi	cr7,r30,__mh_dylib_header
00002ff4	bne	cr7,0x3000
00002ff8	or	r25,r30,r30
00002ffc	b	0x3030
00003000	cmplw	cr7,r30,r25
00003004	bgt	cr7,0x3030
00003008	addis	r3,r31,0x1
0000300c	addis	r4,r31,0x1
00003010	addis	r6,r31,0x1
00003014	li	r5,0x85c
00003018	addi	r3,r3,0xa66c
0000301c	addi	r4,r4,0xa68c
00003020	addi	r6,r6,0xa850
00003024	b	0x2fb0
00003028	li	r30,__mh_dylib_header
0000302c	li	r25,__mh_dylib_header
00003030	addi	r3,r1,0x58
00003034	addi	r4,r1,0x5c
00003038	addi	r5,r1,0x60
0000303c	bl	_QBTCreateThreadStateSelf
00003040	or.	r28,r3,r3
00003044	mfcr	r29
00003048	bne	0x30ac
0000304c	addis	r2,r31,0x1
00003050	lwz	r28,0x58(r1)
00003054	lwz	r27,0x5c(r1)
00003058	lwz	r26,0x60(r1)
0000305c	lwz	r2,0xc1bc(r2)
00003060	lwz	r29,__mh_dylib_header(r2)
00003064	bl	_QMOGetLocalCPUType
00003068	or	r4,r28,r28
0000306c	li	r11,__mh_dylib_header
00003070	stw	r22,0x40(r1)
00003074	stw	r30,0x3c(r1)
00003078	stw	r24,0x44(r1)
0000307c	stw	r23,0x48(r1)
00003080	stw	r11,0x38(r1)
00003084	or	r7,r3,r3
00003088	or	r10,r25,r25
0000308c	or	r3,r29,r29
00003090	li	r9,__mh_dylib_header
00003094	or	r5,r27,r27
00003098	or	r6,r26,r26
0000309c	or	r8,r21,r21
000030a0	bl	_QBacktraceMachThreadState
000030a4	or.	r28,r3,r3
000030a8	mfcr	r29
000030ac	lwz	r3,0x5c(r1)
000030b0	bl	0xd0c0	; symbol stub for: _free
000030b4	mtocrf	0x80,r29
000030b8	beq	0x3120
000030bc	cmpwi	cr7,r24,__mh_dylib_header
000030c0	addi	r24,r24,0x1
000030c4	or	r4,r22,r22
000030c8	li	r2,__mh_dylib_header
000030cc	mtspr	ctr,r24
000030d0	bne+	cr7,0x30f4
000030d4	li	r0,0x1
000030d8	mtspr	ctr,r0
000030dc	b	0x30f4
000030e0	lwz	r0,0x10(r4)
000030e4	andi.	r9,r0,0x100
000030e8	beq	0x30f0
000030ec	li	r2,0x1
000030f0	addi	r4,r4,0x28
000030f4	bdnz	0x30e0
000030f8	cmpwi	cr7,r2,__mh_dylib_header
000030fc	beq	cr7,0x3120
00003100	addis	r3,r31,0x1
00003104	addis	r4,r31,0x1
00003108	addis	r6,r31,0x1
0000310c	li	r5,0x87a
00003110	addi	r3,r3,0xa66c
00003114	addi	r4,r4,0xa68c
00003118	addi	r6,r6,0xaa10
0000311c	b	0x2fb0
00003120	mtocrf	0x80,r29
00003124	lwz	r0,__mh_dylib_header(r23)
00003128	mfcr	r9
0000312c	rlwinm	r9,r9,3,31,31
00003130	addic	r11,r0,0xffff
00003134	subfe	r2,r11,r0
00003138	cmpw	cr7,r9,r2
0000313c	beq+	cr7,0x3160
00003140	addis	r3,r31,0x1
00003144	addis	r4,r31,0x1
00003148	addis	r6,r31,0x1
0000314c	li	r5,0x87b
00003150	addi	r3,r3,0xa66c
00003154	addi	r4,r4,0xa68c
00003158	addi	r6,r6,0xaa54
0000315c	b	0x2fb0
00003160	addi	r1,r1,0xf0
00003164	or	r3,r28,r28
00003168	lwz	r0,0x8(r1)
0000316c	lmw	r21,0xffd4(r1)
00003170	mtspr	lr,r0
00003174	blr
_AddFrame:
00003178	mfspr	r0,lr
0000317c	cmpwi	r3,__mh_dylib_header
00003180	stw	r31,0xfffc(r1)
00003184	bcl	20,31,0x3188
00003188	mfspr	r31,lr
0000318c	stw	r0,0x8(r1)
00003190	stwu	r1,0xffb0(r1)
00003194	beq	0x3258
00003198	lwz	r0,__mh_dylib_header(r3)
0000319c	cmpwi	cr7,r0,__mh_dylib_header
000031a0	beq	cr7,0x3258
000031a4	lwz	r0,0x4(r3)
000031a8	cmpwi	cr7,r0,__mh_dylib_header
000031ac	beq	cr7,0x3258
000031b0	lwz	r0,0x8(r3)
000031b4	cmpwi	cr7,r0,__mh_dylib_header
000031b8	beq	cr7,0x3258
000031bc	lwz	r2,0x14(r3)
000031c0	lwz	r0,0x18(r3)
000031c4	addic	r11,r2,0xffff
000031c8	subfe	r9,r11,r2
000031cc	subfic	r2,r0,__mh_dylib_header
000031d0	adde	r0,r2,r0
000031d4	cmpw	cr7,r9,r0
000031d8	beq	cr7,0x3258
000031dc	lwz	r0,0x1c(r3)
000031e0	cmpwi	cr7,r0,__mh_dylib_header
000031e4	beq	cr7,0x3258
000031e8	lwz	r9,0x24(r3)
000031ec	lwz	r10,0x28(r3)
000031f0	or.	r11,r9,r10
000031f4	beq	0x3258
000031f8	lwz	r0,0x2c(r3)
000031fc	cmplw	cr7,r0,r9
00003200	bgt	cr7,0x3218
00003204	cmpw	cr7,r0,r9
00003208	bne	cr7,0x3258
0000320c	lwz	r0,0x30(r3)
00003210	cmplw	cr7,r0,r10
00003214	ble	cr7,0x3258
00003218	lwz	r2,0x34(r3)
0000321c	lwz	r0,0x3c(r3)
00003220	cmplw	cr7,r2,r0
00003224	bgt	cr7,0x3258
00003228	cmpw	cr7,r2,r0
0000322c	bne	cr7,0x3240
00003230	lwz	r0,0x38(r3)
00003234	lwz	r2,0x40(r3)
00003238	cmplw	cr7,r0,r2
0000323c	bgt	cr7,0x3258
00003240	lwz	r0,0x48(r3)
00003244	cmpwi	cr7,r0,__mh_dylib_header
00003248	beq	cr7,0x3278
0000324c	lwz	r0,0x44(r3)
00003250	cmpwi	cr7,r0,__mh_dylib_header
00003254	bne	cr7,0x3278
00003258	addis	r3,r31,0x1
0000325c	addis	r4,r31,0x1
00003260	addis	r6,r31,0x1
00003264	li	r5,0x22c
00003268	addi	r3,r3,0xa428
0000326c	addi	r4,r4,0xa448
00003270	addi	r6,r6,0xa490
00003274	bl	___eprintf
00003278	lwz	r9,0x44(r3)
0000327c	cmpwi	cr7,r9,__mh_dylib_header
00003280	beq	cr7,0x32b0
00003284	lwz	r2,0x4c(r3)
00003288	lwz	r0,0x48(r3)
0000328c	cmplw	cr7,r2,r0
00003290	bge	cr7,0x32b4
00003294	mulli	r2,r2,0x28
00003298	add	r2,r9,r2
0000329c	stw	r8,0x10(r2)
000032a0	stw	r4,__mh_dylib_header(r2)
000032a4	stw	r5,0x4(r2)
000032a8	stw	r6,0x8(r2)
000032ac	stw	r7,0xc(r2)
000032b0	lwz	r2,0x4c(r3)
000032b4	addi	r0,r2,0x1
000032b8	addi	r1,r1,0x50
000032bc	stw	r0,0x4c(r3)
000032c0	lwz	r0,0x8(r1)
000032c4	lwz	r31,0xfffc(r1)
000032c8	mtspr	lr,r0
000032cc	blr
_PowerPCCrossSignalFrame:
000032d0	mfspr	r0,lr
000032d4	stmw	r17,0xffc4(r1)
000032d8	or	r30,r5,r5
000032dc	bcl	20,31,0x32e0
000032e0	or	r29,r4,r4
000032e4	or	r27,r3,r3
000032e8	mfspr	r31,lr
000032ec	stw	r0,0x8(r1)
000032f0	li	r4,__mh_dylib_header
000032f4	li	r5,__mh_dylib_header
000032f8	stwu	r1,0xff30(r1)
000032fc	or	r18,r6,r6
00003300	or	r17,r7,r7
00003304	addi	r3,r1,0x58
00003308	bl	_QTMGetDarwinOSRelease
0000330c	or.	r28,r3,r3
00003310	bne	0x3644
00003314	or	r4,r29,r29
00003318	or	r5,r30,r30
0000331c	or	r3,r27,r27
00003320	addi	r6,r1,0x60
00003324	bl	_ReadAddr
00003328	or.	r28,r3,r3
0000332c	bne	0x3644
00003330	lwz	r2,__mh_dylib_header(r27)
00003334	lwz	r0,0xc(r2)
00003338	cmpwi	cr7,r0,__mh_dylib_header
0000333c	beq	cr7,0x337c
00003340	li	r11,__mh_dylib_header
00003344	li	r12,0x18
00003348	li	r25,__mh_dylib_header
0000334c	li	r26,0x68
00003350	li	r4,__mh_dylib_header
00003354	li	r5,0x30
00003358	li	r29,__mh_dylib_header
0000335c	li	r30,0x38
00003360	li	r19,__mh_dylib_header
00003364	li	r20,0x20
00003368	li	r23,__mh_dylib_header
0000336c	li	r24,0x38
00003370	li	r21,__mh_dylib_header
00003374	li	r22,0x13c
00003378	b	0x3600
0000337c	lwz	r0,0x58(r1)
00003380	cmpwi	cr7,r0,0x6
00003384	bgt+	cr7,0x33a8
00003388	addis	r3,r31,0x1
0000338c	addis	r4,r31,0x1
00003390	addis	r6,r31,0x1
00003394	li	r5,0x562
00003398	addi	r3,r3,0xa2d0
0000339c	addi	r4,r4,0xa2f0
000033a0	addi	r6,r6,0xa720
000033a4	b	0x356c
000033a8	lwz	r4,0x60(r1)
000033ac	lwz	r5,0x64(r1)
000033b0	li	r11,__mh_dylib_header
000033b4	li	r12,0x3c
000033b8	li	r29,__mh_dylib_header
000033bc	li	r30,0x8
000033c0	li	r28,0x20
000033c4	li	r10,__mh_dylib_header
000033c8	stw	r11,0x44(r1)
000033cc	stw	r12,0x48(r1)
000033d0	stw	r29,0x3c(r1)
000033d4	stw	r30,0x40(r1)
000033d8	stw	r28,0x38(r1)
000033dc	or	r3,r27,r27
000033e0	li	r6,__mh_dylib_header
000033e4	li	r7,0x24
000033e8	li	r8,__mh_dylib_header
000033ec	li	r9,0x40
000033f0	bl	_PPCCheckFrameStyle
000033f4	cmpwi	cr7,r3,__mh_dylib_header
000033f8	beq	cr7,0x3438
000033fc	li	r11,__mh_dylib_header
00003400	li	r12,0x8
00003404	li	r25,__mh_dylib_header
00003408	li	r26,0x40
0000340c	li	r4,__mh_dylib_header
00003410	li	r5,0x24
00003414	li	r29,__mh_dylib_header
00003418	li	r30,0x20
0000341c	li	r19,__mh_dylib_header
00003420	li	r20,0x24
00003424	li	r23,__mh_dylib_header
00003428	li	r24,0x3c
0000342c	li	r21,__mh_dylib_header
00003430	li	r22,0x140
00003434	b	0x3600
00003438	lwz	r4,0x60(r1)
0000343c	lwz	r5,0x64(r1)
00003440	li	r25,__mh_dylib_header
00003444	li	r26,0x2c
00003448	li	r10,__mh_dylib_header
0000344c	or	r3,r27,r27
00003450	stw	r29,0x3c(r1)
00003454	stw	r30,0x40(r1)
00003458	stw	r25,0x44(r1)
0000345c	stw	r26,0x48(r1)
00003460	stw	r28,0x38(r1)
00003464	li	r6,__mh_dylib_header
00003468	li	r7,0x24
0000346c	li	r8,__mh_dylib_header
00003470	li	r9,0x40
00003474	bl	_PPCCheckFrameStyle
00003478	cmpwi	cr7,r3,__mh_dylib_header
0000347c	beq	cr7,0x348c
00003480	li	r11,__mh_dylib_header
00003484	li	r12,0x8
00003488	b	0x35d0
0000348c	lwz	r4,0x60(r1)
00003490	lwz	r5,0x64(r1)
00003494	li	r11,__mh_dylib_header
00003498	li	r12,__mh_dylib_header
0000349c	li	r10,__mh_dylib_header
000034a0	or	r3,r27,r27
000034a4	stw	r28,0x38(r1)
000034a8	stw	r25,0x44(r1)
000034ac	stw	r11,0x3c(r1)
000034b0	stw	r12,0x40(r1)
000034b4	stw	r26,0x48(r1)
000034b8	li	r6,__mh_dylib_header
000034bc	li	r7,0x24
000034c0	li	r8,__mh_dylib_header
000034c4	li	r9,0x40
000034c8	li	r28,0x16
000034cc	bl	_PPCCheckFrameStyle
000034d0	cmpwi	cr7,r3,__mh_dylib_header
000034d4	beq	cr7,0x3644
000034d8	b	0x35c8
000034dc	addc	r5,r24,r30
000034e0	adde	r4,r23,r29
000034e4	or	r3,r27,r27
000034e8	addi	r6,r1,0x70
000034ec	bl	_ReadAddr
000034f0	or.	r28,r3,r3
000034f4	bne	0x3644
000034f8	addc	r5,r20,r30
000034fc	adde	r4,r19,r29
00003500	or	r3,r27,r27
00003504	addi	r6,r1,0x78
00003508	bl	_ReadAddr
0000350c	or.	r28,r3,r3
00003510	bne	0x3644
00003514	addc	r5,r22,r30
00003518	adde	r4,r21,r29
0000351c	or	r3,r27,r27
00003520	addi	r6,r1,0x80
00003524	bl	_ReadAddr
00003528	or.	r28,r3,r3
0000352c	bne	0x3644
00003530	lwz	r2,0x68(r1)
00003534	lwz	r0,0x70(r1)
00003538	lwz	r3,0x6c(r1)
0000353c	cmpw	cr7,r0,r2
00003540	bne	cr7,0x3550
00003544	lwz	r0,0x74(r1)
00003548	cmpw	cr7,r0,r3
0000354c	beq+	cr7,0x3570
00003550	addis	r3,r31,0x1
00003554	addis	r4,r31,0x1
00003558	addis	r6,r31,0x1
0000355c	li	r5,0x5aa
00003560	addi	r3,r3,0xa2d0
00003564	addi	r4,r4,0xa2f0
00003568	addi	r6,r6,0xa728
0000356c	bl	___eprintf
00003570	lwz	r4,0x78(r1)
00003574	lwz	r5,0x7c(r1)
00003578	stw	r3,0x4(r17)
0000357c	stw	r2,__mh_dylib_header(r17)
00003580	or	r3,r27,r27
00003584	stw	r4,__mh_dylib_header(r18)
00003588	stw	r5,0x4(r18)
0000358c	bl	_PowerPCIsSystemCall
00003590	cmpwi	cr7,r3,__mh_dylib_header
00003594	beq	cr7,0x3644
00003598	lwz	r4,__mh_dylib_header(r18)
0000359c	lwz	r5,0x4(r18)
000035a0	or	r3,r27,r27
000035a4	li	r6,__mh_dylib_header
000035a8	li	r7,__mh_dylib_header
000035ac	li	r8,0x1
000035b0	bl	_AddFrame
000035b4	lwz	r2,0x80(r1)
000035b8	lwz	r3,0x84(r1)
000035bc	stw	r2,__mh_dylib_header(r18)
000035c0	stw	r3,0x4(r18)
000035c4	b	0x3644
000035c8	li	r11,__mh_dylib_header
000035cc	li	r12,__mh_dylib_header
000035d0	li	r25,__mh_dylib_header
000035d4	li	r26,0x40
000035d8	li	r4,__mh_dylib_header
000035dc	li	r5,0x24
000035e0	li	r29,__mh_dylib_header
000035e4	li	r30,0x20
000035e8	li	r19,__mh_dylib_header
000035ec	li	r20,0x20
000035f0	li	r23,__mh_dylib_header
000035f4	li	r24,0x2c
000035f8	li	r21,__mh_dylib_header
000035fc	li	r22,0xb0
00003600	lwz	r9,0x60(r1)
00003604	lwz	r10,0x64(r1)
00003608	or	r3,r27,r27
0000360c	addi	r6,r1,0x68
00003610	addc	r12,r12,r10
00003614	adde	r11,r11,r9
00003618	addic	r8,r12,0x70
0000361c	addze	r7,r11
00003620	addc	r10,r8,r26
00003624	adde	r9,r7,r25
00003628	addc	r5,r5,r8
0000362c	adde	r4,r4,r7
00003630	addc	r30,r30,r10
00003634	adde	r29,r29,r9
00003638	bl	_ReadAddr
0000363c	or.	r28,r3,r3
00003640	beq	0x34dc
00003644	addi	r1,r1,0xd0
00003648	or	r3,r28,r28
0000364c	lwz	r0,0x8(r1)
00003650	lmw	r17,0xffc4(r1)
00003654	mtspr	lr,r0
00003658	blr
_PowerPCHandleLeaf:
0000365c	mfspr	r0,lr
00003660	stmw	r22,0xffd8(r1)
00003664	or	r24,r3,r3
00003668	or	r22,r4,r4
0000366c	or	r23,r5,r5
00003670	stw	r0,0x8(r1)
00003674	stwu	r1,0xff90(r1)
00003678	lwz	r0,0x10(r3)
0000367c	cmpwi	cr7,r0,0x1
00003680	beq	cr7,0x3694
00003684	cmpwi	cr7,r0,0x5
00003688	li	r3,0x16
0000368c	bne	cr7,0x3720
00003690	b	0x36b4
00003694	lwz	r2,0x14(r3)
00003698	li	r29,__mh_dylib_header
0000369c	li	r25,__mh_dylib_header
000036a0	li	r27,__mh_dylib_header
000036a4	lwz	r30,__mh_dylib_header(r2)
000036a8	lwz	r26,0x90(r2)
000036ac	lwz	r28,0xc(r2)
000036b0	b	0x36d0
000036b4	lwz	r2,0x14(r24)
000036b8	lwz	r27,0x18(r2)
000036bc	lwz	r28,0x1c(r2)
000036c0	lwz	r29,__mh_dylib_header(r2)
000036c4	lwz	r30,0x4(r2)
000036c8	lwz	r25,0x11c(r2)
000036cc	lwz	r26,0x120(r2)
000036d0	or	r3,r24,r24
000036d4	or	r4,r29,r29
000036d8	or	r5,r30,r30
000036dc	bl	_PowerPCIsSystemCall
000036e0	cmpwi	cr7,r3,__mh_dylib_header
000036e4	beq	cr7,0x370c
000036e8	or	r4,r29,r29
000036ec	or	r5,r30,r30
000036f0	or	r3,r24,r24
000036f4	li	r6,__mh_dylib_header
000036f8	li	r7,__mh_dylib_header
000036fc	li	r8,0x1
00003700	or	r30,r26,r26
00003704	or	r29,r25,r25
00003708	bl	_AddFrame
0000370c	stw	r29,__mh_dylib_header(r22)
00003710	stw	r30,0x4(r22)
00003714	li	r3,__mh_dylib_header
00003718	stw	r27,__mh_dylib_header(r23)
0000371c	stw	r28,0x4(r23)
00003720	addi	r1,r1,0x70
00003724	lwz	r0,0x8(r1)
00003728	lmw	r22,0xffd8(r1)
0000372c	mtspr	lr,r0
00003730	blr
_QTMErrnoFromMachError:
00003734	mfspr	r0,lr
00003738	cmplwi	cr7,r3,0xf
0000373c	stw	r31,0xfffc(r1)
00003740	bcl	20,31,0x3744
00003744	mfspr	r31,lr
00003748	stw	r0,0x8(r1)
0000374c	stwu	r1,0xffb0(r1)
00003750	bgt	cr7,0x37e0
00003754	addis	r2,r31,__mh_dylib_header
00003758	rlwinm	r9,r3,2,0,29
0000375c	addi	r2,r2,0x2c
00003760	lwzx	r0,r9,r2
00003764	add	r0,r0,r2
00003768	mtspr	ctr,r0
0000376c	bctr
00003770	.long 0x00000050
00003774	.long 0x00000058
00003778	.long 0x00000060
0000377c	.long 0x00000068
00003780	.long 0x0000009c
00003784	.long 0x0000009c
00003788	.long 0x00000070
0000378c	.long 0x00000070
00003790	.long 0x00000070
00003794	.long 0x00000070
00003798	.long 0x00000070
0000379c	.long 0x00000070
000037a0	.long 0x00000070
000037a4	.long 0x00000040
000037a8	.long 0x00000070
000037ac	.long 0x00000048
000037b0	li	r0,0x11
000037b4	b	0x3810
000037b8	li	r0,0x9
000037bc	b	0x3810
000037c0	li	r0,__mh_dylib_header
000037c4	b	0x3810
000037c8	li	r0,0xe
000037cc	b	0x3810
000037d0	li	r0,0xd
000037d4	b	0x3810
000037d8	li	r0,0xc
000037dc	b	0x3810
000037e0	cmplwi	cr7,r3,0x66
000037e4	or	r0,r3,r3
000037e8	bgt	cr7,0x3810
000037ec	or	r5,r3,r3
000037f0	addis	r3,r31,0x1
000037f4	addis	r4,r31,0x1
000037f8	li	r6,0x16
000037fc	lwz	r3,0xb9c0(r3)
00003800	addi	r4,r4,0xa2ec
00003804	addi	r3,r3,0xb0
00003808	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000380c	li	r0,0x16
00003810	addi	r1,r1,0x50
00003814	or	r3,r0,r0
00003818	lwz	r0,0x8(r1)
0000381c	lwz	r31,0xfffc(r1)
00003820	mtspr	lr,r0
00003824	blr
_QTMFree:
00003828	mfspr	r0,lr
0000382c	cmpwi	cr7,r3,__mh_dylib_header
00003830	stw	r31,0xfffc(r1)
00003834	bcl	20,31,0x3838
00003838	mfspr	r31,lr
0000383c	stw	r0,0x8(r1)
00003840	stwu	r1,0xffb0(r1)
00003844	bne	cr7,0x38b0
00003848	cmpwi	cr7,r4,__mh_dylib_header
0000384c	bne+	cr7,0x3870
00003850	addis	r3,r31,0x1
00003854	addis	r4,r31,0x1
00003858	addis	r6,r31,0x1
0000385c	li	r5,0x16d
00003860	addi	r3,r3,0x9d78
00003864	addi	r4,r4,0xa258
00003868	addi	r6,r6,0x9f30
0000386c	b	0x38ac
00003870	addis	r2,r31,0x1
00003874	or	r5,r4,r4
00003878	li	r4,__mh_dylib_header
0000387c	lwz	r2,0xb8c8(r2)
00003880	lwz	r3,__mh_dylib_header(r2)
00003884	bl	0xd4e0	; symbol stub for: _vm_deallocate
00003888	cmpwi	cr7,r3,__mh_dylib_header
0000388c	beq+	cr7,0x38b0
00003890	addis	r3,r31,0x1
00003894	addis	r4,r31,0x1
00003898	addis	r6,r31,0x1
0000389c	li	r5,0x177
000038a0	addi	r3,r3,0x9d78
000038a4	addi	r4,r4,0xa258
000038a8	addi	r6,r6,0xa28c
000038ac	bl	___eprintf
000038b0	addi	r1,r1,0x50
000038b4	lwz	r0,0x8(r1)
000038b8	lwz	r31,0xfffc(r1)
000038bc	mtspr	lr,r0
000038c0	blr
_QTMGetDarwinOSRelease:
000038c4	mfspr	r0,lr
000038c8	stmw	r26,0xffe8(r1)
000038cc	or	r28,r3,r3
000038d0	bcl	20,31,0x38d4
000038d4	or	r27,r4,r4
000038d8	or	r26,r5,r5
000038dc	mfspr	r31,lr
000038e0	stw	r0,0x8(r1)
000038e4	stwu	r1,0xfaa0(r1)
000038e8	addis	r30,r31,0x1
000038ec	lwz	r0,0xb89c(r30)
000038f0	addi	r29,r30,0xb89c
000038f4	cmpwi	cr7,r0,__mh_dylib_header
000038f8	bne	cr7,0x394c
000038fc	addi	r3,r1,0x38
00003900	bl	0xd4c0	; symbol stub for: _uname
00003904	or.	r0,r3,r3
00003908	bge	0x3918
0000390c	bl	0xcf20	; symbol stub for: ___error
00003910	lwz	r0,__mh_dylib_header(r3)
00003914	cmpwi	r0,__mh_dylib_header
00003918	bne	0x3988
0000391c	addis	r4,r31,0x1
00003920	addis	r6,r31,0x1
00003924	addis	r7,r31,0x1
00003928	or	r5,r29,r29
0000392c	addi	r4,r4,0xa208
00003930	addi	r6,r6,0xb898
00003934	addi	r7,r7,0xb894
00003938	addi	r3,r1,0x238
0000393c	bl	0xd320	; symbol stub for: _sscanf$LDBL128
00003940	li	r0,0x16
00003944	cmpwi	cr7,r3,0x3
00003948	bne	cr7,0x3988
0000394c	cmpwi	cr7,r28,__mh_dylib_header
00003950	beq	cr7,0x395c
00003954	lwz	r0,0xb89c(r30)
00003958	stw	r0,__mh_dylib_header(r28)
0000395c	cmpwi	cr7,r27,__mh_dylib_header
00003960	beq	cr7,0x3970
00003964	addis	r2,r31,0x1
00003968	lwz	r2,0xb898(r2)
0000396c	stw	r2,__mh_dylib_header(r27)
00003970	cmpwi	cr7,r26,__mh_dylib_header
00003974	li	r0,__mh_dylib_header
00003978	beq	cr7,0x3988
0000397c	addis	r2,r31,0x1
00003980	lwz	r2,0xb894(r2)
00003984	stw	r2,__mh_dylib_header(r26)
00003988	addi	r1,r1,0x560
0000398c	or	r3,r0,r0
00003990	lwz	r0,0x8(r1)
00003994	lmw	r26,0xffe8(r1)
00003998	mtspr	lr,r0
0000399c	blr
_QTMTaskIsNative:
000039a0	mfspr	r0,lr
000039a4	cmpwi	cr7,r3,__mh_dylib_header
000039a8	stmw	r29,0xfff4(r1)
000039ac	bcl	20,31,0x39b0
000039b0	mfspr	r31,lr
000039b4	stw	r0,0x8(r1)
000039b8	stwu	r1,0xff70(r1)
000039bc	bne+	cr7,0x39e0
000039c0	addis	r3,r31,0x1
000039c4	addis	r4,r31,0x1
000039c8	addis	r6,r31,0x1
000039cc	li	r5,0x22b
000039d0	addi	r3,r3,0x9c00
000039d4	addi	r4,r4,0xa0e0
000039d8	addi	r6,r6,0x9cc4
000039dc	b	0x3a14
000039e0	li	r0,0xffff
000039e4	addi	r4,r1,0x38
000039e8	stw	r0,0x38(r1)
000039ec	bl	0xd220	; symbol stub for: _pid_for_task
000039f0	cmpwi	r3,__mh_dylib_header
000039f4	beq+	0x3a18
000039f8	addis	r3,r31,0x1
000039fc	addis	r4,r31,0x1
00003a00	addis	r6,r31,0x1
00003a04	li	r5,0x22f
00003a08	addi	r3,r3,0x9c00
00003a0c	addi	r4,r4,0xa0e0
00003a10	addi	r6,r6,0xa138
00003a14	bl	___eprintf
00003a18	lwz	r30,0x38(r1)
00003a1c	li	r0,0x4
00003a20	stw	r3,0x3c(r1)
00003a24	stw	r0,0x40(r1)
00003a28	cmpwi	cr7,r30,__mh_dylib_header
00003a2c	bne	cr7,0x3a50
00003a30	addis	r3,r31,0x1
00003a34	addi	r4,r1,0x3c
00003a38	addi	r5,r1,0x40
00003a3c	li	r6,__mh_dylib_header
00003a40	li	r7,__mh_dylib_header
00003a44	addi	r3,r3,0xa14c
00003a48	bl	0xd400	; symbol stub for: _sysctlbyname
00003a4c	b	0x3aac
00003a50	addi	r29,r1,0x48
00003a54	addis	r3,r31,0x1
00003a58	li	r0,0xc
00003a5c	addi	r5,r1,0x44
00003a60	addi	r3,r3,0xa14c
00003a64	or	r4,r29,r29
00003a68	stw	r0,0x44(r1)
00003a6c	bl	0xd420	; symbol stub for: _sysctlnametomib
00003a70	cmpwi	cr7,r3,0xffff
00003a74	beq	cr7,0x3abc
00003a78	lwz	r2,0x44(r1)
00003a7c	or	r3,r29,r29
00003a80	addi	r5,r1,0x3c
00003a84	addi	r6,r1,0x40
00003a88	li	r7,__mh_dylib_header
00003a8c	li	r8,__mh_dylib_header
00003a90	addi	r0,r2,0x1
00003a94	rlwinm	r2,r2,2,0,29
00003a98	add	r9,r1,r2
00003a9c	or	r4,r0,r0
00003aa0	stw	r0,0x44(r1)
00003aa4	stw	r30,0x48(r9)
00003aa8	bl	0xd3e0	; symbol stub for: _sysctl
00003aac	cmpwi	cr7,r3,0xffff
00003ab0	beq	cr7,0x3abc
00003ab4	lwz	r2,0x3c(r1)
00003ab8	b	0x3ad4
00003abc	bl	0xcf20	; symbol stub for: ___error
00003ac0	li	r2,0x1
00003ac4	lwz	r0,__mh_dylib_header(r3)
00003ac8	cmpwi	cr7,r0,0x2
00003acc	beq	cr7,0x3ad4
00003ad0	li	r2,0xffff
00003ad4	addi	r1,r1,0x90
00003ad8	addic	r0,r2,0xffff
00003adc	subfe	r3,r0,r2
00003ae0	lwz	r0,0x8(r1)
00003ae4	lmw	r29,0xfff4(r1)
00003ae8	mtspr	lr,r0
00003aec	blr
_QTMRead:
00003af0	mfspr	r0,lr
00003af4	cmpwi	cr7,r3,__mh_dylib_header
00003af8	stmw	r30,0xfff8(r1)
00003afc	bcl	20,31,0x3b00
00003b00	or	r30,r6,r6
00003b04	or	r6,r7,r7
00003b08	mfspr	r31,lr
00003b0c	stw	r0,0x8(r1)
00003b10	stwu	r1,0xffa0(r1)
00003b14	bne+	cr7,0x3b38
00003b18	addis	r3,r31,0x1
00003b1c	addis	r4,r31,0x1
00003b20	addis	r6,r31,0x1
00003b24	li	r5,0xde
00003b28	addi	r3,r3,0x9ab0
00003b2c	addi	r4,r4,0x9f90
00003b30	addi	r6,r6,0x9b74
00003b34	b	0x3b5c
00003b38	cmpwi	cr7,r30,__mh_dylib_header
00003b3c	bne+	cr7,0x3b60
00003b40	addis	r3,r31,0x1
00003b44	addis	r4,r31,0x1
00003b48	addis	r6,r31,0x1
00003b4c	li	r5,0xdf
00003b50	addi	r3,r3,0x9ab0
00003b54	addi	r4,r4,0x9f90
00003b58	addi	r6,r6,0x9c68
00003b5c	bl	___eprintf
00003b60	cmpwi	cr7,r7,__mh_dylib_header
00003b64	bne+	cr7,0x3b88
00003b68	addis	r3,r31,0x1
00003b6c	addis	r4,r31,0x1
00003b70	addis	r6,r31,0x1
00003b74	li	r5,0xe0
00003b78	addi	r3,r3,0x9ab0
00003b7c	addi	r4,r4,0x9f90
00003b80	addi	r6,r6,0xa010
00003b84	b	0x3b5c
00003b88	or	r4,r5,r5
00003b8c	addi	r7,r1,0x38
00003b90	or	r5,r30,r30
00003b94	bl	0xd520	; symbol stub for: _vm_read_overwrite
00003b98	cmplwi	cr7,r3,0xf
00003b9c	bgt	cr7,0x3c24
00003ba0	addis	r2,r31,__mh_dylib_header
00003ba4	rlwinm	r9,r3,2,0,29
00003ba8	addi	r2,r2,0xbc
00003bac	lwzx	r0,r9,r2
00003bb0	add	r0,r0,r2
00003bb4	mtspr	ctr,r0
00003bb8	bctr
00003bbc	.long 0x00000040
00003bc0	.long 0x00000050
00003bc4	.long 0x00000058
00003bc8	.long 0x00000060
00003bcc	.long 0x000000d0
00003bd0	.long 0x000000d0
00003bd4	.long 0x00000068
00003bd8	.long 0x00000068
00003bdc	.long 0x00000068
00003be0	.long 0x00000068
00003be4	.long 0x00000068
00003be8	.long 0x00000068
00003bec	.long 0x00000068
00003bf0	.long 0x000000c8
00003bf4	.long 0x00000068
00003bf8	.long 0x00000048
00003bfc	li	r3,__mh_dylib_header
00003c00	b	0x3c58
00003c04	li	r3,0x9
00003c08	b	0x3c90
00003c0c	li	r3,0xe
00003c10	b	0x3c90
00003c14	li	r3,0xd
00003c18	b	0x3c90
00003c1c	li	r3,0xc
00003c20	b	0x3c90
00003c24	cmplwi	cr7,r3,0x66
00003c28	bgt	cr7,0x3c50
00003c2c	or	r5,r3,r3
00003c30	addis	r3,r31,0x1
00003c34	addis	r4,r31,0x1
00003c38	li	r6,0x16
00003c3c	lwz	r3,0xb604(r3)
00003c40	addi	r4,r4,0x9f30
00003c44	addi	r3,r3,0xb0
00003c48	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00003c4c	b	0x3c8c
00003c50	cmpwi	cr7,r3,__mh_dylib_header
00003c54	bne	cr7,0x3c90
00003c58	lwz	r0,0x38(r1)
00003c5c	cmpw	cr7,r30,r0
00003c60	beq	cr7,0x3c90
00003c64	addis	r3,r31,0x1
00003c68	addis	r4,r31,0x1
00003c6c	addis	r6,r31,0x1
00003c70	li	r5,0xf3
00003c74	addi	r3,r3,0x9ab0
00003c78	addi	r4,r4,0x9f90
00003c7c	addi	r6,r6,0xa024
00003c80	b	0x3b5c
00003c84	li	r3,0x11
00003c88	b	0x3c90
00003c8c	li	r3,0x16
00003c90	addi	r1,r1,0x60
00003c94	lwz	r0,0x8(r1)
00003c98	lmw	r30,0xfff8(r1)
00003c9c	mtspr	lr,r0
00003ca0	blr
_QTMReadAllocated:
00003ca4	mfspr	r0,lr
00003ca8	cmpwi	cr7,r3,__mh_dylib_header
00003cac	stmw	r29,0xfff4(r1)
00003cb0	bcl	20,31,0x3cb4
00003cb4	or	r30,r6,r6
00003cb8	or	r29,r7,r7
00003cbc	mfspr	r31,lr
00003cc0	stw	r0,0x8(r1)
00003cc4	stwu	r1,0xffa0(r1)
00003cc8	bne+	cr7,0x3cec
00003ccc	addis	r3,r31,0x1
00003cd0	addis	r4,r31,0x1
00003cd4	addis	r6,r31,0x1
00003cd8	li	r5,0x101
00003cdc	addi	r3,r3,0x98fc
00003ce0	addi	r4,r4,0x9ddc
00003ce4	addi	r6,r6,0x99c0
00003ce8	b	0x3d10
00003cec	cmpwi	cr7,r6,__mh_dylib_header
00003cf0	bne+	cr7,0x3d14
00003cf4	addis	r3,r31,0x1
00003cf8	addis	r4,r31,0x1
00003cfc	addis	r6,r31,0x1
00003d00	li	r5,0x102
00003d04	addi	r3,r3,0x98fc
00003d08	addi	r4,r4,0x9ddc
00003d0c	addi	r6,r6,0x9ab4
00003d10	bl	___eprintf
00003d14	cmpwi	cr7,r7,__mh_dylib_header
00003d18	bne+	cr7,0x3d3c
00003d1c	addis	r3,r31,0x1
00003d20	addis	r4,r31,0x1
00003d24	addis	r6,r31,0x1
00003d28	li	r5,0x103
00003d2c	addi	r3,r3,0x98fc
00003d30	addi	r4,r4,0x9ddc
00003d34	addi	r6,r6,0x9e94
00003d38	b	0x3d10
00003d3c	lwz	r0,__mh_dylib_header(r7)
00003d40	cmpwi	cr7,r0,__mh_dylib_header
00003d44	beq+	cr7,0x3d68
00003d48	addis	r3,r31,0x1
00003d4c	addis	r4,r31,0x1
00003d50	addis	r6,r31,0x1
00003d54	li	r5,0x104
00003d58	addi	r3,r3,0x98fc
00003d5c	addi	r4,r4,0x9ddc
00003d60	addi	r6,r6,0x9ea4
00003d64	b	0x3d10
00003d68	or	r4,r5,r5
00003d6c	addi	r7,r1,0x3c
00003d70	or	r5,r6,r6
00003d74	addi	r6,r1,0x38
00003d78	bl	0xd500	; symbol stub for: _vm_read
00003d7c	cmplwi	cr7,r3,0xf
00003d80	bgt	cr7,0x3e08
00003d84	addis	r2,r31,__mh_dylib_header
00003d88	rlwinm	r9,r3,2,0,29
00003d8c	addi	r2,r2,0xec
00003d90	lwzx	r0,r9,r2
00003d94	add	r0,r0,r2
00003d98	mtspr	ctr,r0
00003d9c	bctr
00003da0	.long 0x00000040
00003da4	.long 0x00000050
00003da8	.long 0x00000058
00003dac	.long 0x00000060
00003db0	.long 0x0000011c
00003db4	.long 0x0000011c
00003db8	.long 0x00000068
00003dbc	.long 0x00000068
00003dc0	.long 0x00000068
00003dc4	.long 0x00000068
00003dc8	.long 0x00000068
00003dcc	.long 0x00000068
00003dd0	.long 0x00000068
00003dd4	.long 0x00000114
00003dd8	.long 0x00000068
00003ddc	.long 0x00000048
00003de0	li	r3,__mh_dylib_header
00003de4	b	0x3e3c
00003de8	li	r3,0x9
00003dec	b	0x3e68
00003df0	li	r3,0xe
00003df4	b	0x3e68
00003df8	li	r3,0xd
00003dfc	b	0x3e68
00003e00	li	r3,0xc
00003e04	b	0x3e68
00003e08	cmplwi	cr7,r3,0x66
00003e0c	bgt	cr7,0x3e34
00003e10	or	r5,r3,r3
00003e14	addis	r3,r31,0x1
00003e18	addis	r4,r31,0x1
00003e1c	li	r6,0x16
00003e20	lwz	r3,0xb450(r3)
00003e24	addi	r4,r4,0x9d7c
00003e28	addi	r3,r3,0xb0
00003e2c	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00003e30	b	0x3ebc
00003e34	cmpwi	cr7,r3,__mh_dylib_header
00003e38	bne	cr7,0x3e68
00003e3c	lwz	r0,0x3c(r1)
00003e40	cmpw	cr7,r30,r0
00003e44	beq	cr7,0x3e68
00003e48	addis	r3,r31,0x1
00003e4c	addis	r4,r31,0x1
00003e50	addis	r6,r31,0x1
00003e54	li	r5,0x115
00003e58	addi	r3,r3,0x98fc
00003e5c	addi	r4,r4,0x9ddc
00003e60	addi	r6,r6,0x9e70
00003e64	b	0x3d10
00003e68	cmpwi	cr7,r3,__mh_dylib_header
00003e6c	bne	cr7,0x3e78
00003e70	lwz	r0,0x38(r1)
00003e74	stw	r0,__mh_dylib_header(r29)
00003e78	mfcr	r9
00003e7c	rlwinm	r9,r9,31,31,31
00003e80	lwz	r0,__mh_dylib_header(r29)
00003e84	addic	r11,r0,0xffff
00003e88	subfe	r2,r11,r0
00003e8c	cmpw	cr7,r9,r2
00003e90	beq+	cr7,0x3ec4
00003e94	addis	r3,r31,0x1
00003e98	addis	r4,r31,0x1
00003e9c	addis	r6,r31,0x1
00003ea0	li	r5,0x121
00003ea4	addi	r3,r3,0x98fc
00003ea8	addi	r4,r4,0x9ddc
00003eac	addi	r6,r6,0x9ed8
00003eb0	b	0x3d10
00003eb4	li	r3,0x11
00003eb8	b	0x3e68
00003ebc	li	r3,0x16
00003ec0	b	0x3e68
00003ec4	addi	r1,r1,0x60
00003ec8	lwz	r0,0x8(r1)
00003ecc	lmw	r29,0xfff4(r1)
00003ed0	mtspr	lr,r0
00003ed4	blr
_QTMRemap:
00003ed8	mfspr	r0,lr
00003edc	cmpwi	r3,__mh_dylib_header
00003ee0	stmw	r30,0xfff8(r1)
00003ee4	bcl	20,31,0x3ee8
00003ee8	or	r10,r5,r5
00003eec	or	r30,r7,r7
00003ef0	mfspr	r31,lr
00003ef4	stw	r0,0x8(r1)
00003ef8	or	r5,r6,r6
00003efc	stwu	r1,0xff90(r1)
00003f00	bne+	0x3f24
00003f04	addis	r3,r31,0x1
00003f08	addis	r4,r31,0x1
00003f0c	addis	r6,r31,0x1
00003f10	li	r5,0x12e
00003f14	addi	r3,r3,0x96c8
00003f18	addi	r4,r4,0x9ba8
00003f1c	addi	r6,r6,0x978c
00003f20	b	0x3f48
00003f24	cmpwi	cr7,r6,__mh_dylib_header
00003f28	bne+	cr7,0x3f4c
00003f2c	addis	r3,r31,0x1
00003f30	addis	r4,r31,0x1
00003f34	addis	r6,r31,0x1
00003f38	li	r5,0x12f
00003f3c	addi	r3,r3,0x96c8
00003f40	addi	r4,r4,0x9ba8
00003f44	addi	r6,r6,0x9880
00003f48	bl	___eprintf
00003f4c	cmpwi	cr7,r7,__mh_dylib_header
00003f50	bne+	cr7,0x3f74
00003f54	addis	r3,r31,0x1
00003f58	addis	r4,r31,0x1
00003f5c	addis	r6,r31,0x1
00003f60	li	r5,0x130
00003f64	addi	r3,r3,0x96c8
00003f68	addi	r4,r4,0x9ba8
00003f6c	addi	r6,r6,0x9c60
00003f70	b	0x3f48
00003f74	lwz	r0,__mh_dylib_header(r7)
00003f78	cmpwi	cr7,r0,__mh_dylib_header
00003f7c	beq+	cr7,0x3fa0
00003f80	addis	r3,r31,0x1
00003f84	addis	r4,r31,0x1
00003f88	addis	r6,r31,0x1
00003f8c	li	r5,0x131
00003f90	addi	r3,r3,0x96c8
00003f94	addi	r4,r4,0x9ba8
00003f98	addi	r6,r6,0x9c70
00003f9c	b	0x3f48
00003fa0	addis	r2,r31,0x1
00003fa4	or	r8,r3,r3
00003fa8	stw	r0,0x50(r1)
00003fac	addi	r0,r1,0x48
00003fb0	lwz	r2,0xb218(r2)
00003fb4	or	r9,r10,r10
00003fb8	addi	r4,r1,0x50
00003fbc	li	r6,__mh_dylib_header
00003fc0	li	r7,0x1
00003fc4	li	r10,0x1
00003fc8	lwz	r3,__mh_dylib_header(r2)
00003fcc	stw	r0,0x38(r1)
00003fd0	addi	r2,r1,0x4c
00003fd4	li	r0,0x2
00003fd8	stw	r2,0x3c(r1)
00003fdc	stw	r0,0x40(r1)
00003fe0	bl	0xd560	; symbol stub for: _vm_remap
00003fe4	cmplwi	cr7,r3,0xf
00003fe8	bgt	cr7,0x4070
00003fec	addis	r2,r31,__mh_dylib_header
00003ff0	rlwinm	r9,r3,2,0,29
00003ff4	addi	r2,r2,0x120
00003ff8	lwzx	r0,r9,r2
00003ffc	add	r0,r0,r2
00004000	mtspr	ctr,r0
00004004	bctr
00004008	.long 0x00000040
0000400c	.long 0x00000050
00004010	.long 0x00000058
00004014	.long 0x00000060
00004018	.long 0x000000b0
0000401c	.long 0x000000b0
00004020	.long 0x00000068
00004024	.long 0x00000068
00004028	.long 0x00000068
0000402c	.long 0x00000068
00004030	.long 0x00000068
00004034	.long 0x00000068
00004038	.long 0x00000068
0000403c	.long 0x000000a8
00004040	.long 0x00000068
00004044	.long 0x00000048
00004048	li	r3,__mh_dylib_header
0000404c	b	0x40a4
00004050	li	r3,0x9
00004054	b	0x40bc
00004058	li	r3,0xe
0000405c	b	0x40bc
00004060	li	r3,0xd
00004064	b	0x40bc
00004068	li	r3,0xc
0000406c	b	0x40bc
00004070	cmplwi	cr7,r3,0x66
00004074	bgt	cr7,0x409c
00004078	or	r5,r3,r3
0000407c	addis	r3,r31,0x1
00004080	addis	r4,r31,0x1
00004084	li	r6,0x16
00004088	lwz	r3,0xb21c(r3)
0000408c	addi	r4,r4,0x9b48
00004090	addi	r3,r3,0xb0
00004094	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00004098	b	0x40b8
0000409c	cmpwi	cr7,r3,__mh_dylib_header
000040a0	bne	cr7,0x40bc
000040a4	lwz	r0,0x50(r1)
000040a8	stw	r0,__mh_dylib_header(r30)
000040ac	b	0x40bc
000040b0	li	r3,0x11
000040b4	b	0x40bc
000040b8	li	r3,0x16
000040bc	addi	r1,r1,0x70
000040c0	lwz	r0,0x8(r1)
000040c4	lmw	r30,0xfff8(r1)
000040c8	mtspr	lr,r0
000040cc	blr
_QSymDestroy:
000040d0	mfspr	r0,lr
000040d4	stmw	r29,0xfff4(r1)
000040d8	or.	r29,r3,r3
000040dc	bcl	20,31,0x40e0
000040e0	mfspr	r31,lr
000040e4	stw	r0,0x8(r1)
000040e8	stwu	r1,0xffb0(r1)
000040ec	beq	0x417c
000040f0	lwz	r3,0xc(r29)
000040f4	li	r30,__mh_dylib_header
000040f8	cmpwi	cr7,r3,__mh_dylib_header
000040fc	bne	cr7,0x4118
00004100	b	0x4128
00004104	rlwinm	r2,r30,2,0,29
00004108	addi	r30,r30,0x1
0000410c	lwzx	r3,r2,r3
00004110	bl	_QMOImageDestroy
00004114	lwz	r3,0xc(r29)
00004118	lwz	r0,0x8(r29)
0000411c	cmplw	cr7,r30,r0
00004120	blt	cr7,0x4104
00004124	bl	0xd0c0	; symbol stub for: _free
00004128	lwz	r0,0x4(r29)
0000412c	cmpwi	cr7,r0,__mh_dylib_header
00004130	beq	cr7,0x4164
00004134	lwz	r3,__mh_dylib_header(r29)
00004138	bl	0xd440	; symbol stub for: _task_resume
0000413c	cmpwi	cr7,r3,__mh_dylib_header
00004140	beq+	cr7,0x4164
00004144	addis	r3,r31,0x1
00004148	addis	r4,r31,0x1
0000414c	addis	r6,r31,0x1
00004150	li	r5,0x101
00004154	addi	r3,r3,0x94d0
00004158	addi	r4,r4,0x9af0
0000415c	addi	r6,r6,0x9b24
00004160	bl	___eprintf
00004164	addi	r1,r1,0x50
00004168	or	r3,r29,r29
0000416c	lwz	r0,0x8(r1)
00004170	lmw	r29,0xfff4(r1)
00004174	mtspr	lr,r0
00004178	b	0xd0c0	; symbol stub for: _free
0000417c	addi	r1,r1,0x50
00004180	lwz	r0,0x8(r1)
00004184	lmw	r29,0xfff4(r1)
00004188	mtspr	lr,r0
0000418c	blr
_QSymCreateFromTask:
00004190	mfspr	r0,lr
00004194	stmw	r25,0xffe4(r1)
00004198	or	r29,r4,r4
0000419c	mfcr	r2
000041a0	bcl	20,31,0x41a4
000041a4	or.	r28,r3,r3
000041a8	stw	r0,0x8(r1)
000041ac	or	r25,r5,r5
000041b0	mfspr	r31,lr
000041b4	or	r26,r6,r6
000041b8	stw	r2,0x4(r1)
000041bc	stwu	r1,0xffa0(r1)
000041c0	bne+	0x41e4
000041c4	addis	r3,r31,0x1
000041c8	addis	r4,r31,0x1
000041cc	addis	r6,r31,0x1
000041d0	li	r5,0x114
000041d4	addi	r3,r3,0x940c
000041d8	addi	r4,r4,0x9a2c
000041dc	addi	r6,r6,0x94d0
000041e0	b	0x4208
000041e4	cmpwi	cr7,r6,__mh_dylib_header
000041e8	bne+	cr7,0x420c
000041ec	addis	r3,r31,0x1
000041f0	addis	r4,r31,0x1
000041f4	addis	r6,r31,0x1
000041f8	li	r5,0x115
000041fc	addi	r3,r3,0x940c
00004200	addi	r4,r4,0x9a2c
00004204	addi	r6,r6,0x9a78
00004208	bl	___eprintf
0000420c	lwz	r0,__mh_dylib_header(r6)
00004210	cmpwi	cr7,r0,__mh_dylib_header
00004214	beq+	cr7,0x4238
00004218	addis	r3,r31,0x1
0000421c	addis	r4,r31,0x1
00004220	addis	r6,r31,0x1
00004224	li	r5,0x116
00004228	addi	r3,r3,0x940c
0000422c	addi	r4,r4,0x9a2c
00004230	addi	r6,r6,0x9a8c
00004234	b	0x4208
00004238	addis	r2,r31,0x1
0000423c	lwz	r2,0xaf5c(r2)
00004240	lwz	r0,__mh_dylib_header(r2)
00004244	cmpw	cr7,r28,r0
00004248	bne	cr7,0x4254
0000424c	cmpwi	cr7,r4,__mh_dylib_header
00004250	bne	cr7,0x43fc
00004254	li	r3,0x1
00004258	li	r4,0x18
0000425c	bl	0xcfe0	; symbol stub for: _calloc
00004260	or.	r30,r3,r3
00004264	beq	0x43ac
00004268	cmpwi	cr7,r29,__mh_dylib_header
0000426c	li	r0,0xffff
00004270	stw	r28,__mh_dylib_header(r30)
00004274	stw	r0,0x14(r30)
00004278	stw	r0,0x10(r30)
0000427c	beq	cr7,0x42a8
00004280	or	r3,r28,r28
00004284	bl	0xd460	; symbol stub for: _task_suspend
00004288	bl	_QTMErrnoFromMachError
0000428c	cmpwi	cr4,r3,__mh_dylib_header
00004290	or	r29,r3,r3
00004294	mfcr	r0
00004298	rlwinm	r0,r0,19,31,31
0000429c	cmpwi	cr7,r0,__mh_dylib_header
000042a0	stw	r0,0x4(r30)
000042a4	beq	cr7,0x43b4
000042a8	addi	r27,r30,0x8
000042ac	or	r3,r28,r28
000042b0	or	r4,r25,r25
000042b4	li	r5,__mh_dylib_header
000042b8	li	r6,__mh_dylib_header
000042bc	or	r7,r27,r27
000042c0	bl	_QMOImageListFromTask
000042c4	cmpwi	cr4,r3,__mh_dylib_header
000042c8	or	r29,r3,r3
000042cc	bne	cr4,0x43b4
000042d0	lwz	r3,0x8(r30)
000042d4	li	r4,0x4
000042d8	bl	0xcfe0	; symbol stub for: _calloc
000042dc	cmpwi	cr7,r3,__mh_dylib_header
000042e0	or	r5,r3,r3
000042e4	stw	r3,0xc(r30)
000042e8	beq	cr7,0x43ac
000042ec	lwz	r6,0x8(r30)
000042f0	or	r3,r28,r28
000042f4	or	r4,r25,r25
000042f8	or	r7,r27,r27
000042fc	bl	_QMOImageListFromTask
00004300	cmpwi	cr4,r3,__mh_dylib_header
00004304	or	r29,r3,r3
00004308	bne	cr4,0x43b4
0000430c	li	r29,__mh_dylib_header
00004310	addis	r28,r31,0x1
00004314	addis	r27,r31,0x1
00004318	b	0x4394
0000431c	lwz	r2,0xc(r30)
00004320	rlwinm	r9,r29,2,0,29
00004324	lwzx	r3,r9,r2
00004328	bl	_QMOImageGetFileType
0000432c	cmpwi	cr7,r3,0x2
00004330	beq	cr7,0x4340
00004334	cmpwi	cr7,r3,0x7
00004338	bne	cr7,0x4390
0000433c	b	0x4368
00004340	lwz	r0,0x10(r30)
00004344	cmpwi	cr7,r0,0xffff
00004348	beq+	cr7,0x4364
0000434c	addis	r6,r31,0x1
00004350	addi	r3,r28,0x940c
00004354	addi	r4,r27,0x9a2c
00004358	li	r5,0x148
0000435c	addi	r6,r6,0x9aa0
00004360	b	0x4208
00004364	stw	r29,0x10(r30)
00004368	lwz	r0,0x14(r30)
0000436c	cmpwi	cr7,r0,0xffff
00004370	beq+	cr7,0x438c
00004374	addis	r6,r31,0x1
00004378	addi	r3,r28,0x940c
0000437c	addi	r4,r27,0x9a2c
00004380	li	r5,0x14b
00004384	addi	r6,r6,0x9ac8
00004388	b	0x4208
0000438c	stw	r29,0x14(r30)
00004390	addi	r29,r29,0x1
00004394	lwz	r0,0x8(r30)
00004398	cmplw	cr7,r29,r0
0000439c	blt	cr7,0x431c
000043a0	li	r29,__mh_dylib_header
000043a4	cmpwi	cr4,r29,__mh_dylib_header
000043a8	b	0x43c0
000043ac	li	r29,0xc
000043b0	cmpwi	cr4,r29,__mh_dylib_header
000043b4	or	r3,r30,r30
000043b8	li	r30,__mh_dylib_header
000043bc	bl	_QSymDestroy
000043c0	mfcr	r2
000043c4	rlwinm	r2,r2,19,31,31
000043c8	addic	r9,r30,0xffff
000043cc	subfe	r0,r9,r30
000043d0	stw	r30,__mh_dylib_header(r26)
000043d4	cmpw	cr7,r2,r0
000043d8	beq+	cr7,0x4408
000043dc	addis	r3,r31,0x1
000043e0	addis	r4,r31,0x1
000043e4	addis	r6,r31,0x1
000043e8	li	r5,0x15d
000043ec	addi	r3,r3,0x940c
000043f0	addi	r4,r4,0x9a2c
000043f4	addi	r6,r6,0x9af0
000043f8	b	0x4208
000043fc	li	r29,0x16
00004400	li	r30,__mh_dylib_header
00004404	b	0x43b0
00004408	addi	r1,r1,0x60
0000440c	or	r3,r29,r29
00004410	lwz	r0,0x8(r1)
00004414	lwz	r11,0x4(r1)
00004418	lmw	r25,0xffe4(r1)
0000441c	mtspr	lr,r0
00004420	mtocrf	0x08,r11
00004424	blr
_QSymCreateFromSelf:
00004428	mfspr	r0,lr
0000442c	stmw	r28,0xfff0(r1)
00004430	or	r28,r3,r3
00004434	bcl	20,31,0x4438
00004438	mfspr	r31,lr
0000443c	stw	r0,0x8(r1)
00004440	stwu	r1,0xffb0(r1)
00004444	addis	r2,r31,0x1
00004448	lwz	r2,0xacc8(r2)
0000444c	lwz	r29,__mh_dylib_header(r2)
00004450	bl	_QMOGetLocalCPUType
00004454	addi	r1,r1,0x50
00004458	or	r6,r28,r28
0000445c	or	r5,r3,r3
00004460	li	r4,__mh_dylib_header
00004464	lwz	r0,0x8(r1)
00004468	or	r3,r29,r29
0000446c	lmw	r28,0xfff0(r1)
00004470	mtspr	lr,r0
00004474	b	_QSymCreateFromTask
_SymbolToAddressCallback:
00004478	mfspr	r0,lr
0000447c	stmw	r24,0xffe0(r1)
00004480	or.	r26,r3,r3
00004484	bcl	20,31,0x4488
00004488	or	r29,r4,r4
0000448c	or	r30,r5,r5
00004490	mfspr	r31,lr
00004494	stw	r0,0x8(r1)
00004498	or	r25,r9,r9
0000449c	or	r24,r8,r8
000044a0	stwu	r1,0xffa0(r1)
000044a4	or	r28,r10,r10
000044a8	nop
000044ac	lwz	r27,0x98(r1)
000044b0	bne+	0x44d4
000044b4	addis	r3,r31,0x1
000044b8	addis	r4,r31,0x1
000044bc	addis	r6,r31,0x1
000044c0	li	r5,0x1bd
000044c4	addi	r3,r3,0x9128
000044c8	addi	r4,r4,0x9748
000044cc	addi	r6,r6,0x917c
000044d0	b	0x44f8
000044d4	cmpwi	cr7,r4,__mh_dylib_header
000044d8	bne+	cr7,0x44fc
000044dc	addis	r3,r31,0x1
000044e0	addis	r4,r31,0x1
000044e4	addis	r6,r31,0x1
000044e8	li	r5,0x1be
000044ec	addi	r3,r3,0x9128
000044f0	addi	r4,r4,0x9748
000044f4	addi	r6,r6,0x9830
000044f8	bl	___eprintf
000044fc	cmpwi	cr7,r27,__mh_dylib_header
00004500	bne+	cr7,0x4524
00004504	addis	r3,r31,0x1
00004508	addis	r4,r31,0x1
0000450c	addis	r6,r31,0x1
00004510	li	r5,0x1bf
00004514	addi	r3,r3,0x9128
00004518	addi	r4,r4,0x9748
0000451c	addi	r6,r6,0x9840
00004520	b	0x44f8
00004524	lwz	r0,__mh_dylib_header(r27)
00004528	cmpwi	cr7,r0,__mh_dylib_header
0000452c	beq+	cr7,0x4550
00004530	addis	r3,r31,0x1
00004534	addis	r4,r31,0x1
00004538	addis	r6,r31,0x1
0000453c	li	r5,0x1c0
00004540	addi	r3,r3,0x9128
00004544	addi	r4,r4,0x9748
00004548	addi	r6,r6,0x9850
0000454c	b	0x44f8
00004550	andi.	r0,r5,0xe0
00004554	bne	0x45e8
00004558	lwz	r4,0x8(r10)
0000455c	or	r3,r29,r29
00004560	bl	0xd340	; symbol stub for: _strcmp
00004564	cmpwi	cr7,r3,__mh_dylib_header
00004568	bne	cr7,0x45e8
0000456c	rlwinm	r0,r30,0,28,30
00004570	cmpwi	cr7,r0,0x2
00004574	beq	cr7,0x4584
00004578	cmpwi	cr7,r0,0xe
0000457c	bne	cr7,0x45e8
00004580	b	0x45ac
00004584	andi.	r0,r30,0x1
00004588	stw	r24,0xc(r28)
0000458c	stw	r25,0x10(r28)
00004590	stw	r26,0x4(r28)
00004594	stw	r29,0x8(r28)
00004598	mfcr	r2
0000459c	rlwinm	r2,r2,3,31,31
000045a0	addi	r2,r2,0x1
000045a4	stw	r2,__mh_dylib_header(r28)
000045a8	b	0x45e0
000045ac	andi.	r0,r30,0x1
000045b0	stw	r29,0x8(r28)
000045b4	or	r3,r26,r26
000045b8	stw	r26,0x4(r28)
000045bc	mfcr	r2
000045c0	rlwinm	r2,r2,3,31,31
000045c4	addi	r2,r2,0x1
000045c8	stw	r2,__mh_dylib_header(r28)
000045cc	bl	_QMOImageGetSlide
000045d0	addc	r10,r4,r25
000045d4	adde	r9,r3,r24
000045d8	stw	r9,0xc(r28)
000045dc	stw	r10,0x10(r28)
000045e0	li	r0,0x1
000045e4	stw	r0,__mh_dylib_header(r27)
000045e8	addi	r1,r1,0x60
000045ec	li	r3,__mh_dylib_header
000045f0	lwz	r0,0x8(r1)
000045f4	lmw	r24,0xffe0(r1)
000045f8	mtspr	lr,r0
000045fc	blr
_QSymCreateLibraryNameWithSuffix:
00004600	mfspr	r0,lr
00004604	stmw	r28,0xfff0(r1)
00004608	or.	r29,r3,r3
0000460c	bcl	20,31,0x4610
00004610	or	r28,r4,r4
00004614	mfspr	r31,lr
00004618	stw	r0,0x8(r1)
0000461c	stwu	r1,0xffa0(r1)
00004620	bne+	0x4644
00004624	addis	r3,r31,0x1
00004628	addis	r4,r31,0x1
0000462c	addis	r6,r31,0x1
00004630	li	r5,0x1f4
00004634	addi	r3,r3,0x8fa0
00004638	addi	r4,r4,0x95c0
0000463c	addi	r6,r6,0x96dc
00004640	b	0x4668
00004644	cmpwi	cr7,r4,__mh_dylib_header
00004648	bne+	cr7,0x466c
0000464c	addis	r3,r31,0x1
00004650	addis	r4,r31,0x1
00004654	addis	r6,r31,0x1
00004658	li	r5,0x1f5
0000465c	addi	r3,r3,0x8fa0
00004660	addi	r4,r4,0x95c0
00004664	addi	r6,r6,0x96f0
00004668	bl	___eprintf
0000466c	li	r4,0x2f
00004670	bl	0xd3c0	; symbol stub for: _strrchr
00004674	or	r0,r29,r29
00004678	cmpwi	r3,__mh_dylib_header
0000467c	beq	0x4684
00004680	addi	r0,r3,0x1
00004684	or	r3,r0,r0
00004688	li	r4,0x2e
0000468c	bl	0xd3c0	; symbol stub for: _strrchr
00004690	or	r30,r3,r3
00004694	or	r3,r29,r29
00004698	bl	0xd3a0	; symbol stub for: _strlen
0000469c	cmpwi	cr7,r30,__mh_dylib_header
000046a0	bne	cr7,0x46b0
000046a4	addis	r2,r31,0x1
000046a8	addi	r8,r2,0x9700
000046ac	b	0x46b8
000046b0	or	r8,r30,r30
000046b4	subf	r3,r29,r30
000046b8	addis	r4,r31,0x1
000046bc	li	r0,__mh_dylib_header
000046c0	or	r5,r3,r3
000046c4	or	r6,r29,r29
000046c8	or	r7,r28,r28
000046cc	addi	r3,r1,0x38
000046d0	stw	r0,0x38(r1)
000046d4	addi	r4,r4,0x9704
000046d8	bl	0xcfc0	; symbol stub for: _asprintf$LDBL128
000046dc	lwz	r3,0x38(r1)
000046e0	addi	r1,r1,0x60
000046e4	lwz	r0,0x8(r1)
000046e8	lmw	r28,0xfff0(r1)
000046ec	mtspr	lr,r0
000046f0	blr
_AddressToSymbolCallback:
000046f4	mfspr	r0,lr
000046f8	stmw	r26,0xffe8(r1)
000046fc	cmpwi	cr7,r3,__mh_dylib_header
00004700	bcl	20,31,0x4704
00004704	or	r26,r4,r4
00004708	or	r28,r5,r5
0000470c	mfspr	r31,lr
00004710	stw	r0,0x8(r1)
00004714	or	r30,r9,r9
00004718	or	r29,r8,r8
0000471c	stwu	r1,0xffa0(r1)
00004720	or	r27,r10,r10
00004724	nop
00004728	lwz	r2,0x98(r1)
0000472c	bne+	cr7,0x4750
00004730	addis	r3,r31,0x1
00004734	addis	r4,r31,0x1
00004738	addis	r6,r31,0x1
0000473c	li	r5,0x2fb
00004740	addi	r3,r3,0x8eac
00004744	addi	r4,r4,0x94cc
00004748	addi	r6,r6,0x8f00
0000474c	b	0x4774
00004750	cmpwi	cr7,r4,__mh_dylib_header
00004754	bne+	cr7,0x4778
00004758	addis	r3,r31,0x1
0000475c	addis	r4,r31,0x1
00004760	addis	r6,r31,0x1
00004764	li	r5,0x2fc
00004768	addi	r3,r3,0x8eac
0000476c	addi	r4,r4,0x94cc
00004770	addi	r6,r6,0x95b4
00004774	bl	___eprintf
00004778	cmpwi	cr7,r2,__mh_dylib_header
0000477c	bne+	cr7,0x47a0
00004780	addis	r3,r31,0x1
00004784	addis	r4,r31,0x1
00004788	addis	r6,r31,0x1
0000478c	li	r5,0x2fd
00004790	addi	r3,r3,0x8eac
00004794	addi	r4,r4,0x94cc
00004798	addi	r6,r6,0x95c4
0000479c	b	0x4774
000047a0	lwz	r0,__mh_dylib_header(r2)
000047a4	cmpwi	cr7,r0,__mh_dylib_header
000047a8	beq+	cr7,0x47cc
000047ac	addis	r3,r31,0x1
000047b0	addis	r4,r31,0x1
000047b4	addis	r6,r31,0x1
000047b8	li	r5,0x2fe
000047bc	addi	r3,r3,0x8eac
000047c0	addi	r4,r4,0x94cc
000047c4	addi	r6,r6,0x95d4
000047c8	b	0x4774
000047cc	andi.	r0,r5,0xe0
000047d0	bne	0x4858
000047d4	rlwinm	r0,r5,0,28,30
000047d8	cmpwi	cr7,r0,0xe
000047dc	bne	cr7,0x4858
000047e0	lbz	r0,0x8(r10)
000047e4	cmpw	cr7,r0,r6
000047e8	bne	cr7,0x4858
000047ec	bl	_QMOImageGetSlide
000047f0	lwz	r11,__mh_dylib_header(r27)
000047f4	lwz	r12,0x4(r27)
000047f8	addc	r4,r4,r30
000047fc	adde	r3,r3,r29
00004800	cmplw	cr7,r3,r11
00004804	subfc	r10,r4,r12
00004808	subfe	r9,r3,r11
0000480c	bgt	cr7,0x4858
00004810	cmpw	cr7,r3,r11
00004814	bne	cr7,0x4820
00004818	cmplw	cr7,r4,r12
0000481c	bgt	cr7,0x4858
00004820	lwz	r0,0x1c(r27)
00004824	cmplw	cr7,r0,r9
00004828	bgt	cr7,0x4840
0000482c	cmpw	cr7,r0,r9
00004830	bne	cr7,0x4858
00004834	lwz	r0,0x20(r27)
00004838	cmplw	cr7,r0,r10
0000483c	ble	cr7,0x4858
00004840	stw	r26,0xc(r27)
00004844	stb	r28,0x10(r27)
00004848	stw	r9,0x1c(r27)
0000484c	stw	r10,0x20(r27)
00004850	stw	r3,0x14(r27)
00004854	stw	r4,0x18(r27)
00004858	addi	r1,r1,0x60
0000485c	li	r3,__mh_dylib_header
00004860	lwz	r0,0x8(r1)
00004864	lmw	r26,0xffe8(r1)
00004868	mtspr	lr,r0
0000486c	blr
_NextSymbolCallback:
00004870	mfspr	r0,lr
00004874	stmw	r26,0xffe8(r1)
00004878	cmpwi	cr7,r3,__mh_dylib_header
0000487c	bcl	20,31,0x4880
00004880	or	r26,r4,r4
00004884	or	r28,r5,r5
00004888	mfspr	r31,lr
0000488c	stw	r0,0x8(r1)
00004890	or	r30,r9,r9
00004894	or	r29,r8,r8
00004898	stwu	r1,0xffa0(r1)
0000489c	or	r27,r10,r10
000048a0	nop
000048a4	lwz	r2,0x98(r1)
000048a8	bne+	cr7,0x48cc
000048ac	addis	r3,r31,0x1
000048b0	addis	r4,r31,0x1
000048b4	addis	r6,r31,0x1
000048b8	li	r5,0x39a
000048bc	addi	r3,r3,0x8d30
000048c0	addi	r4,r4,0x9350
000048c4	addi	r6,r6,0x8d84
000048c8	b	0x48f0
000048cc	cmpwi	cr7,r4,__mh_dylib_header
000048d0	bne+	cr7,0x48f4
000048d4	addis	r3,r31,0x1
000048d8	addis	r4,r31,0x1
000048dc	addis	r6,r31,0x1
000048e0	li	r5,0x39b
000048e4	addi	r3,r3,0x8d30
000048e8	addi	r4,r4,0x9350
000048ec	addi	r6,r6,0x9438
000048f0	bl	___eprintf
000048f4	cmpwi	cr7,r2,__mh_dylib_header
000048f8	bne+	cr7,0x491c
000048fc	addis	r3,r31,0x1
00004900	addis	r4,r31,0x1
00004904	addis	r6,r31,0x1
00004908	li	r5,0x39c
0000490c	addi	r3,r3,0x8d30
00004910	addi	r4,r4,0x9350
00004914	addi	r6,r6,0x9448
00004918	b	0x48f0
0000491c	lwz	r0,__mh_dylib_header(r2)
00004920	cmpwi	cr7,r0,__mh_dylib_header
00004924	beq+	cr7,0x4948
00004928	addis	r3,r31,0x1
0000492c	addis	r4,r31,0x1
00004930	addis	r6,r31,0x1
00004934	li	r5,0x39d
00004938	addi	r3,r3,0x8d30
0000493c	addi	r4,r4,0x9350
00004940	addi	r6,r6,0x9458
00004944	b	0x48f0
00004948	andi.	r0,r5,0xe0
0000494c	bne	0x49c8
00004950	rlwinm	r0,r5,0,28,30
00004954	cmpwi	cr7,r0,0xe
00004958	bne	cr7,0x49c8
0000495c	bl	_QMOImageGetSlide
00004960	lwz	r11,__mh_dylib_header(r27)
00004964	lwz	r12,0x4(r27)
00004968	addc	r4,r4,r30
0000496c	adde	r3,r3,r29
00004970	cmplw	cr7,r3,r11
00004974	subfc	r10,r12,r4
00004978	subfe	r9,r11,r3
0000497c	bgt	cr7,0x4990
00004980	cmpw	cr7,r3,r11
00004984	bne	cr7,0x49c8
00004988	cmplw	cr7,r4,r12
0000498c	ble	cr7,0x49c8
00004990	lwz	r0,0x18(r27)
00004994	cmplw	cr7,r0,r9
00004998	bgt	cr7,0x49b0
0000499c	cmpw	cr7,r0,r9
000049a0	bne	cr7,0x49c8
000049a4	lwz	r0,0x1c(r27)
000049a8	cmplw	cr7,r0,r10
000049ac	ble	cr7,0x49c8
000049b0	stw	r26,0x8(r27)
000049b4	stb	r28,0xc(r27)
000049b8	stw	r9,0x18(r27)
000049bc	stw	r10,0x1c(r27)
000049c0	stw	r3,0x10(r27)
000049c4	stw	r4,0x14(r27)
000049c8	addi	r1,r1,0x60
000049cc	li	r3,__mh_dylib_header
000049d0	lwz	r0,0x8(r1)
000049d4	lmw	r26,0xffe8(r1)
000049d8	mtspr	lr,r0
000049dc	blr
_QSymGetNextSymbol:
000049e0	mfspr	r0,lr
000049e4	cmpwi	r3,__mh_dylib_header
000049e8	stmw	r29,0xfff4(r1)
000049ec	bcl	20,31,0x49f0
000049f0	or	r30,r4,r4
000049f4	or	r29,r5,r5
000049f8	mfspr	r31,lr
000049fc	stw	r0,0x8(r1)
00004a00	stwu	r1,0xff90(r1)
00004a04	beq	0x4a50
00004a08	lwz	r2,0x8(r3)
00004a0c	cmpwi	cr7,r2,__mh_dylib_header
00004a10	beq	cr7,0x4a50
00004a14	lwz	r0,0xc(r3)
00004a18	cmpwi	cr7,r0,__mh_dylib_header
00004a1c	beq	cr7,0x4a50
00004a20	lwz	r0,0x10(r3)
00004a24	cmpwi	cr7,r0,0xffff
00004a28	beq	cr7,0x4a34
00004a2c	cmplw	cr7,r2,r0
00004a30	ble	cr7,0x4a50
00004a34	lwz	r0,0x14(r3)
00004a38	cmpwi	cr7,r0,0xffff
00004a3c	beq	cr7,0x4a48
00004a40	cmplw	cr7,r2,r0
00004a44	ble	cr7,0x4a50
00004a48	li	r0,0x1
00004a4c	b	0x4a54
00004a50	li	r0,__mh_dylib_header
00004a54	cmpwi	cr7,r0,__mh_dylib_header
00004a58	or	r10,r0,r0
00004a5c	beq	cr7,0x4aa8
00004a60	lwz	r2,0x8(r3)
00004a64	li	r10,0x1
00004a68	li	r11,__mh_dylib_header
00004a6c	cmpwi	cr7,r2,__mh_dylib_header
00004a70	addi	r2,r2,0x1
00004a74	mtspr	ctr,r2
00004a78	bne+	cr7,0x4aa4
00004a7c	li	r0,0x1
00004a80	mtspr	ctr,r0
00004a84	b	0x4aa4
00004a88	lwz	r9,0xc(r3)
00004a8c	rlwinm	r2,r11,2,0,29
00004a90	lwzx	r0,r2,r9
00004a94	cmpwi	cr7,r0,__mh_dylib_header
00004a98	bne	cr7,0x4aa0
00004a9c	li	r10,__mh_dylib_header
00004aa0	addi	r11,r11,0x1
00004aa4	bdnz	0x4a88
00004aa8	cmpwi	cr7,r10,__mh_dylib_header
00004aac	bne+	cr7,0x4ad0
00004ab0	addis	r3,r31,0x1
00004ab4	addis	r4,r31,0x1
00004ab8	addis	r6,r31,0x1
00004abc	li	r5,0x3c8
00004ac0	addi	r3,r3,0x8bc0
00004ac4	addi	r4,r4,0x91e0
00004ac8	addi	r6,r6,0x9330
00004acc	b	0x4af8
00004ad0	lwz	r0,__mh_dylib_header(r30)
00004ad4	cmpwi	cr7,r0,__mh_dylib_header
00004ad8	bne+	cr7,0x4afc
00004adc	addis	r3,r31,0x1
00004ae0	addis	r4,r31,0x1
00004ae4	addis	r6,r31,0x1
00004ae8	li	r5,0x3c9
00004aec	addi	r3,r3,0x8bc0
00004af0	addi	r4,r4,0x91e0
00004af4	addi	r6,r6,0x9344
00004af8	bl	___eprintf
00004afc	lwz	r3,0x4(r30)
00004b00	cmpwi	cr7,r3,__mh_dylib_header
00004b04	bne+	cr7,0x4b28
00004b08	addis	r3,r31,0x1
00004b0c	addis	r4,r31,0x1
00004b10	addis	r6,r31,0x1
00004b14	li	r5,0x3ca
00004b18	addi	r3,r3,0x8bc0
00004b1c	addi	r4,r4,0x91e0
00004b20	addi	r6,r6,0x9368
00004b24	b	0x4af8
00004b28	lwz	r0,0x8(r30)
00004b2c	cmpwi	cr7,r0,__mh_dylib_header
00004b30	bne+	cr7,0x4b54
00004b34	addis	r3,r31,0x1
00004b38	addis	r4,r31,0x1
00004b3c	addis	r6,r31,0x1
00004b40	li	r5,0x3cb
00004b44	addi	r3,r3,0x8bc0
00004b48	addi	r4,r4,0x91e0
00004b4c	addi	r6,r6,0x9384
00004b50	b	0x4af8
00004b54	lwz	r7,0xc(r30)
00004b58	lwz	r8,0x10(r30)
00004b5c	addis	r4,r31,__mh_dylib_header
00004b60	li	r6,__mh_dylib_header
00004b64	li	r9,__mh_dylib_header
00004b68	li	r10,__mh_dylib_header
00004b6c	li	r11,0xffff
00004b70	li	r12,0xffff
00004b74	stb	r6,0x44(r1)
00004b78	stw	r6,0x40(r1)
00004b7c	stw	r9,0x48(r1)
00004b80	stw	r10,0x4c(r1)
00004b84	stw	r11,0x50(r1)
00004b88	stw	r12,0x54(r1)
00004b8c	stw	r7,0x38(r1)
00004b90	stw	r8,0x3c(r1)
00004b94	addi	r4,r4,0xfe80
00004b98	addi	r5,r1,0x38
00004b9c	bl	_QMOImageIterateSymbols
00004ba0	cmpwi	cr7,r3,__mh_dylib_header
00004ba4	bne	cr7,0x4c08
00004ba8	lwz	r6,0x40(r1)
00004bac	cmpwi	cr7,r6,__mh_dylib_header
00004bb0	bne	cr7,0x4bc0
00004bb4	li	r3,0x3
00004bb8	cmpwi	cr7,r3,__mh_dylib_header
00004bbc	b	0x4c08
00004bc0	lbz	r0,0x44(r1)
00004bc4	lwz	r2,0x4(r30)
00004bc8	cmpwi	cr7,r3,__mh_dylib_header
00004bcc	lwz	r9,0x48(r1)
00004bd0	lwz	r10,0x4c(r1)
00004bd4	lwz	r11,0x50(r1)
00004bd8	lwz	r12,0x54(r1)
00004bdc	stw	r6,0x8(r29)
00004be0	andi.	r8,r0,0x1
00004be4	stw	r2,0x4(r29)
00004be8	stw	r9,0xc(r29)
00004bec	stw	r10,0x10(r29)
00004bf0	stw	r11,0x14(r29)
00004bf4	stw	r12,0x18(r29)
00004bf8	mfcr	r2
00004bfc	rlwinm	r2,r2,3,31,31
00004c00	addi	r2,r2,0x1
00004c04	stw	r2,__mh_dylib_header(r29)
00004c08	mfcr	r9
00004c0c	rlwinm	r9,r9,31,31,31
00004c10	lwz	r0,__mh_dylib_header(r29)
00004c14	addic	r11,r0,0xffff
00004c18	subfe	r2,r11,r0
00004c1c	cmpw	cr7,r9,r2
00004c20	beq+	cr7,0x4c44
00004c24	addis	r3,r31,0x1
00004c28	addis	r4,r31,0x1
00004c2c	addis	r6,r31,0x1
00004c30	li	r5,0x3e5
00004c34	addi	r3,r3,0x8bc0
00004c38	addi	r4,r4,0x91e0
00004c3c	addi	r6,r6,0x93a0
00004c40	b	0x4af8
00004c44	addi	r1,r1,0x70
00004c48	lwz	r0,0x8(r1)
00004c4c	lmw	r29,0xfff4(r1)
00004c50	mtspr	lr,r0
00004c54	blr
_QSymGetDyldImage:
00004c58	mfspr	r0,lr
00004c5c	cmpwi	r3,__mh_dylib_header
00004c60	stw	r31,0xfffc(r1)
00004c64	bcl	20,31,0x4c68
00004c68	mfspr	r31,lr
00004c6c	stw	r0,0x8(r1)
00004c70	stwu	r1,0xffb0(r1)
00004c74	beq	0x4cc0
00004c78	lwz	r2,0x8(r3)
00004c7c	cmpwi	cr7,r2,__mh_dylib_header
00004c80	beq	cr7,0x4cc0
00004c84	lwz	r0,0xc(r3)
00004c88	cmpwi	cr7,r0,__mh_dylib_header
00004c8c	beq	cr7,0x4cc0
00004c90	lwz	r0,0x10(r3)
00004c94	cmpwi	cr7,r0,0xffff
00004c98	beq	cr7,0x4ca4
00004c9c	cmplw	cr7,r2,r0
00004ca0	ble	cr7,0x4cc0
00004ca4	lwz	r0,0x14(r3)
00004ca8	cmpwi	cr7,r0,0xffff
00004cac	beq	cr7,0x4cb8
00004cb0	cmplw	cr7,r2,r0
00004cb4	ble	cr7,0x4cc0
00004cb8	li	r0,0x1
00004cbc	b	0x4cc4
00004cc0	li	r0,__mh_dylib_header
00004cc4	cmpwi	cr7,r0,__mh_dylib_header
00004cc8	or	r10,r0,r0
00004ccc	beq	cr7,0x4d18
00004cd0	lwz	r2,0x8(r3)
00004cd4	li	r10,0x1
00004cd8	li	r11,__mh_dylib_header
00004cdc	cmpwi	cr7,r2,__mh_dylib_header
00004ce0	addi	r2,r2,0x1
00004ce4	mtspr	ctr,r2
00004ce8	bne+	cr7,0x4d14
00004cec	li	r0,0x1
00004cf0	mtspr	ctr,r0
00004cf4	b	0x4d14
00004cf8	lwz	r9,0xc(r3)
00004cfc	rlwinm	r2,r11,2,0,29
00004d00	lwzx	r0,r2,r9
00004d04	cmpwi	cr7,r0,__mh_dylib_header
00004d08	bne	cr7,0x4d10
00004d0c	li	r10,__mh_dylib_header
00004d10	addi	r11,r11,0x1
00004d14	bdnz	0x4cf8
00004d18	cmpwi	cr7,r10,__mh_dylib_header
00004d1c	bne+	cr7,0x4d40
00004d20	addis	r3,r31,0x1
00004d24	addis	r4,r31,0x1
00004d28	addis	r6,r31,0x1
00004d2c	li	r5,0x17b
00004d30	addi	r3,r3,0x8948
00004d34	addi	r4,r4,0x8f68
00004d38	addi	r6,r6,0x90b8
00004d3c	bl	___eprintf
00004d40	lwz	r2,0x14(r3)
00004d44	li	r0,__mh_dylib_header
00004d48	cmpwi	cr7,r2,0xffff
00004d4c	beq	cr7,0x4d5c
00004d50	lwz	r9,0xc(r3)
00004d54	rlwinm	r2,r2,2,0,29
00004d58	lwzx	r0,r2,r9
00004d5c	addi	r1,r1,0x50
00004d60	or	r3,r0,r0
00004d64	lwz	r0,0x8(r1)
00004d68	lwz	r31,0xfffc(r1)
00004d6c	mtspr	lr,r0
00004d70	blr
_QSymGetExecutableImage:
00004d74	mfspr	r0,lr
00004d78	cmpwi	r3,__mh_dylib_header
00004d7c	stw	r31,0xfffc(r1)
00004d80	bcl	20,31,0x4d84
00004d84	mfspr	r31,lr
00004d88	stw	r0,0x8(r1)
00004d8c	stwu	r1,0xffb0(r1)
00004d90	beq	0x4ddc
00004d94	lwz	r2,0x8(r3)
00004d98	cmpwi	cr7,r2,__mh_dylib_header
00004d9c	beq	cr7,0x4ddc
00004da0	lwz	r0,0xc(r3)
00004da4	cmpwi	cr7,r0,__mh_dylib_header
00004da8	beq	cr7,0x4ddc
00004dac	lwz	r0,0x10(r3)
00004db0	cmpwi	cr7,r0,0xffff
00004db4	beq	cr7,0x4dc0
00004db8	cmplw	cr7,r2,r0
00004dbc	ble	cr7,0x4ddc
00004dc0	lwz	r0,0x14(r3)
00004dc4	cmpwi	cr7,r0,0xffff
00004dc8	beq	cr7,0x4dd4
00004dcc	cmplw	cr7,r2,r0
00004dd0	ble	cr7,0x4ddc
00004dd4	li	r0,0x1
00004dd8	b	0x4de0
00004ddc	li	r0,__mh_dylib_header
00004de0	cmpwi	cr7,r0,__mh_dylib_header
00004de4	or	r10,r0,r0
00004de8	beq	cr7,0x4e34
00004dec	lwz	r2,0x8(r3)
00004df0	li	r10,0x1
00004df4	li	r11,__mh_dylib_header
00004df8	cmpwi	cr7,r2,__mh_dylib_header
00004dfc	addi	r2,r2,0x1
00004e00	mtspr	ctr,r2
00004e04	bne+	cr7,0x4e30
00004e08	li	r0,0x1
00004e0c	mtspr	ctr,r0
00004e10	b	0x4e30
00004e14	lwz	r9,0xc(r3)
00004e18	rlwinm	r2,r11,2,0,29
00004e1c	lwzx	r0,r2,r9
00004e20	cmpwi	cr7,r0,__mh_dylib_header
00004e24	bne	cr7,0x4e2c
00004e28	li	r10,__mh_dylib_header
00004e2c	addi	r11,r11,0x1
00004e30	bdnz	0x4e14
00004e34	cmpwi	cr7,r10,__mh_dylib_header
00004e38	bne+	cr7,0x4e5c
00004e3c	addis	r3,r31,0x1
00004e40	addis	r4,r31,0x1
00004e44	addis	r6,r31,0x1
00004e48	li	r5,0x189
00004e4c	addi	r3,r3,0x882c
00004e50	addi	r4,r4,0x8e4c
00004e54	addi	r6,r6,0x8f9c
00004e58	bl	___eprintf
00004e5c	lwz	r2,0x10(r3)
00004e60	li	r0,__mh_dylib_header
00004e64	cmpwi	cr7,r2,0xffff
00004e68	beq	cr7,0x4e78
00004e6c	lwz	r9,0xc(r3)
00004e70	rlwinm	r2,r2,2,0,29
00004e74	lwzx	r0,r2,r9
00004e78	addi	r1,r1,0x50
00004e7c	or	r3,r0,r0
00004e80	lwz	r0,0x8(r1)
00004e84	lwz	r31,0xfffc(r1)
00004e88	mtspr	lr,r0
00004e8c	blr
_QSymGetImages:
00004e90	mfspr	r0,lr
00004e94	cmpwi	r3,__mh_dylib_header
00004e98	stw	r31,0xfffc(r1)
00004e9c	bcl	20,31,0x4ea0
00004ea0	mfspr	r31,lr
00004ea4	stw	r0,0x8(r1)
00004ea8	stwu	r1,0xffb0(r1)
00004eac	beq	0x4ef8
00004eb0	lwz	r2,0x8(r3)
00004eb4	cmpwi	cr7,r2,__mh_dylib_header
00004eb8	beq	cr7,0x4ef8
00004ebc	lwz	r0,0xc(r3)
00004ec0	cmpwi	cr7,r0,__mh_dylib_header
00004ec4	beq	cr7,0x4ef8
00004ec8	lwz	r0,0x10(r3)
00004ecc	cmpwi	cr7,r0,0xffff
00004ed0	beq	cr7,0x4edc
00004ed4	cmplw	cr7,r2,r0
00004ed8	ble	cr7,0x4ef8
00004edc	lwz	r0,0x14(r3)
00004ee0	cmpwi	cr7,r0,0xffff
00004ee4	beq	cr7,0x4ef0
00004ee8	cmplw	cr7,r2,r0
00004eec	ble	cr7,0x4ef8
00004ef0	li	r0,0x1
00004ef4	b	0x4efc
00004ef8	li	r0,__mh_dylib_header
00004efc	cmpwi	cr7,r0,__mh_dylib_header
00004f00	or	r10,r0,r0
00004f04	beq	cr7,0x4f50
00004f08	lwz	r2,0x8(r3)
00004f0c	li	r10,0x1
00004f10	li	r11,__mh_dylib_header
00004f14	cmpwi	cr7,r2,__mh_dylib_header
00004f18	addi	r2,r2,0x1
00004f1c	mtspr	ctr,r2
00004f20	bne+	cr7,0x4f4c
00004f24	li	r0,0x1
00004f28	mtspr	ctr,r0
00004f2c	b	0x4f4c
00004f30	lwz	r9,0xc(r3)
00004f34	rlwinm	r2,r11,2,0,29
00004f38	lwzx	r0,r2,r9
00004f3c	cmpwi	cr7,r0,__mh_dylib_header
00004f40	bne	cr7,0x4f48
00004f44	li	r10,__mh_dylib_header
00004f48	addi	r11,r11,0x1
00004f4c	bdnz	0x4f30
00004f50	cmpwi	cr7,r10,__mh_dylib_header
00004f54	bne+	cr7,0x4f78
00004f58	addis	r3,r31,0x1
00004f5c	addis	r4,r31,0x1
00004f60	addis	r6,r31,0x1
00004f64	li	r5,0x199
00004f68	addi	r3,r3,0x8710
00004f6c	addi	r4,r4,0x8d30
00004f70	addi	r6,r6,0x8e80
00004f74	b	0x4f9c
00004f78	cmpwi	cr7,r4,__mh_dylib_header
00004f7c	bne+	cr7,0x4fa0
00004f80	addis	r3,r31,0x1
00004f84	addis	r4,r31,0x1
00004f88	addis	r6,r31,0x1
00004f8c	li	r5,0x19a
00004f90	addi	r3,r3,0x8710
00004f94	addi	r4,r4,0x8d30
00004f98	addi	r6,r6,0x8f28
00004f9c	bl	___eprintf
00004fa0	cmpwi	cr7,r5,__mh_dylib_header
00004fa4	bne+	cr7,0x4fc8
00004fa8	addis	r3,r31,0x1
00004fac	addis	r4,r31,0x1
00004fb0	addis	r6,r31,0x1
00004fb4	li	r5,0x19b
00004fb8	addi	r3,r3,0x8710
00004fbc	addi	r4,r4,0x8d30
00004fc0	addi	r6,r6,0x8f40
00004fc4	b	0x4f9c
00004fc8	lwz	r0,0xc(r3)
00004fcc	addi	r1,r1,0x50
00004fd0	stw	r0,__mh_dylib_header(r4)
00004fd4	lwz	r2,0x8(r3)
00004fd8	stw	r2,__mh_dylib_header(r5)
00004fdc	lwz	r0,0x8(r1)
00004fe0	lwz	r31,0xfffc(r1)
00004fe4	mtspr	lr,r0
00004fe8	blr
_QSymGetAddressForSymbol:
00004fec	mfspr	r0,lr
00004ff0	stmw	r20,0xffd0(r1)
00004ff4	or.	r29,r3,r3
00004ff8	bcl	20,31,0x4ffc
00004ffc	or	r21,r4,r4
00005000	or	r20,r5,r5
00005004	mfspr	r31,lr
00005008	stw	r0,0x8(r1)
0000500c	or	r24,r6,r6
00005010	stwu	r1,0xff90(r1)
00005014	beq	0x5060
00005018	lwz	r2,0x8(r29)
0000501c	cmpwi	cr7,r2,__mh_dylib_header
00005020	beq	cr7,0x5060
00005024	lwz	r0,0xc(r29)
00005028	cmpwi	cr7,r0,__mh_dylib_header
0000502c	beq	cr7,0x5060
00005030	lwz	r0,0x10(r29)
00005034	cmpwi	cr7,r0,0xffff
00005038	beq	cr7,0x5044
0000503c	cmplw	cr7,r2,r0
00005040	ble	cr7,0x5060
00005044	lwz	r0,0x14(r29)
00005048	cmpwi	cr7,r0,0xffff
0000504c	beq	cr7,0x5058
00005050	cmplw	cr7,r2,r0
00005054	ble	cr7,0x5060
00005058	li	r0,0x1
0000505c	b	0x5064
00005060	li	r0,__mh_dylib_header
00005064	cmpwi	cr7,r0,__mh_dylib_header
00005068	or	r10,r0,r0
0000506c	beq	cr7,0x50b8
00005070	lwz	r2,0x8(r29)
00005074	li	r10,0x1
00005078	li	r11,__mh_dylib_header
0000507c	cmpwi	cr7,r2,__mh_dylib_header
00005080	addi	r2,r2,0x1
00005084	mtspr	ctr,r2
00005088	bne+	cr7,0x50b4
0000508c	li	r0,0x1
00005090	mtspr	ctr,r0
00005094	b	0x50b4
00005098	lwz	r9,0xc(r29)
0000509c	rlwinm	r2,r11,2,0,29
000050a0	lwzx	r0,r2,r9
000050a4	cmpwi	cr7,r0,__mh_dylib_header
000050a8	bne	cr7,0x50b0
000050ac	li	r10,__mh_dylib_header
000050b0	addi	r11,r11,0x1
000050b4	bdnz	0x5098
000050b8	cmpwi	cr7,r10,__mh_dylib_header
000050bc	bne+	cr7,0x50e0
000050c0	addis	r3,r31,0x1
000050c4	addis	r4,r31,0x1
000050c8	addis	r6,r31,0x1
000050cc	li	r5,0x21e
000050d0	addi	r3,r3,0x85b4
000050d4	addi	r4,r4,0x8bd4
000050d8	addi	r6,r6,0x8d24
000050dc	b	0x5104
000050e0	cmpwi	cr7,r20,__mh_dylib_header
000050e4	bne+	cr7,0x5108
000050e8	addis	r3,r31,0x1
000050ec	addis	r4,r31,0x1
000050f0	addis	r6,r31,0x1
000050f4	li	r5,0x220
000050f8	addi	r3,r3,0x85b4
000050fc	addi	r4,r4,0x8bd4
00005100	addi	r6,r6,0x8e10
00005104	bl	___eprintf
00005108	cmpwi	cr7,r24,__mh_dylib_header
0000510c	bne+	cr7,0x5130
00005110	addis	r3,r31,0x1
00005114	addis	r4,r31,0x1
00005118	addis	r6,r31,0x1
0000511c	li	r5,0x221
00005120	addi	r3,r3,0x85b4
00005124	addi	r4,r4,0x8bd4
00005128	addi	r6,r6,0x8e24
0000512c	b	0x5104
00005130	cmpwi	cr7,r21,__mh_dylib_header
00005134	lwz	r23,0x8(r29)
00005138	li	r22,__mh_dylib_header
0000513c	beq	cr7,0x5200
00005140	addis	r2,r31,0x1
00005144	li	r27,__mh_dylib_header
00005148	addi	r25,r2,0xa008
0000514c	lwz	r4,__mh_dylib_header(r25)
00005150	or	r3,r21,r21
00005154	or	r26,r25,r25
00005158	bl	_QSymCreateLibraryNameWithSuffix
0000515c	or.	r28,r3,r3
00005160	bne	0x516c
00005164	li	r27,0xc
00005168	b	0x51d4
0000516c	cmpwi	r27,__mh_dylib_header
00005170	li	r30,__mh_dylib_header
00005174	beq	0x51a8
00005178	b	0x51d4
0000517c	lwz	r2,0xc(r29)
00005180	rlwinm	r9,r30,2,0,29
00005184	lwzx	r3,r9,r2
00005188	bl	_QMOImageGetLibraryID
0000518c	cmpwi	cr7,r3,__mh_dylib_header
00005190	beq	cr7,0x51a4
00005194	or	r4,r28,r28
00005198	bl	0xd340	; symbol stub for: _strcmp
0000519c	cmpwi	cr7,r3,__mh_dylib_header
000051a0	beq	cr7,0x51b8
000051a4	addi	r30,r30,0x1
000051a8	lwz	r0,0x8(r29)
000051ac	cmplw	cr7,r30,r0
000051b0	blt	cr7,0x517c
000051b4	b	0x51bc
000051b8	lwz	r0,0x8(r29)
000051bc	cmpw	cr7,r30,r0
000051c0	li	r27,0x3
000051c4	beq	cr7,0x51d4
000051c8	or	r22,r30,r30
000051cc	addi	r23,r30,0x1
000051d0	li	r27,__mh_dylib_header
000051d4	or	r3,r28,r28
000051d8	bl	0xd0c0	; symbol stub for: _free
000051dc	cmpwi	cr7,r27,0x3
000051e0	bne	cr7,0x51f8
000051e4	lwz	r0,0x4(r26)
000051e8	addi	r25,r25,0x4
000051ec	cmpwi	cr7,r0,__mh_dylib_header
000051f0	bne	cr7,0x514c
000051f4	b	0x5278
000051f8	cmpwi	r27,__mh_dylib_header
000051fc	bne	0x527c
00005200	li	r2,__mh_dylib_header
00005204	or	r28,r22,r22
00005208	stw	r20,0x8(r24)
0000520c	rlwinm	r30,r22,2,0,29
00005210	addis	r26,r31,__mh_dylib_header
00005214	stw	r2,__mh_dylib_header(r24)
00005218	stw	r2,0x4(r24)
0000521c	stw	r2,0xc(r24)
00005220	stw	r2,0x10(r24)
00005224	stw	r2,0x14(r24)
00005228	stw	r2,0x18(r24)
0000522c	b	0x5260
00005230	lwz	r2,0xc(r29)
00005234	addi	r4,r26,0xf47c
00005238	or	r5,r24,r24
0000523c	lwzx	r3,r2,r30
00005240	bl	_QMOImageIterateSymbols
00005244	or.	r27,r3,r3
00005248	bne	0x527c
0000524c	lwz	r2,__mh_dylib_header(r24)
00005250	addi	r30,r30,0x4
00005254	cmpwi	cr7,r2,__mh_dylib_header
00005258	bne	cr7,0x52a0
0000525c	addi	r28,r28,0x1
00005260	cmplw	cr7,r28,r23
00005264	blt	cr7,0x5230
00005268	lwz	r2,__mh_dylib_header(r24)
0000526c	cmpwi	cr7,r2,__mh_dylib_header
00005270	bne	cr7,0x52a0
00005274	li	r27,0x3
00005278	cmpwi	r27,__mh_dylib_header
0000527c	li	r2,__mh_dylib_header
00005280	stw	r2,0x4(r24)
00005284	stw	r2,0x8(r24)
00005288	stw	r2,0xc(r24)
0000528c	stw	r2,0x10(r24)
00005290	stw	r2,0x14(r24)
00005294	stw	r2,0x18(r24)
00005298	stw	r2,__mh_dylib_header(r24)
0000529c	b	0x52a8
000052a0	li	r27,__mh_dylib_header
000052a4	cmpwi	r27,__mh_dylib_header
000052a8	mfcr	r0
000052ac	rlwinm	r0,r0,3,31,31
000052b0	addic	r11,r2,0xffff
000052b4	subfe	r9,r11,r2
000052b8	cmpw	cr7,r0,r9
000052bc	beq+	cr7,0x52e0
000052c0	addis	r3,r31,0x1
000052c4	addis	r4,r31,0x1
000052c8	addis	r6,r31,0x1
000052cc	li	r5,0x269
000052d0	addi	r3,r3,0x85b4
000052d4	addi	r4,r4,0x8bd4
000052d8	addi	r6,r6,0x8e38
000052dc	b	0x5104
000052e0	lwz	r0,0x4(r24)
000052e4	addic	r11,r0,0xffff
000052e8	subfe	r2,r11,r0
000052ec	cmpw	cr7,r9,r2
000052f0	beq+	cr7,0x5314
000052f4	addis	r3,r31,0x1
000052f8	addis	r4,r31,0x1
000052fc	addis	r6,r31,0x1
00005300	li	r5,0x26a
00005304	addi	r3,r3,0x85b4
00005308	addi	r4,r4,0x8bd4
0000530c	addi	r6,r6,0x8e70
00005310	b	0x5104
00005314	lwz	r0,0x8(r24)
00005318	addic	r11,r0,0xffff
0000531c	subfe	r2,r11,r0
00005320	cmpw	cr7,r9,r2
00005324	beq+	cr7,0x5348
00005328	addis	r3,r31,0x1
0000532c	addis	r4,r31,0x1
00005330	addis	r6,r31,0x1
00005334	li	r5,0x26b
00005338	addi	r3,r3,0x85b4
0000533c	addi	r4,r4,0x8bd4
00005340	addi	r6,r6,0x8ec0
00005344	b	0x5104
00005348	lwz	r0,0x18(r24)
0000534c	lwz	r2,0x14(r24)
00005350	or.	r9,r2,r0
00005354	beq+	0x5378
00005358	addis	r3,r31,0x1
0000535c	addis	r4,r31,0x1
00005360	addis	r6,r31,0x1
00005364	li	r5,0x26c
00005368	addi	r3,r3,0x85b4
0000536c	addi	r4,r4,0x8bd4
00005370	addi	r6,r6,0x8f10
00005374	b	0x5104
00005378	addi	r1,r1,0x70
0000537c	or	r3,r27,r27
00005380	lwz	r0,0x8(r1)
00005384	lmw	r20,0xffd0(r1)
00005388	mtspr	lr,r0
0000538c	blr
_QSymGetAddressesForSymbols:
00005390	mfspr	r0,lr
00005394	stmw	r24,0xffe0(r1)
00005398	or.	r27,r3,r3
0000539c	bcl	20,31,0x53a0
000053a0	or	r26,r6,r6
000053a4	or	r25,r4,r4
000053a8	mfspr	r31,lr
000053ac	stw	r0,0x8(r1)
000053b0	or	r24,r5,r5
000053b4	or	r6,r7,r7
000053b8	stwu	r1,0xffa0(r1)
000053bc	beq	0x5408
000053c0	lwz	r2,0x8(r27)
000053c4	cmpwi	cr7,r2,__mh_dylib_header
000053c8	beq	cr7,0x5408
000053cc	lwz	r0,0xc(r27)
000053d0	cmpwi	cr7,r0,__mh_dylib_header
000053d4	beq	cr7,0x5408
000053d8	lwz	r0,0x10(r27)
000053dc	cmpwi	cr7,r0,0xffff
000053e0	beq	cr7,0x53ec
000053e4	cmplw	cr7,r2,r0
000053e8	ble	cr7,0x5408
000053ec	lwz	r0,0x14(r27)
000053f0	cmpwi	cr7,r0,0xffff
000053f4	beq	cr7,0x5400
000053f8	cmplw	cr7,r2,r0
000053fc	ble	cr7,0x5408
00005400	li	r0,0x1
00005404	b	0x540c
00005408	li	r0,__mh_dylib_header
0000540c	cmpwi	cr7,r0,__mh_dylib_header
00005410	or	r10,r0,r0
00005414	beq	cr7,0x5460
00005418	lwz	r2,0x8(r27)
0000541c	li	r10,0x1
00005420	li	r11,__mh_dylib_header
00005424	cmpwi	cr7,r2,__mh_dylib_header
00005428	addi	r2,r2,0x1
0000542c	mtspr	ctr,r2
00005430	bne+	cr7,0x545c
00005434	li	r0,0x1
00005438	mtspr	ctr,r0
0000543c	b	0x545c
00005440	lwz	r9,0xc(r27)
00005444	rlwinm	r2,r11,2,0,29
00005448	lwzx	r0,r2,r9
0000544c	cmpwi	cr7,r0,__mh_dylib_header
00005450	bne	cr7,0x5458
00005454	li	r10,__mh_dylib_header
00005458	addi	r11,r11,0x1
0000545c	bdnz	0x5440
00005460	cmpwi	cr7,r10,__mh_dylib_header
00005464	bne+	cr7,0x5488
00005468	addis	r3,r31,0x1
0000546c	addis	r4,r31,0x1
00005470	addis	r6,r31,0x1
00005474	li	r5,0x27d
00005478	addi	r3,r3,0x8210
0000547c	addi	r4,r4,0x8830
00005480	addi	r6,r6,0x8980
00005484	b	0x54ac
00005488	cmpwi	cr7,r25,__mh_dylib_header
0000548c	bne+	cr7,0x54b0
00005490	addis	r3,r31,0x1
00005494	addis	r4,r31,0x1
00005498	addis	r6,r31,0x1
0000549c	li	r5,0x27e
000054a0	addi	r3,r3,0x8210
000054a4	addi	r4,r4,0x8830
000054a8	addi	r6,r6,0x8b8c
000054ac	bl	___eprintf
000054b0	cmpwi	cr7,r26,__mh_dylib_header
000054b4	beq	cr7,0x54c8
000054b8	addi	r0,r25,0x1
000054bc	li	r9,__mh_dylib_header
000054c0	mtspr	ctr,r0
000054c4	b	0x551c
000054c8	addis	r3,r31,0x1
000054cc	addis	r4,r31,0x1
000054d0	addis	r6,r31,0x1
000054d4	li	r5,0x280
000054d8	addi	r3,r3,0x8210
000054dc	addi	r4,r4,0x8830
000054e0	addi	r6,r6,0x8b98
000054e4	b	0x54ac
000054e8	rlwinm	r0,r9,2,0,29
000054ec	lwzx	r2,r26,r0
000054f0	cmpwi	cr7,r2,__mh_dylib_header
000054f4	bne+	cr7,0x5518
000054f8	addis	r3,r31,0x1
000054fc	addis	r4,r31,0x1
00005500	addis	r6,r31,0x1
00005504	li	r5,0x282
00005508	addi	r3,r3,0x8210
0000550c	addi	r4,r4,0x8830
00005510	addi	r6,r6,0x8bac
00005514	b	0x54ac
00005518	addi	r9,r9,0x1
0000551c	bdnz	0x54e8
00005520	cmpwi	cr7,r6,__mh_dylib_header
00005524	beq	cr7,0x5538
00005528	or	r30,r6,r6
0000552c	li	r28,__mh_dylib_header
00005530	li	r29,__mh_dylib_header
00005534	b	0x5584
00005538	addis	r3,r31,0x1
0000553c	addis	r4,r31,0x1
00005540	addis	r6,r31,0x1
00005544	li	r5,0x284
00005548	addi	r3,r3,0x8210
0000554c	addi	r4,r4,0x8830
00005550	addi	r6,r6,0x8bd0
00005554	b	0x54ac
00005558	cmpwi	cr7,r24,__mh_dylib_header
0000555c	li	r4,__mh_dylib_header
00005560	beq	cr7,0x5568
00005564	lwzx	r4,r24,r29
00005568	lwzx	r5,r26,r29
0000556c	or	r6,r30,r30
00005570	or	r3,r27,r27
00005574	addi	r28,r28,0x1
00005578	addi	r29,r29,0x4
0000557c	addi	r30,r30,0x1c
00005580	bl	_QSymGetAddressForSymbol
00005584	cmplw	cr7,r28,r25
00005588	blt	cr7,0x5558
0000558c	addi	r1,r1,0x60
00005590	li	r3,__mh_dylib_header
00005594	lwz	r0,0x8(r1)
00005598	lmw	r24,0xffe0(r1)
0000559c	mtspr	lr,r0
000055a0	blr
_QSymGetImageForAddress:
000055a4	mfspr	r0,lr
000055a8	stmw	r16,0xffc0(r1)
000055ac	or.	r27,r3,r3
000055b0	bcl	20,31,0x55b4
000055b4	or	r30,r5,r5
000055b8	or	r29,r4,r4
000055bc	mfspr	r31,lr
000055c0	stw	r0,0x8(r1)
000055c4	or	r17,r6,r6
000055c8	or	r16,r7,r7
000055cc	stwu	r1,0xff30(r1)
000055d0	beq	0x561c
000055d4	lwz	r2,0x8(r27)
000055d8	cmpwi	cr7,r2,__mh_dylib_header
000055dc	beq	cr7,0x561c
000055e0	lwz	r0,0xc(r27)
000055e4	cmpwi	cr7,r0,__mh_dylib_header
000055e8	beq	cr7,0x561c
000055ec	lwz	r0,0x10(r27)
000055f0	cmpwi	cr7,r0,0xffff
000055f4	beq	cr7,0x5600
000055f8	cmplw	cr7,r2,r0
000055fc	ble	cr7,0x561c
00005600	lwz	r0,0x14(r27)
00005604	cmpwi	cr7,r0,0xffff
00005608	beq	cr7,0x5614
0000560c	cmplw	cr7,r2,r0
00005610	ble	cr7,0x561c
00005614	li	r0,0x1
00005618	b	0x5620
0000561c	li	r0,__mh_dylib_header
00005620	cmpwi	cr7,r0,__mh_dylib_header
00005624	or	r10,r0,r0
00005628	beq	cr7,0x5674
0000562c	lwz	r2,0x8(r27)
00005630	li	r10,0x1
00005634	li	r11,__mh_dylib_header
00005638	cmpwi	cr7,r2,__mh_dylib_header
0000563c	addi	r2,r2,0x1
00005640	mtspr	ctr,r2
00005644	bne+	cr7,0x5670
00005648	li	r0,0x1
0000564c	mtspr	ctr,r0
00005650	b	0x5670
00005654	lwz	r9,0xc(r27)
00005658	rlwinm	r2,r11,2,0,29
0000565c	lwzx	r0,r2,r9
00005660	cmpwi	cr7,r0,__mh_dylib_header
00005664	bne	cr7,0x566c
00005668	li	r10,__mh_dylib_header
0000566c	addi	r11,r11,0x1
00005670	bdnz	0x5654
00005674	cmpwi	cr7,r10,__mh_dylib_header
00005678	bne+	cr7,0x569c
0000567c	addis	r3,r31,__mh_dylib_header
00005680	addis	r4,r31,0x1
00005684	addis	r6,r31,0x1
00005688	li	r5,0x2a9
0000568c	addi	r3,r3,0x7ffc
00005690	addi	r4,r4,0x861c
00005694	addi	r6,r6,0x876c
00005698	b	0x56c4
0000569c	cmpwi	cr7,r17,__mh_dylib_header
000056a0	li	r18,__mh_dylib_header
000056a4	bne+	cr7,0x5808
000056a8	addis	r3,r31,__mh_dylib_header
000056ac	addis	r4,r31,0x1
000056b0	addis	r6,r31,0x1
000056b4	li	r5,0x2aa
000056b8	addi	r3,r3,0x7ffc
000056bc	addi	r4,r4,0x861c
000056c0	addi	r6,r6,0x89d0
000056c4	bl	___eprintf
000056c8	lwz	r2,0xc(r27)
000056cc	rlwinm	r26,r18,2,0,29
000056d0	li	r21,__mh_dylib_header
000056d4	li	r28,__mh_dylib_header
000056d8	addi	r22,r1,0x48
000056dc	addis	r20,r31,0x1
000056e0	addis	r19,r31,0x1
000056e4	lwzx	r3,r2,r26
000056e8	bl	_QMOImageGetSlide
000056ec	lwz	r2,0xc(r27)
000056f0	or	r24,r3,r3
000056f4	or	r25,r4,r4
000056f8	lwzx	r3,r2,r26
000056fc	bl	_QMOImageGetSectionCount
00005700	or	r23,r3,r3
00005704	b	0x57f4
00005708	lwz	r2,0xc(r27)
0000570c	or	r4,r28,r28
00005710	addi	r5,r1,0x38
00005714	lwzx	r3,r2,r26
00005718	bl	_QMOImageGetSectionByIndex
0000571c	cmpwi	cr7,r3,__mh_dylib_header
00005720	beq+	cr7,0x5744
00005724	addis	r3,r31,__mh_dylib_header
00005728	addis	r4,r31,0x1
0000572c	addis	r6,r31,0x1
00005730	li	r5,0x2b7
00005734	addi	r3,r3,0x7ffc
00005738	addi	r4,r4,0x861c
0000573c	addi	r6,r6,0x89e4
00005740	b	0x56c4
00005744	or	r3,r22,r22
00005748	addi	r4,r20,0x89f0
0000574c	bl	0xd340	; symbol stub for: _strcmp
00005750	cmpwi	cr7,r3,__mh_dylib_header
00005754	beq	cr7,0x576c
00005758	or	r3,r22,r22
0000575c	addi	r4,r19,0x89f8
00005760	bl	0xd340	; symbol stub for: _strcmp
00005764	cmpwi	cr7,r3,__mh_dylib_header
00005768	bne	cr7,0x57f0
0000576c	lwz	r2,0x58(r1)
00005770	lwz	r3,0x5c(r1)
00005774	addc	r10,r25,r3
00005778	adde	r9,r24,r2
0000577c	cmplw	cr7,r9,r29
00005780	bgt	cr7,0x57c4
00005784	cmpw	cr7,r9,r29
00005788	bne	cr7,0x5794
0000578c	cmplw	cr7,r10,r30
00005790	bgt	cr7,0x57c4
00005794	lwz	r2,0x60(r1)
00005798	lwz	r3,0x64(r1)
0000579c	addc	r3,r3,r10
000057a0	adde	r2,r2,r9
000057a4	cmplw	cr7,r2,r29
000057a8	bgt	cr7,0x57bc
000057ac	cmpw	cr7,r2,r29
000057b0	bne	cr7,0x57c4
000057b4	cmplw	cr7,r3,r30
000057b8	ble	cr7,0x57c4
000057bc	li	r0,0x1
000057c0	b	0x57c8
000057c4	li	r0,__mh_dylib_header
000057c8	cmpwi	cr7,r0,__mh_dylib_header
000057cc	or	r21,r0,r0
000057d0	beq	cr7,0x57f0
000057d4	lwz	r2,0xc(r27)
000057d8	cmpwi	cr7,r16,__mh_dylib_header
000057dc	lwzx	r0,r2,r26
000057e0	stw	r0,__mh_dylib_header(r17)
000057e4	beq	cr7,0x581c
000057e8	stw	r28,__mh_dylib_header(r16)
000057ec	b	0x581c
000057f0	addi	r28,r28,0x1
000057f4	cmplw	cr7,r28,r23
000057f8	blt	cr7,0x5708
000057fc	cmpwi	cr7,r21,__mh_dylib_header
00005800	bne	cr7,0x581c
00005804	addi	r18,r18,0x1
00005808	lwz	r0,0x8(r27)
0000580c	cmplw	cr7,r18,r0
00005810	blt	cr7,0x56c8
00005814	li	r3,0x3
00005818	b	0x584c
0000581c	lwz	r0,__mh_dylib_header(r17)
00005820	li	r3,__mh_dylib_header
00005824	cmpwi	cr7,r0,__mh_dylib_header
00005828	bne	cr7,0x584c
0000582c	addis	r3,r31,__mh_dylib_header
00005830	addis	r4,r31,0x1
00005834	addis	r6,r31,0x1
00005838	li	r5,0x2cf
0000583c	addi	r3,r3,0x7ffc
00005840	addi	r4,r4,0x861c
00005844	addi	r6,r6,0x8a00
00005848	b	0x56c4
0000584c	addi	r1,r1,0xd0
00005850	lwz	r0,0x8(r1)
00005854	lmw	r16,0xffc0(r1)
00005858	mtspr	lr,r0
0000585c	blr
_QSymGetSymbolForAddress:
00005860	mfspr	r0,lr
00005864	cmpwi	r3,__mh_dylib_header
00005868	stmw	r28,0xfff0(r1)
0000586c	bcl	20,31,0x5870
00005870	or	r29,r5,r5
00005874	or	r28,r4,r4
00005878	mfspr	r31,lr
0000587c	stw	r0,0x8(r1)
00005880	or	r30,r6,r6
00005884	stwu	r1,0xff30(r1)
00005888	beq	0x58d4
0000588c	lwz	r2,0x8(r3)
00005890	cmpwi	cr7,r2,__mh_dylib_header
00005894	beq	cr7,0x58d4
00005898	lwz	r0,0xc(r3)
0000589c	cmpwi	cr7,r0,__mh_dylib_header
000058a0	beq	cr7,0x58d4
000058a4	lwz	r0,0x10(r3)
000058a8	cmpwi	cr7,r0,0xffff
000058ac	beq	cr7,0x58b8
000058b0	cmplw	cr7,r2,r0
000058b4	ble	cr7,0x58d4
000058b8	lwz	r0,0x14(r3)
000058bc	cmpwi	cr7,r0,0xffff
000058c0	beq	cr7,0x58cc
000058c4	cmplw	cr7,r2,r0
000058c8	ble	cr7,0x58d4
000058cc	li	r0,0x1
000058d0	b	0x58d8
000058d4	li	r0,__mh_dylib_header
000058d8	cmpwi	cr7,r0,__mh_dylib_header
000058dc	or	r10,r0,r0
000058e0	beq	cr7,0x592c
000058e4	lwz	r2,0x8(r3)
000058e8	li	r10,0x1
000058ec	li	r11,__mh_dylib_header
000058f0	cmpwi	cr7,r2,__mh_dylib_header
000058f4	addi	r2,r2,0x1
000058f8	mtspr	ctr,r2
000058fc	bne+	cr7,0x5928
00005900	li	r0,0x1
00005904	mtspr	ctr,r0
00005908	b	0x5928
0000590c	lwz	r9,0xc(r3)
00005910	rlwinm	r2,r11,2,0,29
00005914	lwzx	r0,r2,r9
00005918	cmpwi	cr7,r0,__mh_dylib_header
0000591c	bne	cr7,0x5924
00005920	li	r10,__mh_dylib_header
00005924	addi	r11,r11,0x1
00005928	bdnz	0x590c
0000592c	cmpwi	cr7,r10,__mh_dylib_header
00005930	bne+	cr7,0x5954
00005934	addis	r3,r31,__mh_dylib_header
00005938	addis	r4,r31,0x1
0000593c	addis	r6,r31,0x1
00005940	li	r5,0x329
00005944	addi	r3,r3,0x7d40
00005948	addi	r4,r4,0x8360
0000594c	addi	r6,r6,0x84b0
00005950	b	0x5978
00005954	cmpwi	cr7,r30,__mh_dylib_header
00005958	bne+	cr7,0x597c
0000595c	addis	r3,r31,__mh_dylib_header
00005960	addis	r4,r31,0x1
00005964	addis	r6,r31,0x1
00005968	li	r5,0x32a
0000596c	addi	r3,r3,0x7d40
00005970	addi	r4,r4,0x8360
00005974	addi	r6,r6,0x85b0
00005978	bl	___eprintf
0000597c	li	r0,__mh_dylib_header
00005980	or	r4,r28,r28
00005984	or	r5,r29,r29
00005988	addi	r6,r1,0x38
0000598c	stw	r0,__mh_dylib_header(r30)
00005990	stw	r0,0x4(r30)
00005994	addi	r7,r1,0x3c
00005998	stw	r0,0x8(r30)
0000599c	stw	r0,0xc(r30)
000059a0	stw	r0,0x10(r30)
000059a4	stw	r0,0x14(r30)
000059a8	stw	r0,0x18(r30)
000059ac	bl	_QSymGetImageForAddress
000059b0	cmpwi	cr7,r3,__mh_dylib_header
000059b4	or	r8,r3,r3
000059b8	bne	cr7,0x5a94
000059bc	lwz	r3,0x38(r1)
000059c0	lwz	r4,0x3c(r1)
000059c4	addi	r5,r1,0x68
000059c8	bl	_QMOImageGetSectionByIndex
000059cc	cmpwi	cr7,r3,__mh_dylib_header
000059d0	or	r8,r3,r3
000059d4	bne	cr7,0x5a94
000059d8	lwz	r2,0x3c(r1)
000059dc	lwz	r11,0x90(r1)
000059e0	addis	r4,r31,__mh_dylib_header
000059e4	li	r9,__mh_dylib_header
000059e8	lwz	r12,0x94(r1)
000059ec	lwz	r3,0x38(r1)
000059f0	li	r10,__mh_dylib_header
000059f4	addi	r5,r1,0x40
000059f8	addi	r4,r4,0xee84
000059fc	stb	r8,0x50(r1)
00005a00	stw	r8,0x4c(r1)
00005a04	stw	r28,0x40(r1)
00005a08	stw	r29,0x44(r1)
00005a0c	stw	r9,0x54(r1)
00005a10	stw	r10,0x58(r1)
00005a14	stw	r11,0x5c(r1)
00005a18	stw	r12,0x60(r1)
00005a1c	addi	r2,r2,0x1
00005a20	stb	r2,0x48(r1)
00005a24	bl	_QMOImageIterateSymbols
00005a28	cmpwi	cr7,r3,__mh_dylib_header
00005a2c	or	r8,r3,r3
00005a30	bne	cr7,0x5a94
00005a34	lwz	r7,0x4c(r1)
00005a38	cmpwi	cr7,r7,__mh_dylib_header
00005a3c	bne	cr7,0x5a4c
00005a40	li	r8,0x3
00005a44	cmpwi	cr7,r8,__mh_dylib_header
00005a48	b	0x5a94
00005a4c	lbz	r2,0x50(r1)
00005a50	lwz	r9,0x54(r1)
00005a54	cmpwi	cr7,r3,__mh_dylib_header
00005a58	lwz	r10,0x58(r1)
00005a5c	lwz	r11,0x5c(r1)
00005a60	lwz	r12,0x60(r1)
00005a64	andi.	r0,r2,0x1
00005a68	lwz	r0,0x38(r1)
00005a6c	stw	r7,0x8(r30)
00005a70	stw	r9,0xc(r30)
00005a74	stw	r10,0x10(r30)
00005a78	stw	r11,0x14(r30)
00005a7c	stw	r12,0x18(r30)
00005a80	mfcr	r2
00005a84	rlwinm	r2,r2,3,31,31
00005a88	stw	r0,0x4(r30)
00005a8c	addi	r2,r2,0x1
00005a90	stw	r2,__mh_dylib_header(r30)
00005a94	mfcr	r0
00005a98	rlwinm	r0,r0,31,31,31
00005a9c	lwz	r2,__mh_dylib_header(r30)
00005aa0	addic	r11,r2,0xffff
00005aa4	subfe	r9,r11,r2
00005aa8	cmpw	cr7,r0,r9
00005aac	beq+	cr7,0x5ad0
00005ab0	addis	r3,r31,__mh_dylib_header
00005ab4	addis	r4,r31,0x1
00005ab8	addis	r6,r31,0x1
00005abc	li	r5,0x352
00005ac0	addi	r3,r3,0x7d40
00005ac4	addi	r4,r4,0x8360
00005ac8	addi	r6,r6,0x85c4
00005acc	b	0x5978
00005ad0	lwz	r0,0x4(r30)
00005ad4	addic	r11,r0,0xffff
00005ad8	subfe	r2,r11,r0
00005adc	cmpw	cr7,r9,r2
00005ae0	beq+	cr7,0x5b04
00005ae4	addis	r3,r31,__mh_dylib_header
00005ae8	addis	r4,r31,0x1
00005aec	addis	r6,r31,0x1
00005af0	li	r5,0x353
00005af4	addi	r3,r3,0x7d40
00005af8	addi	r4,r4,0x8360
00005afc	addi	r6,r6,0x85fc
00005b00	b	0x5978
00005b04	lwz	r0,0x8(r30)
00005b08	addic	r11,r0,0xffff
00005b0c	subfe	r2,r11,r0
00005b10	cmpw	cr7,r9,r2
00005b14	beq+	cr7,0x5b38
00005b18	addis	r3,r31,__mh_dylib_header
00005b1c	addis	r4,r31,0x1
00005b20	addis	r6,r31,0x1
00005b24	li	r5,0x354
00005b28	addi	r3,r3,0x7d40
00005b2c	addi	r4,r4,0x8360
00005b30	addi	r6,r6,0x864c
00005b34	b	0x5978
00005b38	addi	r1,r1,0xd0
00005b3c	or	r3,r8,r8
00005b40	lwz	r0,0x8(r1)
00005b44	lmw	r28,0xfff0(r1)
00005b48	mtspr	lr,r0
00005b4c	blr
_QSymGetSymbolsForAddresses:
00005b50	mfspr	r0,lr
00005b54	stmw	r26,0xffe8(r1)
00005b58	or.	r28,r3,r3
00005b5c	bcl	20,31,0x5b60
00005b60	or	r27,r4,r4
00005b64	or	r26,r5,r5
00005b68	mfspr	r31,lr
00005b6c	stw	r0,0x8(r1)
00005b70	stwu	r1,0xffa0(r1)
00005b74	beq	0x5bc0
00005b78	lwz	r2,0x8(r28)
00005b7c	cmpwi	cr7,r2,__mh_dylib_header
00005b80	beq	cr7,0x5bc0
00005b84	lwz	r0,0xc(r28)
00005b88	cmpwi	cr7,r0,__mh_dylib_header
00005b8c	beq	cr7,0x5bc0
00005b90	lwz	r0,0x10(r28)
00005b94	cmpwi	cr7,r0,0xffff
00005b98	beq	cr7,0x5ba4
00005b9c	cmplw	cr7,r2,r0
00005ba0	ble	cr7,0x5bc0
00005ba4	lwz	r0,0x14(r28)
00005ba8	cmpwi	cr7,r0,0xffff
00005bac	beq	cr7,0x5bb8
00005bb0	cmplw	cr7,r2,r0
00005bb4	ble	cr7,0x5bc0
00005bb8	li	r0,0x1
00005bbc	b	0x5bc4
00005bc0	li	r0,__mh_dylib_header
00005bc4	cmpwi	cr7,r0,__mh_dylib_header
00005bc8	or	r10,r0,r0
00005bcc	beq	cr7,0x5c18
00005bd0	lwz	r2,0x8(r28)
00005bd4	li	r10,0x1
00005bd8	li	r11,__mh_dylib_header
00005bdc	cmpwi	cr7,r2,__mh_dylib_header
00005be0	addi	r2,r2,0x1
00005be4	mtspr	ctr,r2
00005be8	bne+	cr7,0x5c14
00005bec	li	r0,0x1
00005bf0	mtspr	ctr,r0
00005bf4	b	0x5c14
00005bf8	lwz	r9,0xc(r28)
00005bfc	rlwinm	r2,r11,2,0,29
00005c00	lwzx	r0,r2,r9
00005c04	cmpwi	cr7,r0,__mh_dylib_header
00005c08	bne	cr7,0x5c10
00005c0c	li	r10,__mh_dylib_header
00005c10	addi	r11,r11,0x1
00005c14	bdnz	0x5bf8
00005c18	cmpwi	cr7,r10,__mh_dylib_header
00005c1c	bne+	cr7,0x5c40
00005c20	addis	r3,r31,__mh_dylib_header
00005c24	addis	r4,r31,0x1
00005c28	addis	r6,r31,0x1
00005c2c	li	r5,0x364
00005c30	addi	r3,r3,0x7a50
00005c34	addi	r4,r4,0x8070
00005c38	addi	r6,r6,0x81c0
00005c3c	b	0x5c64
00005c40	cmpwi	cr7,r27,__mh_dylib_header
00005c44	bne+	cr7,0x5c68
00005c48	addis	r3,r31,__mh_dylib_header
00005c4c	addis	r4,r31,0x1
00005c50	addis	r6,r31,0x1
00005c54	li	r5,0x365
00005c58	addi	r3,r3,0x7a50
00005c5c	addi	r4,r4,0x8070
00005c60	addi	r6,r6,0x83cc
00005c64	bl	___eprintf
00005c68	cmpwi	cr7,r26,__mh_dylib_header
00005c6c	bne+	cr7,0x5c90
00005c70	addis	r3,r31,__mh_dylib_header
00005c74	addis	r4,r31,0x1
00005c78	addis	r6,r31,0x1
00005c7c	li	r5,0x366
00005c80	addi	r3,r3,0x7a50
00005c84	addi	r4,r4,0x8070
00005c88	addi	r6,r6,0x847c
00005c8c	b	0x5c64
00005c90	cmpwi	cr7,r6,__mh_dylib_header
00005c94	beq	cr7,0x5ca4
00005c98	or	r30,r6,r6
00005c9c	li	r29,__mh_dylib_header
00005ca0	b	0x5ce8
00005ca4	addis	r3,r31,__mh_dylib_header
00005ca8	addis	r4,r31,0x1
00005cac	addis	r6,r31,0x1
00005cb0	li	r5,0x367
00005cb4	addi	r3,r3,0x7a50
00005cb8	addi	r4,r4,0x8070
00005cbc	addi	r6,r6,0x8410
00005cc0	b	0x5c64
00005cc4	rlwinm	r2,r29,3,0,28
00005cc8	or	r6,r30,r30
00005ccc	or	r3,r28,r28
00005cd0	addi	r29,r29,0x1
00005cd4	add	r2,r2,r26
00005cd8	addi	r30,r30,0x1c
00005cdc	lwz	r4,__mh_dylib_header(r2)
00005ce0	lwz	r5,0x4(r2)
00005ce4	bl	_QSymGetSymbolForAddress
00005ce8	cmplw	cr7,r29,r27
00005cec	blt	cr7,0x5cc4
00005cf0	addi	r1,r1,0x60
00005cf4	li	r3,__mh_dylib_header
00005cf8	lwz	r0,0x8(r1)
00005cfc	lmw	r26,0xffe8(r1)
00005d00	mtspr	lr,r0
00005d04	blr
_QMOImageToLocalUInt64:
00005d08	mfspr	r0,lr
00005d0c	or.	r2,r3,r3
00005d10	stw	r31,0xfffc(r1)
00005d14	bcl	20,31,0x5d18
00005d18	or	r3,r4,r4
00005d1c	or	r4,r5,r5
00005d20	mfspr	r31,lr
00005d24	stw	r0,0x8(r1)
00005d28	stwu	r1,0xffa0(r1)
00005d2c	beq	0x5d48
00005d30	lwz	r0,0x44(r2)
00005d34	cmpwi	cr7,r0,__mh_dylib_header
00005d38	beq	cr7,0x5d48
00005d3c	lwz	r0,0x48(r2)
00005d40	cmpwi	cr7,r0,__mh_dylib_header
00005d44	bne	cr7,0x5d68
00005d48	addis	r3,r31,__mh_dylib_header
00005d4c	addis	r4,r31,0x1
00005d50	addis	r6,r31,0x1
00005d54	li	r5,0x4dc
00005d58	addi	r3,r3,0x7898
00005d5c	addi	r4,r4,0x82d4
00005d60	addi	r6,r6,0x8308
00005d64	bl	___eprintf
00005d68	lwz	r0,0x30(r2)
00005d6c	cmpwi	cr7,r0,__mh_dylib_header
00005d70	beq	cr7,0x5da0
00005d74	stw	r3,0x38(r1)
00005d78	stw	r5,0x3c(r1)
00005d7c	addi	r0,r1,0x38
00005d80	li	r2,0x4
00005d84	lwbrx	r9,0,r0
00005d88	lwbrx	r11,r2,r0
00005d8c	stw	r9,0x44(r1)
00005d90	stw	r11,0x40(r1)
00005d94	nop
00005d98	lwz	r4,0x44(r1)
00005d9c	lwz	r3,0x40(r1)
00005da0	addi	r1,r1,0x60
00005da4	lwz	r0,0x8(r1)
00005da8	lwz	r31,0xfffc(r1)
00005dac	mtspr	lr,r0
00005db0	blr
_QMOImageDestroy:
00005db4	mfspr	r0,lr
00005db8	stmw	r27,0xffec(r1)
00005dbc	or.	r30,r3,r3
00005dc0	stw	r0,0x8(r1)
00005dc4	stwu	r1,0xffa0(r1)
00005dc8	beq	0x5f00
00005dcc	lwz	r3,0x38(r30)
00005dd0	cmpwi	cr7,r3,__mh_dylib_header
00005dd4	beq	cr7,0x5e90
00005dd8	lwz	r0,0x34(r30)
00005ddc	li	r28,__mh_dylib_header
00005de0	li	r27,__mh_dylib_header
00005de4	li	r29,__mh_dylib_header
00005de8	b	0x5e84
00005dec	add	r11,r29,r3
00005df0	lwz	r8,0x4c(r11)
00005df4	cmpwi	cr7,r8,__mh_dylib_header
00005df8	beq	cr7,0x5e7c
00005dfc	lwz	r0,0x28(r30)
00005e00	cmpwi	cr7,r0,__mh_dylib_header
00005e04	beq	cr7,0x5e24
00005e08	lwz	r9,0x1c(r11)
00005e0c	lwz	r10,0x20(r11)
00005e10	lwz	r2,0x20(r30)
00005e14	lwz	r3,0x24(r30)
00005e18	lwz	r6,0x24(r11)
00005e1c	lwz	r7,0x28(r11)
00005e20	b	0x5e3c
00005e24	lwz	r9,0x2c(r11)
00005e28	lwz	r10,0x30(r11)
00005e2c	lwz	r2,0x4(r30)
00005e30	lwz	r3,0x8(r30)
00005e34	lwz	r6,0x34(r11)
00005e38	lwz	r7,0x38(r11)
00005e3c	lwz	r0,0x48(r30)
00005e40	addc	r5,r10,r3
00005e44	adde	r4,r9,r2
00005e48	or	r3,r30,r30
00005e4c	lwz	r9,0x50(r11)
00005e50	mtspr	ctr,r0
00005e54	or	r12,r0,r0
00005e58	bctrl
00005e5c	lwz	r2,0x38(r30)
00005e60	add	r2,r2,r29
00005e64	stw	r27,0x4c(r2)
00005e68	lwz	r9,0x38(r30)
00005e6c	add	r9,r9,r29
00005e70	stw	r27,0x50(r9)
00005e74	lwz	r3,0x38(r30)
00005e78	lwz	r0,0x34(r30)
00005e7c	addi	r28,r28,0x1
00005e80	addi	r29,r29,0x54
00005e84	cmplw	cr7,r28,r0
00005e88	blt	cr7,0x5dec
00005e8c	bl	0xd0c0	; symbol stub for: _free
00005e90	lwz	r8,0xc(r30)
00005e94	cmpwi	cr7,r8,__mh_dylib_header
00005e98	beq	cr7,0x5ec4
00005e9c	lwz	r0,0x48(r30)
00005ea0	lwz	r7,0x14(r30)
00005ea4	li	r6,__mh_dylib_header
00005ea8	or	r3,r30,r30
00005eac	lwz	r4,0x4(r30)
00005eb0	lwz	r5,0x8(r30)
00005eb4	lwz	r9,0x10(r30)
00005eb8	mtspr	ctr,r0
00005ebc	or	r12,r0,r0
00005ec0	bctrl
00005ec4	lwz	r0,0x4c(r30)
00005ec8	cmpwi	cr7,r0,__mh_dylib_header
00005ecc	beq	cr7,0x5ee0
00005ed0	mtspr	ctr,r0
00005ed4	or	r3,r30,r30
00005ed8	or	r12,r0,r0
00005edc	bctrl
00005ee0	lwz	r3,__mh_dylib_header(r30)
00005ee4	bl	0xd0c0	; symbol stub for: _free
00005ee8	addi	r1,r1,0x60
00005eec	or	r3,r30,r30
00005ef0	lwz	r0,0x8(r1)
00005ef4	lmw	r27,0xffec(r1)
00005ef8	mtspr	lr,r0
00005efc	b	0xd0c0	; symbol stub for: _free
00005f00	addi	r1,r1,0x60
00005f04	lwz	r0,0x8(r1)
00005f08	lmw	r27,0xffec(r1)
00005f0c	mtspr	lr,r0
00005f10	blr
_QMOFileImageMapRange:
00005f14	mfspr	r0,lr
00005f18	or.	r10,r3,r3
00005f1c	stmw	r30,0xfff8(r1)
00005f20	bcl	20,31,0x5f24
00005f24	or	r2,r4,r4
00005f28	or	r12,r7,r7
00005f2c	mfspr	r31,lr
00005f30	stw	r0,0x8(r1)
00005f34	or	r30,r8,r8
00005f38	stwu	r1,0xffb0(r1)
00005f3c	bne+	0x5f60
00005f40	addis	r3,r31,__mh_dylib_header
00005f44	addis	r4,r31,0x1
00005f48	addis	r6,r31,__mh_dylib_header
00005f4c	li	r5,0x4f6
00005f50	addi	r3,r3,0x768c
00005f54	addi	r4,r4,0x80c8
00005f58	addi	r6,r6,0x76e0
00005f5c	b	0x5f84
00005f60	or.	r0,r6,r7
00005f64	bne+	0x5f88
00005f68	addis	r3,r31,__mh_dylib_header
00005f6c	addis	r4,r31,0x1
00005f70	addis	r6,r31,0x1
00005f74	li	r5,0x4f7
00005f78	addi	r3,r3,0x768c
00005f7c	addi	r4,r4,0x80c8
00005f80	addi	r6,r6,0x8120
00005f84	bl	___eprintf
00005f88	cmpwi	cr7,r8,__mh_dylib_header
00005f8c	bne+	cr7,0x5fb0
00005f90	addis	r3,r31,__mh_dylib_header
00005f94	addis	r4,r31,0x1
00005f98	addis	r6,r31,0x1
00005f9c	li	r5,0x4f8
00005fa0	addi	r3,r3,0x768c
00005fa4	addi	r4,r4,0x80c8
00005fa8	addi	r6,r6,0x812c
00005fac	b	0x5f84
00005fb0	lwz	r0,__mh_dylib_header(r8)
00005fb4	cmpwi	cr7,r0,__mh_dylib_header
00005fb8	beq+	cr7,0x5fdc
00005fbc	addis	r3,r31,__mh_dylib_header
00005fc0	addis	r4,r31,0x1
00005fc4	addis	r6,r31,0x1
00005fc8	li	r5,0x4f9
00005fcc	addi	r3,r3,0x768c
00005fd0	addi	r4,r4,0x80c8
00005fd4	addi	r6,r6,0x813c
00005fd8	b	0x5f84
00005fdc	cmpwi	cr7,r9,__mh_dylib_header
00005fe0	bne+	cr7,0x6004
00005fe4	addis	r3,r31,__mh_dylib_header
00005fe8	addis	r4,r31,0x1
00005fec	addis	r6,r31,0x1
00005ff0	li	r5,0x4fa
00005ff4	addi	r3,r3,0x768c
00005ff8	addi	r4,r4,0x80c8
00005ffc	addi	r6,r6,0x8150
00006000	b	0x5f84
00006004	lwz	r7,0x50(r10)
00006008	or	r9,r5,r5
0000600c	or	r4,r12,r12
00006010	or	r8,r2,r2
00006014	li	r3,__mh_dylib_header
00006018	li	r5,0x1
0000601c	li	r6,0x2
00006020	bl	0xd1c0	; symbol stub for: _mmap
00006024	or	r9,r3,r3
00006028	li	r3,__mh_dylib_header
0000602c	cmpwi	cr7,r9,0xffff
00006030	bne	cr7,0x6040
00006034	bl	0xcf20	; symbol stub for: ___error
00006038	li	r9,__mh_dylib_header
0000603c	lwz	r3,__mh_dylib_header(r3)
00006040	addic	r0,r9,0xffff
00006044	subfe	r2,r0,r9
00006048	subfic	r11,r3,__mh_dylib_header
0000604c	adde	r0,r11,r3
00006050	stw	r9,__mh_dylib_header(r30)
00006054	cmpw	cr7,r0,r2
00006058	beq+	cr7,0x607c
0000605c	addis	r3,r31,__mh_dylib_header
00006060	addis	r4,r31,0x1
00006064	addis	r6,r31,0x1
00006068	li	r5,0x506
0000606c	addi	r3,r3,0x768c
00006070	addi	r4,r4,0x80c8
00006074	addi	r6,r6,0x8168
00006078	b	0x5f84
0000607c	addi	r1,r1,0x50
00006080	lwz	r0,0x8(r1)
00006084	lmw	r30,0xfff8(r1)
00006088	mtspr	lr,r0
0000608c	blr
_QMOFileImageUnmapRange:
00006090	mfspr	r0,lr
00006094	cmpwi	cr7,r3,__mh_dylib_header
00006098	stw	r31,0xfffc(r1)
0000609c	or	r3,r8,r8
000060a0	bcl	20,31,0x60a4
000060a4	mfspr	r31,lr
000060a8	stw	r0,0x8(r1)
000060ac	stwu	r1,0xffb0(r1)
000060b0	bne+	cr7,0x60d4
000060b4	addis	r3,r31,__mh_dylib_header
000060b8	addis	r4,r31,__mh_dylib_header
000060bc	addis	r6,r31,__mh_dylib_header
000060c0	li	r5,0x519
000060c4	addi	r3,r3,0x750c
000060c8	addi	r4,r4,0x7f48
000060cc	addi	r6,r6,0x7560
000060d0	b	0x60f8
000060d4	or.	r0,r6,r7
000060d8	bne+	0x60fc
000060dc	addis	r3,r31,__mh_dylib_header
000060e0	addis	r4,r31,__mh_dylib_header
000060e4	addis	r6,r31,__mh_dylib_header
000060e8	li	r5,0x51a
000060ec	addi	r3,r3,0x750c
000060f0	addi	r4,r4,0x7f48
000060f4	addi	r6,r6,0x7fa0
000060f8	bl	___eprintf
000060fc	cmpwi	cr7,r8,__mh_dylib_header
00006100	bne+	cr7,0x6124
00006104	addis	r3,r31,__mh_dylib_header
00006108	addis	r4,r31,__mh_dylib_header
0000610c	addis	r6,r31,0x1
00006110	li	r5,0x51b
00006114	addi	r3,r3,0x750c
00006118	addi	r4,r4,0x7f48
0000611c	addi	r6,r6,0x800c
00006120	b	0x60f8
00006124	or	r4,r7,r7
00006128	bl	0xd1e0	; symbol stub for: _munmap
0000612c	cmpwi	cr7,r3,__mh_dylib_header
00006130	beq+	cr7,0x6154
00006134	addis	r3,r31,__mh_dylib_header
00006138	addis	r4,r31,__mh_dylib_header
0000613c	addis	r6,r31,__mh_dylib_header
00006140	li	r5,0x51e
00006144	addi	r3,r3,0x750c
00006148	addi	r4,r4,0x7f48
0000614c	addi	r6,r6,0x7ef4
00006150	b	0x60f8
00006154	addi	r1,r1,0x50
00006158	lwz	r0,0x8(r1)
0000615c	lwz	r31,0xfffc(r1)
00006160	mtspr	lr,r0
00006164	blr
_QMOFileImageCreate:
00006168	mfspr	r0,lr
0000616c	stmw	r29,0xfff4(r1)
00006170	or.	r29,r3,r3
00006174	bcl	20,31,0x6178
00006178	or	r3,r4,r4
0000617c	mfspr	r31,lr
00006180	stw	r0,0x8(r1)
00006184	stwu	r1,0xffb0(r1)
00006188	bne+	0x61ac
0000618c	addis	r3,r31,__mh_dylib_header
00006190	addis	r4,r31,__mh_dylib_header
00006194	addis	r6,r31,__mh_dylib_header
00006198	li	r5,0x52c
0000619c	addi	r3,r3,0x7438
000061a0	addi	r4,r4,0x7e74
000061a4	addi	r6,r6,0x748c
000061a8	bl	___eprintf
000061ac	bl	0xd020	; symbol stub for: _dup
000061b0	or.	r30,r3,r3
000061b4	blt	0x61c0
000061b8	li	r3,__mh_dylib_header
000061bc	b	0x61c8
000061c0	bl	0xcf20	; symbol stub for: ___error
000061c4	lwz	r3,__mh_dylib_header(r3)
000061c8	stw	r30,0x50(r29)
000061cc	addi	r1,r1,0x50
000061d0	lwz	r0,0x8(r1)
000061d4	nop
000061d8	lmw	r29,0xfff4(r1)
000061dc	mtspr	lr,r0
000061e0	blr
_QMOFileImageDestroy:
000061e4	mfspr	r0,lr
000061e8	cmpwi	r3,__mh_dylib_header
000061ec	stw	r31,0xfffc(r1)
000061f0	bcl	20,31,0x61f4
000061f4	mfspr	r31,lr
000061f8	stw	r0,0x8(r1)
000061fc	stwu	r1,0xffb0(r1)
00006200	bne+	0x6224
00006204	addis	r3,r31,__mh_dylib_header
00006208	addis	r4,r31,__mh_dylib_header
0000620c	addis	r6,r31,__mh_dylib_header
00006210	li	r5,0x543
00006214	addi	r3,r3,0x73bc
00006218	addi	r4,r4,0x7df8
0000621c	addi	r6,r6,0x7410
00006220	b	0x6258
00006224	lwz	r3,0x50(r3)
00006228	cmpwi	cr7,r3,0xffff
0000622c	beq	cr7,0x625c
00006230	bl	0xd000	; symbol stub for: _close
00006234	cmpwi	cr7,r3,__mh_dylib_header
00006238	beq+	cr7,0x625c
0000623c	addis	r3,r31,__mh_dylib_header
00006240	addis	r4,r31,__mh_dylib_header
00006244	addis	r6,r31,__mh_dylib_header
00006248	li	r5,0x549
0000624c	addi	r3,r3,0x73bc
00006250	addi	r4,r4,0x7df8
00006254	addi	r6,r6,0x7da4
00006258	bl	___eprintf
0000625c	addi	r1,r1,0x50
00006260	lwz	r0,0x8(r1)
00006264	lwz	r31,0xfffc(r1)
00006268	mtspr	lr,r0
0000626c	blr
_QMOTaskImageMapRange:
00006270	mfspr	r0,lr
00006274	cmpwi	r3,__mh_dylib_header
00006278	stmw	r24,0xffe0(r1)
0000627c	bcl	20,31,0x6280
00006280	or	r30,r7,r7
00006284	or	r27,r8,r8
00006288	mfspr	r31,lr
0000628c	stw	r0,0x8(r1)
00006290	or	r24,r9,r9
00006294	or	r26,r5,r5
00006298	stwu	r1,0xff90(r1)
0000629c	or	r25,r4,r4
000062a0	bne+	0x62c4
000062a4	addis	r3,r31,__mh_dylib_header
000062a8	addis	r4,r31,__mh_dylib_header
000062ac	addis	r6,r31,__mh_dylib_header
000062b0	li	r5,0x658
000062b4	addi	r3,r3,0x7330
000062b8	addi	r4,r4,0x7d6c
000062bc	addi	r6,r6,0x7384
000062c0	b	0x62e8
000062c4	or.	r0,r6,r7
000062c8	bne+	0x62ec
000062cc	addis	r3,r31,__mh_dylib_header
000062d0	addis	r4,r31,__mh_dylib_header
000062d4	addis	r6,r31,__mh_dylib_header
000062d8	li	r5,0x659
000062dc	addi	r3,r3,0x7330
000062e0	addi	r4,r4,0x7d6c
000062e4	addi	r6,r6,0x7dc4
000062e8	bl	___eprintf
000062ec	cmpwi	cr7,r8,__mh_dylib_header
000062f0	bne+	cr7,0x6314
000062f4	addis	r3,r31,__mh_dylib_header
000062f8	addis	r4,r31,__mh_dylib_header
000062fc	addis	r6,r31,__mh_dylib_header
00006300	li	r5,0x65a
00006304	addi	r3,r3,0x7330
00006308	addi	r4,r4,0x7d6c
0000630c	addi	r6,r6,0x7dd0
00006310	b	0x62e8
00006314	lwz	r0,__mh_dylib_header(r8)
00006318	cmpwi	cr7,r0,__mh_dylib_header
0000631c	beq+	cr7,0x6340
00006320	addis	r3,r31,__mh_dylib_header
00006324	addis	r4,r31,__mh_dylib_header
00006328	addis	r6,r31,__mh_dylib_header
0000632c	li	r5,0x65b
00006330	addi	r3,r3,0x7330
00006334	addi	r4,r4,0x7d6c
00006338	addi	r6,r6,0x7de0
0000633c	b	0x62e8
00006340	cmpwi	cr7,r9,__mh_dylib_header
00006344	bne+	cr7,0x6368
00006348	addis	r3,r31,__mh_dylib_header
0000634c	addis	r4,r31,__mh_dylib_header
00006350	addis	r6,r31,__mh_dylib_header
00006354	li	r5,0x65c
00006358	addi	r3,r3,0x7330
0000635c	addi	r4,r4,0x7d6c
00006360	addi	r6,r6,0x7df4
00006364	b	0x62e8
00006368	lwz	r28,0x50(r3)
0000636c	or	r6,r7,r7
00006370	addi	r7,r1,0x38
00006374	stw	r0,0x38(r1)
00006378	or	r3,r28,r28
0000637c	bl	_QTMRemap
00006380	cmpwi	cr7,r3,0xe
00006384	bne	cr7,0x63cc
00006388	lwz	r0,0x38(r1)
0000638c	cmpwi	cr7,r0,__mh_dylib_header
00006390	beq+	cr7,0x63b4
00006394	addis	r3,r31,__mh_dylib_header
00006398	addis	r4,r31,__mh_dylib_header
0000639c	addis	r6,r31,__mh_dylib_header
000063a0	li	r5,0x66b
000063a4	addi	r3,r3,0x7330
000063a8	addi	r4,r4,0x7d6c
000063ac	addi	r6,r6,0x7e40
000063b0	b	0x62e8
000063b4	or	r3,r28,r28
000063b8	or	r4,r25,r25
000063bc	or	r5,r26,r26
000063c0	or	r6,r30,r30
000063c4	addi	r7,r1,0x38
000063c8	bl	_QTMReadAllocated
000063cc	cmpwi	cr7,r3,__mh_dylib_header
000063d0	bne	cr7,0x63e0
000063d4	lwz	r0,0x38(r1)
000063d8	stw	r0,__mh_dylib_header(r27)
000063dc	stw	r3,__mh_dylib_header(r24)
000063e0	mfcr	r9
000063e4	rlwinm	r9,r9,31,31,31
000063e8	lwz	r0,__mh_dylib_header(r27)
000063ec	addic	r11,r0,0xffff
000063f0	subfe	r2,r11,r0
000063f4	cmpw	cr7,r9,r2
000063f8	beq+	cr7,0x641c
000063fc	addis	r3,r31,__mh_dylib_header
00006400	addis	r4,r31,__mh_dylib_header
00006404	addis	r6,r31,__mh_dylib_header
00006408	li	r5,0x673
0000640c	addi	r3,r3,0x7330
00006410	addi	r4,r4,0x7d6c
00006414	addi	r6,r6,0x7e0c
00006418	b	0x62e8
0000641c	addi	r1,r1,0x70
00006420	lwz	r0,0x8(r1)
00006424	lmw	r24,0xffe0(r1)
00006428	mtspr	lr,r0
0000642c	blr
_QMOTaskImageUnmapRange:
00006430	mfspr	r0,lr
00006434	cmpwi	cr7,r3,__mh_dylib_header
00006438	stw	r31,0xfffc(r1)
0000643c	or	r3,r8,r8
00006440	bcl	20,31,0x6444
00006444	mfspr	r31,lr
00006448	stw	r0,0x8(r1)
0000644c	stwu	r1,0xffb0(r1)
00006450	bne+	cr7,0x6474
00006454	addis	r3,r31,__mh_dylib_header
00006458	addis	r4,r31,__mh_dylib_header
0000645c	addis	r6,r31,__mh_dylib_header
00006460	li	r5,0x684
00006464	addi	r3,r3,0x716c
00006468	addi	r4,r4,0x7ba8
0000646c	addi	r6,r6,0x71c0
00006470	b	0x6498
00006474	or.	r0,r6,r7
00006478	bne+	0x649c
0000647c	addis	r3,r31,__mh_dylib_header
00006480	addis	r4,r31,__mh_dylib_header
00006484	addis	r6,r31,__mh_dylib_header
00006488	li	r5,0x685
0000648c	addi	r3,r3,0x716c
00006490	addi	r4,r4,0x7ba8
00006494	addi	r6,r6,0x7c00
00006498	bl	___eprintf
0000649c	cmpwi	cr7,r8,__mh_dylib_header
000064a0	bne+	cr7,0x64c4
000064a4	addis	r3,r31,__mh_dylib_header
000064a8	addis	r4,r31,__mh_dylib_header
000064ac	addis	r6,r31,__mh_dylib_header
000064b0	li	r5,0x686
000064b4	addi	r3,r3,0x716c
000064b8	addi	r4,r4,0x7ba8
000064bc	addi	r6,r6,0x7c6c
000064c0	b	0x6498
000064c4	addi	r1,r1,0x50
000064c8	or	r4,r7,r7
000064cc	lwz	r0,0x8(r1)
000064d0	lwz	r31,0xfffc(r1)
000064d4	mtspr	lr,r0
000064d8	b	_QTMFree
_QMOLocalImageMapRange:
000064dc	mfspr	r0,lr
000064e0	cmpwi	cr7,r3,__mh_dylib_header
000064e4	stw	r31,0xfffc(r1)
000064e8	bcl	20,31,0x64ec
000064ec	mfspr	r31,lr
000064f0	stw	r0,0x8(r1)
000064f4	stwu	r1,0xffb0(r1)
000064f8	bne+	cr7,0x651c
000064fc	addis	r3,r31,__mh_dylib_header
00006500	addis	r4,r31,__mh_dylib_header
00006504	addis	r6,r31,__mh_dylib_header
00006508	li	r5,0x6fc
0000650c	addi	r3,r3,0x70c4
00006510	addi	r4,r4,0x7b00
00006514	addi	r6,r6,0x7118
00006518	b	0x6540
0000651c	or.	r0,r6,r7
00006520	bne+	0x6544
00006524	addis	r3,r31,__mh_dylib_header
00006528	addis	r4,r31,__mh_dylib_header
0000652c	addis	r6,r31,__mh_dylib_header
00006530	li	r5,0x6fd
00006534	addi	r3,r3,0x70c4
00006538	addi	r4,r4,0x7b00
0000653c	addi	r6,r6,0x7b58
00006540	bl	___eprintf
00006544	cmpwi	cr7,r8,__mh_dylib_header
00006548	bne+	cr7,0x656c
0000654c	addis	r3,r31,__mh_dylib_header
00006550	addis	r4,r31,__mh_dylib_header
00006554	addis	r6,r31,__mh_dylib_header
00006558	li	r5,0x6fe
0000655c	addi	r3,r3,0x70c4
00006560	addi	r4,r4,0x7b00
00006564	addi	r6,r6,0x7b64
00006568	b	0x6540
0000656c	lwz	r0,__mh_dylib_header(r8)
00006570	cmpwi	cr7,r0,__mh_dylib_header
00006574	beq+	cr7,0x6598
00006578	addis	r3,r31,__mh_dylib_header
0000657c	addis	r4,r31,__mh_dylib_header
00006580	addis	r6,r31,__mh_dylib_header
00006584	li	r5,0x6ff
00006588	addi	r3,r3,0x70c4
0000658c	addi	r4,r4,0x7b00
00006590	addi	r6,r6,0x7b74
00006594	b	0x6540
00006598	cmpwi	cr7,r9,__mh_dylib_header
0000659c	bne+	cr7,0x65c0
000065a0	addis	r3,r31,__mh_dylib_header
000065a4	addis	r4,r31,__mh_dylib_header
000065a8	addis	r6,r31,__mh_dylib_header
000065ac	li	r5,0x700
000065b0	addi	r3,r3,0x70c4
000065b4	addi	r4,r4,0x7b00
000065b8	addi	r6,r6,0x7b88
000065bc	b	0x6540
000065c0	stw	r5,__mh_dylib_header(r8)
000065c4	stw	r0,__mh_dylib_header(r9)
000065c8	nop
000065cc	nop
000065d0	lwz	r0,__mh_dylib_header(r8)
000065d4	cmpwi	cr7,r0,__mh_dylib_header
000065d8	bne+	cr7,0x65fc
000065dc	addis	r3,r31,__mh_dylib_header
000065e0	addis	r4,r31,__mh_dylib_header
000065e4	addis	r6,r31,__mh_dylib_header
000065e8	li	r5,0x706
000065ec	addi	r3,r3,0x70c4
000065f0	addi	r4,r4,0x7b00
000065f4	addi	r6,r6,0x7ba0
000065f8	b	0x6540
000065fc	addi	r1,r1,0x50
00006600	li	r3,__mh_dylib_header
00006604	lwz	r0,0x8(r1)
00006608	lwz	r31,0xfffc(r1)
0000660c	mtspr	lr,r0
00006610	blr
_QMOLocalImageUnmapRange:
00006614	mfspr	r0,lr
00006618	cmpwi	cr7,r3,__mh_dylib_header
0000661c	stw	r31,0xfffc(r1)
00006620	bcl	20,31,0x6624
00006624	mfspr	r31,lr
00006628	stw	r0,0x8(r1)
0000662c	stwu	r1,0xffb0(r1)
00006630	bne+	cr7,0x6654
00006634	addis	r3,r31,__mh_dylib_header
00006638	addis	r4,r31,__mh_dylib_header
0000663c	addis	r6,r31,__mh_dylib_header
00006640	li	r5,0x717
00006644	addi	r3,r3,0x6f8c
00006648	addi	r4,r4,0x79c8
0000664c	addi	r6,r6,0x6fe0
00006650	b	0x6678
00006654	or.	r0,r6,r7
00006658	bne+	0x667c
0000665c	addis	r3,r31,__mh_dylib_header
00006660	addis	r4,r31,__mh_dylib_header
00006664	addis	r6,r31,__mh_dylib_header
00006668	li	r5,0x718
0000666c	addi	r3,r3,0x6f8c
00006670	addi	r4,r4,0x79c8
00006674	addi	r6,r6,0x7a20
00006678	bl	___eprintf
0000667c	cmpwi	cr7,r8,__mh_dylib_header
00006680	bne+	cr7,0x66a4
00006684	addis	r3,r31,__mh_dylib_header
00006688	addis	r4,r31,__mh_dylib_header
0000668c	addis	r6,r31,__mh_dylib_header
00006690	li	r5,0x719
00006694	addi	r3,r3,0x6f8c
00006698	addi	r4,r4,0x79c8
0000669c	addi	r6,r6,0x7a8c
000066a0	b	0x6678
000066a4	addi	r1,r1,0x50
000066a8	lwz	r0,0x8(r1)
000066ac	lwz	r31,0xfffc(r1)
000066b0	mtspr	lr,r0
000066b4	blr
_QMOImageToLocalUInt8:
000066b8	mfspr	r0,lr
000066bc	cmpwi	r3,__mh_dylib_header
000066c0	stw	r31,0xfffc(r1)
000066c4	bcl	20,31,0x66c8
000066c8	mfspr	r31,lr
000066cc	stw	r0,0x8(r1)
000066d0	stwu	r1,0xffb0(r1)
000066d4	beq	0x66f0
000066d8	lwz	r0,0x44(r3)
000066dc	cmpwi	cr7,r0,__mh_dylib_header
000066e0	beq	cr7,0x66f0
000066e4	lwz	r0,0x48(r3)
000066e8	cmpwi	cr7,r0,__mh_dylib_header
000066ec	bne	cr7,0x6710
000066f0	addis	r3,r31,__mh_dylib_header
000066f4	addis	r4,r31,__mh_dylib_header
000066f8	addis	r6,r31,__mh_dylib_header
000066fc	li	r5,0x4be
00006700	addi	r3,r3,0x6ee8
00006704	addi	r4,r4,0x7924
00006708	addi	r6,r6,0x7958
0000670c	bl	___eprintf
00006710	addi	r1,r1,0x50
00006714	or	r3,r4,r4
00006718	lwz	r0,0x8(r1)
0000671c	lwz	r31,0xfffc(r1)
00006720	mtspr	lr,r0
00006724	blr
_QMOImageToLocalUInt16:
00006728	mfspr	r0,lr
0000672c	cmpwi	r3,__mh_dylib_header
00006730	stw	r31,0xfffc(r1)
00006734	bcl	20,31,0x6738
00006738	mfspr	r31,lr
0000673c	stw	r0,0x8(r1)
00006740	stwu	r1,0xffa0(r1)
00006744	beq	0x6760
00006748	lwz	r0,0x44(r3)
0000674c	cmpwi	cr7,r0,__mh_dylib_header
00006750	beq	cr7,0x6760
00006754	lwz	r0,0x48(r3)
00006758	cmpwi	cr7,r0,__mh_dylib_header
0000675c	bne	cr7,0x6780
00006760	addis	r3,r31,__mh_dylib_header
00006764	addis	r4,r31,__mh_dylib_header
00006768	addis	r6,r31,__mh_dylib_header
0000676c	li	r5,0x4c6
00006770	addi	r3,r3,0x6e78
00006774	addi	r4,r4,0x78b4
00006778	addi	r6,r6,0x78e8
0000677c	bl	___eprintf
00006780	lwz	r0,0x30(r3)
00006784	cmpwi	cr7,r0,__mh_dylib_header
00006788	beq	cr7,0x67a4
0000678c	sth	r4,0x38(r1)
00006790	addi	r0,r1,0x38
00006794	nop
00006798	nop
0000679c	lhbrx	r0,0,r0
000067a0	rlwinm	r4,r0,0,16,31
000067a4	addi	r1,r1,0x60
000067a8	or	r3,r4,r4
000067ac	lwz	r0,0x8(r1)
000067b0	lwz	r31,0xfffc(r1)
000067b4	mtspr	lr,r0
000067b8	blr
_QMOImageToLocalUInt32:
000067bc	mfspr	r0,lr
000067c0	cmpwi	r3,__mh_dylib_header
000067c4	stw	r31,0xfffc(r1)
000067c8	bcl	20,31,0x67cc
000067cc	mfspr	r31,lr
000067d0	stw	r0,0x8(r1)
000067d4	stwu	r1,0xffa0(r1)
000067d8	beq	0x67f4
000067dc	lwz	r0,0x44(r3)
000067e0	cmpwi	cr7,r0,__mh_dylib_header
000067e4	beq	cr7,0x67f4
000067e8	lwz	r0,0x48(r3)
000067ec	cmpwi	cr7,r0,__mh_dylib_header
000067f0	bne	cr7,0x6814
000067f4	addis	r3,r31,__mh_dylib_header
000067f8	addis	r4,r31,__mh_dylib_header
000067fc	addis	r6,r31,__mh_dylib_header
00006800	li	r5,0x4d1
00006804	addi	r3,r3,0x6de4
00006808	addi	r4,r4,0x7820
0000680c	addi	r6,r6,0x7854
00006810	bl	___eprintf
00006814	lwz	r0,0x30(r3)
00006818	cmpwi	cr7,r0,__mh_dylib_header
0000681c	beq	cr7,0x6834
00006820	stw	r4,0x38(r1)
00006824	addi	r0,r1,0x38
00006828	nop
0000682c	nop
00006830	lwbrx	r4,0,r0
00006834	addi	r1,r1,0x60
00006838	or	r3,r4,r4
0000683c	lwz	r0,0x8(r1)
00006840	lwz	r31,0xfffc(r1)
00006844	mtspr	lr,r0
00006848	blr
_FindLoadCommand:
0000684c	mfspr	r0,lr
00006850	stmw	r21,0xffd4(r1)
00006854	or.	r29,r3,r3
00006858	bcl	20,31,0x685c
0000685c	or	r25,r4,r4
00006860	or	r21,r5,r5
00006864	mfspr	r31,lr
00006868	stw	r0,0x8(r1)
0000686c	stwu	r1,0xff90(r1)
00006870	bne+	0x6894
00006874	addis	r3,r31,__mh_dylib_header
00006878	addis	r4,r31,__mh_dylib_header
0000687c	addis	r6,r31,__mh_dylib_header
00006880	li	r5,0x164
00006884	addi	r3,r3,0x6d54
00006888	addi	r4,r4,0x7790
0000688c	addi	r6,r6,0x6da8
00006890	b	0x68bc
00006894	lwz	r2,0xc(r29)
00006898	cmpwi	cr7,r2,__mh_dylib_header
0000689c	bne+	cr7,0x68c0
000068a0	addis	r3,r31,__mh_dylib_header
000068a4	addis	r4,r31,__mh_dylib_header
000068a8	addis	r6,r31,__mh_dylib_header
000068ac	li	r5,0x165
000068b0	addi	r3,r3,0x6d54
000068b4	addi	r4,r4,0x7790
000068b8	addi	r6,r6,0x7874
000068bc	bl	___eprintf
000068c0	cmpwi	cr7,r4,__mh_dylib_header
000068c4	bne+	cr7,0x68e8
000068c8	addis	r3,r31,__mh_dylib_header
000068cc	addis	r4,r31,__mh_dylib_header
000068d0	addis	r6,r31,__mh_dylib_header
000068d4	li	r5,0x166
000068d8	addi	r3,r3,0x6d54
000068dc	addi	r4,r4,0x7790
000068e0	addi	r6,r6,0x7894
000068e4	b	0x68bc
000068e8	lwz	r4,0x10(r2)
000068ec	bl	_QMOImageToLocalUInt32
000068f0	lwz	r0,0x2c(r29)
000068f4	or	r24,r3,r3
000068f8	cmpwi	cr7,r0,__mh_dylib_header
000068fc	beq	cr7,0x6914
00006900	lwz	r2,0xc(r29)
00006904	addi	r28,r2,0x20
00006908	b	0x691c
0000690c	or	r3,r30,r30
00006910	b	0x69e8
00006914	lwz	r2,0xc(r29)
00006918	addi	r28,r2,0x1c
0000691c	lwz	r0,0x14(r29)
00006920	or	r30,r28,r28
00006924	li	r26,__mh_dylib_header
00006928	addis	r23,r31,__mh_dylib_header
0000692c	addis	r22,r31,__mh_dylib_header
00006930	add	r27,r2,r0
00006934	b	0x69dc
00006938	lwz	r4,0x4(r30)
0000693c	or	r3,r29,r29
00006940	bl	_QMOImageToLocalUInt32
00006944	cmplw	cr7,r30,r28
00006948	bge+	cr7,0x6964
0000694c	addis	r6,r31,__mh_dylib_header
00006950	addi	r3,r23,0x6d54
00006954	addi	r4,r22,0x7790
00006958	li	r5,0x17f
0000695c	addi	r6,r6,0x78a8
00006960	b	0x68bc
00006964	cmplw	cr7,r27,r30
00006968	bgt+	cr7,0x6984
0000696c	addis	r6,r31,__mh_dylib_header
00006970	addi	r3,r23,0x6d54
00006974	addi	r4,r22,0x7790
00006978	li	r5,0x180
0000697c	addi	r6,r6,0x78e8
00006980	b	0x68bc
00006984	add	r0,r30,r3
00006988	cmplw	cr7,r27,r0
0000698c	bge+	cr7,0x69a8
00006990	addis	r6,r31,__mh_dylib_header
00006994	addi	r3,r23,0x6d54
00006998	addi	r4,r22,0x7790
0000699c	li	r5,0x181
000069a0	addi	r6,r6,0x7914
000069a4	b	0x68bc
000069a8	mtspr	ctr,r25
000069ac	or	r3,r29,r29
000069b0	or	r4,r30,r30
000069b4	or	r5,r21,r21
000069b8	or	r12,r25,r25
000069bc	bctrl
000069c0	cmpwi	cr7,r3,__mh_dylib_header
000069c4	bne	cr7,0x690c
000069c8	lwz	r4,0x4(r30)
000069cc	or	r3,r29,r29
000069d0	addi	r26,r26,0x1
000069d4	bl	_QMOImageToLocalUInt32
000069d8	add	r30,r30,r3
000069dc	cmplw	cr7,r24,r26
000069e0	bgt	cr7,0x6938
000069e4	li	r3,__mh_dylib_header
000069e8	addi	r1,r1,0x70
000069ec	lwz	r0,0x8(r1)
000069f0	lmw	r21,0xffd4(r1)
000069f4	mtspr	lr,r0
000069f8	blr
_InitSegment:
000069fc	mfspr	r0,lr
00006a00	stmw	r27,0xffec(r1)
00006a04	or.	r29,r3,r3
00006a08	bcl	20,31,0x6a0c
00006a0c	or	r27,r4,r4
00006a10	or	r30,r5,r5
00006a14	mfspr	r31,lr
00006a18	stw	r0,0x8(r1)
00006a1c	stwu	r1,0xffa0(r1)
00006a20	bne+	0x6a44
00006a24	addis	r3,r31,__mh_dylib_header
00006a28	addis	r4,r31,__mh_dylib_header
00006a2c	addis	r6,r31,__mh_dylib_header
00006a30	li	r5,0x203
00006a34	addi	r3,r3,0x6ba4
00006a38	addi	r4,r4,0x75e0
00006a3c	addi	r6,r6,0x6bf8
00006a40	b	0x6a68
00006a44	cmpwi	cr7,r4,__mh_dylib_header
00006a48	bne+	cr7,0x6a6c
00006a4c	addis	r3,r31,__mh_dylib_header
00006a50	addis	r4,r31,__mh_dylib_header
00006a54	addis	r6,r31,__mh_dylib_header
00006a58	li	r5,0x204
00006a5c	addi	r3,r3,0x6ba4
00006a60	addi	r4,r4,0x75e0
00006a64	addi	r6,r6,0x77a8
00006a68	bl	___eprintf
00006a6c	cmpwi	cr7,r5,__mh_dylib_header
00006a70	bne+	cr7,0x6a94
00006a74	addis	r3,r31,__mh_dylib_header
00006a78	addis	r4,r31,__mh_dylib_header
00006a7c	addis	r6,r31,__mh_dylib_header
00006a80	li	r5,0x205
00006a84	addi	r3,r3,0x6ba4
00006a88	addi	r4,r4,0x75e0
00006a8c	addi	r6,r6,0x77b4
00006a90	b	0x6a68
00006a94	lwz	r0,0x38(r29)
00006a98	cmpwi	cr7,r0,__mh_dylib_header
00006a9c	bne+	cr7,0x6ac0
00006aa0	addis	r3,r31,__mh_dylib_header
00006aa4	addis	r4,r31,__mh_dylib_header
00006aa8	addis	r6,r31,__mh_dylib_header
00006aac	li	r5,0x206
00006ab0	addi	r3,r3,0x6ba4
00006ab4	addi	r4,r4,0x75e0
00006ab8	addi	r6,r6,_QMOImageGetCPUType
00006abc	b	0x6a68
00006ac0	lwz	r4,__mh_dylib_header(r4)
00006ac4	bl	_QMOImageToLocalUInt32
00006ac8	cmpwi	cr7,r3,0x1
00006acc	beq	cr7,0x6ad8
00006ad0	cmpwi	cr7,r3,0x19
00006ad4	bne	cr7,0x6d14
00006ad8	lwz	r11,__mh_dylib_header(r30)
00006adc	lwz	r0,0x34(r29)
00006ae0	cmplw	cr7,r11,r0
00006ae4	blt+	cr7,0x6b08
00006ae8	addis	r3,r31,__mh_dylib_header
00006aec	addis	r4,r31,__mh_dylib_header
00006af0	addis	r6,r31,__mh_dylib_header
00006af4	li	r5,0x20e
00006af8	addi	r3,r3,0x6ba4
00006afc	addi	r4,r4,0x75e0
00006b00	addi	r6,r6,0x77e8
00006b04	b	0x6a68
00006b08	lwz	r9,0x38(r29)
00006b0c	mulli	r11,r11,0x54
00006b10	cmpwi	cr7,r3,0x19
00006b14	stwx	r27,r11,r9
00006b18	lwz	r2,__mh_dylib_header(r30)
00006b1c	lwz	r9,0x38(r29)
00006b20	mulli	r0,r2,0x54
00006b24	addi	r2,r2,0x1
00006b28	stw	r2,__mh_dylib_header(r30)
00006b2c	add	r30,r0,r9
00006b30	addi	r28,r30,0x4
00006b34	bne	cr7,0x6c1c
00006b38	lwz	r4,__mh_dylib_header(r27)
00006b3c	or	r3,r29,r29
00006b40	bl	_QMOImageToLocalUInt32
00006b44	lwz	r4,0x4(r27)
00006b48	stw	r3,0x4(r30)
00006b4c	or	r3,r29,r29
00006b50	bl	_QMOImageToLocalUInt32
00006b54	addi	r2,r27,0x8
00006b58	lwz	r0,0x8(r27)
00006b5c	addi	r9,r30,0xc
00006b60	lwz	r5,0x1c(r27)
00006b64	stw	r3,0x4(r28)
00006b68	lwz	r4,0x18(r27)
00006b6c	or	r3,r29,r29
00006b70	lwz	r11,0xc(r2)
00006b74	lwz	r10,0x4(r2)
00006b78	lwz	r8,0x8(r2)
00006b7c	stw	r0,0xc(r30)
00006b80	stw	r11,0xc(r9)
00006b84	stw	r10,0x4(r9)
00006b88	stw	r8,0x8(r9)
00006b8c	bl	_QMOImageToLocalUInt64
00006b90	lwz	r5,0x24(r27)
00006b94	stw	r3,0x18(r28)
00006b98	stw	r4,0x1c(r28)
00006b9c	or	r3,r29,r29
00006ba0	lwz	r4,0x20(r27)
00006ba4	bl	_QMOImageToLocalUInt64
00006ba8	lwz	r5,0x2c(r27)
00006bac	stw	r3,0x20(r28)
00006bb0	stw	r4,0x24(r28)
00006bb4	or	r3,r29,r29
00006bb8	lwz	r4,0x28(r27)
00006bbc	bl	_QMOImageToLocalUInt64
00006bc0	lwz	r5,0x34(r27)
00006bc4	stw	r3,0x28(r28)
00006bc8	stw	r4,0x2c(r28)
00006bcc	or	r3,r29,r29
00006bd0	lwz	r4,0x30(r27)
00006bd4	bl	_QMOImageToLocalUInt64
00006bd8	stw	r3,0x30(r28)
00006bdc	stw	r4,0x34(r28)
00006be0	or	r3,r29,r29
00006be4	lwz	r4,0x38(r27)
00006be8	bl	_QMOImageToLocalUInt32
00006bec	lwz	r4,0x3c(r27)
00006bf0	stw	r3,0x38(r28)
00006bf4	or	r3,r29,r29
00006bf8	bl	_QMOImageToLocalUInt32
00006bfc	lwz	r4,0x40(r27)
00006c00	stw	r3,0x3c(r28)
00006c04	or	r3,r29,r29
00006c08	bl	_QMOImageToLocalUInt32
00006c0c	lwz	r4,0x44(r27)
00006c10	stw	r3,0x40(r28)
00006c14	or	r3,r29,r29
00006c18	b	0x6d0c
00006c1c	lwz	r4,__mh_dylib_header(r27)
00006c20	or	r3,r29,r29
00006c24	bl	_QMOImageToLocalUInt32
00006c28	stw	r3,0x4(r30)
00006c2c	or	r3,r29,r29
00006c30	lwz	r4,0x4(r27)
00006c34	bl	_QMOImageToLocalUInt32
00006c38	addi	r2,r27,0x8
00006c3c	addi	r9,r30,0xc
00006c40	stw	r3,0x4(r28)
00006c44	or	r3,r29,r29
00006c48	lwz	r10,0x8(r2)
00006c4c	lwz	r8,0xc(r2)
00006c50	lwz	r0,0x8(r27)
00006c54	lwz	r11,0x4(r2)
00006c58	stw	r0,0xc(r30)
00006c5c	stw	r8,0xc(r9)
00006c60	stw	r11,0x4(r9)
00006c64	stw	r10,0x8(r9)
00006c68	lwz	r4,0x18(r27)
00006c6c	bl	_QMOImageToLocalUInt32
00006c70	li	r9,__mh_dylib_header
00006c74	or	r10,r3,r3
00006c78	or	r3,r29,r29
00006c7c	stw	r9,0x18(r28)
00006c80	stw	r10,0x1c(r28)
00006c84	lwz	r4,0x1c(r27)
00006c88	bl	_QMOImageToLocalUInt32
00006c8c	li	r9,__mh_dylib_header
00006c90	or	r10,r3,r3
00006c94	or	r3,r29,r29
00006c98	stw	r9,0x20(r28)
00006c9c	stw	r10,0x24(r28)
00006ca0	lwz	r4,0x20(r27)
00006ca4	bl	_QMOImageToLocalUInt32
00006ca8	li	r9,__mh_dylib_header
00006cac	or	r10,r3,r3
00006cb0	or	r3,r29,r29
00006cb4	stw	r9,0x28(r28)
00006cb8	stw	r10,0x2c(r28)
00006cbc	lwz	r4,0x24(r27)
00006cc0	bl	_QMOImageToLocalUInt32
00006cc4	li	r9,__mh_dylib_header
00006cc8	or	r10,r3,r3
00006ccc	or	r3,r29,r29
00006cd0	stw	r9,0x30(r28)
00006cd4	stw	r10,0x34(r28)
00006cd8	lwz	r4,0x28(r27)
00006cdc	bl	_QMOImageToLocalUInt32
00006ce0	stw	r3,0x38(r28)
00006ce4	or	r3,r29,r29
00006ce8	lwz	r4,0x2c(r27)
00006cec	bl	_QMOImageToLocalUInt32
00006cf0	stw	r3,0x3c(r28)
00006cf4	or	r3,r29,r29
00006cf8	lwz	r4,0x30(r27)
00006cfc	bl	_QMOImageToLocalUInt32
00006d00	stw	r3,0x40(r28)
00006d04	or	r3,r29,r29
00006d08	lwz	r4,0x34(r27)
00006d0c	bl	_QMOImageToLocalUInt32
00006d10	stw	r3,0x44(r28)
00006d14	addi	r1,r1,0x60
00006d18	li	r3,__mh_dylib_header
00006d1c	lwz	r0,0x8(r1)
00006d20	lmw	r27,0xffec(r1)
00006d24	mtspr	lr,r0
00006d28	blr
_CountSegmentsAndSections:
00006d2c	mfspr	r0,lr
00006d30	stmw	r29,0xfff4(r1)
00006d34	or.	r30,r3,r3
00006d38	bcl	20,31,0x6d3c
00006d3c	or	r29,r4,r4
00006d40	mfspr	r31,lr
00006d44	stw	r0,0x8(r1)
00006d48	stwu	r1,0xffb0(r1)
00006d4c	bne+	0x6d70
00006d50	addis	r3,r31,__mh_dylib_header
00006d54	addis	r4,r31,__mh_dylib_header
00006d58	addis	r6,r31,__mh_dylib_header
00006d5c	li	r5,0x1e7
00006d60	addi	r3,r3,0x6874
00006d64	addi	r4,r4,0x72b0
00006d68	addi	r6,r6,0x68c8
00006d6c	b	0x6d94
00006d70	cmpwi	cr7,r4,__mh_dylib_header
00006d74	bne+	cr7,0x6d98
00006d78	addis	r3,r31,__mh_dylib_header
00006d7c	addis	r4,r31,__mh_dylib_header
00006d80	addis	r6,r31,__mh_dylib_header
00006d84	li	r5,0x1e8
00006d88	addi	r3,r3,0x6874
00006d8c	addi	r4,r4,0x72b0
00006d90	addi	r6,r6,0x7478
00006d94	bl	___eprintf
00006d98	cmpwi	cr7,r5,__mh_dylib_header
00006d9c	beq+	cr7,0x6dc0
00006da0	addis	r3,r31,__mh_dylib_header
00006da4	addis	r4,r31,__mh_dylib_header
00006da8	addis	r6,r31,__mh_dylib_header
00006dac	li	r5,0x1e9
00006db0	addi	r3,r3,0x6874
00006db4	addi	r4,r4,0x72b0
00006db8	addi	r6,r6,0x74dc
00006dbc	b	0x6d94
00006dc0	lwz	r4,__mh_dylib_header(r4)
00006dc4	bl	_QMOImageToLocalUInt32
00006dc8	cmpwi	cr7,r3,0x1
00006dcc	beq	cr7,0x6ddc
00006dd0	cmpwi	cr7,r3,0x19
00006dd4	bne	cr7,0x6e10
00006dd8	b	0x6de0
00006ddc	cmpwi	cr7,r3,0x19
00006de0	lwz	r2,0x34(r30)
00006de4	addi	r2,r2,0x1
00006de8	stw	r2,0x34(r30)
00006dec	bne	cr7,0x6df8
00006df0	lwz	r4,0x40(r29)
00006df4	b	0x6dfc
00006df8	lwz	r4,0x30(r29)
00006dfc	lwz	r29,0x3c(r30)
00006e00	or	r3,r30,r30
00006e04	bl	_QMOImageToLocalUInt32
00006e08	add	r29,r29,r3
00006e0c	stw	r29,0x3c(r30)
00006e10	addi	r1,r1,0x50
00006e14	li	r3,__mh_dylib_header
00006e18	lwz	r0,0x8(r1)
00006e1c	lmw	r29,0xfff4(r1)
00006e20	mtspr	lr,r0
00006e24	blr
_QMOGetLocalCPUType:
00006e28	mfspr	r0,lr
00006e2c	stmw	r30,0xfff8(r1)
00006e30	bcl	20,31,0x6e34
00006e34	mfspr	r31,lr
00006e38	stw	r0,0x8(r1)
00006e3c	stwu	r1,0xffb0(r1)
00006e40	addis	r30,r31,0x1
00006e44	lwz	r3,0x8344(r30)
00006e48	cmpwi	cr7,r3,__mh_dylib_header
00006e4c	bne	cr7,0x6e58
00006e50	bl	0xcf00	; symbol stub for: _NXGetLocalArchInfo
00006e54	stw	r3,0x8344(r30)
00006e58	addi	r1,r1,0x50
00006e5c	lwz	r3,0x4(r3)
00006e60	lwz	r0,0x8(r1)
00006e64	lmw	r30,0xfff8(r1)
00006e68	mtspr	lr,r0
00006e6c	blr
_IsDyldAtAddress:
00006e70	mfspr	r0,lr
00006e74	cmpwi	cr7,r3,__mh_dylib_header
00006e78	stmw	r27,0xffec(r1)
00006e7c	bcl	20,31,0x6e80
00006e80	or	r30,r4,r4
00006e84	or	r29,r6,r6
00006e88	mfspr	r31,lr
00006e8c	stw	r0,0x8(r1)
00006e90	or	r28,r5,r5
00006e94	or	r27,r7,r7
00006e98	stwu	r1,0xff80(r1)
00006e9c	bne+	cr7,0x6ec0
00006ea0	addis	r3,r31,__mh_dylib_header
00006ea4	addis	r4,r31,__mh_dylib_header
00006ea8	addis	r6,r31,__mh_dylib_header
00006eac	li	r5,0x7cd
00006eb0	addi	r3,r3,0x6730
00006eb4	addi	r4,r4,0x716c
00006eb8	addi	r6,r6,0x67f4
00006ebc	bl	___eprintf
00006ec0	andi.	r0,r7,0x5
00006ec4	cmpwi	cr7,r0,0x5
00006ec8	bne	cr7,0x715c
00006ecc	or	r4,r5,r5
00006ed0	addi	r7,r1,0x3c
00006ed4	or	r5,r6,r6
00006ed8	li	r6,0x1c
00006edc	bl	_QTMRead
00006ee0	or.	r27,r3,r3
00006ee4	bne	0x70ec
00006ee8	lwz	r9,0x3c(r1)
00006eec	addis	r2,r9,0x112
00006ef0	addi	r2,r2,0x532
00006ef4	cmplwi	cr7,r2,0x1
00006ef8	ble	cr7,0x6f48
00006efc	lis	r0,0xcefa
00006f00	ori	r0,r0,0xedfe
00006f04	cmpw	cr7,r9,r0
00006f08	beq	cr7,0x6f1c
00006f0c	lis	r0,0xcffa
00006f10	ori	r0,r0,0xedfe
00006f14	cmpw	cr7,r9,r0
00006f18	bne	cr7,0x71d0
00006f1c	lwz	r9,0x48(r1)
00006f20	lwz	r2,0x40(r1)
00006f24	addi	r0,r1,0x38
00006f28	stw	r9,0x38(r1)
00006f2c	lwbrx	r9,0,r0
00006f30	stw	r2,0x38(r1)
00006f34	stw	r9,0x48(r1)
00006f38	nop
00006f3c	lwbrx	r0,0,r0
00006f40	stw	r0,0x40(r1)
00006f44	b	0x6f4c
00006f48	lwz	r9,0x48(r1)
00006f4c	cmpwi	cr7,r9,0x7
00006f50	bne	cr7,0x703c
00006f54	cmpwi	cr7,r30,0xffff
00006f58	beq	cr7,0x6f68
00006f5c	lwz	r0,0x40(r1)
00006f60	cmpw	cr7,r30,r0
00006f64	bne	cr7,0x71e8
00006f68	addis	r30,r31,0x1
00006f6c	lwz	r0,0x8300(r30)
00006f70	cmpwi	cr7,r0,__mh_dylib_header
00006f74	bne	cr7,0x6fa0
00006f78	addis	r3,r31,__mh_dylib_header
00006f7c	addi	r3,r3,0x73b0
00006f80	bl	0xd100	; symbol stub for: _getenv
00006f84	addis	r9,r31,0x1
00006f88	addic	r2,r3,0xffff
00006f8c	subfe	r0,r2,r3
00006f90	li	r2,0x1
00006f94	stw	r0,0x82fc(r9)
00006f98	stw	r2,0x8300(r30)
00006f9c	b	0x6fa4
00006fa0	addis	r9,r31,0x1
00006fa4	lwz	r0,0x82fc(r9)
00006fa8	li	r3,0x1
00006fac	cmpwi	cr7,r0,__mh_dylib_header
00006fb0	beq	cr7,0x7200
00006fb4	addis	r3,r31,0x1
00006fb8	lwz	r7,0x40(r1)
00006fbc	addis	r4,r31,__mh_dylib_header
00006fc0	or	r5,r28,r28
00006fc4	or	r6,r29,r29
00006fc8	lwz	r3,0x8284(r3)
00006fcc	addi	r4,r4,0x73cc
00006fd0	addi	r3,r3,0xb0
00006fd4	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00006fd8	li	r3,0x1
00006fdc	b	0x7200
00006fe0	addis	r3,r31,__mh_dylib_header
00006fe4	addi	r3,r3,0x73b0
00006fe8	bl	0xd100	; symbol stub for: _getenv
00006fec	addis	r9,r31,0x1
00006ff0	addic	r2,r3,0xffff
00006ff4	subfe	r0,r2,r3
00006ff8	li	r2,0x1
00006ffc	stw	r0,0x82fc(r9)
00007000	stw	r2,0x8300(r27)
00007004	lwz	r0,0x82fc(r9)
00007008	cmpwi	cr7,r0,__mh_dylib_header
0000700c	beq	cr7,0x71c8
00007010	addis	r3,r31,0x1
00007014	lwz	r8,0x40(r1)
00007018	addis	r4,r31,__mh_dylib_header
0000701c	or	r5,r28,r28
00007020	or	r6,r29,r29
00007024	lwz	r3,0x8284(r3)
00007028	addi	r4,r4,0x7404
0000702c	or	r7,r30,r30
00007030	addi	r3,r3,0xb0
00007034	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00007038	b	0x71c8
0000703c	addis	r30,r31,0x1
00007040	lwz	r0,0x8300(r30)
00007044	cmpwi	cr7,r0,__mh_dylib_header
00007048	bne	cr7,0x7074
0000704c	addis	r3,r31,__mh_dylib_header
00007050	addi	r3,r3,0x73b0
00007054	bl	0xd100	; symbol stub for: _getenv
00007058	addis	r9,r31,0x1
0000705c	addic	r2,r3,0xffff
00007060	subfe	r0,r2,r3
00007064	li	r2,0x1
00007068	stw	r0,0x82fc(r9)
0000706c	stw	r2,0x8300(r30)
00007070	b	0x7078
00007074	addis	r9,r31,0x1
00007078	lwz	r0,0x82fc(r9)
0000707c	cmpwi	cr7,r0,__mh_dylib_header
00007080	beq	cr7,0x71c8
00007084	addis	r4,r31,__mh_dylib_header
00007088	or	r5,r28,r28
0000708c	or	r6,r29,r29
00007090	addi	r4,r4,0x7460
00007094	b	0x70d8
00007098	addis	r3,r31,__mh_dylib_header
0000709c	addi	r3,r3,0x73b0
000070a0	bl	0xd100	; symbol stub for: _getenv
000070a4	addis	r9,r31,0x1
000070a8	addic	r2,r3,0xffff
000070ac	subfe	r0,r2,r3
000070b0	li	r2,0x1
000070b4	stw	r0,0x82fc(r9)
000070b8	stw	r2,0x8300(r30)
000070bc	lwz	r0,0x82fc(r9)
000070c0	cmpwi	cr7,r0,__mh_dylib_header
000070c4	beq	cr7,0x71c8
000070c8	addis	r4,r31,__mh_dylib_header
000070cc	or	r5,r28,r28
000070d0	or	r6,r29,r29
000070d4	addi	r4,r4,0x7498
000070d8	addis	r3,r31,0x1
000070dc	lwz	r3,0x8284(r3)
000070e0	addi	r3,r3,0xb0
000070e4	bl	0xd060	; symbol stub for: _fprintf$LDBL128
000070e8	b	0x71c8
000070ec	addis	r30,r31,0x1
000070f0	lwz	r0,0x8300(r30)
000070f4	cmpwi	cr7,r0,__mh_dylib_header
000070f8	bne	cr7,0x7124
000070fc	addis	r3,r31,__mh_dylib_header
00007100	addi	r3,r3,0x73b0
00007104	bl	0xd100	; symbol stub for: _getenv
00007108	addis	r9,r31,0x1
0000710c	addic	r2,r3,0xffff
00007110	subfe	r0,r2,r3
00007114	li	r2,0x1
00007118	stw	r0,0x82fc(r9)
0000711c	stw	r2,0x8300(r30)
00007120	b	0x7128
00007124	addis	r9,r31,0x1
00007128	lwz	r0,0x82fc(r9)
0000712c	cmpwi	cr7,r0,__mh_dylib_header
00007130	beq	cr7,0x71c8
00007134	addis	r3,r31,0x1
00007138	addis	r4,r31,__mh_dylib_header
0000713c	or	r5,r27,r27
00007140	or	r6,r28,r28
00007144	lwz	r3,0x8284(r3)
00007148	addi	r4,r4,0x74c4
0000714c	or	r7,r29,r29
00007150	addi	r3,r3,0xb0
00007154	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00007158	b	0x71c8
0000715c	addis	r30,r31,0x1
00007160	lwz	r0,0x8300(r30)
00007164	cmpwi	cr7,r0,__mh_dylib_header
00007168	bne	cr7,0x7194
0000716c	addis	r3,r31,__mh_dylib_header
00007170	addi	r3,r3,0x73b0
00007174	bl	0xd100	; symbol stub for: _getenv
00007178	addis	r9,r31,0x1
0000717c	addic	r2,r3,0xffff
00007180	subfe	r0,r2,r3
00007184	li	r2,0x1
00007188	stw	r0,0x82fc(r9)
0000718c	stw	r2,0x8300(r30)
00007190	b	0x7198
00007194	addis	r9,r31,0x1
00007198	lwz	r0,0x82fc(r9)
0000719c	cmpwi	cr7,r0,__mh_dylib_header
000071a0	beq	cr7,0x71c8
000071a4	addis	r3,r31,0x1
000071a8	addis	r4,r31,__mh_dylib_header
000071ac	or	r5,r28,r28
000071b0	or	r6,r29,r29
000071b4	lwz	r3,0x8284(r3)
000071b8	addi	r4,r4,0x7500
000071bc	or	r7,r27,r27
000071c0	addi	r3,r3,0xb0
000071c4	bl	0xd060	; symbol stub for: _fprintf$LDBL128
000071c8	li	r3,__mh_dylib_header
000071cc	b	0x7200
000071d0	addis	r30,r31,0x1
000071d4	lwz	r0,0x8300(r30)
000071d8	cmpwi	cr7,r0,__mh_dylib_header
000071dc	beq	cr7,0x7098
000071e0	addis	r9,r31,0x1
000071e4	b	0x70bc
000071e8	addis	r27,r31,0x1
000071ec	lwz	r0,0x8300(r27)
000071f0	cmpwi	cr7,r0,__mh_dylib_header
000071f4	beq	cr7,0x6fe0
000071f8	addis	r9,r31,0x1
000071fc	b	0x7004
00007200	addi	r1,r1,0x80
00007204	lwz	r0,0x8(r1)
00007208	lmw	r27,0xffec(r1)
0000720c	mtspr	lr,r0
00007210	blr
_QMOImageGetSlide:
00007214	mfspr	r0,lr
00007218	cmpwi	r3,__mh_dylib_header
0000721c	stw	r31,0xfffc(r1)
00007220	bcl	20,31,0x7224
00007224	mfspr	r31,lr
00007228	stw	r0,0x8(r1)
0000722c	stwu	r1,0xffb0(r1)
00007230	beq	0x72ac
00007234	lwz	r0,0xc(r3)
00007238	cmpwi	cr7,r0,__mh_dylib_header
0000723c	beq	cr7,0x72ac
00007240	lwz	r0,0x14(r3)
00007244	cmplwi	cr7,r0,0x1b
00007248	ble	cr7,0x72ac
0000724c	lwz	r0,0x34(r3)
00007250	cmpwi	cr7,r0,__mh_dylib_header
00007254	beq	cr7,0x72ac
00007258	lwz	r2,0x38(r3)
0000725c	cmpwi	cr7,r2,__mh_dylib_header
00007260	beq	cr7,0x72ac
00007264	lwz	r0,__mh_dylib_header(r2)
00007268	cmpwi	cr7,r0,__mh_dylib_header
0000726c	beq	cr7,0x72ac
00007270	lwz	r0,0x3c(r3)
00007274	cmpwi	cr7,r0,__mh_dylib_header
00007278	beq	cr7,0x72ac
0000727c	lwz	r2,0x40(r3)
00007280	cmpwi	cr7,r2,__mh_dylib_header
00007284	beq	cr7,0x72ac
00007288	lwz	r0,__mh_dylib_header(r2)
0000728c	cmpwi	cr7,r0,__mh_dylib_header
00007290	beq	cr7,0x72ac
00007294	lwz	r0,0x44(r3)
00007298	cmpwi	cr7,r0,__mh_dylib_header
0000729c	beq	cr7,0x72ac
000072a0	lwz	r0,0x48(r3)
000072a4	cmpwi	cr7,r0,__mh_dylib_header
000072a8	bne	cr7,0x72cc
000072ac	addis	r3,r31,__mh_dylib_header
000072b0	addis	r4,r31,__mh_dylib_header
000072b4	addis	r6,r31,__mh_dylib_header
000072b8	li	r5,0x3dc
000072bc	addi	r3,r3,0x638c
000072c0	addi	r4,r4,0x6dc8
000072c4	addi	r6,r6,0x71a4
000072c8	bl	___eprintf
000072cc	addi	r1,r1,0x50
000072d0	lwz	r4,0x24(r3)
000072d4	lwz	r3,0x20(r3)
000072d8	lwz	r0,0x8(r1)
000072dc	lwz	r31,0xfffc(r1)
000072e0	mtspr	lr,r0
000072e4	blr
_QMOImageIs64Bit:
000072e8	mfspr	r0,lr
000072ec	cmpwi	r3,__mh_dylib_header
000072f0	stw	r31,0xfffc(r1)
000072f4	bcl	20,31,0x72f8
000072f8	mfspr	r31,lr
000072fc	stw	r0,0x8(r1)
00007300	stwu	r1,0xffb0(r1)
00007304	beq	0x7380
00007308	lwz	r0,0xc(r3)
0000730c	cmpwi	cr7,r0,__mh_dylib_header
00007310	beq	cr7,0x7380
00007314	lwz	r0,0x14(r3)
00007318	cmplwi	cr7,r0,0x1b
0000731c	ble	cr7,0x7380
00007320	lwz	r0,0x34(r3)
00007324	cmpwi	cr7,r0,__mh_dylib_header
00007328	beq	cr7,0x7380
0000732c	lwz	r2,0x38(r3)
00007330	cmpwi	cr7,r2,__mh_dylib_header
00007334	beq	cr7,0x7380
00007338	lwz	r0,__mh_dylib_header(r2)
0000733c	cmpwi	cr7,r0,__mh_dylib_header
00007340	beq	cr7,0x7380
00007344	lwz	r0,0x3c(r3)
00007348	cmpwi	cr7,r0,__mh_dylib_header
0000734c	beq	cr7,0x7380
00007350	lwz	r2,0x40(r3)
00007354	cmpwi	cr7,r2,__mh_dylib_header
00007358	beq	cr7,0x7380
0000735c	lwz	r0,__mh_dylib_header(r2)
00007360	cmpwi	cr7,r0,__mh_dylib_header
00007364	beq	cr7,0x7380
00007368	lwz	r0,0x44(r3)
0000736c	cmpwi	cr7,r0,__mh_dylib_header
00007370	beq	cr7,0x7380
00007374	lwz	r0,0x48(r3)
00007378	cmpwi	cr7,r0,__mh_dylib_header
0000737c	bne	cr7,0x73a0
00007380	addis	r3,r31,__mh_dylib_header
00007384	addis	r4,r31,__mh_dylib_header
00007388	addis	r6,r31,__mh_dylib_header
0000738c	li	r5,0x3e4
00007390	addi	r3,r3,0x62b8
00007394	addi	r4,r4,0x6cf4
00007398	addi	r6,r6,0x70d0
0000739c	bl	___eprintf
000073a0	addi	r1,r1,0x50
000073a4	lwz	r3,0x2c(r3)
000073a8	lwz	r0,0x8(r1)
000073ac	lwz	r31,0xfffc(r1)
000073b0	mtspr	lr,r0
000073b4	blr
_QMOImageIsByteSwapped:
000073b8	mfspr	r0,lr
000073bc	cmpwi	r3,__mh_dylib_header
000073c0	stw	r31,0xfffc(r1)
000073c4	bcl	20,31,0x73c8
000073c8	mfspr	r31,lr
000073cc	stw	r0,0x8(r1)
000073d0	stwu	r1,0xffb0(r1)
000073d4	beq	0x7450
000073d8	lwz	r0,0xc(r3)
000073dc	cmpwi	cr7,r0,__mh_dylib_header
000073e0	beq	cr7,0x7450
000073e4	lwz	r0,0x14(r3)
000073e8	cmplwi	cr7,r0,0x1b
000073ec	ble	cr7,0x7450
000073f0	lwz	r0,0x34(r3)
000073f4	cmpwi	cr7,r0,__mh_dylib_header
000073f8	beq	cr7,0x7450
000073fc	lwz	r2,0x38(r3)
00007400	cmpwi	cr7,r2,__mh_dylib_header
00007404	beq	cr7,0x7450
00007408	lwz	r0,__mh_dylib_header(r2)
0000740c	cmpwi	cr7,r0,__mh_dylib_header
00007410	beq	cr7,0x7450
00007414	lwz	r0,0x3c(r3)
00007418	cmpwi	cr7,r0,__mh_dylib_header
0000741c	beq	cr7,0x7450
00007420	lwz	r2,0x40(r3)
00007424	cmpwi	cr7,r2,__mh_dylib_header
00007428	beq	cr7,0x7450
0000742c	lwz	r0,__mh_dylib_header(r2)
00007430	cmpwi	cr7,r0,__mh_dylib_header
00007434	beq	cr7,0x7450
00007438	lwz	r0,0x44(r3)
0000743c	cmpwi	cr7,r0,__mh_dylib_header
00007440	beq	cr7,0x7450
00007444	lwz	r0,0x48(r3)
00007448	cmpwi	cr7,r0,__mh_dylib_header
0000744c	bne	cr7,0x7470
00007450	addis	r3,r31,__mh_dylib_header
00007454	addis	r4,r31,__mh_dylib_header
00007458	addis	r6,r31,__mh_dylib_header
0000745c	li	r5,0x3ec
00007460	addi	r3,r3,0x61e8
00007464	addi	r4,r4,0x6c24
00007468	addi	r6,r6,0x7000
0000746c	bl	___eprintf
00007470	addi	r1,r1,0x50
00007474	lwz	r3,0x30(r3)
00007478	lwz	r0,0x8(r1)
0000747c	lwz	r31,0xfffc(r1)
00007480	mtspr	lr,r0
00007484	blr
_QMOImageGetMachHeaderOffset:
00007488	mfspr	r0,lr
0000748c	cmpwi	r3,__mh_dylib_header
00007490	stw	r31,0xfffc(r1)
00007494	bcl	20,31,0x7498
00007498	mfspr	r31,lr
0000749c	stw	r0,0x8(r1)
000074a0	stwu	r1,0xffb0(r1)
000074a4	beq	0x7520
000074a8	lwz	r0,0xc(r3)
000074ac	cmpwi	cr7,r0,__mh_dylib_header
000074b0	beq	cr7,0x7520
000074b4	lwz	r0,0x14(r3)
000074b8	cmplwi	cr7,r0,0x1b
000074bc	ble	cr7,0x7520
000074c0	lwz	r0,0x34(r3)
000074c4	cmpwi	cr7,r0,__mh_dylib_header
000074c8	beq	cr7,0x7520
000074cc	lwz	r2,0x38(r3)
000074d0	cmpwi	cr7,r2,__mh_dylib_header
000074d4	beq	cr7,0x7520
000074d8	lwz	r0,__mh_dylib_header(r2)
000074dc	cmpwi	cr7,r0,__mh_dylib_header
000074e0	beq	cr7,0x7520
000074e4	lwz	r0,0x3c(r3)
000074e8	cmpwi	cr7,r0,__mh_dylib_header
000074ec	beq	cr7,0x7520
000074f0	lwz	r2,0x40(r3)
000074f4	cmpwi	cr7,r2,__mh_dylib_header
000074f8	beq	cr7,0x7520
000074fc	lwz	r0,__mh_dylib_header(r2)
00007500	cmpwi	cr7,r0,__mh_dylib_header
00007504	beq	cr7,0x7520
00007508	lwz	r0,0x44(r3)
0000750c	cmpwi	cr7,r0,__mh_dylib_header
00007510	beq	cr7,0x7520
00007514	lwz	r0,0x48(r3)
00007518	cmpwi	cr7,r0,__mh_dylib_header
0000751c	bne	cr7,0x7540
00007520	addis	r3,r31,__mh_dylib_header
00007524	addis	r4,r31,__mh_dylib_header
00007528	addis	r6,r31,__mh_dylib_header
0000752c	li	r5,0x3f3
00007530	addi	r3,r3,0x6118
00007534	addi	r4,r4,0x6b54
00007538	addi	r6,r6,0x6f30
0000753c	bl	___eprintf
00007540	addi	r1,r1,0x50
00007544	lwz	r4,0x8(r3)
00007548	lwz	r3,0x4(r3)
0000754c	lwz	r0,0x8(r1)
00007550	lwz	r31,0xfffc(r1)
00007554	mtspr	lr,r0
00007558	blr
_QMOImageGetMachHeader:
0000755c	mfspr	r0,lr
00007560	cmpwi	r3,__mh_dylib_header
00007564	stw	r31,0xfffc(r1)
00007568	bcl	20,31,0x756c
0000756c	mfspr	r31,lr
00007570	stw	r0,0x8(r1)
00007574	stwu	r1,0xffb0(r1)
00007578	beq	0x75f4
0000757c	lwz	r9,0xc(r3)
00007580	cmpwi	cr7,r9,__mh_dylib_header
00007584	beq	cr7,0x75f4
00007588	lwz	r0,0x14(r3)
0000758c	cmplwi	cr7,r0,0x1b
00007590	ble	cr7,0x75f4
00007594	lwz	r0,0x34(r3)
00007598	cmpwi	cr7,r0,__mh_dylib_header
0000759c	beq	cr7,0x75f4
000075a0	lwz	r2,0x38(r3)
000075a4	cmpwi	cr7,r2,__mh_dylib_header
000075a8	beq	cr7,0x75f4
000075ac	lwz	r0,__mh_dylib_header(r2)
000075b0	cmpwi	cr7,r0,__mh_dylib_header
000075b4	beq	cr7,0x75f4
000075b8	lwz	r0,0x3c(r3)
000075bc	cmpwi	cr7,r0,__mh_dylib_header
000075c0	beq	cr7,0x75f4
000075c4	lwz	r2,0x40(r3)
000075c8	cmpwi	cr7,r2,__mh_dylib_header
000075cc	beq	cr7,0x75f4
000075d0	lwz	r0,__mh_dylib_header(r2)
000075d4	cmpwi	cr7,r0,__mh_dylib_header
000075d8	beq	cr7,0x75f4
000075dc	lwz	r0,0x44(r3)
000075e0	cmpwi	cr7,r0,__mh_dylib_header
000075e4	beq	cr7,0x75f4
000075e8	lwz	r0,0x48(r3)
000075ec	cmpwi	cr7,r0,__mh_dylib_header
000075f0	bne	cr7,0x7614
000075f4	addis	r3,r31,__mh_dylib_header
000075f8	addis	r4,r31,__mh_dylib_header
000075fc	addis	r6,r31,__mh_dylib_header
00007600	li	r5,0x3fb
00007604	addi	r3,r3,0x6044
00007608	addi	r4,r4,0x6a80
0000760c	addi	r6,r6,0x6e5c
00007610	bl	___eprintf
00007614	addi	r1,r1,0x50
00007618	or	r3,r9,r9
0000761c	lwz	r0,0x8(r1)
00007620	lwz	r31,0xfffc(r1)
00007624	mtspr	lr,r0
00007628	blr
_QMOImageGetFilePath:
0000762c	mfspr	r0,lr
00007630	cmpwi	r3,__mh_dylib_header
00007634	stw	r31,0xfffc(r1)
00007638	bcl	20,31,0x763c
0000763c	mfspr	r31,lr
00007640	stw	r0,0x8(r1)
00007644	stwu	r1,0xffb0(r1)
00007648	beq	0x76c4
0000764c	lwz	r0,0xc(r3)
00007650	cmpwi	cr7,r0,__mh_dylib_header
00007654	beq	cr7,0x76c4
00007658	lwz	r0,0x14(r3)
0000765c	cmplwi	cr7,r0,0x1b
00007660	ble	cr7,0x76c4
00007664	lwz	r0,0x34(r3)
00007668	cmpwi	cr7,r0,__mh_dylib_header
0000766c	beq	cr7,0x76c4
00007670	lwz	r2,0x38(r3)
00007674	cmpwi	cr7,r2,__mh_dylib_header
00007678	beq	cr7,0x76c4
0000767c	lwz	r0,__mh_dylib_header(r2)
00007680	cmpwi	cr7,r0,__mh_dylib_header
00007684	beq	cr7,0x76c4
00007688	lwz	r0,0x3c(r3)
0000768c	cmpwi	cr7,r0,__mh_dylib_header
00007690	beq	cr7,0x76c4
00007694	lwz	r2,0x40(r3)
00007698	cmpwi	cr7,r2,__mh_dylib_header
0000769c	beq	cr7,0x76c4
000076a0	lwz	r0,__mh_dylib_header(r2)
000076a4	cmpwi	cr7,r0,__mh_dylib_header
000076a8	beq	cr7,0x76c4
000076ac	lwz	r0,0x44(r3)
000076b0	cmpwi	cr7,r0,__mh_dylib_header
000076b4	beq	cr7,0x76c4
000076b8	lwz	r0,0x48(r3)
000076bc	cmpwi	cr7,r0,__mh_dylib_header
000076c0	bne	cr7,0x76e4
000076c4	addis	r3,r31,__mh_dylib_header
000076c8	addis	r4,r31,__mh_dylib_header
000076cc	addis	r6,r31,__mh_dylib_header
000076d0	li	r5,0x402
000076d4	addi	r3,r3,0x5f74
000076d8	addi	r4,r4,0x69b0
000076dc	addi	r6,r6,0x6d8c
000076e0	bl	___eprintf
000076e4	addi	r1,r1,0x50
000076e8	lwz	r3,__mh_dylib_header(r3)
000076ec	lwz	r0,0x8(r1)
000076f0	lwz	r31,0xfffc(r1)
000076f4	mtspr	lr,r0
000076f8	blr
_QMOImageGetFileType:
000076fc	mfspr	r0,lr
00007700	or.	r2,r3,r3
00007704	stw	r31,0xfffc(r1)
00007708	bcl	20,31,0x770c
0000770c	mfspr	r31,lr
00007710	stw	r0,0x8(r1)
00007714	stwu	r1,0xffb0(r1)
00007718	beq	0x77ac
0000771c	lwz	r11,0xc(r2)
00007720	cmpwi	cr7,r11,__mh_dylib_header
00007724	beq	cr7,0x77ac
00007728	lwz	r0,0x14(r2)
0000772c	cmplwi	cr7,r0,0x1b
00007730	ble	cr7,0x77ac
00007734	lwz	r0,0x34(r2)
00007738	cmpwi	cr7,r0,__mh_dylib_header
0000773c	beq	cr7,0x77ac
00007740	lwz	r9,0x38(r2)
00007744	cmpwi	cr7,r9,__mh_dylib_header
00007748	beq	cr7,0x77ac
0000774c	lwz	r0,__mh_dylib_header(r9)
00007750	cmpwi	cr7,r0,__mh_dylib_header
00007754	beq	cr7,0x77ac
00007758	lwz	r0,0x3c(r2)
0000775c	cmpwi	cr7,r0,__mh_dylib_header
00007760	beq	cr7,0x77ac
00007764	lwz	r9,0x40(r2)
00007768	cmpwi	cr7,r9,__mh_dylib_header
0000776c	beq	cr7,0x77ac
00007770	lwz	r0,__mh_dylib_header(r9)
00007774	cmpwi	cr7,r0,__mh_dylib_header
00007778	beq	cr7,0x77ac
0000777c	lwz	r0,0x44(r2)
00007780	cmpwi	cr7,r0,__mh_dylib_header
00007784	beq	cr7,0x77ac
00007788	lwz	r0,0x48(r2)
0000778c	cmpwi	cr7,r0,__mh_dylib_header
00007790	beq	cr7,0x77ac
00007794	addi	r1,r1,0x50
00007798	lwz	r4,0xc(r11)
0000779c	lwz	r0,0x8(r1)
000077a0	lwz	r31,0xfffc(r1)
000077a4	mtspr	lr,r0
000077a8	b	_QMOImageToLocalUInt32
000077ac	addis	r3,r31,__mh_dylib_header
000077b0	addis	r4,r31,__mh_dylib_header
000077b4	addis	r6,r31,__mh_dylib_header
000077b8	li	r5,0x40a
000077bc	addi	r3,r3,0x5ea4
000077c0	addi	r4,r4,0x68e0
000077c4	addi	r6,r6,0x6cbc
000077c8	bl	___eprintf
_QMOImageGetCPUType:
000077cc	mfspr	r0,lr
000077d0	or.	r2,r3,r3
000077d4	stw	r31,0xfffc(r1)
000077d8	bcl	20,31,0x77dc
000077dc	mfspr	r31,lr
000077e0	stw	r0,0x8(r1)
000077e4	stwu	r1,0xffb0(r1)
000077e8	beq	0x787c
000077ec	lwz	r11,0xc(r2)
000077f0	cmpwi	cr7,r11,__mh_dylib_header
000077f4	beq	cr7,0x787c
000077f8	lwz	r0,0x14(r2)
000077fc	cmplwi	cr7,r0,0x1b
00007800	ble	cr7,0x787c
00007804	lwz	r0,0x34(r2)
00007808	cmpwi	cr7,r0,__mh_dylib_header
0000780c	beq	cr7,0x787c
00007810	lwz	r9,0x38(r2)
00007814	cmpwi	cr7,r9,__mh_dylib_header
00007818	beq	cr7,0x787c
0000781c	lwz	r0,__mh_dylib_header(r9)
00007820	cmpwi	cr7,r0,__mh_dylib_header
00007824	beq	cr7,0x787c
00007828	lwz	r0,0x3c(r2)
0000782c	cmpwi	cr7,r0,__mh_dylib_header
00007830	beq	cr7,0x787c
00007834	lwz	r9,0x40(r2)
00007838	cmpwi	cr7,r9,__mh_dylib_header
0000783c	beq	cr7,0x787c
00007840	lwz	r0,__mh_dylib_header(r9)
00007844	cmpwi	cr7,r0,__mh_dylib_header
00007848	beq	cr7,0x787c
0000784c	lwz	r0,0x44(r2)
00007850	cmpwi	cr7,r0,__mh_dylib_header
00007854	beq	cr7,0x787c
00007858	lwz	r0,0x48(r2)
0000785c	cmpwi	cr7,r0,__mh_dylib_header
00007860	beq	cr7,0x787c
00007864	addi	r1,r1,0x50
00007868	lwz	r4,0x4(r11)
0000786c	lwz	r0,0x8(r1)
00007870	lwz	r31,0xfffc(r1)
00007874	mtspr	lr,r0
00007878	b	_QMOImageToLocalUInt32
0000787c	addis	r3,r31,__mh_dylib_header
00007880	addis	r4,r31,__mh_dylib_header
00007884	addis	r6,r31,__mh_dylib_header
00007888	li	r5,0x414
0000788c	addi	r3,r3,0x5dd4
00007890	addi	r4,r4,0x6810
00007894	addi	r6,r6,0x6bec
00007898	bl	___eprintf
_QMOImageGetCPUSubType:
0000789c	mfspr	r0,lr
000078a0	or.	r2,r3,r3
000078a4	stw	r31,0xfffc(r1)
000078a8	bcl	20,31,0x78ac
000078ac	mfspr	r31,lr
000078b0	stw	r0,0x8(r1)
000078b4	stwu	r1,0xffb0(r1)
000078b8	beq	0x794c
000078bc	lwz	r11,0xc(r2)
000078c0	cmpwi	cr7,r11,__mh_dylib_header
000078c4	beq	cr7,0x794c
000078c8	lwz	r0,0x14(r2)
000078cc	cmplwi	cr7,r0,0x1b
000078d0	ble	cr7,0x794c
000078d4	lwz	r0,0x34(r2)
000078d8	cmpwi	cr7,r0,__mh_dylib_header
000078dc	beq	cr7,0x794c
000078e0	lwz	r9,0x38(r2)
000078e4	cmpwi	cr7,r9,__mh_dylib_header
000078e8	beq	cr7,0x794c
000078ec	lwz	r0,__mh_dylib_header(r9)
000078f0	cmpwi	cr7,r0,__mh_dylib_header
000078f4	beq	cr7,0x794c
000078f8	lwz	r0,0x3c(r2)
000078fc	cmpwi	cr7,r0,__mh_dylib_header
00007900	beq	cr7,0x794c
00007904	lwz	r9,0x40(r2)
00007908	cmpwi	cr7,r9,__mh_dylib_header
0000790c	beq	cr7,0x794c
00007910	lwz	r0,__mh_dylib_header(r9)
00007914	cmpwi	cr7,r0,__mh_dylib_header
00007918	beq	cr7,0x794c
0000791c	lwz	r0,0x44(r2)
00007920	cmpwi	cr7,r0,__mh_dylib_header
00007924	beq	cr7,0x794c
00007928	lwz	r0,0x48(r2)
0000792c	cmpwi	cr7,r0,__mh_dylib_header
00007930	beq	cr7,0x794c
00007934	addi	r1,r1,0x50
00007938	lwz	r4,0x8(r11)
0000793c	lwz	r0,0x8(r1)
00007940	lwz	r31,0xfffc(r1)
00007944	mtspr	lr,r0
00007948	b	_QMOImageToLocalUInt32
0000794c	addis	r3,r31,__mh_dylib_header
00007950	addis	r4,r31,__mh_dylib_header
00007954	addis	r6,r31,__mh_dylib_header
00007958	li	r5,0x41e
0000795c	addi	r3,r3,0x5d04
00007960	addi	r4,r4,0x6740
00007964	addi	r6,r6,0x6b1c
00007968	bl	___eprintf
_CommandIDCompareProc:
0000796c	mfspr	r0,lr
00007970	or.	r2,r3,r3
00007974	stmw	r30,0xfff8(r1)
00007978	bcl	20,31,0x797c
0000797c	or	r30,r5,r5
00007980	mfspr	r31,lr
00007984	stw	r0,0x8(r1)
00007988	stwu	r1,0xffb0(r1)
0000798c	beq	0x7a08
00007990	lwz	r0,0xc(r2)
00007994	cmpwi	cr7,r0,__mh_dylib_header
00007998	beq	cr7,0x7a08
0000799c	lwz	r0,0x14(r2)
000079a0	cmplwi	cr7,r0,0x1b
000079a4	ble	cr7,0x7a08
000079a8	lwz	r0,0x34(r2)
000079ac	cmpwi	cr7,r0,__mh_dylib_header
000079b0	beq	cr7,0x7a08
000079b4	lwz	r9,0x38(r2)
000079b8	cmpwi	cr7,r9,__mh_dylib_header
000079bc	beq	cr7,0x7a08
000079c0	lwz	r0,__mh_dylib_header(r9)
000079c4	cmpwi	cr7,r0,__mh_dylib_header
000079c8	beq	cr7,0x7a08
000079cc	lwz	r0,0x3c(r2)
000079d0	cmpwi	cr7,r0,__mh_dylib_header
000079d4	beq	cr7,0x7a08
000079d8	lwz	r9,0x40(r2)
000079dc	cmpwi	cr7,r9,__mh_dylib_header
000079e0	beq	cr7,0x7a08
000079e4	lwz	r0,__mh_dylib_header(r9)
000079e8	cmpwi	cr7,r0,__mh_dylib_header
000079ec	beq	cr7,0x7a08
000079f0	lwz	r0,0x44(r2)
000079f4	cmpwi	cr7,r0,__mh_dylib_header
000079f8	beq	cr7,0x7a08
000079fc	lwz	r0,0x48(r2)
00007a00	cmpwi	cr7,r0,__mh_dylib_header
00007a04	bne	cr7,0x7a28
00007a08	addis	r3,r31,__mh_dylib_header
00007a0c	addis	r4,r31,__mh_dylib_header
00007a10	addis	r6,r31,__mh_dylib_header
00007a14	li	r5,0x42c
00007a18	addi	r3,r3,0x5c34
00007a1c	addi	r4,r4,0x6670
00007a20	addi	r6,r6,0x6a4c
00007a24	b	0x7a4c
00007a28	cmpwi	cr7,r4,__mh_dylib_header
00007a2c	bne+	cr7,0x7a50
00007a30	addis	r3,r31,__mh_dylib_header
00007a34	addis	r4,r31,__mh_dylib_header
00007a38	addis	r6,r31,__mh_dylib_header
00007a3c	li	r5,0x42d
00007a40	addi	r3,r3,0x5c34
00007a44	addi	r4,r4,0x6670
00007a48	addi	r6,r6,0x6838
00007a4c	bl	___eprintf
00007a50	lwz	r4,__mh_dylib_header(r4)
00007a54	bl	_QMOImageToLocalUInt32
00007a58	lwz	r0,__mh_dylib_header(r30)
00007a5c	addi	r1,r1,0x50
00007a60	lmw	r30,0xfff8(r1)
00007a64	xor	r3,r3,r0
00007a68	subfic	r2,r3,__mh_dylib_header
00007a6c	adde	r3,r2,r3
00007a70	lwz	r0,0x8(r1)
00007a74	mtspr	lr,r0
00007a78	blr
_QMOImageFindLoadCommandByID:
00007a7c	mfspr	r0,lr
00007a80	stw	r31,0xfffc(r1)
00007a84	or.	r2,r3,r3
00007a88	bcl	20,31,0x7a8c
00007a8c	mfspr	r31,lr
00007a90	stw	r0,0x8(r1)
00007a94	stwu	r1,0xffb0(r1)
00007a98	stw	r4,0x6c(r1)
00007a9c	beq	0x7b18
00007aa0	lwz	r0,0xc(r2)
00007aa4	cmpwi	cr7,r0,__mh_dylib_header
00007aa8	beq	cr7,0x7b18
00007aac	lwz	r0,0x14(r2)
00007ab0	cmplwi	cr7,r0,0x1b
00007ab4	ble	cr7,0x7b18
00007ab8	lwz	r0,0x34(r2)
00007abc	cmpwi	cr7,r0,__mh_dylib_header
00007ac0	beq	cr7,0x7b18
00007ac4	lwz	r9,0x38(r2)
00007ac8	cmpwi	cr7,r9,__mh_dylib_header
00007acc	beq	cr7,0x7b18
00007ad0	lwz	r0,__mh_dylib_header(r9)
00007ad4	cmpwi	cr7,r0,__mh_dylib_header
00007ad8	beq	cr7,0x7b18
00007adc	lwz	r0,0x3c(r2)
00007ae0	cmpwi	cr7,r0,__mh_dylib_header
00007ae4	beq	cr7,0x7b18
00007ae8	lwz	r9,0x40(r2)
00007aec	cmpwi	cr7,r9,__mh_dylib_header
00007af0	beq	cr7,0x7b18
00007af4	lwz	r0,__mh_dylib_header(r9)
00007af8	cmpwi	cr7,r0,__mh_dylib_header
00007afc	beq	cr7,0x7b18
00007b00	lwz	r0,0x44(r2)
00007b04	cmpwi	cr7,r0,__mh_dylib_header
00007b08	beq	cr7,0x7b18
00007b0c	lwz	r0,0x48(r2)
00007b10	cmpwi	cr7,r0,__mh_dylib_header
00007b14	bne	cr7,0x7b38
00007b18	addis	r3,r31,__mh_dylib_header
00007b1c	addis	r4,r31,__mh_dylib_header
00007b20	addis	r6,r31,__mh_dylib_header
00007b24	li	r5,0x435
00007b28	addi	r3,r3,0x5b24
00007b2c	addi	r4,r4,0x6560
00007b30	addi	r6,r6,0x693c
00007b34	bl	___eprintf
00007b38	addis	r4,r31,__mh_dylib_header
00007b3c	addi	r5,r1,0x6c
00007b40	addi	r4,r4,0xfee0
00007b44	bl	_FindLoadCommand
00007b48	addi	r1,r1,0x50
00007b4c	lwz	r0,0x8(r1)
00007b50	lwz	r31,0xfffc(r1)
00007b54	mtspr	lr,r0
00007b58	blr
_QMOImageGetSegmentCount:
00007b5c	mfspr	r0,lr
00007b60	cmpwi	r3,__mh_dylib_header
00007b64	stw	r31,0xfffc(r1)
00007b68	bcl	20,31,0x7b6c
00007b6c	mfspr	r31,lr
00007b70	stw	r0,0x8(r1)
00007b74	stwu	r1,0xffb0(r1)
00007b78	beq	0x7bf4
00007b7c	lwz	r0,0xc(r3)
00007b80	cmpwi	cr7,r0,__mh_dylib_header
00007b84	beq	cr7,0x7bf4
00007b88	lwz	r0,0x14(r3)
00007b8c	cmplwi	cr7,r0,0x1b
00007b90	ble	cr7,0x7bf4
00007b94	lwz	r9,0x34(r3)
00007b98	cmpwi	cr7,r9,__mh_dylib_header
00007b9c	beq	cr7,0x7bf4
00007ba0	lwz	r2,0x38(r3)
00007ba4	cmpwi	cr7,r2,__mh_dylib_header
00007ba8	beq	cr7,0x7bf4
00007bac	lwz	r0,__mh_dylib_header(r2)
00007bb0	cmpwi	cr7,r0,__mh_dylib_header
00007bb4	beq	cr7,0x7bf4
00007bb8	lwz	r0,0x3c(r3)
00007bbc	cmpwi	cr7,r0,__mh_dylib_header
00007bc0	beq	cr7,0x7bf4
00007bc4	lwz	r2,0x40(r3)
00007bc8	cmpwi	cr7,r2,__mh_dylib_header
00007bcc	beq	cr7,0x7bf4
00007bd0	lwz	r0,__mh_dylib_header(r2)
00007bd4	cmpwi	cr7,r0,__mh_dylib_header
00007bd8	beq	cr7,0x7bf4
00007bdc	lwz	r0,0x44(r3)
00007be0	cmpwi	cr7,r0,__mh_dylib_header
00007be4	beq	cr7,0x7bf4
00007be8	lwz	r0,0x48(r3)
00007bec	cmpwi	cr7,r0,__mh_dylib_header
00007bf0	bne	cr7,0x7c14
00007bf4	addis	r3,r31,__mh_dylib_header
00007bf8	addis	r4,r31,__mh_dylib_header
00007bfc	addis	r6,r31,__mh_dylib_header
00007c00	li	r5,0x43d
00007c04	addi	r3,r3,0x5a44
00007c08	addi	r4,r4,0x6480
00007c0c	addi	r6,r6,0x685c
00007c10	bl	___eprintf
00007c14	addi	r1,r1,0x50
00007c18	or	r3,r9,r9
00007c1c	lwz	r0,0x8(r1)
00007c20	lwz	r31,0xfffc(r1)
00007c24	mtspr	lr,r0
00007c28	blr
_QMOImageGetSegmentByIndex:
00007c2c	mfspr	r0,lr
00007c30	cmpwi	r3,__mh_dylib_header
00007c34	stw	r31,0xfffc(r1)
00007c38	bcl	20,31,0x7c3c
00007c3c	mfspr	r31,lr
00007c40	stw	r0,0x8(r1)
00007c44	stwu	r1,0xffb0(r1)
00007c48	beq	0x7cc4
00007c4c	lwz	r0,0xc(r3)
00007c50	cmpwi	cr7,r0,__mh_dylib_header
00007c54	beq	cr7,0x7cc4
00007c58	lwz	r0,0x14(r3)
00007c5c	cmplwi	cr7,r0,0x1b
00007c60	ble	cr7,0x7cc4
00007c64	lwz	r11,0x34(r3)
00007c68	cmpwi	cr7,r11,__mh_dylib_header
00007c6c	beq	cr7,0x7cc4
00007c70	lwz	r9,0x38(r3)
00007c74	cmpwi	cr7,r9,__mh_dylib_header
00007c78	beq	cr7,0x7cc4
00007c7c	lwz	r0,__mh_dylib_header(r9)
00007c80	cmpwi	cr7,r0,__mh_dylib_header
00007c84	beq	cr7,0x7cc4
00007c88	lwz	r0,0x3c(r3)
00007c8c	cmpwi	cr7,r0,__mh_dylib_header
00007c90	beq	cr7,0x7cc4
00007c94	lwz	r2,0x40(r3)
00007c98	cmpwi	cr7,r2,__mh_dylib_header
00007c9c	beq	cr7,0x7cc4
00007ca0	lwz	r0,__mh_dylib_header(r2)
00007ca4	cmpwi	cr7,r0,__mh_dylib_header
00007ca8	beq	cr7,0x7cc4
00007cac	lwz	r0,0x44(r3)
00007cb0	cmpwi	cr7,r0,__mh_dylib_header
00007cb4	beq	cr7,0x7cc4
00007cb8	lwz	r0,0x48(r3)
00007cbc	cmpwi	cr7,r0,__mh_dylib_header
00007cc0	bne	cr7,0x7ce4
00007cc4	addis	r3,r31,__mh_dylib_header
00007cc8	addis	r4,r31,__mh_dylib_header
00007ccc	addis	r6,r31,__mh_dylib_header
00007cd0	li	r5,0x463
00007cd4	addi	r3,r3,0x5974
00007cd8	addi	r4,r4,0x63b0
00007cdc	addi	r6,r6,0x678c
00007ce0	b	0x7d08
00007ce4	cmpwi	cr7,r5,__mh_dylib_header
00007ce8	bne+	cr7,0x7d0c
00007cec	addis	r3,r31,__mh_dylib_header
00007cf0	addis	r4,r31,__mh_dylib_header
00007cf4	addis	r6,r31,__mh_dylib_header
00007cf8	li	r5,0x464
00007cfc	addi	r3,r3,0x5974
00007d00	addi	r4,r4,0x63b0
00007d04	addi	r6,r6,0x67a8
00007d08	bl	___eprintf
00007d0c	cmplw	cr7,r11,r4
00007d10	li	r3,0x16
00007d14	ble	cr7,0x7d34
00007d18	mulli	r4,r4,0x54
00007d1c	or	r3,r5,r5
00007d20	li	r5,0x48
00007d24	add	r4,r4,r9
00007d28	addi	r4,r4,0x4
00007d2c	bl	0xd180	; symbol stub for: _memcpy
00007d30	li	r3,__mh_dylib_header
00007d34	addi	r1,r1,0x50
00007d38	lwz	r0,0x8(r1)
00007d3c	lwz	r31,0xfffc(r1)
00007d40	mtspr	lr,r0
00007d44	blr
_QMOImageGetSectionCount:
00007d48	mfspr	r0,lr
00007d4c	cmpwi	r3,__mh_dylib_header
00007d50	stw	r31,0xfffc(r1)
00007d54	bcl	20,31,0x7d58
00007d58	mfspr	r31,lr
00007d5c	stw	r0,0x8(r1)
00007d60	stwu	r1,0xffb0(r1)
00007d64	beq	0x7de0
00007d68	lwz	r0,0xc(r3)
00007d6c	cmpwi	cr7,r0,__mh_dylib_header
00007d70	beq	cr7,0x7de0
00007d74	lwz	r0,0x14(r3)
00007d78	cmplwi	cr7,r0,0x1b
00007d7c	ble	cr7,0x7de0
00007d80	lwz	r0,0x34(r3)
00007d84	cmpwi	cr7,r0,__mh_dylib_header
00007d88	beq	cr7,0x7de0
00007d8c	lwz	r2,0x38(r3)
00007d90	cmpwi	cr7,r2,__mh_dylib_header
00007d94	beq	cr7,0x7de0
00007d98	lwz	r0,__mh_dylib_header(r2)
00007d9c	cmpwi	cr7,r0,__mh_dylib_header
00007da0	beq	cr7,0x7de0
00007da4	lwz	r9,0x3c(r3)
00007da8	cmpwi	cr7,r9,__mh_dylib_header
00007dac	beq	cr7,0x7de0
00007db0	lwz	r2,0x40(r3)
00007db4	cmpwi	cr7,r2,__mh_dylib_header
00007db8	beq	cr7,0x7de0
00007dbc	lwz	r0,__mh_dylib_header(r2)
00007dc0	cmpwi	cr7,r0,__mh_dylib_header
00007dc4	beq	cr7,0x7de0
00007dc8	lwz	r0,0x44(r3)
00007dcc	cmpwi	cr7,r0,__mh_dylib_header
00007dd0	beq	cr7,0x7de0
00007dd4	lwz	r0,0x48(r3)
00007dd8	cmpwi	cr7,r0,__mh_dylib_header
00007ddc	bne	cr7,0x7e00
00007de0	addis	r3,r31,__mh_dylib_header
00007de4	addis	r4,r31,__mh_dylib_header
00007de8	addis	r6,r31,__mh_dylib_header
00007dec	li	r5,0x472
00007df0	addi	r3,r3,0x5858
00007df4	addi	r4,r4,0x6294
00007df8	addi	r6,r6,0x6670
00007dfc	bl	___eprintf
00007e00	addi	r1,r1,0x50
00007e04	or	r3,r9,r9
00007e08	lwz	r0,0x8(r1)
00007e0c	lwz	r31,0xfffc(r1)
00007e10	mtspr	lr,r0
00007e14	blr
_QMOImageGetSectionByName:
00007e18	mfspr	r0,lr
00007e1c	stmw	r25,0xffe4(r1)
00007e20	or	r27,r4,r4
00007e24	mfcr	r2
00007e28	bcl	20,31,0x7e2c
00007e2c	or.	r30,r3,r3
00007e30	stw	r0,0x8(r1)
00007e34	or	r29,r5,r5
00007e38	mfspr	r31,lr
00007e3c	or	r26,r6,r6
00007e40	or	r28,r7,r7
00007e44	stw	r2,0x4(r1)
00007e48	stwu	r1,0xffa0(r1)
00007e4c	beq	0x7ec8
00007e50	lwz	r0,0xc(r30)
00007e54	cmpwi	cr7,r0,__mh_dylib_header
00007e58	beq	cr7,0x7ec8
00007e5c	lwz	r0,0x14(r30)
00007e60	cmplwi	cr7,r0,0x1b
00007e64	ble	cr7,0x7ec8
00007e68	lwz	r0,0x34(r30)
00007e6c	cmpwi	cr7,r0,__mh_dylib_header
00007e70	beq	cr7,0x7ec8
00007e74	lwz	r2,0x38(r30)
00007e78	cmpwi	cr7,r2,__mh_dylib_header
00007e7c	beq	cr7,0x7ec8
00007e80	lwz	r0,__mh_dylib_header(r2)
00007e84	cmpwi	cr7,r0,__mh_dylib_header
00007e88	beq	cr7,0x7ec8
00007e8c	lwz	r0,0x3c(r30)
00007e90	cmpwi	cr7,r0,__mh_dylib_header
00007e94	beq	cr7,0x7ec8
00007e98	lwz	r2,0x40(r30)
00007e9c	cmpwi	cr7,r2,__mh_dylib_header
00007ea0	beq	cr7,0x7ec8
00007ea4	lwz	r0,__mh_dylib_header(r2)
00007ea8	cmpwi	cr7,r0,__mh_dylib_header
00007eac	beq	cr7,0x7ec8
00007eb0	lwz	r0,0x44(r30)
00007eb4	cmpwi	cr7,r0,__mh_dylib_header
00007eb8	beq	cr7,0x7ec8
00007ebc	lwz	r0,0x48(r30)
00007ec0	cmpwi	cr7,r0,__mh_dylib_header
00007ec4	bne	cr7,0x7ee8
00007ec8	addis	r3,r31,__mh_dylib_header
00007ecc	addis	r4,r31,__mh_dylib_header
00007ed0	addis	r6,r31,__mh_dylib_header
00007ed4	li	r5,0x484
00007ed8	addi	r3,r3,0x5784
00007edc	addi	r4,r4,0x61c0
00007ee0	addi	r6,r6,0x659c
00007ee4	b	0x7f14
00007ee8	cmpwi	cr4,r4,__mh_dylib_header
00007eec	bne	cr4,0x7f18
00007ef0	cmpwi	cr7,r5,__mh_dylib_header
00007ef4	bne	cr7,0x7f18
00007ef8	addis	r3,r31,__mh_dylib_header
00007efc	addis	r4,r31,__mh_dylib_header
00007f00	addis	r6,r31,__mh_dylib_header
00007f04	li	r5,0x485
00007f08	addi	r3,r3,0x5784
00007f0c	addi	r4,r4,0x61c0
00007f10	addi	r6,r6,0x65c8
00007f14	bl	___eprintf
00007f18	cmpwi	cr3,r26,__mh_dylib_header
00007f1c	bne	cr3,0x7f48
00007f20	cmpwi	cr7,r28,__mh_dylib_header
00007f24	bne	cr7,0x7f48
00007f28	addis	r3,r31,__mh_dylib_header
00007f2c	addis	r4,r31,__mh_dylib_header
00007f30	addis	r6,r31,__mh_dylib_header
00007f34	li	r5,0x486
00007f38	addi	r3,r3,0x5784
00007f3c	addi	r4,r4,0x61c0
00007f40	addi	r6,r6,0x65f0
00007f44	b	0x7f14
00007f48	li	r25,__mh_dylib_header
00007f4c	li	r0,__mh_dylib_header
00007f50	b	0x7fc0
00007f54	beq	cr4,0x7f78
00007f58	lwz	r0,0x40(r30)
00007f5c	mulli	r4,r25,0x54
00007f60	or	r3,r27,r27
00007f64	add	r4,r4,r0
00007f68	addi	r4,r4,0x14
00007f6c	bl	0xd340	; symbol stub for: _strcmp
00007f70	cmpwi	cr7,r3,__mh_dylib_header
00007f74	bne	cr7,0x7fa8
00007f78	cmpwi	cr7,r29,__mh_dylib_header
00007f7c	beq	cr7,0x7fa0
00007f80	lwz	r0,0x40(r30)
00007f84	mulli	r4,r25,0x54
00007f88	or	r3,r29,r29
00007f8c	add	r4,r4,r0
00007f90	addi	r4,r4,0x4
00007f94	bl	0xd340	; symbol stub for: _strcmp
00007f98	cmpwi	cr7,r3,__mh_dylib_header
00007f9c	bne	cr7,0x7fa8
00007fa0	li	r0,0x1
00007fa4	b	0x7fac
00007fa8	li	r0,__mh_dylib_header
00007fac	cmpwi	cr7,r0,__mh_dylib_header
00007fb0	bne	cr7,0x7fc0
00007fb4	mcrf	cr6,cr7
00007fb8	addi	r25,r25,0x1
00007fbc	b	0x7fc8
00007fc0	cmpwi	cr6,r0,__mh_dylib_header
00007fc4	bne	cr6,0x7fe0
00007fc8	lwz	r0,0x3c(r30)
00007fcc	cmplw	cr7,r25,r0
00007fd0	blt	cr7,0x7f54
00007fd4	bne	cr6,0x7fe0
00007fd8	li	r3,0x3
00007fdc	b	0x8014
00007fe0	beq	cr3,0x7fe8
00007fe4	stw	r25,__mh_dylib_header(r26)
00007fe8	cmpwi	cr7,r28,__mh_dylib_header
00007fec	li	r3,__mh_dylib_header
00007ff0	beq	cr7,0x8014
00007ff4	lwz	r0,0x40(r30)
00007ff8	mulli	r4,r25,0x54
00007ffc	or	r3,r28,r28
00008000	li	r5,0x50
00008004	add	r4,r4,r0
00008008	addi	r4,r4,0x4
0000800c	bl	0xd180	; symbol stub for: _memcpy
00008010	li	r3,__mh_dylib_header
00008014	addi	r1,r1,0x60
00008018	lwz	r11,0x4(r1)
0000801c	lwz	r0,0x8(r1)
00008020	lmw	r25,0xffe4(r1)
00008024	mtspr	lr,r0
00008028	mtocrf	0x10,r11
0000802c	mtocrf	0x08,r11
00008030	blr
_QMOImageGetSectionByIndex:
00008034	mfspr	r0,lr
00008038	cmpwi	r3,__mh_dylib_header
0000803c	stw	r31,0xfffc(r1)
00008040	bcl	20,31,0x8044
00008044	mfspr	r31,lr
00008048	stw	r0,0x8(r1)
0000804c	stwu	r1,0xffb0(r1)
00008050	beq	0x80cc
00008054	lwz	r0,0xc(r3)
00008058	cmpwi	cr7,r0,__mh_dylib_header
0000805c	beq	cr7,0x80cc
00008060	lwz	r0,0x14(r3)
00008064	cmplwi	cr7,r0,0x1b
00008068	ble	cr7,0x80cc
0000806c	lwz	r0,0x34(r3)
00008070	cmpwi	cr7,r0,__mh_dylib_header
00008074	beq	cr7,0x80cc
00008078	lwz	r2,0x38(r3)
0000807c	cmpwi	cr7,r2,__mh_dylib_header
00008080	beq	cr7,0x80cc
00008084	lwz	r0,__mh_dylib_header(r2)
00008088	cmpwi	cr7,r0,__mh_dylib_header
0000808c	beq	cr7,0x80cc
00008090	lwz	r9,0x3c(r3)
00008094	cmpwi	cr7,r9,__mh_dylib_header
00008098	beq	cr7,0x80cc
0000809c	lwz	r2,0x40(r3)
000080a0	cmpwi	cr7,r2,__mh_dylib_header
000080a4	beq	cr7,0x80cc
000080a8	lwz	r0,__mh_dylib_header(r2)
000080ac	cmpwi	cr7,r0,__mh_dylib_header
000080b0	beq	cr7,0x80cc
000080b4	lwz	r0,0x44(r3)
000080b8	cmpwi	cr7,r0,__mh_dylib_header
000080bc	beq	cr7,0x80cc
000080c0	lwz	r0,0x48(r3)
000080c4	cmpwi	cr7,r0,__mh_dylib_header
000080c8	bne	cr7,0x80ec
000080cc	addis	r3,r31,__mh_dylib_header
000080d0	addis	r4,r31,__mh_dylib_header
000080d4	addis	r6,r31,__mh_dylib_header
000080d8	li	r5,0x4ae
000080dc	addi	r3,r3,0x556c
000080e0	addi	r4,r4,0x5fa8
000080e4	addi	r6,r6,0x6384
000080e8	bl	___eprintf
000080ec	cmplw	cr7,r9,r4
000080f0	li	r3,0x16
000080f4	ble	cr7,0x8114
000080f8	mulli	r4,r4,0x54
000080fc	or	r3,r5,r5
00008100	li	r5,0x50
00008104	add	r4,r4,r2
00008108	addi	r4,r4,0x4
0000810c	bl	0xd180	; symbol stub for: _memcpy
00008110	li	r3,__mh_dylib_header
00008114	addi	r1,r1,0x50
00008118	lwz	r0,0x8(r1)
0000811c	lwz	r31,0xfffc(r1)
00008120	mtspr	lr,r0
00008124	blr
_QMOImageGetLibraryID:
00008128	mfspr	r0,lr
0000812c	stmw	r29,0xfff4(r1)
00008130	or.	r30,r3,r3
00008134	bcl	20,31,0x8138
00008138	mfspr	r31,lr
0000813c	stw	r0,0x8(r1)
00008140	stwu	r1,0xffb0(r1)
00008144	beq	0x81c0
00008148	lwz	r0,0xc(r30)
0000814c	cmpwi	cr7,r0,__mh_dylib_header
00008150	beq	cr7,0x81c0
00008154	lwz	r0,0x14(r30)
00008158	cmplwi	cr7,r0,0x1b
0000815c	ble	cr7,0x81c0
00008160	lwz	r0,0x34(r30)
00008164	cmpwi	cr7,r0,__mh_dylib_header
00008168	beq	cr7,0x81c0
0000816c	lwz	r2,0x38(r30)
00008170	cmpwi	cr7,r2,__mh_dylib_header
00008174	beq	cr7,0x81c0
00008178	lwz	r0,__mh_dylib_header(r2)
0000817c	cmpwi	cr7,r0,__mh_dylib_header
00008180	beq	cr7,0x81c0
00008184	lwz	r0,0x3c(r30)
00008188	cmpwi	cr7,r0,__mh_dylib_header
0000818c	beq	cr7,0x81c0
00008190	lwz	r2,0x40(r30)
00008194	cmpwi	cr7,r2,__mh_dylib_header
00008198	beq	cr7,0x81c0
0000819c	lwz	r0,__mh_dylib_header(r2)
000081a0	cmpwi	cr7,r0,__mh_dylib_header
000081a4	beq	cr7,0x81c0
000081a8	lwz	r0,0x44(r30)
000081ac	cmpwi	cr7,r0,__mh_dylib_header
000081b0	beq	cr7,0x81c0
000081b4	lwz	r0,0x48(r30)
000081b8	cmpwi	cr7,r0,__mh_dylib_header
000081bc	bne	cr7,0x81e0
000081c0	addis	r3,r31,__mh_dylib_header
000081c4	addis	r4,r31,__mh_dylib_header
000081c8	addis	r6,r31,__mh_dylib_header
000081cc	li	r5,0x899
000081d0	addi	r3,r3,0x5478
000081d4	addi	r4,r4,0x5eb4
000081d8	addi	r6,r6,0x6290
000081dc	bl	___eprintf
000081e0	lwz	r0,0x18(r30)
000081e4	cmpwi	cr7,r0,__mh_dylib_header
000081e8	bne	cr7,0x8218
000081ec	li	r4,0xd
000081f0	bl	_QMOImageFindLoadCommandByID
000081f4	or.	r29,r3,r3
000081f8	beq	0x8210
000081fc	lwz	r4,0x8(r29)
00008200	or	r3,r30,r30
00008204	bl	_QMOImageToLocalUInt32
00008208	add	r3,r3,r29
0000820c	stw	r3,0x1c(r30)
00008210	li	r0,0x1
00008214	stw	r0,0x18(r30)
00008218	addi	r1,r1,0x50
0000821c	lwz	r3,0x1c(r30)
00008220	lwz	r0,0x8(r1)
00008224	lmw	r29,0xfff4(r1)
00008228	mtspr	lr,r0
0000822c	blr
_GetSegmentIndexByName:
00008230	mfspr	r0,lr
00008234	stmw	r27,0xffec(r1)
00008238	or.	r30,r3,r3
0000823c	bcl	20,31,0x8240
00008240	or	r29,r4,r4
00008244	or	r28,r5,r5
00008248	mfspr	r31,lr
0000824c	stw	r0,0x8(r1)
00008250	stwu	r1,0xffa0(r1)
00008254	beq	0x82d0
00008258	lwz	r0,0xc(r30)
0000825c	cmpwi	cr7,r0,__mh_dylib_header
00008260	beq	cr7,0x82d0
00008264	lwz	r0,0x14(r30)
00008268	cmplwi	cr7,r0,0x1b
0000826c	ble	cr7,0x82d0
00008270	lwz	r0,0x34(r30)
00008274	cmpwi	cr7,r0,__mh_dylib_header
00008278	beq	cr7,0x82d0
0000827c	lwz	r2,0x38(r30)
00008280	cmpwi	cr7,r2,__mh_dylib_header
00008284	beq	cr7,0x82d0
00008288	lwz	r0,__mh_dylib_header(r2)
0000828c	cmpwi	cr7,r0,__mh_dylib_header
00008290	beq	cr7,0x82d0
00008294	lwz	r0,0x3c(r30)
00008298	cmpwi	cr7,r0,__mh_dylib_header
0000829c	beq	cr7,0x82d0
000082a0	lwz	r2,0x40(r30)
000082a4	cmpwi	cr7,r2,__mh_dylib_header
000082a8	beq	cr7,0x82d0
000082ac	lwz	r0,__mh_dylib_header(r2)
000082b0	cmpwi	cr7,r0,__mh_dylib_header
000082b4	beq	cr7,0x82d0
000082b8	lwz	r0,0x44(r30)
000082bc	cmpwi	cr7,r0,__mh_dylib_header
000082c0	beq	cr7,0x82d0
000082c4	lwz	r0,0x48(r30)
000082c8	cmpwi	cr7,r0,__mh_dylib_header
000082cc	bne	cr7,0x82f0
000082d0	addis	r3,r31,__mh_dylib_header
000082d4	addis	r4,r31,__mh_dylib_header
000082d8	addis	r6,r31,__mh_dylib_header
000082dc	li	r5,0x29c
000082e0	addi	r3,r3,0x5370
000082e4	addi	r4,r4,0x5dac
000082e8	addi	r6,r6,0x6188
000082ec	b	0x8314
000082f0	cmpwi	cr7,r4,__mh_dylib_header
000082f4	bne+	cr7,0x8318
000082f8	addis	r3,r31,__mh_dylib_header
000082fc	addis	r4,r31,__mh_dylib_header
00008300	addis	r6,r31,__mh_dylib_header
00008304	li	r5,0x29d
00008308	addi	r3,r3,0x5370
0000830c	addi	r4,r4,0x5dac
00008310	addi	r6,r6,0x6208
00008314	bl	___eprintf
00008318	cmpwi	cr7,r5,__mh_dylib_header
0000831c	beq	cr7,0x832c
00008320	li	r27,__mh_dylib_header
00008324	cmpwi	cr7,r27,__mh_dylib_header
00008328	b	0x8378
0000832c	addis	r3,r31,__mh_dylib_header
00008330	addis	r4,r31,__mh_dylib_header
00008334	addis	r6,r31,__mh_dylib_header
00008338	li	r5,0x29e
0000833c	addi	r3,r3,0x5370
00008340	addi	r4,r4,0x5dac
00008344	addi	r6,r6,0x6218
00008348	b	0x8314
0000834c	lwz	r0,0x38(r30)
00008350	mulli	r3,r27,0x54
00008354	or	r4,r29,r29
00008358	add	r3,r3,r0
0000835c	addi	r3,r3,0xc
00008360	bl	0xd340	; symbol stub for: _strcmp
00008364	subfic	r0,r3,__mh_dylib_header
00008368	adde	r3,r0,r3
0000836c	cmpwi	cr7,r3,__mh_dylib_header
00008370	bne	cr7,0x8390
00008374	addi	r27,r27,0x1
00008378	bne	cr7,0x8390
0000837c	lwz	r0,0x34(r30)
00008380	cmplw	cr7,r27,r0
00008384	blt	cr7,0x834c
00008388	li	r3,0x3
0000838c	b	0x8398
00008390	stw	r27,__mh_dylib_header(r28)
00008394	li	r3,__mh_dylib_header
00008398	addi	r1,r1,0x60
0000839c	lwz	r0,0x8(r1)
000083a0	lmw	r27,0xffec(r1)
000083a4	mtspr	lr,r0
000083a8	blr
_QMOImageCreate:
000083ac	mfspr	r0,lr
000083b0	stmw	r18,0xffc8(r1)
000083b4	or	r30,r4,r4
000083b8	mfcr	r2
000083bc	bcl	20,31,0x83c0
000083c0	stw	r0,0x8(r1)
000083c4	or.	r26,r7,r7
000083c8	or	r29,r3,r3
000083cc	mfspr	r31,lr
000083d0	or	r22,r5,r5
000083d4	or	r24,r6,r6
000083d8	or	r25,r8,r8
000083dc	or	r28,r9,r9
000083e0	stw	r2,0x4(r1)
000083e4	stwu	r1,0xff20(r1)
000083e8	or	r23,r10,r10
000083ec	lwz	r19,0x11c(r1)
000083f0	bne+	0x8414
000083f4	addis	r3,r31,__mh_dylib_header
000083f8	addis	r4,r31,__mh_dylib_header
000083fc	addis	r6,r31,__mh_dylib_header
00008400	li	r5,0x30d
00008404	addi	r3,r3,0x51f0
00008408	addi	r4,r4,0x5c2c
0000840c	addi	r6,r6,0x60ac
00008410	b	0x8438
00008414	cmpwi	cr7,r8,__mh_dylib_header
00008418	bne+	cr7,0x843c
0000841c	addis	r3,r31,__mh_dylib_header
00008420	addis	r4,r31,__mh_dylib_header
00008424	addis	r6,r31,__mh_dylib_header
00008428	li	r5,0x30e
0000842c	addi	r3,r3,0x51f0
00008430	addi	r4,r4,0x5c2c
00008434	addi	r6,r6,0x60c0
00008438	bl	___eprintf
0000843c	cmpwi	cr7,r19,__mh_dylib_header
00008440	bne+	cr7,0x8464
00008444	addis	r3,r31,__mh_dylib_header
00008448	addis	r4,r31,__mh_dylib_header
0000844c	addis	r6,r31,__mh_dylib_header
00008450	li	r5,0x311
00008454	addi	r3,r3,0x51f0
00008458	addi	r4,r4,0x5c2c
0000845c	addi	r6,r6,0x5bc4
00008460	b	0x8438
00008464	lwz	r0,__mh_dylib_header(r19)
00008468	cmpwi	cr7,r0,__mh_dylib_header
0000846c	beq+	cr7,0x8490
00008470	addis	r3,r31,__mh_dylib_header
00008474	addis	r4,r31,__mh_dylib_header
00008478	addis	r6,r31,__mh_dylib_header
0000847c	li	r5,0x312
00008480	addi	r3,r3,0x51f0
00008484	addi	r4,r4,0x5c2c
00008488	addi	r6,r6,0x60d4
0000848c	b	0x8438
00008490	li	r3,0x1
00008494	li	r4,0x54
00008498	bl	0xcfe0	; symbol stub for: _calloc
0000849c	cmpwi	cr7,r3,__mh_dylib_header
000084a0	or	r27,r3,r3
000084a4	or	r21,r3,r3
000084a8	beq	cr7,0x8510
000084ac	cmpwi	cr7,r28,__mh_dylib_header
000084b0	stw	r29,0x4(r3)
000084b4	stw	r30,0x8(r3)
000084b8	stw	r24,0x28(r3)
000084bc	stw	r26,0x44(r3)
000084c0	stw	r25,0x48(r3)
000084c4	stw	r23,0x4c(r3)
000084c8	bne	cr7,0x84d8
000084cc	lwz	r0,0x118(r1)
000084d0	stw	r0,0x50(r3)
000084d4	b	0x84f4
000084d8	mtspr	ctr,r28
000084dc	lwz	r4,0x118(r1)
000084e0	or	r12,r28,r28
000084e4	bctrl
000084e8	or.	r29,r3,r3
000084ec	mfcr	r30
000084f0	bne	0x851c
000084f4	cmpwi	cr7,r22,__mh_dylib_header
000084f8	beq	cr7,0x8cb4
000084fc	or	r3,r22,r22
00008500	bl	0xd360	; symbol stub for: _strdup
00008504	cmpwi	cr7,r3,__mh_dylib_header
00008508	stw	r3,__mh_dylib_header(r27)
0000850c	bne	cr7,0x8cb4
00008510	li	r29,0xc
00008514	cmpwi	r29,__mh_dylib_header
00008518	mfcr	r30
0000851c	or	r3,r27,r27
00008520	li	r21,__mh_dylib_header
00008524	bl	_QMOImageDestroy
00008528	mtocrf	0x80,r30
0000852c	cmpwi	cr7,r21,__mh_dylib_header
00008530	stw	r21,__mh_dylib_header(r19)
00008534	mfcr	r9
00008538	rlwinm	r9,r9,3,31,31
0000853c	bne	cr7,0x8c0c
00008540	b	0x8c88
00008544	addis	r3,r31,__mh_dylib_header
00008548	addis	r4,r31,__mh_dylib_header
0000854c	addis	r6,r31,__mh_dylib_header
00008550	li	r5,0x195
00008554	addi	r3,r3,0x51f0
00008558	addi	r4,r4,0x5c2c
0000855c	addi	r6,r6,0x60ec
00008560	b	0x8438
00008564	lwz	r0,0x44(r27)
00008568	addi	r18,r1,0x40
0000856c	stw	r2,0x3c(r1)
00008570	or	r3,r27,r27
00008574	lwz	r4,0x4(r27)
00008578	lwz	r5,0x8(r27)
0000857c	li	r6,__mh_dylib_header
00008580	li	r7,0x1c
00008584	addi	r8,r1,0x3c
00008588	or	r9,r18,r18
0000858c	mtspr	ctr,r0
00008590	or	r12,r0,r0
00008594	bctrl
00008598	or.	r29,r3,r3
0000859c	mfcr	r30
000085a0	bne	0x86e8
000085a4	lwz	r8,0x3c(r1)
000085a8	lis	r0,0xcffa
000085ac	ori	r0,r0,0xedfe
000085b0	lwz	r9,__mh_dylib_header(r8)
000085b4	cmpw	cr7,r9,r0
000085b8	beq	cr7,0x85f0
000085bc	cmplw	cr7,r9,r0
000085c0	bgt	cr7,0x85d8
000085c4	lis	r0,0xcefa
000085c8	ori	r0,r0,0xedfe
000085cc	cmpw	cr7,r9,r0
000085d0	bne	cr7,0x85e8
000085d4	b	0x85f0
000085d8	addis	r2,r9,0x112
000085dc	addi	r2,r2,0x532
000085e0	cmplwi	cr7,r2,0x1
000085e4	ble	cr7,0x85f0
000085e8	li	r29,0x16
000085ec	b	0x867c
000085f0	lis	r0,0xfeed
000085f4	ori	r0,r0,0xfacf
000085f8	cmpw	cr7,r9,r0
000085fc	beq	cr7,0x8614
00008600	lis	r0,0xcffa
00008604	li	r2,__mh_dylib_header
00008608	ori	r0,r0,0xedfe
0000860c	cmpw	cr7,r9,r0
00008610	bne	cr7,0x8618
00008614	li	r2,0x1
00008618	stw	r2,0x2c(r27)
0000861c	lis	r0,0xcefa
00008620	ori	r0,r0,0xedfe
00008624	lwz	r2,__mh_dylib_header(r8)
00008628	cmpw	cr7,r2,r0
0000862c	beq	cr7,0x8644
00008630	lis	r0,0xcffa
00008634	li	r9,__mh_dylib_header
00008638	ori	r0,r0,0xedfe
0000863c	cmpw	cr7,r2,r0
00008640	bne	cr7,0x8648
00008644	li	r9,0x1
00008648	lwz	r0,0x2c(r27)
0000864c	stw	r9,0x30(r27)
00008650	li	r30,0x20
00008654	cmpwi	cr7,r0,__mh_dylib_header
00008658	bne	cr7,0x8660
0000865c	li	r30,0x1c
00008660	lwz	r4,0x14(r8)
00008664	or	r3,r27,r27
00008668	li	r29,__mh_dylib_header
0000866c	bl	_QMOImageToLocalUInt32
00008670	lwz	r8,0x3c(r1)
00008674	add	r3,r30,r3
00008678	stw	r3,0x14(r27)
0000867c	cmpwi	r29,__mh_dylib_header
00008680	lwz	r0,0x48(r27)
00008684	or	r3,r27,r27
00008688	lwz	r4,0x4(r27)
0000868c	lwz	r5,0x8(r27)
00008690	li	r6,__mh_dylib_header
00008694	li	r7,0x1c
00008698	lwz	r9,0x40(r1)
0000869c	mfcr	r30
000086a0	mtspr	ctr,r0
000086a4	or	r12,r0,r0
000086a8	bctrl
000086ac	mtocrf	0x80,r30
000086b0	bne	0x86e8
000086b4	lwz	r0,0x44(r27)
000086b8	lwz	r7,0x14(r27)
000086bc	li	r6,__mh_dylib_header
000086c0	or	r3,r27,r27
000086c4	lwz	r4,0x4(r27)
000086c8	lwz	r5,0x8(r27)
000086cc	addi	r8,r27,0xc
000086d0	addi	r9,r27,0x10
000086d4	mtspr	ctr,r0
000086d8	or	r12,r0,r0
000086dc	bctrl
000086e0	or.	r29,r3,r3
000086e4	mfcr	r30
000086e8	rlwinm	r30,r30,8,0,31
000086ec	mtocrf	0x02,r30
000086f0	rlwinm	r30,r30,24,0,31
000086f4	lwz	r0,0xc(r27)
000086f8	mfcr	r9
000086fc	rlwinm	r9,r9,27,31,31
00008700	addic	r11,r0,0xffff
00008704	subfe	r2,r11,r0
00008708	cmpw	cr7,r9,r2
0000870c	beq+	cr7,0x8730
00008710	addis	r3,r31,__mh_dylib_header
00008714	addis	r4,r31,__mh_dylib_header
00008718	addis	r6,r31,__mh_dylib_header
0000871c	li	r5,0x1d7
00008720	addi	r3,r3,0x51f0
00008724	addi	r4,r4,0x5c2c
00008728	addi	r6,r6,0x610c
0000872c	b	0x8438
00008730	mtocrf	0x80,r30
00008734	bne	0x851c
00008738	addis	r4,r31,__mh_dylib_header
0000873c	li	r5,__mh_dylib_header
00008740	or	r3,r27,r27
00008744	addi	r4,r4,0xe96c
00008748	bl	_FindLoadCommand
0000874c	lwz	r3,0x34(r27)
00008750	li	r4,0x54
00008754	bl	0xcfe0	; symbol stub for: _calloc
00008758	li	r4,0x54
0000875c	stw	r3,0x38(r27)
00008760	lwz	r3,0x3c(r27)
00008764	bl	0xcfe0	; symbol stub for: _calloc
00008768	lwz	r0,0x38(r27)
0000876c	stw	r3,0x40(r27)
00008770	cmpwi	cr7,r0,__mh_dylib_header
00008774	bne	cr7,0x8780
00008778	cmpwi	cr7,r3,__mh_dylib_header
0000877c	beq	cr7,0x8510
00008780	addis	r4,r31,__mh_dylib_header
00008784	or	r3,r27,r27
00008788	stw	r29,0x38(r1)
0000878c	addi	r5,r1,0x38
00008790	addi	r4,r4,0xe63c
00008794	bl	_FindLoadCommand
00008798	lwz	r9,0x34(r27)
0000879c	lwz	r0,0x38(r1)
000087a0	cmpw	cr7,r9,r0
000087a4	beq+	cr7,0x87c8
000087a8	addis	r3,r31,__mh_dylib_header
000087ac	addis	r4,r31,__mh_dylib_header
000087b0	addis	r6,r31,__mh_dylib_header
000087b4	li	r5,0x352
000087b8	addi	r3,r3,0x51f0
000087bc	addi	r4,r4,0x5c2c
000087c0	addi	r6,r6,0x613c
000087c4	b	0x8438
000087c8	or	r2,r29,r29
000087cc	li	r22,__mh_dylib_header
000087d0	stw	r29,0x38(r1)
000087d4	b	0x8a9c
000087d8	mulli	r24,r2,0x54
000087dc	lwz	r2,0x38(r27)
000087e0	add	r9,r24,r2
000087e4	lwz	r0,0x4(r9)
000087e8	xori	r20,r0,0x19
000087ec	subfic	r11,r20,__mh_dylib_header
000087f0	adde	r20,r11,r20
000087f4	cmpwi	cr4,r20,__mh_dylib_header
000087f8	beq	cr4,0x880c
000087fc	lwzx	r2,r24,r2
00008800	li	r0,__mh_dylib_header
00008804	addi	r7,r2,0x48
00008808	b	0x8818
0000880c	lwzx	r2,r24,r2
00008810	li	r7,__mh_dylib_header
00008814	addi	r0,r2,0x38
00008818	lwz	r23,0x44(r9)
0000881c	mulli	r26,r22,0x54
00008820	or	r29,r7,r7
00008824	or	r28,r0,r0
00008828	li	r25,__mh_dylib_header
0000882c	b	0x8a80
00008830	lwz	r0,0x38(r27)
00008834	lwz	r9,0x40(r27)
00008838	add	r11,r25,r22
0000883c	add	r0,r24,r0
00008840	stwx	r0,r9,r26
00008844	lwz	r2,0x3c(r27)
00008848	cmplw	cr7,r2,r11
0000884c	bgt+	cr7,0x8870
00008850	addis	r3,r31,__mh_dylib_header
00008854	addis	r4,r31,__mh_dylib_header
00008858	addis	r6,r31,__mh_dylib_header
0000885c	li	r5,0x266
00008860	addi	r3,r3,0x51f0
00008864	addi	r4,r4,0x5c2c
00008868	addi	r6,r6,0x615c
0000886c	b	0x8438
00008870	lwz	r0,0x40(r27)
00008874	add	r12,r26,r0
00008878	addi	r30,r12,0x4
0000887c	beq	cr4,0x897c
00008880	addi	r2,r29,0x10
00008884	lwz	r7,__mh_dylib_header(r29)
00008888	lwz	r6,0x4(r29)
0000888c	lwz	r0,0x10(r29)
00008890	lwz	r5,0x8(r29)
00008894	addi	r9,r12,0x14
00008898	or	r3,r27,r27
0000889c	lwz	r10,0xc(r2)
000088a0	lwz	r11,0x4(r2)
000088a4	lwz	r8,0x8(r2)
000088a8	lwz	r4,0xc(r29)
000088ac	stw	r7,0x4(r12)
000088b0	stw	r6,0x4(r30)
000088b4	stw	r0,0x14(r12)
000088b8	stw	r5,0x8(r30)
000088bc	stw	r10,0xc(r9)
000088c0	stw	r11,0x4(r9)
000088c4	stw	r8,0x8(r9)
000088c8	stw	r4,0xc(r30)
000088cc	lwz	r5,0x24(r29)
000088d0	lwz	r4,0x20(r29)
000088d4	bl	_QMOImageToLocalUInt64
000088d8	lwz	r5,0x2c(r29)
000088dc	stw	r3,0x20(r30)
000088e0	stw	r4,0x24(r30)
000088e4	or	r3,r27,r27
000088e8	lwz	r4,0x28(r29)
000088ec	bl	_QMOImageToLocalUInt64
000088f0	stw	r3,0x28(r30)
000088f4	stw	r4,0x2c(r30)
000088f8	or	r3,r27,r27
000088fc	lwz	r4,0x30(r29)
00008900	bl	_QMOImageToLocalUInt32
00008904	lwz	r4,0x34(r29)
00008908	stw	r3,0x30(r30)
0000890c	or	r3,r27,r27
00008910	bl	_QMOImageToLocalUInt32
00008914	lwz	r4,0x38(r29)
00008918	stw	r3,0x34(r30)
0000891c	or	r3,r27,r27
00008920	bl	_QMOImageToLocalUInt32
00008924	lwz	r4,0x3c(r29)
00008928	stw	r3,0x38(r30)
0000892c	or	r3,r27,r27
00008930	bl	_QMOImageToLocalUInt32
00008934	lwz	r4,0x40(r29)
00008938	stw	r3,0x3c(r30)
0000893c	or	r3,r27,r27
00008940	bl	_QMOImageToLocalUInt32
00008944	lwz	r4,0x44(r29)
00008948	stw	r3,0x40(r30)
0000894c	or	r3,r27,r27
00008950	bl	_QMOImageToLocalUInt32
00008954	lwz	r4,0x48(r29)
00008958	stw	r3,0x44(r30)
0000895c	or	r3,r27,r27
00008960	bl	_QMOImageToLocalUInt32
00008964	lwz	r4,0x4c(r29)
00008968	stw	r3,0x48(r30)
0000896c	or	r3,r27,r27
00008970	bl	_QMOImageToLocalUInt32
00008974	stw	r3,0x4c(r30)
00008978	b	0x8a70
0000897c	lwz	r0,__mh_dylib_header(r28)
00008980	lwz	r2,0x4(r28)
00008984	or	r3,r27,r27
00008988	lwz	r9,0x8(r28)
0000898c	lwz	r11,0xc(r28)
00008990	stw	r0,0x4(r12)
00008994	stw	r2,0x4(r30)
00008998	addi	r2,r28,0x10
0000899c	stw	r9,0x8(r30)
000089a0	stw	r11,0xc(r30)
000089a4	addi	r9,r12,0x14
000089a8	lwz	r10,0x8(r2)
000089ac	lwz	r8,0xc(r2)
000089b0	lwz	r0,0x10(r28)
000089b4	lwz	r11,0x4(r2)
000089b8	stw	r0,0x14(r12)
000089bc	stw	r8,0xc(r9)
000089c0	stw	r11,0x4(r9)
000089c4	stw	r10,0x8(r9)
000089c8	lwz	r4,0x20(r28)
000089cc	bl	_QMOImageToLocalUInt32
000089d0	li	r9,__mh_dylib_header
000089d4	or	r10,r3,r3
000089d8	or	r3,r27,r27
000089dc	stw	r9,0x20(r30)
000089e0	stw	r10,0x24(r30)
000089e4	lwz	r4,0x24(r28)
000089e8	bl	_QMOImageToLocalUInt32
000089ec	li	r9,__mh_dylib_header
000089f0	or	r10,r3,r3
000089f4	or	r3,r27,r27
000089f8	stw	r9,0x28(r30)
000089fc	stw	r10,0x2c(r30)
00008a00	lwz	r4,0x28(r28)
00008a04	bl	_QMOImageToLocalUInt32
00008a08	stw	r3,0x30(r30)
00008a0c	or	r3,r27,r27
00008a10	lwz	r4,0x2c(r28)
00008a14	bl	_QMOImageToLocalUInt32
00008a18	stw	r3,0x34(r30)
00008a1c	or	r3,r27,r27
00008a20	lwz	r4,0x30(r28)
00008a24	bl	_QMOImageToLocalUInt32
00008a28	stw	r3,0x38(r30)
00008a2c	or	r3,r27,r27
00008a30	lwz	r4,0x34(r28)
00008a34	bl	_QMOImageToLocalUInt32
00008a38	stw	r3,0x3c(r30)
00008a3c	or	r3,r27,r27
00008a40	lwz	r4,0x38(r28)
00008a44	bl	_QMOImageToLocalUInt32
00008a48	stw	r3,0x40(r30)
00008a4c	or	r3,r27,r27
00008a50	lwz	r4,0x3c(r28)
00008a54	bl	_QMOImageToLocalUInt32
00008a58	stw	r3,0x44(r30)
00008a5c	or	r3,r27,r27
00008a60	lwz	r4,0x40(r28)
00008a64	bl	_QMOImageToLocalUInt32
00008a68	stw	r20,0x4c(r30)
00008a6c	stw	r3,0x48(r30)
00008a70	addi	r25,r25,0x1
00008a74	addi	r29,r29,0x50
00008a78	addi	r28,r28,0x44
00008a7c	addi	r26,r26,0x54
00008a80	cmplw	cr7,r25,r23
00008a84	blt	cr7,0x8830
00008a88	lwz	r2,0x38(r1)
00008a8c	lwz	r9,0x34(r27)
00008a90	add	r22,r22,r23
00008a94	addi	r2,r2,0x1
00008a98	stw	r2,0x38(r1)
00008a9c	cmplw	cr7,r9,r2
00008aa0	bgt	cr7,0x87d8
00008aa4	lwz	r11,0x3c(r27)
00008aa8	cmpw	cr7,r11,r22
00008aac	beq+	cr7,0x8ad0
00008ab0	addis	r3,r31,__mh_dylib_header
00008ab4	addis	r4,r31,__mh_dylib_header
00008ab8	addis	r6,r31,__mh_dylib_header
00008abc	li	r5,0x35b
00008ac0	addi	r3,r3,0x51f0
00008ac4	addi	r4,r4,0x5c2c
00008ac8	addi	r6,r6,0x6190
00008acc	b	0x8438
00008ad0	lwz	r0,0xc(r27)
00008ad4	cmpwi	cr7,r0,__mh_dylib_header
00008ad8	beq	cr7,0x8b40
00008adc	lwz	r0,0x14(r27)
00008ae0	cmplwi	cr7,r0,0x1b
00008ae4	ble	cr7,0x8b40
00008ae8	cmpwi	cr7,r9,__mh_dylib_header
00008aec	beq	cr7,0x8b40
00008af0	lwz	r2,0x38(r27)
00008af4	cmpwi	cr7,r2,__mh_dylib_header
00008af8	beq	cr7,0x8b40
00008afc	lwz	r0,__mh_dylib_header(r2)
00008b00	cmpwi	cr7,r0,__mh_dylib_header
00008b04	beq	cr7,0x8b40
00008b08	cmpwi	cr7,r11,__mh_dylib_header
00008b0c	beq	cr7,0x8b40
00008b10	lwz	r2,0x40(r27)
00008b14	cmpwi	cr7,r2,__mh_dylib_header
00008b18	beq	cr7,0x8b40
00008b1c	lwz	r0,__mh_dylib_header(r2)
00008b20	cmpwi	cr7,r0,__mh_dylib_header
00008b24	beq	cr7,0x8b40
00008b28	lwz	r0,0x44(r27)
00008b2c	cmpwi	cr7,r0,__mh_dylib_header
00008b30	beq	cr7,0x8b40
00008b34	lwz	r0,0x48(r27)
00008b38	cmpwi	cr7,r0,__mh_dylib_header
00008b3c	bne	cr7,0x8b60
00008b40	addis	r3,r31,__mh_dylib_header
00008b44	addis	r4,r31,__mh_dylib_header
00008b48	addis	r6,r31,__mh_dylib_header
00008b4c	li	r5,0x2bc
00008b50	addi	r3,r3,0x51f0
00008b54	addi	r4,r4,0x5c2c
00008b58	addi	r6,r6,0x6008
00008b5c	b	0x8438
00008b60	lwz	r0,0x28(r27)
00008b64	cmpwi	cr7,r0,__mh_dylib_header
00008b68	bne	cr7,0x8b9c
00008b6c	lwz	r0,0x24(r27)
00008b70	lwz	r2,0x20(r27)
00008b74	or.	r9,r2,r0
00008b78	beq+	0x8bf8
00008b7c	addis	r3,r31,__mh_dylib_header
00008b80	addis	r4,r31,__mh_dylib_header
00008b84	addis	r6,r31,__mh_dylib_header
00008b88	li	r5,0x2c1
00008b8c	addi	r3,r3,0x51f0
00008b90	addi	r4,r4,0x5c2c
00008b94	addi	r6,r6,0x61b4
00008b98	b	0x8438
00008b9c	addis	r4,r31,__mh_dylib_header
00008ba0	or	r5,r18,r18
00008ba4	or	r3,r27,r27
00008ba8	addi	r4,r4,0x5be4
00008bac	bl	_GetSegmentIndexByName
00008bb0	or.	r29,r3,r3
00008bb4	mfcr	r30
00008bb8	bne	0x851c
00008bbc	lwz	r4,0x40(r1)
00008bc0	or	r3,r27,r27
00008bc4	addi	r5,r1,0x44
00008bc8	bl	_QMOImageGetSegmentByIndex
00008bcc	or.	r29,r3,r3
00008bd0	mfcr	r30
00008bd4	bne	0x851c
00008bd8	lwz	r2,0x4(r27)
00008bdc	lwz	r3,0x8(r27)
00008be0	lwz	r9,0x5c(r1)
00008be4	lwz	r10,0x60(r1)
00008be8	subfc	r12,r10,r3
00008bec	subfe	r11,r9,r2
00008bf0	stw	r11,0x20(r27)
00008bf4	stw	r12,0x24(r27)
00008bf8	li	r29,__mh_dylib_header
00008bfc	cmpwi	cr6,r29,__mh_dylib_header
00008c00	mfcr	r30
00008c04	rlwinm	r30,r30,24,0,3
00008c08	b	0x8528
00008c0c	lwz	r0,0xc(r21)
00008c10	cmpwi	cr7,r0,__mh_dylib_header
00008c14	beq	cr7,0x8c88
00008c18	lwz	r0,0x14(r21)
00008c1c	cmplwi	cr7,r0,0x1b
00008c20	ble	cr7,0x8c88
00008c24	lwz	r0,0x34(r21)
00008c28	cmpwi	cr7,r0,__mh_dylib_header
00008c2c	beq	cr7,0x8c88
00008c30	lwz	r2,0x38(r21)
00008c34	cmpwi	cr7,r2,__mh_dylib_header
00008c38	beq	cr7,0x8c88
00008c3c	lwz	r0,__mh_dylib_header(r2)
00008c40	cmpwi	cr7,r0,__mh_dylib_header
00008c44	beq	cr7,0x8c88
00008c48	lwz	r0,0x3c(r21)
00008c4c	cmpwi	cr7,r0,__mh_dylib_header
00008c50	beq	cr7,0x8c88
00008c54	lwz	r2,0x40(r21)
00008c58	cmpwi	cr7,r2,__mh_dylib_header
00008c5c	beq	cr7,0x8c88
00008c60	lwz	r0,__mh_dylib_header(r2)
00008c64	cmpwi	cr7,r0,__mh_dylib_header
00008c68	beq	cr7,0x8c88
00008c6c	lwz	r0,0x44(r21)
00008c70	cmpwi	cr7,r0,__mh_dylib_header
00008c74	beq	cr7,0x8c88
00008c78	lwz	r0,0x48(r21)
00008c7c	li	r3,0x1
00008c80	cmpwi	cr7,r0,__mh_dylib_header
00008c84	bne	cr7,0x8c8c
00008c88	li	r3,__mh_dylib_header
00008c8c	cmpw	cr7,r9,r3
00008c90	beq+	cr7,0x8cc4
00008c94	addis	r3,r31,__mh_dylib_header
00008c98	addis	r4,r31,__mh_dylib_header
00008c9c	addis	r6,r31,__mh_dylib_header
00008ca0	li	r5,0x36c
00008ca4	addi	r3,r3,0x51f0
00008ca8	addi	r4,r4,0x5c2c
00008cac	addi	r6,r6,0x61cc
00008cb0	b	0x8438
00008cb4	lwz	r2,0xc(r27)
00008cb8	cmpwi	cr7,r2,__mh_dylib_header
00008cbc	beq	cr7,0x8564
00008cc0	b	0x8544
00008cc4	addi	r1,r1,0xe0
00008cc8	or	r3,r29,r29
00008ccc	lwz	r0,0x8(r1)
00008cd0	lwz	r11,0x4(r1)
00008cd4	lmw	r18,0xffc8(r1)
00008cd8	mtspr	lr,r0
00008cdc	mtocrf	0x08,r11
00008ce0	blr
_QMOImageCreateFromLocalImage:
00008ce4	mfspr	r0,lr
00008ce8	or.	r2,r5,r5
00008cec	stw	r31,0xfffc(r1)
00008cf0	bcl	20,31,0x8cf4
00008cf4	or	r5,r4,r4
00008cf8	mfspr	r31,lr
00008cfc	stw	r0,0x8(r1)
00008d00	stwu	r1,0xffa0(r1)
00008d04	bne+	0x8d28
00008d08	addis	r3,r31,__mh_dylib_header
00008d0c	addis	r4,r31,__mh_dylib_header
00008d10	addis	r6,r31,__mh_dylib_header
00008d14	li	r5,0x727
00008d18	addi	r3,r3,0x48bc
00008d1c	addi	r4,r4,0x52f8
00008d20	addi	r6,r6,0x5290
00008d24	b	0x8d50
00008d28	lwz	r0,__mh_dylib_header(r2)
00008d2c	cmpwi	cr7,r0,__mh_dylib_header
00008d30	beq+	cr7,0x8d54
00008d34	addis	r3,r31,__mh_dylib_header
00008d38	addis	r4,r31,__mh_dylib_header
00008d3c	addis	r6,r31,__mh_dylib_header
00008d40	li	r5,0x728
00008d44	addi	r3,r3,0x48bc
00008d48	addi	r4,r4,0x52f8
00008d4c	addi	r6,r6,0x57a0
00008d50	bl	___eprintf
00008d54	addis	r7,r31,__mh_dylib_header
00008d58	addis	r8,r31,__mh_dylib_header
00008d5c	stw	r0,0x38(r1)
00008d60	stw	r2,0x3c(r1)
00008d64	or	r4,r3,r3
00008d68	addi	r7,r7,0xd7e8
00008d6c	li	r3,__mh_dylib_header
00008d70	addi	r8,r8,0xd920
00008d74	li	r6,0x1
00008d78	li	r9,__mh_dylib_header
00008d7c	li	r10,__mh_dylib_header
00008d80	bl	_QMOImageCreate
00008d84	addi	r1,r1,0x60
00008d88	lwz	r0,0x8(r1)
00008d8c	lwz	r31,0xfffc(r1)
00008d90	mtspr	lr,r0
00008d94	blr
_QMOImageCreateFromTask:
00008d98	mfspr	r0,lr
00008d9c	or.	r11,r3,r3
00008da0	stmw	r30,0xfff8(r1)
00008da4	bcl	20,31,0x8da8
00008da8	or	r3,r4,r4
00008dac	or	r30,r7,r7
00008db0	mfspr	r31,lr
00008db4	stw	r0,0x8(r1)
00008db8	or	r4,r5,r5
00008dbc	or	r5,r6,r6
00008dc0	stwu	r1,0xffa0(r1)
00008dc4	bne+	0x8de8
00008dc8	addis	r3,r31,__mh_dylib_header
00008dcc	addis	r4,r31,__mh_dylib_header
00008dd0	addis	r6,r31,__mh_dylib_header
00008dd4	li	r5,0x69b
00008dd8	addi	r3,r3,0x4808
00008ddc	addi	r4,r4,0x5244
00008de0	addi	r6,r6,0x48cc
00008de4	b	0x8e0c
00008de8	cmpwi	cr7,r7,__mh_dylib_header
00008dec	bne+	cr7,0x8e10
00008df0	addis	r3,r31,__mh_dylib_header
00008df4	addis	r4,r31,__mh_dylib_header
00008df8	addis	r6,r31,__mh_dylib_header
00008dfc	li	r5,0x69e
00008e00	addi	r3,r3,0x4808
00008e04	addi	r4,r4,0x5244
00008e08	addi	r6,r6,0x51dc
00008e0c	bl	___eprintf
00008e10	lwz	r0,__mh_dylib_header(r7)
00008e14	cmpwi	cr7,r0,__mh_dylib_header
00008e18	beq+	cr7,0x8e3c
00008e1c	addis	r3,r31,__mh_dylib_header
00008e20	addis	r4,r31,__mh_dylib_header
00008e24	addis	r6,r31,__mh_dylib_header
00008e28	li	r5,0x69f
00008e2c	addi	r3,r3,0x4808
00008e30	addi	r4,r4,0x5244
00008e34	addi	r6,r6,0x56ec
00008e38	b	0x8e0c
00008e3c	addis	r2,r31,__mh_dylib_header
00008e40	lwz	r2,0x6358(r2)
00008e44	lwz	r0,__mh_dylib_header(r2)
00008e48	cmpw	cr7,r11,r0
00008e4c	bne	cr7,0x8e74
00008e50	addis	r2,r31,__mh_dylib_header
00008e54	lwz	r2,0x626c(r2)
00008e58	cmpwi	cr7,r2,__mh_dylib_header
00008e5c	beq	cr7,0x8e74
00008e60	or	r3,r4,r4
00008e64	or	r5,r7,r7
00008e68	or	r4,r6,r6
00008e6c	bl	_QMOImageCreateFromLocalImage
00008e70	b	0x8e9c
00008e74	addis	r7,r31,__mh_dylib_header
00008e78	addis	r8,r31,__mh_dylib_header
00008e7c	stw	r11,0x38(r1)
00008e80	stw	r30,0x3c(r1)
00008e84	addi	r7,r7,0xd4c8
00008e88	addi	r8,r8,0xd688
00008e8c	li	r6,0x1
00008e90	li	r9,__mh_dylib_header
00008e94	li	r10,__mh_dylib_header
00008e98	bl	_QMOImageCreate
00008e9c	lwz	r5,__mh_dylib_header(r30)
00008ea0	subfic	r0,r3,__mh_dylib_header
00008ea4	adde	r9,r0,r3
00008ea8	cmpwi	cr7,r5,__mh_dylib_header
00008eac	beq	cr7,0x8f2c
00008eb0	lwz	r0,0xc(r5)
00008eb4	cmpwi	cr7,r0,__mh_dylib_header
00008eb8	beq	cr7,0x8f2c
00008ebc	lwz	r0,0x14(r5)
00008ec0	cmplwi	cr7,r0,0x1b
00008ec4	ble	cr7,0x8f2c
00008ec8	lwz	r0,0x34(r5)
00008ecc	cmpwi	cr7,r0,__mh_dylib_header
00008ed0	beq	cr7,0x8f2c
00008ed4	lwz	r2,0x38(r5)
00008ed8	cmpwi	cr7,r2,__mh_dylib_header
00008edc	beq	cr7,0x8f2c
00008ee0	lwz	r0,__mh_dylib_header(r2)
00008ee4	cmpwi	cr7,r0,__mh_dylib_header
00008ee8	beq	cr7,0x8f2c
00008eec	lwz	r0,0x3c(r5)
00008ef0	cmpwi	cr7,r0,__mh_dylib_header
00008ef4	beq	cr7,0x8f2c
00008ef8	lwz	r2,0x40(r5)
00008efc	cmpwi	cr7,r2,__mh_dylib_header
00008f00	beq	cr7,0x8f2c
00008f04	lwz	r0,__mh_dylib_header(r2)
00008f08	cmpwi	cr7,r0,__mh_dylib_header
00008f0c	beq	cr7,0x8f2c
00008f10	lwz	r0,0x44(r5)
00008f14	cmpwi	cr7,r0,__mh_dylib_header
00008f18	beq	cr7,0x8f2c
00008f1c	lwz	r0,0x48(r5)
00008f20	li	r2,0x1
00008f24	cmpwi	cr7,r0,__mh_dylib_header
00008f28	bne	cr7,0x8f30
00008f2c	li	r2,__mh_dylib_header
00008f30	cmpw	cr7,r9,r2
00008f34	beq+	cr7,0x8f58
00008f38	addis	r3,r31,__mh_dylib_header
00008f3c	addis	r4,r31,__mh_dylib_header
00008f40	addis	r6,r31,__mh_dylib_header
00008f44	li	r5,0x6a7
00008f48	addi	r3,r3,0x4808
00008f4c	addi	r4,r4,0x5244
00008f50	addi	r6,r6,0x57e4
00008f54	b	0x8e0c
00008f58	addi	r1,r1,0x60
00008f5c	lwz	r0,0x8(r1)
00008f60	lmw	r30,0xfff8(r1)
00008f64	mtspr	lr,r0
00008f68	blr
_QMOImageCreateFromFile:
00008f6c	mfspr	r0,lr
00008f70	stmw	r22,0xffd8(r1)
00008f74	or	r28,r4,r4
00008f78	mfcr	r2
00008f7c	bcl	20,31,0x8f80
00008f80	or.	r26,r3,r3
00008f84	stw	r0,0x8(r1)
00008f88	or	r25,r5,r5
00008f8c	mfspr	r31,lr
00008f90	or	r27,r6,r6
00008f94	stw	r2,0x4(r1)
00008f98	stwu	r1,0xff40(r1)
00008f9c	bne+	0x8fc0
00008fa0	addis	r3,r31,__mh_dylib_header
00008fa4	addis	r4,r31,__mh_dylib_header
00008fa8	addis	r6,r31,__mh_dylib_header
00008fac	li	r5,0x5e7
00008fb0	addi	r3,r3,0x4630
00008fb4	addi	r4,r4,0x506c
00008fb8	addi	r6,r6,0x5638
00008fbc	b	0x8fec
00008fc0	cmpwi	cr3,r4,0xffff
00008fc4	bne	cr3,0x8ff0
00008fc8	cmpwi	cr7,r5,__mh_dylib_header
00008fcc	beq	cr7,0x8ff0
00008fd0	addis	r3,r31,__mh_dylib_header
00008fd4	addis	r4,r31,__mh_dylib_header
00008fd8	addis	r6,r31,__mh_dylib_header
00008fdc	li	r5,0x5e8
00008fe0	addi	r3,r3,0x4630
00008fe4	addi	r4,r4,0x506c
00008fe8	addi	r6,r6,0x564c
00008fec	bl	___eprintf
00008ff0	cmpwi	cr7,r27,__mh_dylib_header
00008ff4	bne+	cr7,0x9018
00008ff8	addis	r3,r31,__mh_dylib_header
00008ffc	addis	r4,r31,__mh_dylib_header
00009000	addis	r6,r31,__mh_dylib_header
00009004	li	r5,0x5e9
00009008	addi	r3,r3,0x4630
0000900c	addi	r4,r4,0x506c
00009010	addi	r6,r6,0x5004
00009014	b	0x8fec
00009018	lwz	r0,__mh_dylib_header(r27)
0000901c	cmpwi	cr7,r0,__mh_dylib_header
00009020	beq+	cr7,0x9044
00009024	addis	r3,r31,__mh_dylib_header
00009028	addis	r4,r31,__mh_dylib_header
0000902c	addis	r6,r31,__mh_dylib_header
00009030	li	r5,0x5ea
00009034	addi	r3,r3,0x4630
00009038	addi	r4,r4,0x506c
0000903c	addi	r6,r6,0x5514
00009040	b	0x8fec
00009044	or	r3,r26,r26
00009048	li	r4,__mh_dylib_header
0000904c	bl	0xd200	; symbol stub for: _open
00009050	or.	r29,r3,r3
00009054	bge	0x9068
00009058	bl	0xcf20	; symbol stub for: ___error
0000905c	lwz	r30,__mh_dylib_header(r3)
00009060	cmpwi	cr4,r30,__mh_dylib_header
00009064	bne	cr4,0x9360
00009068	or	r3,r29,r29
0000906c	addi	r4,r1,0x4c
00009070	li	r5,0x8
00009074	bl	0xd2e0	; symbol stub for: _read
00009078	cmpwi	r3,__mh_dylib_header
0000907c	bge	0x9094
00009080	bl	0xcf20	; symbol stub for: ___error
00009084	lwz	r30,__mh_dylib_header(r3)
00009088	cmpwi	cr4,r30,__mh_dylib_header
0000908c	beq	cr4,0x90a0
00009090	b	0x9360
00009094	cmpwi	cr7,r3,0x8
00009098	li	r30,0x20
0000909c	bne	cr7,0x9360
000090a0	lis	r0,0xcafe
000090a4	lwz	r2,0x4c(r1)
000090a8	li	r22,__mh_dylib_header
000090ac	li	r23,__mh_dylib_header
000090b0	ori	r0,r0,0xbabe
000090b4	cmpw	cr7,r2,r0
000090b8	bne	cr7,0x9230
000090bc	bne	cr3,0x90e8
000090c0	cmpwi	cr7,r25,__mh_dylib_header
000090c4	beq	cr7,0x90e8
000090c8	addis	r3,r31,__mh_dylib_header
000090cc	addis	r4,r31,__mh_dylib_header
000090d0	addis	r6,r31,__mh_dylib_header
000090d4	li	r5,0x589
000090d8	addi	r3,r3,0x4630
000090dc	addi	r4,r4,0x506c
000090e0	addi	r6,r6,0x564c
000090e4	b	0x8fec
000090e8	lwz	r23,0x50(r1)
000090ec	mulli	r30,r23,0x14
000090f0	or	r3,r30,r30
000090f4	bl	0xd160	; symbol stub for: _malloc
000090f8	or.	r24,r3,r3
000090fc	bne	0x9108
00009100	li	r30,0xc
00009104	b	0x9148
00009108	or	r3,r29,r29
0000910c	or	r4,r24,r24
00009110	or	r5,r30,r30
00009114	bl	0xd2e0	; symbol stub for: _read
00009118	cmpwi	r3,__mh_dylib_header
0000911c	bge	0x913c
00009120	bl	0xcf20	; symbol stub for: ___error
00009124	lwz	r30,__mh_dylib_header(r3)
00009128	cmpwi	cr4,r30,__mh_dylib_header
0000912c	beq	cr4,0x9158
00009130	li	r22,__mh_dylib_header
00009134	li	r23,__mh_dylib_header
00009138	b	0x9224
0000913c	cmpw	cr7,r30,r3
00009140	beq	cr7,0x9158
00009144	li	r30,0x20
00009148	cmpwi	cr4,r30,__mh_dylib_header
0000914c	li	r22,__mh_dylib_header
00009150	li	r23,__mh_dylib_header
00009154	b	0x9224
00009158	bne	cr3,0x91f0
0000915c	cmpwi	cr7,r25,__mh_dylib_header
00009160	beq+	cr7,0x9184
00009164	addis	r3,r31,__mh_dylib_header
00009168	addis	r4,r31,__mh_dylib_header
0000916c	addis	r6,r31,__mh_dylib_header
00009170	li	r5,0x5b9
00009174	addi	r3,r3,0x4630
00009178	addi	r4,r4,0x506c
0000917c	addi	r6,r6,0x567c
00009180	b	0x8fec
00009184	addis	r22,r31,__mh_dylib_header
00009188	lwz	r30,0x61f8(r22)
0000918c	cmpwi	cr7,r30,__mh_dylib_header
00009190	bne	cr7,0x91a0
00009194	bl	0xcf00	; symbol stub for: _NXGetLocalArchInfo
00009198	stw	r3,0x61f8(r22)
0000919c	or	r30,r3,r3
000091a0	cmpwi	cr7,r30,__mh_dylib_header
000091a4	beq	cr7,0x91e0
000091a8	lwz	r3,0x4(r30)
000091ac	lwz	r4,0x8(r30)
000091b0	or	r5,r24,r24
000091b4	or	r6,r23,r23
000091b8	bl	0xcee0	; symbol stub for: _NXFindBestFatArch
000091bc	cmpwi	r3,__mh_dylib_header
000091c0	bne	0x9210
000091c4	lwz	r3,0x4(r30)
000091c8	li	r4,__mh_dylib_header
000091cc	or	r5,r24,r24
000091d0	or	r6,r23,r23
000091d4	bl	0xcee0	; symbol stub for: _NXFindBestFatArch
000091d8	cmpwi	r3,__mh_dylib_header
000091dc	bne	0x9210
000091e0	lwz	r3,__mh_dylib_header(r24)
000091e4	or	r6,r23,r23
000091e8	li	r4,__mh_dylib_header
000091ec	b	0x91fc
000091f0	or	r6,r23,r23
000091f4	or	r3,r28,r28
000091f8	or	r4,r25,r25
000091fc	or	r5,r24,r24
00009200	li	r30,0x3
00009204	bl	0xcee0	; symbol stub for: _NXFindBestFatArch
00009208	cmpwi	cr7,r3,__mh_dylib_header
0000920c	beq	cr7,0x9148
00009210	lwz	r0,0x8(r3)
00009214	li	r30,__mh_dylib_header
00009218	li	r22,__mh_dylib_header
0000921c	cmpwi	cr4,r30,__mh_dylib_header
00009220	or	r23,r0,r0
00009224	or	r3,r24,r24
00009228	bl	0xd0c0	; symbol stub for: _free
0000922c	bne	cr4,0x9360
00009230	or	r3,r29,r29
00009234	addi	r4,r1,0x68
00009238	li	r5,0x1c
0000923c	or	r6,r22,r22
00009240	or	r7,r23,r23
00009244	bl	0xd240	; symbol stub for: _pread
00009248	cmpwi	r3,__mh_dylib_header
0000924c	bge	0x9264
00009250	bl	0xcf20	; symbol stub for: ___error
00009254	lwz	r30,__mh_dylib_header(r3)
00009258	cmpwi	cr4,r30,__mh_dylib_header
0000925c	beq	cr4,0x9270
00009260	b	0x9360
00009264	cmpwi	cr7,r3,0x1c
00009268	li	r30,0x20
0000926c	bne	cr7,0x9360
00009270	lwz	r9,0x68(r1)
00009274	lwz	r11,0x6c(r1)
00009278	li	r0,__mh_dylib_header
0000927c	lwz	r10,0x70(r1)
00009280	stw	r0,0x64(r1)
00009284	stw	r0,0x5c(r1)
00009288	stw	r0,0x60(r1)
0000928c	addis	r2,r9,0x112
00009290	stw	r11,0x54(r1)
00009294	stw	r10,0x58(r1)
00009298	addi	r2,r2,0x532
0000929c	cmplwi	cr7,r2,0x1
000092a0	ble	cr7,0x92f0
000092a4	lis	r0,0xcefa
000092a8	ori	r0,r0,0xedfe
000092ac	cmpw	cr7,r9,r0
000092b0	beq	cr7,0x92c8
000092b4	lis	r0,0xcffa
000092b8	li	r30,0x16
000092bc	ori	r0,r0,0xedfe
000092c0	cmpw	cr7,r9,r0
000092c4	bne	cr7,0x9360
000092c8	stw	r11,0x48(r1)
000092cc	addi	r0,r1,0x48
000092d0	nop
000092d4	nop
000092d8	lwbrx	r2,0,r0
000092dc	stw	r10,0x48(r1)
000092e0	stw	r2,0x54(r1)
000092e4	nop
000092e8	lwbrx	r0,0,r0
000092ec	stw	r0,0x58(r1)
000092f0	bne	cr3,0x92f8
000092f4	lwz	r28,0x54(r1)
000092f8	or	r3,r28,r28
000092fc	or	r4,r25,r25
00009300	addi	r5,r1,0x54
00009304	li	r6,0x1
00009308	li	r30,0x3
0000930c	bl	0xcee0	; symbol stub for: _NXFindBestFatArch
00009310	cmpwi	cr7,r3,__mh_dylib_header
00009314	beq	cr7,0x9360
00009318	addis	r7,r31,__mh_dylib_header
0000931c	addis	r8,r31,__mh_dylib_header
00009320	stw	r29,0x38(r1)
00009324	stw	r27,0x3c(r1)
00009328	addis	r9,r31,__mh_dylib_header
0000932c	addis	r10,r31,__mh_dylib_header
00009330	or	r3,r22,r22
00009334	or	r4,r23,r23
00009338	or	r5,r26,r26
0000933c	addi	r7,r7,0xcf94
00009340	addi	r8,r8,0xd110
00009344	addi	r9,r9,0xd1e8
00009348	addi	r10,r10,0xd264
0000934c	li	r6,__mh_dylib_header
00009350	bl	_QMOImageCreate
00009354	cmpwi	cr4,r3,__mh_dylib_header
00009358	or	r30,r3,r3
0000935c	beq	cr4,0x93a0
00009360	cmpwi	cr7,r29,0xffff
00009364	beq	cr7,0x939c
00009368	or	r3,r29,r29
0000936c	cmpwi	cr4,r30,__mh_dylib_header
00009370	bl	0xd000	; symbol stub for: _close
00009374	cmpwi	cr7,r3,__mh_dylib_header
00009378	beq+	cr7,0x93a0
0000937c	addis	r3,r31,__mh_dylib_header
00009380	addis	r4,r31,__mh_dylib_header
00009384	addis	r6,r31,__mh_dylib_header
00009388	li	r5,0x63f
0000938c	addi	r3,r3,0x4630
00009390	addi	r4,r4,0x506c
00009394	addi	r6,r6,0x5018
00009398	b	0x8fec
0000939c	cmpwi	cr4,r30,__mh_dylib_header
000093a0	mfcr	r9
000093a4	rlwinm	r9,r9,19,31,31
000093a8	lwz	r6,__mh_dylib_header(r27)
000093ac	cmpwi	cr7,r6,__mh_dylib_header
000093b0	beq	cr7,0x9430
000093b4	lwz	r0,0xc(r6)
000093b8	cmpwi	cr7,r0,__mh_dylib_header
000093bc	beq	cr7,0x9430
000093c0	lwz	r0,0x14(r6)
000093c4	cmplwi	cr7,r0,0x1b
000093c8	ble	cr7,0x9430
000093cc	lwz	r0,0x34(r6)
000093d0	cmpwi	cr7,r0,__mh_dylib_header
000093d4	beq	cr7,0x9430
000093d8	lwz	r2,0x38(r6)
000093dc	cmpwi	cr7,r2,__mh_dylib_header
000093e0	beq	cr7,0x9430
000093e4	lwz	r0,__mh_dylib_header(r2)
000093e8	cmpwi	cr7,r0,__mh_dylib_header
000093ec	beq	cr7,0x9430
000093f0	lwz	r0,0x3c(r6)
000093f4	cmpwi	cr7,r0,__mh_dylib_header
000093f8	beq	cr7,0x9430
000093fc	lwz	r2,0x40(r6)
00009400	cmpwi	cr7,r2,__mh_dylib_header
00009404	beq	cr7,0x9430
00009408	lwz	r0,__mh_dylib_header(r2)
0000940c	cmpwi	cr7,r0,__mh_dylib_header
00009410	beq	cr7,0x9430
00009414	lwz	r0,0x44(r6)
00009418	cmpwi	cr7,r0,__mh_dylib_header
0000941c	beq	cr7,0x9430
00009420	lwz	r0,0x48(r6)
00009424	li	r3,0x1
00009428	cmpwi	cr7,r0,__mh_dylib_header
0000942c	bne	cr7,0x9434
00009430	li	r3,__mh_dylib_header
00009434	cmpw	cr7,r9,r3
00009438	beq+	cr7,0x945c
0000943c	addis	r3,r31,__mh_dylib_header
00009440	addis	r4,r31,__mh_dylib_header
00009444	addis	r6,r31,__mh_dylib_header
00009448	li	r5,0x641
0000944c	addi	r3,r3,0x4630
00009450	addi	r4,r4,0x506c
00009454	addi	r6,r6,0x560c
00009458	b	0x8fec
0000945c	addi	r1,r1,0xc0
00009460	or	r3,r30,r30
00009464	lwz	r11,0x4(r1)
00009468	lwz	r0,0x8(r1)
0000946c	lmw	r22,0xffd8(r1)
00009470	mtspr	lr,r0
00009474	mtocrf	0x10,r11
00009478	mtocrf	0x08,r11
0000947c	blr
_QMOImageGetSegmentByName:
00009480	mfspr	r0,lr
00009484	stmw	r27,0xffec(r1)
00009488	or	r28,r5,r5
0000948c	mfcr	r2
00009490	bcl	20,31,0x9494
00009494	or.	r30,r3,r3
00009498	stw	r0,0x8(r1)
0000949c	or	r29,r6,r6
000094a0	mfspr	r31,lr
000094a4	stw	r2,0x4(r1)
000094a8	stwu	r1,0xff90(r1)
000094ac	beq	0x9528
000094b0	lwz	r0,0xc(r30)
000094b4	cmpwi	cr7,r0,__mh_dylib_header
000094b8	beq	cr7,0x9528
000094bc	lwz	r0,0x14(r30)
000094c0	cmplwi	cr7,r0,0x1b
000094c4	ble	cr7,0x9528
000094c8	lwz	r0,0x34(r30)
000094cc	cmpwi	cr7,r0,__mh_dylib_header
000094d0	beq	cr7,0x9528
000094d4	lwz	r2,0x38(r30)
000094d8	cmpwi	cr7,r2,__mh_dylib_header
000094dc	beq	cr7,0x9528
000094e0	lwz	r0,__mh_dylib_header(r2)
000094e4	cmpwi	cr7,r0,__mh_dylib_header
000094e8	beq	cr7,0x9528
000094ec	lwz	r0,0x3c(r30)
000094f0	cmpwi	cr7,r0,__mh_dylib_header
000094f4	beq	cr7,0x9528
000094f8	lwz	r2,0x40(r30)
000094fc	cmpwi	cr7,r2,__mh_dylib_header
00009500	beq	cr7,0x9528
00009504	lwz	r0,__mh_dylib_header(r2)
00009508	cmpwi	cr7,r0,__mh_dylib_header
0000950c	beq	cr7,0x9528
00009510	lwz	r0,0x44(r30)
00009514	cmpwi	cr7,r0,__mh_dylib_header
00009518	beq	cr7,0x9528
0000951c	lwz	r0,0x48(r30)
00009520	cmpwi	cr7,r0,__mh_dylib_header
00009524	bne	cr7,0x9548
00009528	addis	r3,r31,__mh_dylib_header
0000952c	addis	r4,r31,__mh_dylib_header
00009530	addis	r6,r31,__mh_dylib_header
00009534	li	r5,0x44d
00009538	addi	r3,r3,0x411c
0000953c	addi	r4,r4,0x4b58
00009540	addi	r6,r6,0x4f34
00009544	b	0x956c
00009548	cmpwi	cr7,r4,__mh_dylib_header
0000954c	bne+	cr7,0x9570
00009550	addis	r3,r31,__mh_dylib_header
00009554	addis	r4,r31,__mh_dylib_header
00009558	addis	r6,r31,__mh_dylib_header
0000955c	li	r5,0x44e
00009560	addi	r3,r3,0x411c
00009564	addi	r4,r4,0x4b58
00009568	addi	r6,r6,0x4fb4
0000956c	bl	___eprintf
00009570	cmpwi	cr4,r5,__mh_dylib_header
00009574	bne	cr4,0x95a0
00009578	cmpwi	cr7,r6,__mh_dylib_header
0000957c	bne	cr7,0x95a0
00009580	addis	r3,r31,__mh_dylib_header
00009584	addis	r4,r31,__mh_dylib_header
00009588	addis	r6,r31,__mh_dylib_header
0000958c	li	r5,0x44f
00009590	addi	r3,r3,0x411c
00009594	addi	r4,r4,0x4b58
00009598	addi	r6,r6,0x5178
0000959c	b	0x956c
000095a0	or	r3,r30,r30
000095a4	addi	r5,r1,0x38
000095a8	bl	_GetSegmentIndexByName
000095ac	or.	r27,r3,r3
000095b0	bne	0x95e8
000095b4	beq	cr4,0x95c0
000095b8	lwz	r0,0x38(r1)
000095bc	stw	r0,__mh_dylib_header(r28)
000095c0	cmpwi	cr7,r29,__mh_dylib_header
000095c4	beq	cr7,0x95e8
000095c8	lwz	r4,0x38(r1)
000095cc	lwz	r0,0x38(r30)
000095d0	or	r3,r29,r29
000095d4	li	r5,0x48
000095d8	mulli	r4,r4,0x54
000095dc	add	r4,r4,r0
000095e0	addi	r4,r4,0x4
000095e4	bl	0xd180	; symbol stub for: _memcpy
000095e8	addi	r1,r1,0x70
000095ec	or	r3,r27,r27
000095f0	lwz	r0,0x8(r1)
000095f4	lwz	r11,0x4(r1)
000095f8	lmw	r27,0xffec(r1)
000095fc	mtspr	lr,r0
00009600	mtocrf	0x08,r11
00009604	blr
_FindTaskDyld:
00009608	mfspr	r0,lr
0000960c	stmw	r21,0xffd4(r1)
00009610	or.	r27,r3,r3
00009614	bcl	20,31,0x9618
00009618	or	r23,r4,r4
0000961c	or	r22,r5,r5
00009620	mfspr	r31,lr
00009624	stw	r0,0x8(r1)
00009628	stwu	r1,0xff30(r1)
0000962c	bne+	0x9650
00009630	addis	r3,r31,__mh_dylib_header
00009634	addis	r4,r31,__mh_dylib_header
00009638	addis	r6,r31,__mh_dylib_header
0000963c	li	r5,0x81a
00009640	addi	r3,r3,0x3f98
00009644	addi	r4,r4,0x49d4
00009648	addi	r6,r6,0x405c
0000964c	b	0x9674
00009650	cmpwi	cr7,r5,__mh_dylib_header
00009654	bne+	cr7,0x9678
00009658	addis	r3,r31,__mh_dylib_header
0000965c	addis	r4,r31,__mh_dylib_header
00009660	addis	r6,r31,__mh_dylib_header
00009664	li	r5,0x81b
00009668	addi	r3,r3,0x3f98
0000966c	addi	r4,r4,0x49d4
00009670	addi	r6,r6,0x5020
00009674	bl	___eprintf
00009678	addis	r26,r31,__mh_dylib_header
0000967c	addi	r2,r26,0x5b70
00009680	lwz	r9,0x5b70(r26)
00009684	lwz	r0,0x4(r2)
00009688	or.	r9,r9,r0
0000968c	bne	0x98c4
00009690	addis	r25,r31,__mh_dylib_header
00009694	stw	r9,0x3c(r1)
00009698	lwz	r0,0x5b6c(r25)
0000969c	cmpwi	cr7,r0,__mh_dylib_header
000096a0	bne	cr7,0x97dc
000096a4	bl	0xcf80	; symbol stub for: __dyld_image_count
000096a8	li	r29,__mh_dylib_header
000096ac	or	r28,r3,r3
000096b0	b	0x97d4
000096b4	or	r3,r29,r29
000096b8	bl	0xcf40	; symbol stub for: __dyld_get_image_header
000096bc	lwz	r0,0xc(r3)
000096c0	or	r30,r3,r3
000096c4	cmpwi	cr7,r0,0x2
000096c8	bne	cr7,0x97d0
000096cc	addis	r24,r31,__mh_dylib_header
000096d0	lwz	r0,0x5b68(r24)
000096d4	cmpwi	cr7,r0,__mh_dylib_header
000096d8	bne	cr7,0x9704
000096dc	addis	r3,r31,__mh_dylib_header
000096e0	addis	r21,r31,__mh_dylib_header
000096e4	addi	r3,r3,0x4c18
000096e8	bl	0xd100	; symbol stub for: _getenv
000096ec	addic	r0,r3,0xffff
000096f0	subfe	r2,r0,r3
000096f4	li	r0,0x1
000096f8	stw	r2,0x5b64(r21)
000096fc	stw	r0,0x5b68(r24)
00009700	b	0x9708
00009704	addis	r21,r31,__mh_dylib_header
00009708	lwz	r0,0x5b64(r21)
0000970c	cmpwi	cr7,r0,__mh_dylib_header
00009710	beq	cr7,0x9730
00009714	addis	r3,r31,__mh_dylib_header
00009718	addis	r4,r31,__mh_dylib_header
0000971c	or	r5,r30,r30
00009720	lwz	r3,0x5aec(r3)
00009724	addi	r4,r4,0x5034
00009728	addi	r3,r3,0xb0
0000972c	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00009730	li	r0,__mh_dylib_header
00009734	or	r3,r30,r30
00009738	li	r4,__mh_dylib_header
0000973c	addi	r5,r1,0x40
00009740	stw	r0,0x40(r1)
00009744	bl	_QMOImageCreateFromLocalImage
00009748	cmpwi	cr7,r3,__mh_dylib_header
0000974c	bne	cr7,0x97c4
00009750	lwz	r3,0x40(r1)
00009754	li	r4,0xe
00009758	bl	_QMOImageFindLoadCommandByID
0000975c	cmpwi	r3,__mh_dylib_header
00009760	beq	0x97c4
00009764	lwz	r0,0x5b68(r24)
00009768	lwz	r2,0x8(r3)
0000976c	cmpwi	cr7,r0,__mh_dylib_header
00009770	add	r2,r3,r2
00009774	stw	r2,0x5b6c(r25)
00009778	bne	cr7,0x979c
0000977c	addis	r3,r31,__mh_dylib_header
00009780	addi	r3,r3,0x4c18
00009784	bl	0xd100	; symbol stub for: _getenv
00009788	addic	r0,r3,0xffff
0000978c	subfe	r2,r0,r3
00009790	li	r0,0x1
00009794	stw	r2,0x5b64(r21)
00009798	stw	r0,0x5b68(r24)
0000979c	lwz	r0,0x5b64(r21)
000097a0	cmpwi	cr7,r0,__mh_dylib_header
000097a4	beq	cr7,0x97c4
000097a8	addis	r3,r31,__mh_dylib_header
000097ac	addis	r4,r31,__mh_dylib_header
000097b0	lwz	r5,0x5b6c(r25)
000097b4	lwz	r3,0x5aec(r3)
000097b8	addi	r4,r4,0x5060
000097bc	addi	r3,r3,0xb0
000097c0	bl	0xd060	; symbol stub for: _fprintf$LDBL128
000097c4	lwz	r3,0x40(r1)
000097c8	bl	_QMOImageDestroy
000097cc	b	0x97e4
000097d0	addi	r29,r29,0x1
000097d4	cmplw	cr7,r29,r28
000097d8	blt	cr7,0x96b4
000097dc	addis	r24,r31,__mh_dylib_header
000097e0	addis	r21,r31,__mh_dylib_header
000097e4	lwz	r3,0x5b6c(r25)
000097e8	cmpwi	cr7,r3,__mh_dylib_header
000097ec	bne	cr7,0x97f8
000097f0	addis	r2,r31,__mh_dylib_header
000097f4	addi	r3,r2,0x5088
000097f8	li	r4,0xffff
000097fc	li	r5,__mh_dylib_header
00009800	addi	r6,r1,0x3c
00009804	bl	_QMOImageCreateFromFile
00009808	cmpwi	cr7,r3,__mh_dylib_header
0000980c	bne	cr7,0x98b8
00009810	lwz	r3,0x3c(r1)
00009814	addis	r4,r31,__mh_dylib_header
00009818	li	r5,__mh_dylib_header
0000981c	addi	r6,r1,0x48
00009820	addi	r4,r4,0x498c
00009824	bl	_QMOImageGetSegmentByName
00009828	cmpwi	cr7,r3,__mh_dylib_header
0000982c	bne	cr7,0x98b8
00009830	lwz	r0,0x5b68(r24)
00009834	lwz	r2,0x60(r1)
00009838	addi	r30,r26,0x5b70
0000983c	lwz	r3,0x64(r1)
00009840	cmpwi	cr7,r0,__mh_dylib_header
00009844	stw	r2,__mh_dylib_header(r30)
00009848	stw	r3,0x4(r30)
0000984c	bne	cr7,0x9870
00009850	addis	r3,r31,__mh_dylib_header
00009854	addi	r3,r3,0x4c18
00009858	bl	0xd100	; symbol stub for: _getenv
0000985c	addic	r0,r3,0xffff
00009860	subfe	r2,r0,r3
00009864	li	r0,0x1
00009868	stw	r2,0x5b64(r21)
0000986c	stw	r0,0x5b68(r24)
00009870	lwz	r0,0x5b64(r21)
00009874	cmpwi	cr7,r0,__mh_dylib_header
00009878	beq	cr7,0x98b8
0000987c	lwz	r3,0x3c(r1)
00009880	lwz	r28,0x4(r30)
00009884	bl	_QMOImageGetCPUType
00009888	or	r29,r3,r3
0000988c	lwz	r3,0x3c(r1)
00009890	bl	_QMOImageGetCPUSubType
00009894	addis	r4,r31,__mh_dylib_header
00009898	or	r5,r28,r28
0000989c	or	r7,r3,r3
000098a0	addis	r3,r31,__mh_dylib_header
000098a4	addi	r4,r4,0x5098
000098a8	or	r6,r29,r29
000098ac	lwz	r3,0x5aec(r3)
000098b0	addi	r3,r3,0xb0
000098b4	bl	0xd060	; symbol stub for: _fprintf$LDBL128
000098b8	lwz	r3,0x3c(r1)
000098bc	bl	_QMOImageDestroy
000098c0	b	0x98cc
000098c4	addis	r24,r31,__mh_dylib_header
000098c8	addis	r21,r31,__mh_dylib_header
000098cc	addi	r2,r26,0x5b70
000098d0	or	r3,r27,r27
000098d4	or	r4,r23,r23
000098d8	li	r7,0x5
000098dc	lwz	r28,__mh_dylib_header(r2)
000098e0	lwz	r29,0x4(r2)
000098e4	or	r5,r28,r28
000098e8	or	r6,r29,r29
000098ec	bl	_IsDyldAtAddress
000098f0	or.	r30,r3,r3
000098f4	beq	0x9974
000098f8	lwz	r0,0x5b68(r24)
000098fc	cmpwi	cr7,r0,__mh_dylib_header
00009900	bne	cr7,0x9924
00009904	addis	r3,r31,__mh_dylib_header
00009908	addi	r3,r3,0x4c18
0000990c	bl	0xd100	; symbol stub for: _getenv
00009910	addic	r0,r3,0xffff
00009914	subfe	r2,r0,r3
00009918	li	r0,0x1
0000991c	stw	r2,0x5b64(r21)
00009920	stw	r0,0x5b68(r24)
00009924	lwz	r0,0x5b64(r21)
00009928	cmpwi	cr7,r0,__mh_dylib_header
0000992c	beq	cr7,0x9950
00009930	addis	r3,r31,__mh_dylib_header
00009934	addis	r4,r31,__mh_dylib_header
00009938	or	r5,r28,r28
0000993c	or	r6,r29,r29
00009940	lwz	r3,0x5aec(r3)
00009944	addi	r4,r4,0x50fc
00009948	addi	r3,r3,0xb0
0000994c	bl	0xd060	; symbol stub for: _fprintf$LDBL128
00009950	li	r30,__mh_dylib_header
00009954	stw	r28,__mh_dylib_header(r22)
00009958	stw	r29,0x4(r22)
0000995c	b	0x9a48
00009960	lwz	r3,0x38(r1)
00009964	li	r2,__mh_dylib_header
00009968	stw	r2,__mh_dylib_header(r22)
0000996c	stw	r3,0x4(r22)
00009970	b	0x9a48
00009974	lwz	r0,0x5b68(r24)
00009978	cmpwi	cr7,r0,__mh_dylib_header
0000997c	bne	cr7,0x99a0
00009980	addis	r3,r31,__mh_dylib_header
00009984	addi	r3,r3,0x4c18
00009988	bl	0xd100	; symbol stub for: _getenv
0000998c	addic	r0,r3,0xffff
00009990	subfe	r2,r0,r3
00009994	li	r0,0x1
00009998	stw	r2,0x5b64(r21)
0000999c	stw	r0,0x5b68(r24)
000099a0	lwz	r0,0x5b64(r21)
000099a4	cmpwi	cr7,r0,__mh_dylib_header
000099a8	beq	cr7,0x99cc
000099ac	addis	r6,r31,__mh_dylib_header
000099b0	addis	r3,r31,__mh_dylib_header
000099b4	li	r4,0x1
000099b8	li	r5,0x2f
000099bc	lwz	r6,0x5aec(r6)
000099c0	addi	r3,r3,0x5130
000099c4	addi	r6,r6,0xb0
000099c8	bl	0xd0e0	; symbol stub for: _fwrite
000099cc	stw	r30,0x38(r1)
000099d0	addi	r24,r1,0x40
000099d4	addi	r25,r1,0x3c
000099d8	addi	r26,r1,0x48
000099dc	addi	r28,r1,0x44
000099e0	li	r29,0x8
000099e4	addi	r4,r1,0x38
000099e8	or	r5,r24,r24
000099ec	stw	r29,0x3c(r1)
000099f0	li	r6,0xa
000099f4	or	r7,r26,r26
000099f8	or	r8,r25,r25
000099fc	or	r9,r28,r28
00009a00	or	r3,r27,r27
00009a04	bl	0xd540	; symbol stub for: _vm_region
00009a08	bl	_QTMErrnoFromMachError
00009a0c	or.	r30,r3,r3
00009a10	bne	0x9a48
00009a14	lwz	r6,0x38(r1)
00009a18	lwz	r7,0x48(r1)
00009a1c	li	r5,__mh_dylib_header
00009a20	or	r3,r27,r27
00009a24	or	r4,r23,r23
00009a28	bl	_IsDyldAtAddress
00009a2c	cmpwi	cr7,r3,__mh_dylib_header
00009a30	bne	cr7,0x9960
00009a34	lwz	r0,0x38(r1)
00009a38	lwz	r2,0x40(r1)
00009a3c	add	r0,r0,r2
00009a40	stw	r0,0x38(r1)
00009a44	b	0x99e4
00009a48	addi	r1,r1,0xd0
00009a4c	or	r3,r30,r30
00009a50	lwz	r0,0x8(r1)
00009a54	lmw	r21,0xffd4(r1)
00009a58	mtspr	lr,r0
00009a5c	blr
_QMOImageCreateFromTaskDyld:
00009a60	mfspr	r0,lr
00009a64	stmw	r27,0xffec(r1)
00009a68	or.	r30,r3,r3
00009a6c	bcl	20,31,0x9a70
00009a70	or	r29,r4,r4
00009a74	or	r28,r5,r5
00009a78	mfspr	r31,lr
00009a7c	stw	r0,0x8(r1)
00009a80	stwu	r1,0xff90(r1)
00009a84	bne+	0x9aa8
00009a88	addis	r3,r31,__mh_dylib_header
00009a8c	addis	r4,r31,__mh_dylib_header
00009a90	addis	r6,r31,__mh_dylib_header
00009a94	li	r5,0x6ba
00009a98	addi	r3,r3,0x3b40
00009a9c	addi	r4,r4,0x457c
00009aa0	addi	r6,r6,0x3c04
00009aa4	b	0x9acc
00009aa8	cmpwi	cr7,r5,__mh_dylib_header
00009aac	bne+	cr7,0x9ad0
00009ab0	addis	r3,r31,__mh_dylib_header
00009ab4	addis	r4,r31,__mh_dylib_header
00009ab8	addis	r6,r31,__mh_dylib_header
00009abc	li	r5,0x6bb
00009ac0	addi	r3,r3,0x3b40
00009ac4	addi	r4,r4,0x457c
00009ac8	addi	r6,r6,0x4514
00009acc	bl	___eprintf
00009ad0	lwz	r0,__mh_dylib_header(r5)
00009ad4	cmpwi	cr7,r0,__mh_dylib_header
00009ad8	beq+	cr7,0x9afc
00009adc	addis	r3,r31,__mh_dylib_header
00009ae0	addis	r4,r31,__mh_dylib_header
00009ae4	addis	r6,r31,__mh_dylib_header
00009ae8	li	r5,0x6bc
00009aec	addi	r3,r3,0x3b40
00009af0	addi	r4,r4,0x457c
00009af4	addi	r6,r6,0x4a24
00009af8	b	0x9acc
00009afc	cmpwi	cr7,r4,0xffff
00009b00	stw	r0,0x38(r1)
00009b04	bne	cr7,0x9ba8
00009b08	bl	_QTMTaskIsNative
00009b0c	cmpwi	cr7,r3,__mh_dylib_header
00009b10	bne	cr7,0x9ba8
00009b14	addi	r27,r1,0x40
00009b18	or	r3,r30,r30
00009b1c	li	r4,0x12
00009b20	or	r5,r27,r27
00009b24	bl	_FindTaskDyld
00009b28	cmpwi	cr7,r3,__mh_dylib_header
00009b2c	beq	cr7,0x9bc4
00009b30	addis	r29,r31,__mh_dylib_header
00009b34	lwz	r0,0x5710(r29)
00009b38	cmpwi	cr7,r0,__mh_dylib_header
00009b3c	bne	cr7,0x9b68
00009b40	addis	r3,r31,__mh_dylib_header
00009b44	addi	r3,r3,0x47c0
00009b48	bl	0xd100	; symbol stub for: _getenv
00009b4c	addis	r9,r31,__mh_dylib_header
00009b50	addic	r2,r3,0xffff
00009b54	subfe	r0,r2,r3
00009b58	li	r2,0x1
00009b5c	stw	r0,0x570c(r9)
00009b60	stw	r2,0x5710(r29)
00009b64	b	0x9b6c
00009b68	addis	r9,r31,__mh_dylib_header
00009b6c	lwz	r0,0x570c(r9)
00009b70	cmpwi	cr7,r0,__mh_dylib_header
00009b74	beq	cr7,0x9b98
00009b78	addis	r6,r31,__mh_dylib_header
00009b7c	addis	r3,r31,__mh_dylib_header
00009b80	li	r4,0x1
00009b84	li	r5,0x54
00009b88	lwz	r6,0x5694(r6)
00009b8c	addi	r3,r3,0x4d08
00009b90	addi	r6,r6,0xb0
00009b94	bl	0xd0e0	; symbol stub for: _fwrite
00009b98	or	r5,r27,r27
00009b9c	or	r3,r30,r30
00009ba0	li	r4,0xffff
00009ba4	b	0x9bb4
00009ba8	or	r4,r29,r29
00009bac	or	r3,r30,r30
00009bb0	addi	r5,r1,0x40
00009bb4	bl	_FindTaskDyld
00009bb8	cmpwi	r3,__mh_dylib_header
00009bbc	or	r2,r3,r3
00009bc0	bne	0x9c80
00009bc4	lwz	r4,0x40(r1)
00009bc8	lwz	r5,0x44(r1)
00009bcc	or	r3,r30,r30
00009bd0	li	r6,__mh_dylib_header
00009bd4	addi	r7,r1,0x38
00009bd8	bl	_QMOImageCreateFromTask
00009bdc	or.	r2,r3,r3
00009be0	bne	0x9c80
00009be4	lwz	r3,0x38(r1)
00009be8	lwz	r0,__mh_dylib_header(r3)
00009bec	cmpwi	cr7,r0,__mh_dylib_header
00009bf0	beq+	cr7,0x9c14
00009bf4	addis	r3,r31,__mh_dylib_header
00009bf8	addis	r4,r31,__mh_dylib_header
00009bfc	addis	r6,r31,__mh_dylib_header
00009c00	li	r5,0x6d2
00009c04	addi	r3,r3,0x3b40
00009c08	addi	r4,r4,0x457c
00009c0c	addi	r6,r6,0x4d60
00009c10	b	0x9acc
00009c14	li	r4,0xf
00009c18	bl	_QMOImageFindLoadCommandByID
00009c1c	or.	r29,r3,r3
00009c20	beq	0x9c44
00009c24	lwz	r3,0x38(r1)
00009c28	lwz	r4,0x8(r29)
00009c2c	bl	_QMOImageToLocalUInt32
00009c30	add.	r3,r3,r29
00009c34	beq	0x9c44
00009c38	lwz	r29,0x38(r1)
00009c3c	bl	0xd360	; symbol stub for: _strdup
00009c40	stw	r3,__mh_dylib_header(r29)
00009c44	lwz	r2,0x38(r1)
00009c48	lwz	r0,__mh_dylib_header(r2)
00009c4c	cmpwi	cr7,r0,__mh_dylib_header
00009c50	bne+	cr7,0x9c74
00009c54	addis	r3,r31,__mh_dylib_header
00009c58	addis	r4,r31,__mh_dylib_header
00009c5c	addis	r6,r31,__mh_dylib_header
00009c60	li	r5,0x6e1
00009c64	addi	r3,r3,0x3b40
00009c68	addi	r4,r4,0x457c
00009c6c	addi	r6,r6,0x4d7c
00009c70	b	0x9acc
00009c74	stw	r2,__mh_dylib_header(r28)
00009c78	li	r2,__mh_dylib_header
00009c7c	cmpwi	r2,__mh_dylib_header
00009c80	mfcr	r11
00009c84	rlwinm	r11,r11,3,31,31
00009c88	lwz	r5,__mh_dylib_header(r28)
00009c8c	cmpwi	cr7,r5,__mh_dylib_header
00009c90	beq	cr7,0x9d10
00009c94	lwz	r0,0xc(r5)
00009c98	cmpwi	cr7,r0,__mh_dylib_header
00009c9c	beq	cr7,0x9d10
00009ca0	lwz	r0,0x14(r5)
00009ca4	cmplwi	cr7,r0,0x1b
00009ca8	ble	cr7,0x9d10
00009cac	lwz	r0,0x34(r5)
00009cb0	cmpwi	cr7,r0,__mh_dylib_header
00009cb4	beq	cr7,0x9d10
00009cb8	lwz	r9,0x38(r5)
00009cbc	cmpwi	cr7,r9,__mh_dylib_header
00009cc0	beq	cr7,0x9d10
00009cc4	lwz	r0,__mh_dylib_header(r9)
00009cc8	cmpwi	cr7,r0,__mh_dylib_header
00009ccc	beq	cr7,0x9d10
00009cd0	lwz	r0,0x3c(r5)
00009cd4	cmpwi	cr7,r0,__mh_dylib_header
00009cd8	beq	cr7,0x9d10
00009cdc	lwz	r9,0x40(r5)
00009ce0	cmpwi	cr7,r9,__mh_dylib_header
00009ce4	beq	cr7,0x9d10
00009ce8	lwz	r0,__mh_dylib_header(r9)
00009cec	cmpwi	cr7,r0,__mh_dylib_header
00009cf0	beq	cr7,0x9d10
00009cf4	lwz	r0,0x44(r5)
00009cf8	cmpwi	cr7,r0,__mh_dylib_header
00009cfc	beq	cr7,0x9d10
00009d00	lwz	r0,0x48(r5)
00009d04	li	r3,0x1
00009d08	cmpwi	cr7,r0,__mh_dylib_header
00009d0c	bne	cr7,0x9d14
00009d10	li	r3,__mh_dylib_header
00009d14	cmpw	cr7,r11,r3
00009d18	beq+	cr7,0x9d3c
00009d1c	addis	r3,r31,__mh_dylib_header
00009d20	addis	r4,r31,__mh_dylib_header
00009d24	addis	r6,r31,__mh_dylib_header
00009d28	li	r5,0x6e8
00009d2c	addi	r3,r3,0x3b40
00009d30	addi	r4,r4,0x457c
00009d34	addi	r6,r6,0x4b1c
00009d38	b	0x9acc
00009d3c	addi	r1,r1,0x70
00009d40	or	r3,r2,r2
00009d44	lwz	r0,0x8(r1)
00009d48	lmw	r27,0xffec(r1)
00009d4c	mtspr	lr,r0
00009d50	blr
_QMOImageIterateSymbols:
00009d54	mfspr	r0,lr
00009d58	stmw	r18,0xffc8(r1)
00009d5c	or.	r30,r3,r3
00009d60	bcl	20,31,0x9d64
00009d64	or	r26,r4,r4
00009d68	or	r25,r5,r5
00009d6c	mfspr	r31,lr
00009d70	stw	r0,0x8(r1)
00009d74	stwu	r1,0xff60(r1)
00009d78	beq	0x9df4
00009d7c	lwz	r0,0xc(r30)
00009d80	cmpwi	cr7,r0,__mh_dylib_header
00009d84	beq	cr7,0x9df4
00009d88	lwz	r0,0x14(r30)
00009d8c	cmplwi	cr7,r0,0x1b
00009d90	ble	cr7,0x9df4
00009d94	lwz	r0,0x34(r30)
00009d98	cmpwi	cr7,r0,__mh_dylib_header
00009d9c	beq	cr7,0x9df4
00009da0	lwz	r2,0x38(r30)
00009da4	cmpwi	cr7,r2,__mh_dylib_header
00009da8	beq	cr7,0x9df4
00009dac	lwz	r0,__mh_dylib_header(r2)
00009db0	cmpwi	cr7,r0,__mh_dylib_header
00009db4	beq	cr7,0x9df4
00009db8	lwz	r0,0x3c(r30)
00009dbc	cmpwi	cr7,r0,__mh_dylib_header
00009dc0	beq	cr7,0x9df4
00009dc4	lwz	r2,0x40(r30)
00009dc8	cmpwi	cr7,r2,__mh_dylib_header
00009dcc	beq	cr7,0x9df4
00009dd0	lwz	r0,__mh_dylib_header(r2)
00009dd4	cmpwi	cr7,r0,__mh_dylib_header
00009dd8	beq	cr7,0x9df4
00009ddc	lwz	r0,0x44(r30)
00009de0	cmpwi	cr7,r0,__mh_dylib_header
00009de4	beq	cr7,0x9df4
00009de8	lwz	r0,0x48(r30)
00009dec	cmpwi	cr7,r0,__mh_dylib_header
00009df0	bne	cr7,0x9e14
00009df4	addis	r3,r31,__mh_dylib_header
00009df8	addis	r4,r31,__mh_dylib_header
00009dfc	addis	r6,r31,__mh_dylib_header
00009e00	li	r5,0x8bd
00009e04	addi	r3,r3,0x384c
00009e08	addi	r4,r4,0x4288
00009e0c	addi	r6,r6,0x4664
00009e10	b	0x9e38
00009e14	cmpwi	cr7,r4,__mh_dylib_header
00009e18	bne+	cr7,0x9e3c
00009e1c	addis	r3,r31,__mh_dylib_header
00009e20	addis	r4,r31,__mh_dylib_header
00009e24	addis	r6,r31,__mh_dylib_header
00009e28	li	r5,0x8be
00009e2c	addi	r3,r3,0x384c
00009e30	addi	r4,r4,0x4288
00009e34	addi	r6,r6,0x4aa4
00009e38	bl	___eprintf
00009e3c	li	r4,0x2
00009e40	li	r23,0x16
00009e44	bl	_QMOImageFindLoadCommandByID
00009e48	or.	r27,r3,r3
00009e4c	beq	0xa1b8
00009e50	addis	r4,r31,__mh_dylib_header
00009e54	or	r3,r30,r30
00009e58	addi	r5,r1,0x48
00009e5c	addi	r4,r4,0x4ab8
00009e60	bl	_GetSegmentIndexByName
00009e64	or.	r23,r3,r3
00009e68	bne	0xa1b8
00009e6c	lwz	r0,0xc(r30)
00009e70	lwz	r2,0x48(r1)
00009e74	cmpwi	cr7,r0,__mh_dylib_header
00009e78	beq	cr7,0x9ee8
00009e7c	lwz	r0,0x14(r30)
00009e80	cmplwi	cr7,r0,0x1b
00009e84	ble	cr7,0x9ee8
00009e88	lwz	r10,0x34(r30)
00009e8c	cmpwi	cr7,r10,__mh_dylib_header
00009e90	beq	cr7,0x9ee8
00009e94	lwz	r11,0x38(r30)
00009e98	cmpwi	cr7,r11,__mh_dylib_header
00009e9c	beq	cr7,0x9ee8
00009ea0	lwz	r0,__mh_dylib_header(r11)
00009ea4	cmpwi	cr7,r0,__mh_dylib_header
00009ea8	beq	cr7,0x9ee8
00009eac	lwz	r0,0x3c(r30)
00009eb0	cmpwi	cr7,r0,__mh_dylib_header
00009eb4	beq	cr7,0x9ee8
00009eb8	lwz	r9,0x40(r30)
00009ebc	cmpwi	cr7,r9,__mh_dylib_header
00009ec0	beq	cr7,0x9ee8
00009ec4	lwz	r0,__mh_dylib_header(r9)
00009ec8	cmpwi	cr7,r0,__mh_dylib_header
00009ecc	beq	cr7,0x9ee8
00009ed0	lwz	r0,0x44(r30)
00009ed4	cmpwi	cr7,r0,__mh_dylib_header
00009ed8	beq	cr7,0x9ee8
00009edc	lwz	r0,0x48(r30)
00009ee0	cmpwi	cr7,r0,__mh_dylib_header
00009ee4	bne	cr7,0x9f08
00009ee8	addis	r3,r31,__mh_dylib_header
00009eec	addis	r4,r31,__mh_dylib_header
00009ef0	addis	r6,r31,__mh_dylib_header
00009ef4	li	r5,0x3ad
00009ef8	addi	r3,r3,0x384c
00009efc	addi	r4,r4,0x4288
00009f00	addi	r6,r6,0x4664
00009f04	b	0x9e38
00009f08	cmplw	cr7,r2,r10
00009f0c	blt+	cr7,0x9f30
00009f10	addis	r3,r31,__mh_dylib_header
00009f14	addis	r4,r31,__mh_dylib_header
00009f18	addis	r6,r31,__mh_dylib_header
00009f1c	li	r5,0x3ae
00009f20	addi	r3,r3,0x384c
00009f24	addi	r4,r4,0x4288
00009f28	addi	r6,r6,0x4ac4
00009f2c	b	0x9e38
00009f30	mulli	r29,r2,0x54
00009f34	cmpwi	r23,__mh_dylib_header
00009f38	or	r2,r11,r11
00009f3c	add	r8,r29,r11
00009f40	lwz	r0,0x4c(r8)
00009f44	cmpwi	cr7,r0,__mh_dylib_header
00009f48	bne	cr7,0x9fbc
00009f4c	lwz	r0,0x28(r30)
00009f50	cmpwi	cr7,r0,__mh_dylib_header
00009f54	beq	cr7,0x9f74
00009f58	lwz	r9,0x1c(r8)
00009f5c	lwz	r10,0x20(r8)
00009f60	lwz	r2,0x20(r30)
00009f64	lwz	r3,0x24(r30)
00009f68	lwz	r6,0x24(r8)
00009f6c	lwz	r7,0x28(r8)
00009f70	b	0x9f8c
00009f74	lwz	r9,0x2c(r8)
00009f78	lwz	r10,0x30(r8)
00009f7c	lwz	r2,0x4(r30)
00009f80	lwz	r3,0x8(r30)
00009f84	lwz	r6,0x34(r8)
00009f88	lwz	r7,0x38(r8)
00009f8c	lwz	r0,0x44(r30)
00009f90	addc	r5,r10,r3
00009f94	adde	r4,r9,r2
00009f98	addi	r9,r8,0x50
00009f9c	or	r3,r30,r30
00009fa0	addi	r8,r8,0x4c
00009fa4	mtspr	ctr,r0
00009fa8	or	r12,r0,r0
00009fac	bctrl
00009fb0	or.	r23,r3,r3
00009fb4	bne	0xa1b8
00009fb8	lwz	r2,0x38(r30)
00009fbc	add	r2,r29,r2
00009fc0	lwz	r24,0x4c(r2)
00009fc4	bne	0xa1b8
00009fc8	lwz	r4,0xc(r27)
00009fcc	or	r3,r30,r30
00009fd0	bl	_QMOImageToLocalUInt32
00009fd4	lwz	r2,0x48(r1)
00009fd8	lwz	r0,0x38(r30)
00009fdc	lwz	r4,0x10(r27)
00009fe0	or	r20,r3,r3
00009fe4	or	r3,r30,r30
00009fe8	mulli	r2,r2,0x54
00009fec	add	r2,r2,r0
00009ff0	lwz	r29,0x30(r2)
00009ff4	bl	_QMOImageToLocalUInt32
00009ff8	lwz	r4,0x8(r27)
00009ffc	add	r0,r3,r24
0000a000	or	r3,r30,r30
0000a004	subf	r21,r29,r0
0000a008	bl	_QMOImageToLocalUInt32
0000a00c	stw	r23,0x4c(r1)
0000a010	add	r3,r3,r24
0000a014	subf	r2,r29,r3
0000a018	lwz	r0,0x2c(r30)
0000a01c	cmpwi	cr7,r0,__mh_dylib_header
0000a020	bne	cr7,0xa030
0000a024	or	r24,r2,r2
0000a028	li	r22,__mh_dylib_header
0000a02c	b	0xa1ac
0000a030	or	r24,r2,r2
0000a034	li	r22,__mh_dylib_header
0000a038	addis	r19,r31,__mh_dylib_header
0000a03c	addi	r18,r1,0x4c
0000a040	b	0xa0f0
0000a044	lwz	r4,__mh_dylib_header(r24)
0000a048	or	r3,r30,r30
0000a04c	bl	_QMOImageToLocalUInt32
0000a050	cmpwi	r3,__mh_dylib_header
0000a054	bne	0xa060
0000a058	addi	r23,r19,0x3fac
0000a05c	b	0xa064
0000a060	add	r23,r21,r3
0000a064	lbz	r4,0x4(r24)
0000a068	or	r3,r30,r30
0000a06c	bl	_QMOImageToLocalUInt8
0000a070	lbz	r4,0x5(r24)
0000a074	or	r28,r3,r3
0000a078	or	r3,r30,r30
0000a07c	bl	_QMOImageToLocalUInt8
0000a080	lhz	r4,0x6(r24)
0000a084	or	r27,r3,r3
0000a088	or	r3,r30,r30
0000a08c	bl	_QMOImageToLocalUInt16
0000a090	lwz	r5,0xc(r24)
0000a094	lwz	r4,0x8(r24)
0000a098	or	r29,r3,r3
0000a09c	or	r3,r30,r30
0000a0a0	bl	_QMOImageToLocalUInt64
0000a0a4	mtspr	ctr,r26
0000a0a8	or	r5,r28,r28
0000a0ac	or	r6,r27,r27
0000a0b0	stw	r18,0x38(r1)
0000a0b4	or	r9,r4,r4
0000a0b8	or	r8,r3,r3
0000a0bc	or	r4,r23,r23
0000a0c0	or	r7,r29,r29
0000a0c4	or	r3,r30,r30
0000a0c8	or	r10,r25,r25
0000a0cc	or	r12,r26,r26
0000a0d0	bctrl
0000a0d4	or.	r23,r3,r3
0000a0d8	bne	0xa1b8
0000a0dc	lwz	r0,0x4c(r1)
0000a0e0	addi	r24,r24,0x10
0000a0e4	cmpwi	cr7,r0,__mh_dylib_header
0000a0e8	bne	cr7,0xa1b4
0000a0ec	addi	r22,r22,0x1
0000a0f0	cmplw	cr7,r22,r20
0000a0f4	blt	cr7,0xa044
0000a0f8	b	0xa1b4
0000a0fc	lwz	r4,__mh_dylib_header(r24)
0000a100	or	r3,r30,r30
0000a104	bl	_QMOImageToLocalUInt32
0000a108	cmpwi	r3,__mh_dylib_header
0000a10c	bne	0xa11c
0000a110	addis	r2,r31,__mh_dylib_header
0000a114	addi	r23,r2,0x3fac
0000a118	b	0xa120
0000a11c	add	r23,r21,r3
0000a120	lbz	r4,0x4(r24)
0000a124	or	r3,r30,r30
0000a128	bl	_QMOImageToLocalUInt8
0000a12c	lbz	r4,0x5(r24)
0000a130	or	r29,r3,r3
0000a134	or	r3,r30,r30
0000a138	bl	_QMOImageToLocalUInt8
0000a13c	lhz	r4,0x6(r24)
0000a140	or	r28,r3,r3
0000a144	or	r3,r30,r30
0000a148	bl	_QMOImageToLocalUInt16
0000a14c	lwz	r4,0x8(r24)
0000a150	or	r27,r3,r3
0000a154	or	r3,r30,r30
0000a158	bl	_QMOImageToLocalUInt32
0000a15c	mtspr	ctr,r26
0000a160	addi	r0,r1,0x4c
0000a164	or	r4,r23,r23
0000a168	or	r9,r3,r3
0000a16c	li	r8,__mh_dylib_header
0000a170	or	r5,r29,r29
0000a174	or	r6,r28,r28
0000a178	stw	r0,0x38(r1)
0000a17c	or	r7,r27,r27
0000a180	or	r3,r30,r30
0000a184	or	r10,r25,r25
0000a188	or	r12,r26,r26
0000a18c	bctrl
0000a190	or.	r23,r3,r3
0000a194	bne	0xa1b8
0000a198	lwz	r0,0x4c(r1)
0000a19c	addi	r24,r24,0xc
0000a1a0	cmpwi	cr7,r0,__mh_dylib_header
0000a1a4	bne	cr7,0xa1b4
0000a1a8	addi	r22,r22,0x1
0000a1ac	cmplw	cr7,r22,r20
0000a1b0	blt	cr7,0xa0fc
0000a1b4	li	r23,__mh_dylib_header
0000a1b8	addi	r1,r1,0xa0
0000a1bc	or	r3,r23,r23
0000a1c0	lwz	r0,0x8(r1)
0000a1c4	lmw	r18,0xffc8(r1)
0000a1c8	mtspr	lr,r0
0000a1cc	blr
_QMOImageLookupSymbol:
0000a1d0	mfspr	r0,lr
0000a1d4	or.	r2,r3,r3
0000a1d8	stmw	r30,0xfff8(r1)
0000a1dc	bcl	20,31,0xa1e0
0000a1e0	or	r11,r4,r4
0000a1e4	or	r30,r5,r5
0000a1e8	mfspr	r31,lr
0000a1ec	stw	r0,0x8(r1)
0000a1f0	stwu	r1,0xffa0(r1)
0000a1f4	beq	0xa270
0000a1f8	lwz	r0,0xc(r2)
0000a1fc	cmpwi	cr7,r0,__mh_dylib_header
0000a200	beq	cr7,0xa270
0000a204	lwz	r0,0x14(r2)
0000a208	cmplwi	cr7,r0,0x1b
0000a20c	ble	cr7,0xa270
0000a210	lwz	r0,0x34(r2)
0000a214	cmpwi	cr7,r0,__mh_dylib_header
0000a218	beq	cr7,0xa270
0000a21c	lwz	r9,0x38(r2)
0000a220	cmpwi	cr7,r9,__mh_dylib_header
0000a224	beq	cr7,0xa270
0000a228	lwz	r0,__mh_dylib_header(r9)
0000a22c	cmpwi	cr7,r0,__mh_dylib_header
0000a230	beq	cr7,0xa270
0000a234	lwz	r0,0x3c(r2)
0000a238	cmpwi	cr7,r0,__mh_dylib_header
0000a23c	beq	cr7,0xa270
0000a240	lwz	r9,0x40(r2)
0000a244	cmpwi	cr7,r9,__mh_dylib_header
0000a248	beq	cr7,0xa270
0000a24c	lwz	r0,__mh_dylib_header(r9)
0000a250	cmpwi	cr7,r0,__mh_dylib_header
0000a254	beq	cr7,0xa270
0000a258	lwz	r0,0x44(r2)
0000a25c	cmpwi	cr7,r0,__mh_dylib_header
0000a260	beq	cr7,0xa270
0000a264	lwz	r0,0x48(r2)
0000a268	cmpwi	cr7,r0,__mh_dylib_header
0000a26c	bne	cr7,0xa290
0000a270	addis	r3,r31,__mh_dylib_header
0000a274	addis	r4,r31,__mh_dylib_header
0000a278	addis	r6,r31,__mh_dylib_header
0000a27c	li	r5,0x95a
0000a280	addi	r3,r3,0x33d0
0000a284	addi	r4,r4,0x3e0c
0000a288	addi	r6,r6,0x41e8
0000a28c	b	0xa2b4
0000a290	cmpwi	cr7,r4,__mh_dylib_header
0000a294	bne+	cr7,0xa2b8
0000a298	addis	r3,r31,__mh_dylib_header
0000a29c	addis	r4,r31,__mh_dylib_header
0000a2a0	addis	r6,r31,__mh_dylib_header
0000a2a4	li	r5,0x95b
0000a2a8	addi	r3,r3,0x33d0
0000a2ac	addi	r4,r4,0x3e0c
0000a2b0	addi	r6,r6,0x4668
0000a2b4	bl	___eprintf
0000a2b8	cmpwi	cr7,r5,__mh_dylib_header
0000a2bc	bne+	cr7,0xa2e0
0000a2c0	addis	r3,r31,__mh_dylib_header
0000a2c4	addis	r4,r31,__mh_dylib_header
0000a2c8	addis	r6,r31,__mh_dylib_header
0000a2cc	li	r5,0x95c
0000a2d0	addi	r3,r3,0x33d0
0000a2d4	addi	r4,r4,0x3e0c
0000a2d8	addi	r6,r6,0x3454
0000a2dc	b	0xa2b4
0000a2e0	addis	r4,r31,__mh_dylib_header
0000a2e4	li	r9,__mh_dylib_header
0000a2e8	stw	r11,0x38(r1)
0000a2ec	li	r10,__mh_dylib_header
0000a2f0	li	r0,__mh_dylib_header
0000a2f4	addi	r4,r4,0x170
0000a2f8	stw	r9,0x3c(r1)
0000a2fc	addi	r5,r1,0x38
0000a300	stw	r10,0x40(r1)
0000a304	stw	r0,0x44(r1)
0000a308	bl	_QMOImageIterateSymbols
0000a30c	or.	r9,r3,r3
0000a310	bne	0xa338
0000a314	lwz	r0,0x44(r1)
0000a318	cmpwi	cr7,r0,__mh_dylib_header
0000a31c	bne	cr7,0xa328
0000a320	li	r9,0x3
0000a324	b	0xa338
0000a328	lwz	r2,0x3c(r1)
0000a32c	lwz	r3,0x40(r1)
0000a330	stw	r2,__mh_dylib_header(r30)
0000a334	stw	r3,0x4(r30)
0000a338	addi	r1,r1,0x60
0000a33c	or	r3,r9,r9
0000a340	lwz	r0,0x8(r1)
0000a344	lmw	r30,0xfff8(r1)
0000a348	mtspr	lr,r0
0000a34c	blr
_SymbolByNameIterator:
0000a350	mfspr	r0,lr
0000a354	stmw	r26,0xffe8(r1)
0000a358	or.	r30,r3,r3
0000a35c	bcl	20,31,0xa360
0000a360	or	r3,r4,r4
0000a364	or	r26,r5,r5
0000a368	mfspr	r31,lr
0000a36c	stw	r0,0x8(r1)
0000a370	or	r29,r9,r9
0000a374	or	r28,r8,r8
0000a378	stwu	r1,0xffa0(r1)
0000a37c	or	r27,r10,r10
0000a380	beq	0xa3fc
0000a384	lwz	r0,0xc(r30)
0000a388	cmpwi	cr7,r0,__mh_dylib_header
0000a38c	beq	cr7,0xa3fc
0000a390	lwz	r0,0x14(r30)
0000a394	cmplwi	cr7,r0,0x1b
0000a398	ble	cr7,0xa3fc
0000a39c	lwz	r0,0x34(r30)
0000a3a0	cmpwi	cr7,r0,__mh_dylib_header
0000a3a4	beq	cr7,0xa3fc
0000a3a8	lwz	r2,0x38(r30)
0000a3ac	cmpwi	cr7,r2,__mh_dylib_header
0000a3b0	beq	cr7,0xa3fc
0000a3b4	lwz	r0,__mh_dylib_header(r2)
0000a3b8	cmpwi	cr7,r0,__mh_dylib_header
0000a3bc	beq	cr7,0xa3fc
0000a3c0	lwz	r0,0x3c(r30)
0000a3c4	cmpwi	cr7,r0,__mh_dylib_header
0000a3c8	beq	cr7,0xa3fc
0000a3cc	lwz	r2,0x40(r30)
0000a3d0	cmpwi	cr7,r2,__mh_dylib_header
0000a3d4	beq	cr7,0xa3fc
0000a3d8	lwz	r0,__mh_dylib_header(r2)
0000a3dc	cmpwi	cr7,r0,__mh_dylib_header
0000a3e0	beq	cr7,0xa3fc
0000a3e4	lwz	r0,0x44(r30)
0000a3e8	cmpwi	cr7,r0,__mh_dylib_header
0000a3ec	beq	cr7,0xa3fc
0000a3f0	lwz	r0,0x48(r30)
0000a3f4	cmpwi	cr7,r0,__mh_dylib_header
0000a3f8	bne	cr7,0xa41c
0000a3fc	addis	r3,r31,__mh_dylib_header
0000a400	addis	r4,r31,__mh_dylib_header
0000a404	addis	r6,r31,__mh_dylib_header
0000a408	li	r5,0x92e
0000a40c	addi	r3,r3,0x3250
0000a410	addi	r4,r4,0x3c8c
0000a414	addi	r6,r6,0x4068
0000a418	b	0xa440
0000a41c	cmpwi	cr7,r4,__mh_dylib_header
0000a420	bne+	cr7,0xa444
0000a424	addis	r3,r31,__mh_dylib_header
0000a428	addis	r4,r31,__mh_dylib_header
0000a42c	addis	r6,r31,__mh_dylib_header
0000a430	li	r5,0x92f
0000a434	addi	r3,r3,0x3250
0000a438	addi	r4,r4,0x3c8c
0000a43c	addi	r6,r6,0x3958
0000a440	bl	___eprintf
0000a444	lwz	r0,0x98(r1)
0000a448	cmpwi	cr7,r0,__mh_dylib_header
0000a44c	bne+	cr7,0xa470
0000a450	addis	r3,r31,__mh_dylib_header
0000a454	addis	r4,r31,__mh_dylib_header
0000a458	addis	r6,r31,__mh_dylib_header
0000a45c	li	r5,0x930
0000a460	addi	r3,r3,0x3250
0000a464	addi	r4,r4,0x3c8c
0000a468	addi	r6,r6,0x3968
0000a46c	b	0xa440
0000a470	lwz	r2,0x98(r1)
0000a474	lwz	r0,__mh_dylib_header(r2)
0000a478	cmpwi	cr7,r0,__mh_dylib_header
0000a47c	beq+	cr7,0xa4a0
0000a480	addis	r3,r31,__mh_dylib_header
0000a484	addis	r4,r31,__mh_dylib_header
0000a488	addis	r6,r31,__mh_dylib_header
0000a48c	li	r5,0x931
0000a490	addi	r3,r3,0x3250
0000a494	addi	r4,r4,0x3c8c
0000a498	addi	r6,r6,0x3978
0000a49c	b	0xa440
0000a4a0	andi.	r0,r5,0xe0
0000a4a4	bne	0xa50c
0000a4a8	lwz	r4,__mh_dylib_header(r10)
0000a4ac	bl	0xd340	; symbol stub for: _strcmp
0000a4b0	cmpwi	cr7,r3,__mh_dylib_header
0000a4b4	bne	cr7,0xa50c
0000a4b8	rlwinm	r5,r26,0,28,30
0000a4bc	cmpwi	cr7,r5,0x2
0000a4c0	beq	cr7,0xa4d0
0000a4c4	cmpwi	cr7,r5,0xe
0000a4c8	bne	cr7,0xa50c
0000a4cc	b	0xa4e4
0000a4d0	li	r0,0x1
0000a4d4	stw	r28,0x4(r27)
0000a4d8	stw	r29,0x8(r27)
0000a4dc	stw	r0,0xc(r27)
0000a4e0	b	0xa504
0000a4e4	lwz	r2,0x20(r30)
0000a4e8	lwz	r3,0x24(r30)
0000a4ec	li	r0,0x1
0000a4f0	stw	r0,0xc(r27)
0000a4f4	addc	r10,r29,r3
0000a4f8	adde	r9,r28,r2
0000a4fc	stw	r9,0x4(r27)
0000a500	stw	r10,0x8(r27)
0000a504	lwz	r2,0x98(r1)
0000a508	stw	r0,__mh_dylib_header(r2)
0000a50c	addi	r1,r1,0x60
0000a510	li	r3,__mh_dylib_header
0000a514	lwz	r0,0x8(r1)
0000a518	lmw	r26,0xffe8(r1)
0000a51c	mtspr	lr,r0
0000a520	blr
_ImageListForTaskOldWithNames:
0000a524	mfspr	r0,lr
0000a528	stmw	r18,0xffc8(r1)
0000a52c	or	r23,r3,r3
0000a530	mfcr	r2
0000a534	bcl	20,31,0xa538
0000a538	stw	r0,0x8(r1)
0000a53c	or	r3,r4,r4
0000a540	or	r26,r4,r4
0000a544	mfspr	r31,lr
0000a548	or	r30,r5,r5
0000a54c	or	r29,r6,r6
0000a550	or	r27,r7,r7
0000a554	or	r21,r8,r8
0000a558	or	r20,r9,r9
0000a55c	stw	r2,0x4(r1)
0000a560	stwu	r1,0xfb50(r1)
0000a564	or	r25,r10,r10
0000a568	bl	_QMOImageIs64Bit
0000a56c	cmpwi	cr7,r3,__mh_dylib_header
0000a570	beq+	cr7,0xa594
0000a574	addis	r3,r31,__mh_dylib_header
0000a578	addis	r4,r31,__mh_dylib_header
0000a57c	addis	r6,r31,__mh_dylib_header
0000a580	li	r5,0x14c
0000a584	addi	r3,r3,0x3078
0000a588	addi	r4,r4,0x4320
0000a58c	addi	r6,r6,0x4358
0000a590	b	0xa5b8
0000a594	cmpwi	cr7,r23,__mh_dylib_header
0000a598	bne+	cr7,0xa5bc
0000a59c	addis	r3,r31,__mh_dylib_header
0000a5a0	addis	r4,r31,__mh_dylib_header
0000a5a4	addis	r6,r31,__mh_dylib_header
0000a5a8	li	r5,0x14e
0000a5ac	addi	r3,r3,0x3078
0000a5b0	addi	r4,r4,0x4320
0000a5b4	addi	r6,r6,0x313c
0000a5b8	bl	___eprintf
0000a5bc	cmpwi	cr7,r26,__mh_dylib_header
0000a5c0	bne+	cr7,0xa5e4
0000a5c4	addis	r3,r31,__mh_dylib_header
0000a5c8	addis	r4,r31,__mh_dylib_header
0000a5cc	addis	r6,r31,__mh_dylib_header
0000a5d0	li	r5,0x14f
0000a5d4	addi	r3,r3,0x3078
0000a5d8	addi	r4,r4,0x4320
0000a5dc	addi	r6,r6,0x4378
0000a5e0	b	0xa5b8
0000a5e4	cmpwi	cr7,r30,__mh_dylib_header
0000a5e8	bne+	cr7,0xa60c
0000a5ec	addis	r3,r31,__mh_dylib_header
0000a5f0	addis	r4,r31,__mh_dylib_header
0000a5f4	addis	r6,r31,__mh_dylib_header
0000a5f8	li	r5,0x150
0000a5fc	addi	r3,r3,0x3078
0000a600	addi	r4,r4,0x4320
0000a604	addi	r6,r6,0x438c
0000a608	b	0xa5b8
0000a60c	cmpwi	cr7,r29,__mh_dylib_header
0000a610	bne+	cr7,0xa634
0000a614	addis	r3,r31,__mh_dylib_header
0000a618	addis	r4,r31,__mh_dylib_header
0000a61c	addis	r6,r31,__mh_dylib_header
0000a620	li	r5,0x151
0000a624	addi	r3,r3,0x3078
0000a628	addi	r4,r4,0x4320
0000a62c	addi	r6,r6,0x43a4
0000a630	b	0xa5b8
0000a634	cmpwi	cr7,r27,__mh_dylib_header
0000a638	bne+	cr7,0xa65c
0000a63c	addis	r3,r31,__mh_dylib_header
0000a640	addis	r4,r31,__mh_dylib_header
0000a644	addis	r6,r31,__mh_dylib_header
0000a648	li	r5,0x152
0000a64c	addi	r3,r3,0x3078
0000a650	addi	r4,r4,0x4320
0000a654	addi	r6,r6,0x43bc
0000a658	b	0xa5b8
0000a65c	cmpwi	cr3,r21,__mh_dylib_header
0000a660	bne	cr3,0xa68c
0000a664	cmpwi	cr7,r20,__mh_dylib_header
0000a668	beq	cr7,0xa68c
0000a66c	addis	r3,r31,__mh_dylib_header
0000a670	addis	r4,r31,__mh_dylib_header
0000a674	addis	r6,r31,__mh_dylib_header
0000a678	li	r5,0x153
0000a67c	addi	r3,r3,0x3078
0000a680	addi	r4,r4,0x4320
0000a684	addi	r6,r6,0x43d4
0000a688	b	0xa5b8
0000a68c	cmpwi	cr7,r25,__mh_dylib_header
0000a690	bne+	cr7,0xa6b4
0000a694	addis	r3,r31,__mh_dylib_header
0000a698	addis	r4,r31,__mh_dylib_header
0000a69c	addis	r6,r31,__mh_dylib_header
0000a6a0	li	r5,0x154
0000a6a4	addi	r3,r3,0x3078
0000a6a8	addi	r4,r4,0x4320
0000a6ac	addi	r6,r6,0x38a8
0000a6b0	b	0xa5b8
0000a6b4	or	r4,r30,r30
0000a6b8	or	r3,r26,r26
0000a6bc	addi	r5,r1,0x48
0000a6c0	bl	_QMOImageLookupSymbol
0000a6c4	or.	r28,r3,r3
0000a6c8	bne	0xa900
0000a6cc	or	r4,r29,r29
0000a6d0	or	r3,r26,r26
0000a6d4	addi	r5,r1,0x58
0000a6d8	bl	_QMOImageLookupSymbol
0000a6dc	or.	r28,r3,r3
0000a6e0	bne	0xa900
0000a6e4	or	r4,r27,r27
0000a6e8	or	r3,r26,r26
0000a6ec	addi	r5,r1,0x50
0000a6f0	bl	_QMOImageLookupSymbol
0000a6f4	or.	r28,r3,r3
0000a6f8	bne	0xa900
0000a6fc	lwz	r4,0x58(r1)
0000a700	lwz	r5,0x5c(r1)
0000a704	or	r3,r23,r23
0000a708	li	r6,0x4
0000a70c	addi	r7,r1,0x38
0000a710	bl	_QTMRead
0000a714	or.	r28,r3,r3
0000a718	bne	0xa900
0000a71c	lwz	r4,0x50(r1)
0000a720	lwz	r5,0x54(r1)
0000a724	or	r3,r23,r23
0000a728	li	r6,0x4
0000a72c	addi	r7,r1,0x3c
0000a730	bl	_QTMRead
0000a734	or.	r28,r3,r3
0000a738	bne	0xa900
0000a73c	lwz	r4,0x38(r1)
0000a740	or	r3,r26,r26
0000a744	addi	r19,r1,0x40
0000a748	addi	r18,r1,0x60
0000a74c	bl	_QMOImageToLocalUInt32
0000a750	lwz	r4,0x3c(r1)
0000a754	stw	r3,0x38(r1)
0000a758	or	r3,r26,r26
0000a75c	bl	_QMOImageToLocalUInt32
0000a760	lwz	r0,0x38(r1)
0000a764	stw	r3,0x3c(r1)
0000a768	mullw	r3,r3,r0
0000a76c	addi	r22,r3,0x8
0000a770	lwz	r4,0x48(r1)
0000a774	lwz	r5,0x4c(r1)
0000a778	li	r0,__mh_dylib_header
0000a77c	or	r3,r23,r23
0000a780	or	r6,r22,r22
0000a784	or	r7,r19,r19
0000a788	stw	r0,0x40(r1)
0000a78c	bl	_QTMReadAllocated
0000a790	cmpwi	cr4,r3,__mh_dylib_header
0000a794	or	r28,r3,r3
0000a798	bne	cr4,0xa8e0
0000a79c	lwz	r2,0x38(r1)
0000a7a0	lwz	r0,0x3c(r1)
0000a7a4	or	r3,r26,r26
0000a7a8	li	r27,__mh_dylib_header
0000a7ac	lwz	r9,0x40(r1)
0000a7b0	mullw	r2,r2,r0
0000a7b4	lwzx	r4,r2,r9
0000a7b8	bl	_QMOImageToLocalUInt32
0000a7bc	or	r24,r3,r3
0000a7c0	b	0xa8a4
0000a7c4	lwz	r2,0x3c(r1)
0000a7c8	lwz	r0,0x40(r1)
0000a7cc	or	r3,r26,r26
0000a7d0	mullw	r2,r27,r2
0000a7d4	add	r2,r2,r0
0000a7d8	lwz	r4,0xc(r2)
0000a7dc	bl	_QMOImageToLocalUInt32
0000a7e0	cmpwi	cr7,r3,__mh_dylib_header
0000a7e4	beq	cr7,0xa8a0
0000a7e8	beq	cr3,0xa890
0000a7ec	lwz	r2,__mh_dylib_header(r25)
0000a7f0	cmplw	cr7,r2,r20
0000a7f4	bge	cr7,0xa894
0000a7f8	lwz	r2,0x3c(r1)
0000a7fc	lwz	r0,0x40(r1)
0000a800	or	r3,r26,r26
0000a804	li	r29,__mh_dylib_header
0000a808	mullw	r2,r27,r2
0000a80c	add	r2,r2,r0
0000a810	lwz	r4,0x8(r2)
0000a814	bl	_QMOImageToLocalUInt32
0000a818	lwz	r2,0x3c(r1)
0000a81c	lwz	r9,0x40(r1)
0000a820	or	r0,r3,r3
0000a824	or	r3,r26,r26
0000a828	or	r30,r0,r0
0000a82c	mullw	r2,r27,r2
0000a830	lwzx	r4,r2,r9
0000a834	bl	_QMOImageToLocalUInt32
0000a838	li	r4,__mh_dylib_header
0000a83c	li	r6,0x400
0000a840	or	r5,r3,r3
0000a844	or	r7,r18,r18
0000a848	or	r3,r23,r23
0000a84c	bl	_QTMRead
0000a850	cmpwi	cr4,r3,__mh_dylib_header
0000a854	or	r28,r3,r3
0000a858	bne	cr4,0xa890
0000a85c	lwz	r7,__mh_dylib_header(r25)
0000a860	or	r4,r29,r29
0000a864	or	r5,r30,r30
0000a868	or	r3,r23,r23
0000a86c	or	r6,r18,r18
0000a870	stb	r28,0x45f(r1)
0000a874	rlwinm	r7,r7,2,0,29
0000a878	add	r7,r21,r7
0000a87c	bl	_QMOImageCreateFromTask
0000a880	lwz	r2,__mh_dylib_header(r25)
0000a884	cmpwi	cr4,r3,__mh_dylib_header
0000a888	or	r28,r3,r3
0000a88c	b	0xa894
0000a890	lwz	r2,__mh_dylib_header(r25)
0000a894	addi	r0,r2,0x1
0000a898	stw	r0,__mh_dylib_header(r25)
0000a89c	bne	cr4,0xa8e0
0000a8a0	addi	r27,r27,0x1
0000a8a4	cmplw	cr7,r27,r24
0000a8a8	blt	cr7,0xa7c4
0000a8ac	bne	cr4,0xa8e0
0000a8b0	lwz	r2,0x38(r1)
0000a8b4	lwz	r0,0x3c(r1)
0000a8b8	or	r3,r26,r26
0000a8bc	lwz	r9,0x40(r1)
0000a8c0	mullw	r2,r2,r0
0000a8c4	add	r2,r2,r9
0000a8c8	lwz	r4,0x4(r2)
0000a8cc	bl	_QMOImageToLocalUInt32
0000a8d0	or	r4,r3,r3
0000a8d4	li	r3,__mh_dylib_header
0000a8d8	stw	r4,0x4c(r1)
0000a8dc	stw	r3,0x48(r1)
0000a8e0	lwz	r3,0x40(r1)
0000a8e4	or	r4,r22,r22
0000a8e8	bl	_QTMFree
0000a8ec	bne	cr4,0xa900
0000a8f0	lwz	r0,0x48(r1)
0000a8f4	lwz	r2,0x4c(r1)
0000a8f8	or.	r9,r0,r2
0000a8fc	bne	0xa770
0000a900	addi	r1,r1,0x4b0
0000a904	or	r3,r28,r28
0000a908	lwz	r11,0x4(r1)
0000a90c	lwz	r0,0x8(r1)
0000a910	lmw	r18,0xffc8(r1)
0000a914	mtspr	lr,r0
0000a918	mtocrf	0x10,r11
0000a91c	mtocrf	0x08,r11
0000a920	blr
_SortByMachHeader:
0000a924	mfspr	r0,lr
0000a928	stmw	r27,0xffec(r1)
0000a92c	or	r29,r4,r4
0000a930	stw	r0,0x8(r1)
0000a934	stwu	r1,0xffa0(r1)
0000a938	nop
0000a93c	nop
0000a940	lwz	r3,__mh_dylib_header(r3)
0000a944	bl	_QMOImageGetMachHeaderOffset
0000a948	or	r27,r3,r3
0000a94c	lwz	r3,__mh_dylib_header(r29)
0000a950	or	r28,r4,r4
0000a954	bl	_QMOImageGetMachHeaderOffset
0000a958	cmplw	cr7,r3,r27
0000a95c	bgt	cr7,0xa970
0000a960	cmpw	cr7,r3,r27
0000a964	bne	cr7,0xa978
0000a968	cmplw	cr7,r4,r28
0000a96c	ble	cr7,0xa978
0000a970	li	r3,0xffff
0000a974	b	0xa99c
0000a978	cmplw	cr7,r27,r3
0000a97c	bgt	cr7,0xa990
0000a980	cmpw	cr7,r27,r3
0000a984	bne	cr7,0xa998
0000a988	cmplw	cr7,r28,r4
0000a98c	ble	cr7,0xa998
0000a990	li	r3,0x1
0000a994	b	0xa99c
0000a998	li	r3,__mh_dylib_header
0000a99c	addi	r1,r1,0x60
0000a9a0	lwz	r0,0x8(r1)
0000a9a4	lmw	r27,0xffec(r1)
0000a9a8	mtspr	lr,r0
0000a9ac	blr
_QMOImageListDestroy:
0000a9b0	mfspr	r0,lr
0000a9b4	cmpwi	r3,__mh_dylib_header
0000a9b8	stmw	r27,0xffec(r1)
0000a9bc	bcl	20,31,0xa9c0
0000a9c0	or	r27,r4,r4
0000a9c4	mfspr	r31,lr
0000a9c8	stw	r0,0x8(r1)
0000a9cc	stwu	r1,0xffa0(r1)
0000a9d0	bne	0xa9fc
0000a9d4	cmpwi	cr7,r4,__mh_dylib_header
0000a9d8	beq	cr7,0xaa28
0000a9dc	addis	r3,r31,__mh_dylib_header
0000a9e0	addis	r4,r31,__mh_dylib_header
0000a9e4	addis	r6,r31,__mh_dylib_header
0000a9e8	li	r5,0x204
0000a9ec	addi	r3,r3,0x2bf0
0000a9f0	addi	r4,r4,0x3e98
0000a9f4	addi	r6,r6,0x3f7c
0000a9f8	bl	___eprintf
0000a9fc	or	r30,r3,r3
0000aa00	li	r29,__mh_dylib_header
0000aa04	li	r28,__mh_dylib_header
0000aa08	b	0xaa1c
0000aa0c	lwz	r3,0xfffc(r30)
0000aa10	addi	r29,r29,0x1
0000aa14	bl	_QMOImageDestroy
0000aa18	stw	r28,0xfffc(r30)
0000aa1c	cmplw	cr7,r29,r27
0000aa20	addi	r30,r30,0x4
0000aa24	blt	cr7,0xaa0c
0000aa28	addi	r1,r1,0x60
0000aa2c	lwz	r0,0x8(r1)
0000aa30	lmw	r27,0xffec(r1)
0000aa34	mtspr	lr,r0
0000aa38	blr
_QMOImageListFromSelf:
0000aa3c	mfspr	r0,lr
0000aa40	stmw	r25,0xffe4(r1)
0000aa44	or	r25,r3,r3
0000aa48	mfcr	r2
0000aa4c	bcl	20,31,0xaa50
0000aa50	cmpwi	cr4,r3,__mh_dylib_header
0000aa54	stw	r0,0x8(r1)
0000aa58	or	r27,r4,r4
0000aa5c	mfspr	r31,lr
0000aa60	or	r26,r5,r5
0000aa64	stw	r2,0x4(r1)
0000aa68	stwu	r1,0xffa0(r1)
0000aa6c	bne	cr4,0xaa98
0000aa70	cmpwi	cr7,r4,__mh_dylib_header
0000aa74	beq	cr7,0xaa98
0000aa78	addis	r3,r31,__mh_dylib_header
0000aa7c	addis	r4,r31,__mh_dylib_header
0000aa80	addis	r6,r31,__mh_dylib_header
0000aa84	li	r5,0x227
0000aa88	addi	r3,r3,0x2b60
0000aa8c	addi	r4,r4,0x3e08
0000aa90	addi	r6,r6,0x3eec
0000aa94	b	0xaabc
0000aa98	cmpwi	cr7,r26,__mh_dylib_header
0000aa9c	bne+	cr7,0xaac0
0000aaa0	addis	r3,r31,__mh_dylib_header
0000aaa4	addis	r4,r31,__mh_dylib_header
0000aaa8	addis	r6,r31,__mh_dylib_header
0000aaac	li	r5,0x228
0000aab0	addi	r3,r3,0x2b60
0000aab4	addi	r4,r4,0x3e08
0000aab8	addi	r6,r6,0x3390
0000aabc	bl	___eprintf
0000aac0	beq	cr4,0xaad4
0000aac4	or	r3,r25,r25
0000aac8	li	r4,__mh_dylib_header
0000aacc	rlwinm	r5,r27,2,0,29
0000aad0	bl	0xd1a0	; symbol stub for: _memset
0000aad4	bl	0xcf80	; symbol stub for: __dyld_image_count
0000aad8	or	r28,r25,r25
0000aadc	li	r29,__mh_dylib_header
0000aae0	li	r30,__mh_dylib_header
0000aae4	stw	r3,__mh_dylib_header(r26)
0000aae8	b	0xab30
0000aaec	beq	cr4,0xab28
0000aaf0	cmplw	cr7,r30,r27
0000aaf4	bge	cr7,0xab28
0000aaf8	or	r3,r30,r30
0000aafc	bl	0xcf40	; symbol stub for: __dyld_get_image_header
0000ab00	or	r29,r3,r3
0000ab04	or	r3,r30,r30
0000ab08	bl	0xcf60	; symbol stub for: __dyld_get_image_name
0000ab0c	or	r5,r28,r28
0000ab10	or	r4,r3,r3
0000ab14	or	r3,r29,r29
0000ab18	bl	_QMOImageCreateFromLocalImage
0000ab1c	or.	r29,r3,r3
0000ab20	bne	0xab64
0000ab24	lwz	r3,__mh_dylib_header(r26)
0000ab28	addi	r30,r30,0x1
0000ab2c	addi	r28,r28,0x4
0000ab30	cmplw	cr7,r30,r3
0000ab34	blt	cr7,0xaaec
0000ab38	beq	cr4,0xab70
0000ab3c	cmplw	cr7,r27,r3
0000ab40	or	r4,r27,r27
0000ab44	ble	cr7,0xab4c
0000ab48	or	r4,r3,r3
0000ab4c	addis	r6,r31,__mh_dylib_header
0000ab50	or	r3,r25,r25
0000ab54	li	r5,0x4
0000ab58	addi	r6,r6,0xfed4
0000ab5c	bl	0xd2c0	; symbol stub for: _qsort
0000ab60	b	0xab70
0000ab64	or	r3,r25,r25
0000ab68	or	r4,r27,r27
0000ab6c	bl	_QMOImageListDestroy
0000ab70	addi	r1,r1,0x60
0000ab74	or	r3,r29,r29
0000ab78	lwz	r0,0x8(r1)
0000ab7c	lwz	r11,0x4(r1)
0000ab80	lmw	r25,0xffe4(r1)
0000ab84	mtspr	lr,r0
0000ab88	mtocrf	0x08,r11
0000ab8c	blr
_QMOImageListFromTask:
0000ab90	mfspr	r0,lr
0000ab94	stmw	r16,0xffc0(r1)
0000ab98	or	r30,r4,r4
0000ab9c	mfcr	r2
0000aba0	bcl	20,31,0xaba4
0000aba4	or.	r28,r3,r3
0000aba8	stw	r0,0x8(r1)
0000abac	or	r27,r5,r5
0000abb0	mfspr	r31,lr
0000abb4	or	r25,r6,r6
0000abb8	or	r26,r7,r7
0000abbc	stw	r2,0x4(r1)
0000abc0	stwu	r1,0xfb50(r1)
0000abc4	bne+	0xabe8
0000abc8	addis	r3,r31,__mh_dylib_header
0000abcc	addis	r4,r31,__mh_dylib_header
0000abd0	addis	r6,r31,__mh_dylib_header
0000abd4	li	r5,0x25b
0000abd8	addi	r3,r3,0x2a0c
0000abdc	addi	r4,r4,0x3cb4
0000abe0	addi	r6,r6,0x2ad0
0000abe4	b	0xac14
0000abe8	cmpwi	cr3,r5,__mh_dylib_header
0000abec	bne	cr3,0xac18
0000abf0	cmpwi	cr7,r6,__mh_dylib_header
0000abf4	beq	cr7,0xac18
0000abf8	addis	r3,r31,__mh_dylib_header
0000abfc	addis	r4,r31,__mh_dylib_header
0000ac00	addis	r6,r31,__mh_dylib_header
0000ac04	li	r5,0x25c
0000ac08	addi	r3,r3,0x2a0c
0000ac0c	addi	r4,r4,0x3cb4
0000ac10	addi	r6,r6,0x3d98
0000ac14	bl	___eprintf
0000ac18	cmpwi	cr7,r26,__mh_dylib_header
0000ac1c	bne+	cr7,0xac40
0000ac20	addis	r3,r31,__mh_dylib_header
0000ac24	addis	r4,r31,__mh_dylib_header
0000ac28	addis	r6,r31,__mh_dylib_header
0000ac2c	li	r5,0x25d
0000ac30	addi	r3,r3,0x2a0c
0000ac34	addi	r4,r4,0x3cb4
0000ac38	addi	r6,r6,0x323c
0000ac3c	b	0xac14
0000ac40	addis	r2,r31,__mh_dylib_header
0000ac44	lwz	r2,0x455c(r2)
0000ac48	lwz	r0,__mh_dylib_header(r2)
0000ac4c	cmpw	cr7,r28,r0
0000ac50	bne	cr7,0xac88
0000ac54	bl	_QMOGetLocalCPUType
0000ac58	cmpw	cr7,r30,r3
0000ac5c	bne	cr7,0xac88
0000ac60	addis	r2,r31,__mh_dylib_header
0000ac64	lwz	r2,0x4474(r2)
0000ac68	cmpwi	cr7,r2,__mh_dylib_header
0000ac6c	beq	cr7,0xac88
0000ac70	or	r3,r27,r27
0000ac74	or	r4,r25,r25
0000ac78	or	r5,r26,r26
0000ac7c	bl	_QMOImageListFromSelf
0000ac80	or	r30,r3,r3
0000ac84	b	0xb0a8
0000ac88	beq	cr3,0xac9c
0000ac8c	or	r3,r27,r27
0000ac90	li	r4,__mh_dylib_header
0000ac94	rlwinm	r5,r25,2,0,29
0000ac98	bl	0xd1a0	; symbol stub for: _memset
0000ac9c	or	r4,r30,r30
0000aca0	li	r0,__mh_dylib_header
0000aca4	or	r3,r28,r28
0000aca8	addi	r5,r1,0x38
0000acac	stw	r0,0x38(r1)
0000acb0	bl	_QMOImageCreateFromTaskDyld
0000acb4	cmpwi	cr4,r3,__mh_dylib_header
0000acb8	or	r30,r3,r3
0000acbc	bne	cr4,0xb068
0000acc0	lwz	r3,0x38(r1)
0000acc4	addis	r4,r31,__mh_dylib_header
0000acc8	addi	r5,r1,0x40
0000accc	addi	r4,r4,0x3dc8
0000acd0	bl	_QMOImageLookupSymbol
0000acd4	addis	r2,r31,__mh_dylib_header
0000acd8	lwz	r2,_SymbolToAddressCallback(r2)
0000acdc	cmpwi	cr7,r2,__mh_dylib_header
0000ace0	bne	cr7,0xaf38
0000ace4	cmpwi	cr7,r3,__mh_dylib_header
0000ace8	bne	cr7,0xaf38
0000acec	lwz	r29,0x38(r1)
0000acf0	lwz	r4,0x40(r1)
0000acf4	lwz	r5,0x44(r1)
0000acf8	cmpwi	cr7,r29,__mh_dylib_header
0000acfc	bne+	cr7,0xad20
0000ad00	addis	r3,r31,__mh_dylib_header
0000ad04	addis	r4,r31,__mh_dylib_header
0000ad08	addis	r6,r31,__mh_dylib_header
0000ad0c	li	r5,0xb4
0000ad10	addi	r3,r3,0x2a0c
0000ad14	addi	r4,r4,0x3cb4
0000ad18	addi	r6,r6,0x3d0c
0000ad1c	b	0xac14
0000ad20	or.	r0,r4,r5
0000ad24	bne+	0xad48
0000ad28	addis	r3,r31,__mh_dylib_header
0000ad2c	addis	r4,r31,__mh_dylib_header
0000ad30	addis	r6,r31,__mh_dylib_header
0000ad34	li	r5,0xb5
0000ad38	addi	r3,r3,0x2a0c
0000ad3c	addi	r4,r4,0x3cb4
0000ad40	addi	r6,r6,0x3de0
0000ad44	b	0xac14
0000ad48	bne	cr3,0xad74
0000ad4c	cmpwi	cr7,r25,__mh_dylib_header
0000ad50	beq	cr7,0xad74
0000ad54	addis	r3,r31,__mh_dylib_header
0000ad58	addis	r4,r31,__mh_dylib_header
0000ad5c	addis	r6,r31,__mh_dylib_header
0000ad60	li	r5,0xb6
0000ad64	addi	r3,r3,0x2a0c
0000ad68	addi	r4,r4,0x3cb4
0000ad6c	addi	r6,r6,0x3d68
0000ad70	b	0xac14
0000ad74	li	r0,__mh_dylib_header
0000ad78	or	r3,r28,r28
0000ad7c	li	r6,0x14
0000ad80	addi	r7,r1,0x48
0000ad84	stw	r0,0x3c(r1)
0000ad88	bl	_QTMRead
0000ad8c	cmpwi	cr4,r3,__mh_dylib_header
0000ad90	or	r30,r3,r3
0000ad94	beq	cr4,0xada0
0000ad98	li	r20,__mh_dylib_header
0000ad9c	b	0xaf28
0000ada0	lwz	r4,0x48(r1)
0000ada4	or	r3,r29,r29
0000ada8	bl	_QMOImageToLocalUInt32
0000adac	cmpwi	cr7,r3,0x1
0000adb0	beq	cr7,0xb084
0000adb4	li	r30,0x57
0000adb8	li	r20,__mh_dylib_header
0000adbc	cmpwi	cr4,r30,__mh_dylib_header
0000adc0	b	0xaf28
0000adc4	lwz	r5,0x54(r1)
0000adc8	lwz	r4,0x50(r1)
0000adcc	or	r3,r29,r29
0000add0	mulli	r20,r17,0x18
0000add4	bl	_QMOImageToLocalUInt64
0000add8	or	r5,r4,r4
0000addc	or	r4,r3,r3
0000ade0	b	0xadfc
0000ade4	lwz	r4,0x50(r1)
0000ade8	or	r3,r29,r29
0000adec	mulli	r20,r17,0xc
0000adf0	bl	_QMOImageToLocalUInt32
0000adf4	li	r4,__mh_dylib_header
0000adf8	or	r5,r3,r3
0000adfc	or	r3,r28,r28
0000ae00	or	r6,r20,r20
0000ae04	addi	r7,r1,0x3c
0000ae08	bl	_QTMReadAllocated
0000ae0c	cmpwi	cr4,r3,__mh_dylib_header
0000ae10	or	r30,r3,r3
0000ae14	bne	cr4,0xaf28
0000ae18	stw	r17,__mh_dylib_header(r26)
0000ae1c	beq	cr3,0xaf28
0000ae20	or	r3,r29,r29
0000ae24	or	r22,r27,r27
0000ae28	li	r21,__mh_dylib_header
0000ae2c	li	r18,__mh_dylib_header
0000ae30	bl	_QMOImageIs64Bit
0000ae34	li	r19,__mh_dylib_header
0000ae38	addi	r16,r1,0x5c
0000ae3c	cmpwi	cr2,r3,__mh_dylib_header
0000ae40	b	0xaf20
0000ae44	cmplw	cr7,r21,r25
0000ae48	bge	cr7,0xaf10
0000ae4c	beq	cr2,0xae94
0000ae50	lwz	r2,0x3c(r1)
0000ae54	or	r3,r29,r29
0000ae58	add	r2,r2,r18
0000ae5c	lwz	r5,0x4(r2)
0000ae60	lwz	r4,__mh_dylib_header(r2)
0000ae64	bl	_QMOImageToLocalUInt64
0000ae68	lwz	r2,0x3c(r1)
0000ae6c	or	r24,r4,r4
0000ae70	or	r23,r3,r3
0000ae74	or	r3,r29,r29
0000ae78	add	r2,r2,r18
0000ae7c	lwz	r5,0xc(r2)
0000ae80	lwz	r4,0x8(r2)
0000ae84	bl	_QMOImageToLocalUInt64
0000ae88	or	r5,r4,r4
0000ae8c	or	r4,r3,r3
0000ae90	b	0xaecc
0000ae94	lwz	r2,0x3c(r1)
0000ae98	or	r3,r29,r29
0000ae9c	li	r23,__mh_dylib_header
0000aea0	lwzx	r4,r2,r19
0000aea4	bl	_QMOImageToLocalUInt32
0000aea8	lwz	r2,0x3c(r1)
0000aeac	or	r0,r3,r3
0000aeb0	or	r3,r29,r29
0000aeb4	or	r24,r0,r0
0000aeb8	add	r2,r2,r19
0000aebc	lwz	r4,0x4(r2)
0000aec0	bl	_QMOImageToLocalUInt32
0000aec4	li	r4,__mh_dylib_header
0000aec8	or	r5,r3,r3
0000aecc	or	r3,r28,r28
0000aed0	li	r6,0x400
0000aed4	or	r7,r16,r16
0000aed8	bl	_QTMRead
0000aedc	cmpwi	cr4,r3,__mh_dylib_header
0000aee0	or	r30,r3,r3
0000aee4	bne	cr4,0xaf28
0000aee8	or	r4,r23,r23
0000aeec	or	r5,r24,r24
0000aef0	stb	r30,0x45b(r1)
0000aef4	or	r3,r28,r28
0000aef8	or	r6,r16,r16
0000aefc	or	r7,r22,r22
0000af00	bl	_QMOImageCreateFromTask
0000af04	cmpwi	cr4,r3,__mh_dylib_header
0000af08	or	r30,r3,r3
0000af0c	bne	cr4,0xaf28
0000af10	addi	r21,r21,0x1
0000af14	addi	r22,r22,0x4
0000af18	addi	r18,r18,0x18
0000af1c	addi	r19,r19,0xc
0000af20	cmplw	cr7,r21,r17
0000af24	blt	cr7,0xae44
0000af28	lwz	r3,0x3c(r1)
0000af2c	or	r4,r20,r20
0000af30	bl	_QTMFree
0000af34	b	0xb038
0000af38	lwz	r29,0x38(r1)
0000af3c	cmpwi	cr7,r29,__mh_dylib_header
0000af40	bne+	cr7,0xaf64
0000af44	addis	r3,r31,__mh_dylib_header
0000af48	addis	r4,r31,__mh_dylib_header
0000af4c	addis	r6,r31,__mh_dylib_header
0000af50	li	r5,0x1bf
0000af54	addi	r3,r3,0x2a0c
0000af58	addi	r4,r4,0x3cb4
0000af5c	addi	r6,r6,0x3d0c
0000af60	b	0xac14
0000af64	bne	cr3,0xaf90
0000af68	cmpwi	cr7,r25,__mh_dylib_header
0000af6c	beq	cr7,0xaf90
0000af70	addis	r3,r31,__mh_dylib_header
0000af74	addis	r4,r31,__mh_dylib_header
0000af78	addis	r6,r31,__mh_dylib_header
0000af7c	li	r5,0x1c0
0000af80	addi	r3,r3,0x2a0c
0000af84	addi	r4,r4,0x3cb4
0000af88	addi	r6,r6,0x3d68
0000af8c	b	0xac14
0000af90	or	r3,r29,r29
0000af94	bl	_QMOImageIs64Bit
0000af98	cmpwi	r3,__mh_dylib_header
0000af9c	beq+	0xafc0
0000afa0	addis	r3,r31,__mh_dylib_header
0000afa4	addis	r4,r31,__mh_dylib_header
0000afa8	addis	r6,r31,__mh_dylib_header
0000afac	li	r5,0x1c5
0000afb0	addi	r3,r3,0x2a0c
0000afb4	addi	r4,r4,0x3cb4
0000afb8	addi	r6,r6,0x3cec
0000afbc	b	0xac14
0000afc0	stw	r3,__mh_dylib_header(r26)
0000afc4	addis	r5,r31,__mh_dylib_header
0000afc8	addis	r6,r31,__mh_dylib_header
0000afcc	addis	r7,r31,__mh_dylib_header
0000afd0	addi	r5,r5,0x3df8
0000afd4	addi	r6,r6,0x3e08
0000afd8	addi	r7,r7,0x3e20
0000afdc	or	r3,r28,r28
0000afe0	or	r4,r29,r29
0000afe4	or	r8,r27,r27
0000afe8	or	r9,r25,r25
0000afec	or	r10,r26,r26
0000aff0	bl	_ImageListForTaskOldWithNames
0000aff4	cmpwi	cr4,r3,__mh_dylib_header
0000aff8	or	r30,r3,r3
0000affc	bne	cr4,0xb068
0000b000	addis	r5,r31,__mh_dylib_header
0000b004	addis	r6,r31,__mh_dylib_header
0000b008	addis	r7,r31,__mh_dylib_header
0000b00c	or	r3,r28,r28
0000b010	or	r4,r29,r29
0000b014	addi	r5,r5,0x3e38
0000b018	addi	r6,r6,0x3e48
0000b01c	addi	r7,r7,0x3e5c
0000b020	or	r8,r27,r27
0000b024	or	r9,r25,r25
0000b028	or	r10,r26,r26
0000b02c	bl	_ImageListForTaskOldWithNames
0000b030	cmpwi	cr4,r3,__mh_dylib_header
0000b034	or	r30,r3,r3
0000b038	bne	cr4,0xb068
0000b03c	beq	cr3,0xb068
0000b040	lwz	r5,__mh_dylib_header(r26)
0000b044	or	r4,r25,r25
0000b048	cmplw	cr7,r25,r5
0000b04c	ble	cr7,0xb054
0000b050	or	r4,r5,r5
0000b054	addis	r6,r31,__mh_dylib_header
0000b058	or	r3,r27,r27
0000b05c	li	r5,0x4
0000b060	addi	r6,r6,0xfd80
0000b064	bl	0xd2c0	; symbol stub for: _qsort
0000b068	lwz	r3,0x38(r1)
0000b06c	bl	_QMOImageDestroy
0000b070	beq	cr4,0xb0a8
0000b074	or	r3,r27,r27
0000b078	or	r4,r25,r25
0000b07c	bl	_QMOImageListDestroy
0000b080	b	0xb0a8
0000b084	lwz	r4,0x4c(r1)
0000b088	or	r3,r29,r29
0000b08c	bl	_QMOImageToLocalUInt32
0000b090	or	r17,r3,r3
0000b094	or	r3,r29,r29
0000b098	bl	_QMOImageIs64Bit
0000b09c	cmpwi	cr7,r3,__mh_dylib_header
0000b0a0	bne	cr7,0xadc4
0000b0a4	b	0xade4
0000b0a8	addi	r1,r1,0x4b0
0000b0ac	or	r3,r30,r30
0000b0b0	lwz	r11,0x4(r1)
0000b0b4	lwz	r0,0x8(r1)
0000b0b8	lmw	r16,0xffc0(r1)
0000b0bc	mtspr	lr,r0
0000b0c0	mtocrf	0x20,r11
0000b0c4	mtocrf	0x10,r11
0000b0c8	mtocrf	0x08,r11
0000b0cc	blr
_QCRIsValid:
0000b0d0	or.	r8,r3,r3
0000b0d4	beq	0xb13c
0000b0d8	lwz	r0,__mh_dylib_header(r8)
0000b0dc	cmpwi	cr7,r0,__mh_dylib_header
0000b0e0	beq	cr7,0xb13c
0000b0e4	lwz	r0,0x8(r8)
0000b0e8	cmpwi	cr7,r0,0xffff
0000b0ec	beq	cr7,0xb13c
0000b0f0	lwz	r0,0xc(r8)
0000b0f4	cmpwi	cr7,r0,__mh_dylib_header
0000b0f8	beq	cr7,0xb13c
0000b0fc	lwz	r0,0x10(r8)
0000b100	cmpwi	cr7,r0,__mh_dylib_header
0000b104	beq	cr7,0xb13c
0000b108	lwz	r2,0x14(r8)
0000b10c	cmpwi	cr7,r2,__mh_dylib_header
0000b110	beq	cr7,0xb13c
0000b114	lwz	r0,0x18(r8)
0000b118	cmpwi	cr7,r0,__mh_dylib_header
0000b11c	beq	cr7,0xb13c
0000b120	lwz	r0,0x1c(r8)
0000b124	cmpwi	cr7,r0,0xffff
0000b128	beq	cr7,0xb134
0000b12c	cmplw	cr7,r2,r0
0000b130	ble	cr7,0xb13c
0000b134	li	r0,0x1
0000b138	b	0xb140
0000b13c	li	r0,__mh_dylib_header
0000b140	cmpwi	cr7,r0,__mh_dylib_header
0000b144	or	r3,r0,r0
0000b148	beqlr	cr7
0000b14c	lwz	r2,0x14(r8)
0000b150	li	r3,0x1
0000b154	li	r10,__mh_dylib_header
0000b158	cmpwi	cr7,r2,__mh_dylib_header
0000b15c	addi	r2,r2,0x1
0000b160	mtspr	ctr,r2
0000b164	bne+	cr7,0xb1d0
0000b168	li	r0,0x1
0000b16c	mtspr	ctr,r0
0000b170	b	0xb1d0
0000b174	lwz	r2,0x18(r8)
0000b178	lwzx	r0,r10,r2
0000b17c	add	r11,r10,r2
0000b180	cmpwi	cr7,r0,__mh_dylib_header
0000b184	beq	cr7,0xb1c8
0000b188	lwz	r2,0xc(r11)
0000b18c	lwz	r0,0x10(r11)
0000b190	addic	r7,r2,0xffff
0000b194	subfe	r9,r7,r2
0000b198	subfic	r2,r0,__mh_dylib_header
0000b19c	adde	r0,r2,r0
0000b1a0	cmpw	cr7,r9,r0
0000b1a4	beq	cr7,0xb1c8
0000b1a8	lwz	r0,0x18(r11)
0000b1ac	cmpwi	cr7,r0,__mh_dylib_header
0000b1b0	beq	cr7,0xb1c0
0000b1b4	lwz	r0,0x14(r11)
0000b1b8	cmpwi	cr7,r0,__mh_dylib_header
0000b1bc	beq	cr7,0xb1c8
0000b1c0	li	r3,0x1
0000b1c4	b	0xb1cc
0000b1c8	li	r3,__mh_dylib_header
0000b1cc	addi	r10,r10,0x1c
0000b1d0	bdnz	0xb174
0000b1d4	blr
_QCRSetCrashedThreadIndex:
0000b1d8	mfspr	r0,lr
0000b1dc	stmw	r28,0xfff0(r1)
0000b1e0	or	r30,r4,r4
0000b1e4	bcl	20,31,0xb1e8
0000b1e8	or	r28,r3,r3
0000b1ec	mfspr	r31,lr
0000b1f0	stw	r0,0x8(r1)
0000b1f4	stwu	r1,0xffb0(r1)
0000b1f8	bl	_QCRIsValid
0000b1fc	cmpwi	cr7,r3,__mh_dylib_header
0000b200	bne+	cr7,0xb224
0000b204	addis	r3,r31,__mh_dylib_header
0000b208	addis	r4,r31,__mh_dylib_header
0000b20c	addis	r6,r31,__mh_dylib_header
0000b210	li	r5,0x2ca
0000b214	addi	r3,r3,0x23c8
0000b218	addi	r4,r4,0x3830
0000b21c	addi	r6,r6,0x3868
0000b220	b	0xb27c
0000b224	cmpwi	cr7,r30,0xffff
0000b228	beq	cr7,0xb23c
0000b22c	lwz	r0,0x14(r28)
0000b230	li	r29,0x16
0000b234	cmplw	cr7,r30,r0
0000b238	bge	cr7,0xb250
0000b23c	lwz	r0,0x1c(r28)
0000b240	li	r29,__mh_dylib_header
0000b244	cmpw	cr7,r30,r0
0000b248	beq	cr7,0xb250
0000b24c	stw	r30,0x1c(r28)
0000b250	or	r3,r28,r28
0000b254	bl	_QCRIsValid
0000b258	cmpwi	cr7,r3,__mh_dylib_header
0000b25c	bne+	cr7,0xb280
0000b260	addis	r3,r31,__mh_dylib_header
0000b264	addis	r4,r31,__mh_dylib_header
0000b268	addis	r6,r31,__mh_dylib_header
0000b26c	li	r5,0x2d4
0000b270	addi	r3,r3,0x23c8
0000b274	addi	r4,r4,0x3830
0000b278	addi	r6,r6,0x3868
0000b27c	bl	___eprintf
0000b280	addi	r1,r1,0x50
0000b284	or	r3,r29,r29
0000b288	lwz	r0,0x8(r1)
0000b28c	lmw	r28,0xfff0(r1)
0000b290	mtspr	lr,r0
0000b294	blr
_QCRDestroy:
0000b298	mfspr	r0,lr
0000b29c	stmw	r26,0xffe8(r1)
0000b2a0	or.	r28,r3,r3
0000b2a4	bcl	20,31,0xb2a8
0000b2a8	mfspr	r31,lr
0000b2ac	stw	r0,0x8(r1)
0000b2b0	stwu	r1,0xffa0(r1)
0000b2b4	beq	0xb360
0000b2b8	lwz	r0,0x18(r28)
0000b2bc	cmpwi	cr7,r0,__mh_dylib_header
0000b2c0	beq	cr7,0xb340
0000b2c4	addis	r2,r31,__mh_dylib_header
0000b2c8	li	r27,__mh_dylib_header
0000b2cc	li	r29,__mh_dylib_header
0000b2d0	lwz	r26,0x3e58(r2)
0000b2d4	b	0xb334
0000b2d8	lwz	r2,0x18(r28)
0000b2dc	lwzx	r4,r29,r2
0000b2e0	add	r30,r29,r2
0000b2e4	cmpwi	cr7,r4,__mh_dylib_header
0000b2e8	beq	cr7,0xb31c
0000b2ec	lwz	r3,__mh_dylib_header(r26)
0000b2f0	bl	0xd120	; symbol stub for: _mach_port_deallocate
0000b2f4	cmpwi	cr7,r3,__mh_dylib_header
0000b2f8	beq+	cr7,0xb31c
0000b2fc	addis	r3,r31,__mh_dylib_header
0000b300	addis	r4,r31,__mh_dylib_header
0000b304	addis	r6,r31,__mh_dylib_header
0000b308	li	r5,0x16b
0000b30c	addi	r3,r3,0x2308
0000b310	addi	r4,r4,0x3770
0000b314	addi	r6,r6,0x295c
0000b318	bl	___eprintf
0000b31c	lwz	r3,0xc(r30)
0000b320	addi	r27,r27,0x1
0000b324	addi	r29,r29,0x1c
0000b328	bl	0xd0c0	; symbol stub for: _free
0000b32c	lwz	r3,0x14(r30)
0000b330	bl	0xd0c0	; symbol stub for: _free
0000b334	lwz	r0,0x14(r28)
0000b338	cmplw	cr7,r27,r0
0000b33c	blt	cr7,0xb2d8
0000b340	lwz	r3,0xc(r28)
0000b344	bl	_QSymDestroy
0000b348	addi	r1,r1,0x60
0000b34c	or	r3,r28,r28
0000b350	lwz	r0,0x8(r1)
0000b354	lmw	r26,0xffe8(r1)
0000b358	mtspr	lr,r0
0000b35c	b	0xd0c0	; symbol stub for: _free
0000b360	addi	r1,r1,0x60
0000b364	lwz	r0,0x8(r1)
0000b368	lmw	r26,0xffe8(r1)
0000b36c	mtspr	lr,r0
0000b370	blr
_QCRCreateFromTask:
0000b374	mfspr	r0,lr
0000b378	stmw	r23,0xffdc(r1)
0000b37c	or	r27,r4,r4
0000b380	mfcr	r2
0000b384	bcl	20,31,0xb388
0000b388	or.	r29,r3,r3
0000b38c	stw	r0,0x8(r1)
0000b390	or	r24,r5,r5
0000b394	mfspr	r31,lr
0000b398	or	r28,r6,r6
0000b39c	or	r25,r7,r7
0000b3a0	stw	r2,0x4(r1)
0000b3a4	stwu	r1,0xff80(r1)
0000b3a8	bne+	0xb3cc
0000b3ac	addis	r3,r31,__mh_dylib_header
0000b3b0	addis	r4,r31,__mh_dylib_header
0000b3b4	addis	r6,r31,__mh_dylib_header
0000b3b8	li	r5,0xef
0000b3bc	addi	r3,r3,0x2228
0000b3c0	addi	r4,r4,0x3690
0000b3c4	addi	r6,r6,0x22ec
0000b3c8	b	0xb3f0
0000b3cc	cmpwi	cr7,r7,__mh_dylib_header
0000b3d0	bne+	cr7,0xb3f4
0000b3d4	addis	r3,r31,__mh_dylib_header
0000b3d8	addis	r4,r31,__mh_dylib_header
0000b3dc	addis	r6,r31,__mh_dylib_header
0000b3e0	li	r5,0xf1
0000b3e4	addi	r3,r3,0x2228
0000b3e8	addi	r4,r4,0x3690
0000b3ec	addi	r6,r6,0x36dc
0000b3f0	bl	___eprintf
0000b3f4	lwz	r0,__mh_dylib_header(r7)
0000b3f8	cmpwi	cr7,r0,__mh_dylib_header
0000b3fc	beq+	cr7,0xb420
0000b400	addis	r3,r31,__mh_dylib_header
0000b404	addis	r4,r31,__mh_dylib_header
0000b408	addis	r6,r31,__mh_dylib_header
0000b40c	li	r5,0xf2
0000b410	addi	r3,r3,0x2228
0000b414	addi	r4,r4,0x3690
0000b418	addi	r6,r6,0x36f0
0000b41c	b	0xb3f0
0000b420	li	r3,0x1
0000b424	li	r4,0x20
0000b428	bl	0xcfe0	; symbol stub for: _calloc
0000b42c	or.	r30,r3,r3
0000b430	bne	0xb43c
0000b434	li	r26,0xc
0000b438	b	0xb640
0000b43c	li	r0,0xffff
0000b440	stw	r29,__mh_dylib_header(r30)
0000b444	stw	r28,0x4(r30)
0000b448	stw	r0,0x1c(r30)
0000b44c	or	r3,r29,r29
0000b450	or	r4,r27,r27
0000b454	or	r5,r28,r28
0000b458	addi	r6,r30,0xc
0000b45c	bl	_QSymCreateFromTask
0000b460	cmpwi	cr4,r3,__mh_dylib_header
0000b464	or	r26,r3,r3
0000b468	bne	cr4,0xb644
0000b46c	lwz	r3,0xc(r30)
0000b470	bl	_QSymGetExecutableImage
0000b474	cmpwi	cr7,r3,__mh_dylib_header
0000b478	stw	r3,0x10(r30)
0000b47c	beq	cr7,0xb63c
0000b480	bl	_QMOImageGetCPUType
0000b484	or	r0,r3,r3
0000b488	lwz	r3,0x4(r30)
0000b48c	stw	r0,0x8(r30)
0000b490	cmpwi	cr7,r3,0xffff
0000b494	beq	cr7,0xb4c0
0000b498	cmpw	cr7,r0,r3
0000b49c	beq	cr7,0xb4c0
0000b4a0	addis	r3,r31,__mh_dylib_header
0000b4a4	addis	r4,r31,__mh_dylib_header
0000b4a8	addis	r6,r31,__mh_dylib_header
0000b4ac	li	r5,0x10a
0000b4b0	addi	r3,r3,0x2228
0000b4b4	addi	r4,r4,0x3690
0000b4b8	addi	r6,r6,0x3704
0000b4bc	b	0xb3f0
0000b4c0	li	r0,__mh_dylib_header
0000b4c4	addi	r4,r1,0x38
0000b4c8	addi	r5,r1,0x3c
0000b4cc	stw	r0,0x38(r1)
0000b4d0	lwz	r3,__mh_dylib_header(r30)
0000b4d4	bl	0xd480	; symbol stub for: _task_threads
0000b4d8	bl	_QTMErrnoFromMachError
0000b4dc	or.	r26,r3,r3
0000b4e0	bne	0xb584
0000b4e4	lwz	r3,0x3c(r1)
0000b4e8	li	r4,0x1c
0000b4ec	stw	r3,0x14(r30)
0000b4f0	bl	0xcfe0	; symbol stub for: _calloc
0000b4f4	cmpwi	cr7,r3,__mh_dylib_header
0000b4f8	stw	r3,0x18(r30)
0000b4fc	bne	cr7,0xb504
0000b500	li	r26,0xc
0000b504	addis	r2,r31,__mh_dylib_header
0000b508	li	r27,__mh_dylib_header
0000b50c	li	r28,__mh_dylib_header
0000b510	li	r29,__mh_dylib_header
0000b514	lwz	r23,0x3d78(r2)
0000b518	b	0xb578
0000b51c	lwz	r9,0x18(r30)
0000b520	cmpwi	cr7,r9,__mh_dylib_header
0000b524	bne	cr7,0xb560
0000b528	lwz	r2,0x38(r1)
0000b52c	lwz	r3,__mh_dylib_header(r23)
0000b530	lwzx	r4,r28,r2
0000b534	bl	0xd120	; symbol stub for: _mach_port_deallocate
0000b538	cmpwi	cr7,r3,__mh_dylib_header
0000b53c	beq+	cr7,0xb56c
0000b540	addis	r3,r31,__mh_dylib_header
0000b544	addis	r4,r31,__mh_dylib_header
0000b548	addis	r6,r31,__mh_dylib_header
0000b54c	li	r5,0x12b
0000b550	addi	r3,r3,0x2228
0000b554	addi	r4,r4,0x3690
0000b558	addi	r6,r6,0x287c
0000b55c	b	0xb3f0
0000b560	lwz	r2,0x38(r1)
0000b564	lwzx	r0,r28,r2
0000b568	stwx	r0,r29,r9
0000b56c	addi	r27,r27,0x1
0000b570	addi	r29,r29,0x1c
0000b574	addi	r28,r28,0x4
0000b578	lwz	r0,0x14(r30)
0000b57c	cmplw	cr7,r27,r0
0000b580	blt	cr7,0xb51c
0000b584	lwz	r4,0x38(r1)
0000b588	cmpwi	cr7,r4,__mh_dylib_header
0000b58c	beq	cr7,0xb5d0
0000b590	addis	r2,r31,__mh_dylib_header
0000b594	lwz	r5,0x3c(r1)
0000b598	lwz	r2,0x3d78(r2)
0000b59c	rlwinm	r5,r5,2,0,29
0000b5a0	lwz	r3,__mh_dylib_header(r2)
0000b5a4	bl	0xd4e0	; symbol stub for: _vm_deallocate
0000b5a8	cmpwi	cr7,r3,__mh_dylib_header
0000b5ac	beq+	cr7,0xb5d0
0000b5b0	addis	r3,r31,__mh_dylib_header
0000b5b4	addis	r4,r31,__mh_dylib_header
0000b5b8	addis	r6,r31,__mh_dylib_header
0000b5bc	li	r5,0x134
0000b5c0	addi	r3,r3,0x2228
0000b5c4	addi	r4,r4,0x3690
0000b5c8	addi	r6,r6,0x287c
0000b5cc	b	0xb3f0
0000b5d0	cmpwi	cr4,r26,__mh_dylib_header
0000b5d4	bne	cr4,0xb644
0000b5d8	cmpwi	cr7,r24,__mh_dylib_header
0000b5dc	beq	cr7,0xb650
0000b5e0	lwz	r2,0x14(r30)
0000b5e4	li	r4,__mh_dylib_header
0000b5e8	li	r9,__mh_dylib_header
0000b5ec	cmpwi	cr7,r2,__mh_dylib_header
0000b5f0	addi	r2,r2,0x1
0000b5f4	mtspr	ctr,r2
0000b5f8	bne+	cr7,0xb638
0000b5fc	li	r0,0x1
0000b600	mtspr	ctr,r0
0000b604	b	0xb638
0000b608	lwz	r2,0x18(r30)
0000b60c	lwzx	r0,r9,r2
0000b610	cmpw	cr7,r24,r0
0000b614	bne	cr7,0xb630
0000b618	or	r3,r30,r30
0000b61c	bl	_QCRSetCrashedThreadIndex
0000b620	cmpwi	cr4,r3,__mh_dylib_header
0000b624	or	r26,r3,r3
0000b628	bne	cr4,0xb644
0000b62c	b	0xb650
0000b630	addi	r4,r4,0x1
0000b634	addi	r9,r9,0x1c
0000b638	bdnz	0xb608
0000b63c	li	r26,0x16
0000b640	cmpwi	cr4,r26,__mh_dylib_header
0000b644	or	r3,r30,r30
0000b648	li	r30,__mh_dylib_header
0000b64c	bl	_QCRDestroy
0000b650	mfcr	r2
0000b654	rlwinm	r2,r2,19,31,31
0000b658	addic	r9,r30,0xffff
0000b65c	subfe	r0,r9,r30
0000b660	stw	r30,__mh_dylib_header(r25)
0000b664	cmpw	cr7,r2,r0
0000b668	beq+	cr7,0xb68c
0000b66c	addis	r3,r31,__mh_dylib_header
0000b670	addis	r4,r31,__mh_dylib_header
0000b674	addis	r6,r31,__mh_dylib_header
0000b678	li	r5,0x14d
0000b67c	addi	r3,r3,0x2228
0000b680	addi	r4,r4,0x3690
0000b684	addi	r6,r6,0x3764
0000b688	b	0xb3f0
0000b68c	cmpwi	cr7,r30,__mh_dylib_header
0000b690	beq	cr7,0xb6c4
0000b694	or	r3,r30,r30
0000b698	bl	_QCRIsValid
0000b69c	cmpwi	cr7,r3,__mh_dylib_header
0000b6a0	bne	cr7,0xb6c4
0000b6a4	addis	r3,r31,__mh_dylib_header
0000b6a8	addis	r4,r31,__mh_dylib_header
0000b6ac	addis	r6,r31,__mh_dylib_header
0000b6b0	li	r5,0x14e
0000b6b4	addi	r3,r3,0x2228
0000b6b8	addi	r4,r4,0x3690
0000b6bc	addi	r6,r6,0x3788
0000b6c0	b	0xb3f0
0000b6c4	addi	r1,r1,0x80
0000b6c8	or	r3,r26,r26
0000b6cc	lwz	r0,0x8(r1)
0000b6d0	lwz	r11,0x4(r1)
0000b6d4	lmw	r23,0xffdc(r1)
0000b6d8	mtspr	lr,r0
0000b6dc	mtocrf	0x08,r11
0000b6e0	blr
_QCRCreateFromSelf:
0000b6e4	mfspr	r0,lr
0000b6e8	stmw	r28,0xfff0(r1)
0000b6ec	or.	r30,r3,r3
0000b6f0	bcl	20,31,0xb6f4
0000b6f4	mfspr	r31,lr
0000b6f8	stw	r0,0x8(r1)
0000b6fc	stwu	r1,0xffb0(r1)
0000b700	bne+	0xb724
0000b704	addis	r3,r31,__mh_dylib_header
0000b708	addis	r4,r31,__mh_dylib_header
0000b70c	addis	r6,r31,__mh_dylib_header
0000b710	li	r5,0x156
0000b714	addi	r3,r3,0x1ebc
0000b718	addi	r4,r4,0x3324
0000b71c	addi	r6,r6,0x3370
0000b720	b	0xb74c
0000b724	lwz	r0,__mh_dylib_header(r30)
0000b728	cmpwi	cr7,r0,__mh_dylib_header
0000b72c	beq+	cr7,0xb750
0000b730	addis	r3,r31,__mh_dylib_header
0000b734	addis	r4,r31,__mh_dylib_header
0000b738	addis	r6,r31,__mh_dylib_header
0000b73c	li	r5,0x157
0000b740	addi	r3,r3,0x1ebc
0000b744	addi	r4,r4,0x3324
0000b748	addi	r6,r6,0x3384
0000b74c	bl	___eprintf
0000b750	addis	r2,r31,__mh_dylib_header
0000b754	lwz	r2,0x3a0c(r2)
0000b758	lwz	r28,__mh_dylib_header(r2)
0000b75c	bl	0xd140	; symbol stub for: _mach_thread_self
0000b760	or	r29,r3,r3
0000b764	bl	_QMOGetLocalCPUType
0000b768	addi	r1,r1,0x50
0000b76c	or	r7,r30,r30
0000b770	or	r6,r3,r3
0000b774	or	r5,r29,r29
0000b778	lwz	r0,0x8(r1)
0000b77c	or	r3,r28,r28
0000b780	li	r4,__mh_dylib_header
0000b784	lmw	r28,0xfff0(r1)
0000b788	mtspr	lr,r0
0000b78c	b	_QCRCreateFromTask
_QCRGetSymbols:
0000b790	mfspr	r0,lr
0000b794	stmw	r30,0xfff8(r1)
0000b798	or	r30,r3,r3
0000b79c	bcl	20,31,0xb7a0
0000b7a0	mfspr	r31,lr
0000b7a4	stw	r0,0x8(r1)
0000b7a8	stwu	r1,0xffb0(r1)
0000b7ac	bl	_QCRIsValid
0000b7b0	cmpwi	cr7,r3,__mh_dylib_header
0000b7b4	bne+	cr7,0xb7d8
0000b7b8	addis	r3,r31,__mh_dylib_header
0000b7bc	addis	r4,r31,__mh_dylib_header
0000b7c0	addis	r6,r31,__mh_dylib_header
0000b7c4	li	r5,0x17c
0000b7c8	addi	r3,r3,0x1e10
0000b7cc	addi	r4,r4,0x3278
0000b7d0	addi	r6,r6,0x32b0
0000b7d4	bl	___eprintf
0000b7d8	addi	r1,r1,0x50
0000b7dc	lwz	r3,0xc(r30)
0000b7e0	lwz	r0,0x8(r1)
0000b7e4	lmw	r30,0xfff8(r1)
0000b7e8	mtspr	lr,r0
0000b7ec	blr
_QCRGetThreadCount:
0000b7f0	mfspr	r0,lr
0000b7f4	stmw	r30,0xfff8(r1)
0000b7f8	or	r30,r3,r3
0000b7fc	bcl	20,31,0xb800
0000b800	mfspr	r31,lr
0000b804	stw	r0,0x8(r1)
0000b808	stwu	r1,0xffb0(r1)
0000b80c	bl	_QCRIsValid
0000b810	cmpwi	cr7,r3,__mh_dylib_header
0000b814	bne+	cr7,0xb838
0000b818	addis	r3,r31,__mh_dylib_header
0000b81c	addis	r4,r31,__mh_dylib_header
0000b820	addis	r6,r31,__mh_dylib_header
0000b824	li	r5,0x183
0000b828	addi	r3,r3,0x1db0
0000b82c	addi	r4,r4,0x3218
0000b830	addi	r6,r6,0x3250
0000b834	bl	___eprintf
0000b838	addi	r1,r1,0x50
0000b83c	lwz	r3,0x14(r30)
0000b840	lwz	r0,0x8(r1)
0000b844	lmw	r30,0xfff8(r1)
0000b848	mtspr	lr,r0
0000b84c	blr
_QCRGetThreadAtIndex:
0000b850	mfspr	r0,lr
0000b854	stmw	r29,0xfff4(r1)
0000b858	or	r29,r4,r4
0000b85c	bcl	20,31,0xb860
0000b860	or	r30,r3,r3
0000b864	mfspr	r31,lr
0000b868	stw	r0,0x8(r1)
0000b86c	stwu	r1,0xffb0(r1)
0000b870	bl	_QCRIsValid
0000b874	cmpwi	cr7,r3,__mh_dylib_header
0000b878	bne+	cr7,0xb89c
0000b87c	addis	r3,r31,__mh_dylib_header
0000b880	addis	r4,r31,__mh_dylib_header
0000b884	addis	r6,r31,__mh_dylib_header
0000b888	li	r5,0x18a
0000b88c	addi	r3,r3,0x1d50
0000b890	addi	r4,r4,0x31b8
0000b894	addi	r6,r6,0x31f0
0000b898	bl	___eprintf
0000b89c	addi	r1,r1,0x50
0000b8a0	lwz	r9,0x18(r30)
0000b8a4	mulli	r2,r29,0x1c
0000b8a8	lwz	r0,0x8(r1)
0000b8ac	lmw	r29,0xfff4(r1)
0000b8b0	lwzx	r3,r2,r9
0000b8b4	mtspr	lr,r0
0000b8b8	blr
_QCRGetImages:
0000b8bc	mfspr	r0,lr
0000b8c0	stmw	r28,0xfff0(r1)
0000b8c4	or	r30,r4,r4
0000b8c8	bcl	20,31,0xb8cc
0000b8cc	or	r29,r5,r5
0000b8d0	or	r28,r3,r3
0000b8d4	mfspr	r31,lr
0000b8d8	stw	r0,0x8(r1)
0000b8dc	stwu	r1,0xffb0(r1)
0000b8e0	bl	_QCRIsValid
0000b8e4	cmpwi	cr7,r3,__mh_dylib_header
0000b8e8	bne+	cr7,0xb90c
0000b8ec	addis	r3,r31,__mh_dylib_header
0000b8f0	addis	r4,r31,__mh_dylib_header
0000b8f4	addis	r6,r31,__mh_dylib_header
0000b8f8	li	r5,0x195
0000b8fc	addi	r3,r3,0x1ce4
0000b900	addi	r4,r4,0x314c
0000b904	addi	r6,r6,0x3184
0000b908	b	0xb930
0000b90c	cmpwi	cr7,r30,__mh_dylib_header
0000b910	bne+	cr7,0xb934
0000b914	addis	r3,r31,__mh_dylib_header
0000b918	addis	r4,r31,__mh_dylib_header
0000b91c	addis	r6,r31,__mh_dylib_header
0000b920	li	r5,0x196
0000b924	addi	r3,r3,0x1ce4
0000b928	addi	r4,r4,0x314c
0000b92c	addi	r6,r6,0x24fc
0000b930	bl	___eprintf
0000b934	cmpwi	cr7,r29,__mh_dylib_header
0000b938	bne+	cr7,0xb95c
0000b93c	addis	r3,r31,__mh_dylib_header
0000b940	addis	r4,r31,__mh_dylib_header
0000b944	addis	r6,r31,__mh_dylib_header
0000b948	li	r5,0x197
0000b94c	addi	r3,r3,0x1ce4
0000b950	addi	r4,r4,0x314c
0000b954	addi	r6,r6,0x2514
0000b958	b	0xb930
0000b95c	addi	r1,r1,0x50
0000b960	lwz	r3,0xc(r28)
0000b964	or	r4,r30,r30
0000b968	or	r5,r29,r29
0000b96c	lwz	r0,0x8(r1)
0000b970	lmw	r28,0xfff0(r1)
0000b974	mtspr	lr,r0
0000b978	b	_QSymGetImages
_ClearThreadStateAndBacktraceAtIndex:
0000b97c	mfspr	r0,lr
0000b980	stmw	r28,0xfff0(r1)
0000b984	or	r30,r4,r4
0000b988	bcl	20,31,0xb98c
0000b98c	or	r29,r3,r3
0000b990	mfspr	r31,lr
0000b994	stw	r0,0x8(r1)
0000b998	stwu	r1,0xffb0(r1)
0000b99c	bl	_QCRIsValid
0000b9a0	cmpwi	cr7,r3,__mh_dylib_header
0000b9a4	bne+	cr7,0xb9c8
0000b9a8	addis	r3,r31,__mh_dylib_header
0000b9ac	addis	r4,r31,__mh_dylib_header
0000b9b0	addis	r6,r31,__mh_dylib_header
0000b9b4	li	r5,0x1b5
0000b9b8	addi	r3,r3,0x1c24
0000b9bc	addi	r4,r4,0x308c
0000b9c0	addi	r6,r6,0x30c4
0000b9c4	b	0xb9f0
0000b9c8	lwz	r0,0x14(r29)
0000b9cc	cmplw	cr7,r0,r30
0000b9d0	bgt+	cr7,0xb9f4
0000b9d4	addis	r3,r31,__mh_dylib_header
0000b9d8	addis	r4,r31,__mh_dylib_header
0000b9dc	addis	r6,r31,__mh_dylib_header
0000b9e0	li	r5,0x1b6
0000b9e4	addi	r3,r3,0x1c24
0000b9e8	addi	r4,r4,0x308c
0000b9ec	addi	r6,r6,0x31b0
0000b9f0	bl	___eprintf
0000b9f4	or	r3,r29,r29
0000b9f8	bl	_QCRIsValid
0000b9fc	cmpwi	cr7,r3,__mh_dylib_header
0000ba00	bne+	cr7,0xba24
0000ba04	addis	r3,r31,__mh_dylib_header
0000ba08	addis	r4,r31,__mh_dylib_header
0000ba0c	addis	r6,r31,__mh_dylib_header
0000ba10	li	r5,0x1a3
0000ba14	addi	r3,r3,0x1c24
0000ba18	addi	r4,r4,0x308c
0000ba1c	addi	r6,r6,0x30c4
0000ba20	b	0xb9f0
0000ba24	lwz	r0,0x14(r29)
0000ba28	cmplw	cr7,r30,r0
0000ba2c	blt+	cr7,0xba50
0000ba30	addis	r3,r31,__mh_dylib_header
0000ba34	addis	r4,r31,__mh_dylib_header
0000ba38	addis	r6,r31,__mh_dylib_header
0000ba3c	li	r5,0x1a4
0000ba40	addi	r3,r3,0x1c24
0000ba44	addi	r4,r4,0x308c
0000ba48	addi	r6,r6,0x31b0
0000ba4c	b	0xb9f0
0000ba50	mulli	r30,r30,0x1c
0000ba54	lwz	r2,0x18(r29)
0000ba58	li	r28,__mh_dylib_header
0000ba5c	add	r2,r2,r30
0000ba60	lwz	r3,0x14(r2)
0000ba64	bl	0xd0c0	; symbol stub for: _free
0000ba68	lwz	r9,0x18(r29)
0000ba6c	or	r3,r29,r29
0000ba70	add	r9,r30,r9
0000ba74	stw	r28,0x14(r9)
0000ba78	lwz	r2,0x18(r29)
0000ba7c	add	r2,r30,r2
0000ba80	stw	r28,0x18(r2)
0000ba84	bl	_QCRIsValid
0000ba88	cmpwi	cr7,r3,__mh_dylib_header
0000ba8c	bne+	cr7,0xbab0
0000ba90	addis	r3,r31,__mh_dylib_header
0000ba94	addis	r4,r31,__mh_dylib_header
0000ba98	addis	r6,r31,__mh_dylib_header
0000ba9c	li	r5,0x1aa
0000baa0	addi	r3,r3,0x1c24
0000baa4	addi	r4,r4,0x308c
0000baa8	addi	r6,r6,0x30c4
0000baac	b	0xb9f0
0000bab0	lwz	r2,0x18(r29)
0000bab4	add	r2,r30,r2
0000bab8	lwz	r3,0xc(r2)
0000babc	bl	0xd0c0	; symbol stub for: _free
0000bac0	lwz	r9,0x18(r29)
0000bac4	or	r3,r29,r29
0000bac8	add	r9,r30,r9
0000bacc	stw	r28,0x8(r9)
0000bad0	lwz	r2,0x18(r29)
0000bad4	add	r2,r30,r2
0000bad8	stw	r28,0xc(r2)
0000badc	lwz	r9,0x18(r29)
0000bae0	add	r9,r30,r9
0000bae4	stw	r28,0x10(r9)
0000bae8	bl	_QCRIsValid
0000baec	cmpwi	cr7,r3,__mh_dylib_header
0000baf0	bne+	cr7,0xbb14
0000baf4	addis	r3,r31,__mh_dylib_header
0000baf8	addis	r4,r31,__mh_dylib_header
0000bafc	addis	r6,r31,__mh_dylib_header
0000bb00	li	r5,0x1c2
0000bb04	addi	r3,r3,0x1c24
0000bb08	addi	r4,r4,0x308c
0000bb0c	addi	r6,r6,0x30c4
0000bb10	b	0xb9f0
0000bb14	addi	r1,r1,0x50
0000bb18	lwz	r0,0x8(r1)
0000bb1c	lmw	r28,0xfff0(r1)
0000bb20	mtspr	lr,r0
0000bb24	blr
_QCRGetThreadStateAtIndex:
0000bb28	mfspr	r0,lr
0000bb2c	stmw	r24,0xffe0(r1)
0000bb30	or	r29,r4,r4
0000bb34	bcl	20,31,0xbb38
0000bb38	or	r27,r5,r5
0000bb3c	or	r26,r6,r6
0000bb40	mfspr	r31,lr
0000bb44	stw	r0,0x8(r1)
0000bb48	or	r25,r7,r7
0000bb4c	or	r24,r8,r8
0000bb50	stwu	r1,0xffa0(r1)
0000bb54	or	r30,r3,r3
0000bb58	bl	_QCRIsValid
0000bb5c	cmpwi	cr7,r3,__mh_dylib_header
0000bb60	bne+	cr7,0xbb84
0000bb64	addis	r3,r31,__mh_dylib_header
0000bb68	addis	r4,r31,__mh_dylib_header
0000bb6c	addis	r6,r31,__mh_dylib_header
0000bb70	li	r5,0x1d1
0000bb74	addi	r3,r3,0x1a78
0000bb78	addi	r4,r4,0x2ee0
0000bb7c	addi	r6,r6,0x2f18
0000bb80	b	0xbbd8
0000bb84	lwz	r0,0x14(r30)
0000bb88	li	r28,0x16
0000bb8c	cmplw	cr7,r0,r29
0000bb90	ble	cr7,0xbd08
0000bb94	mulli	r29,r29,0x1c
0000bb98	lwz	r2,0x18(r30)
0000bb9c	li	r28,__mh_dylib_header
0000bba0	add	r8,r29,r2
0000bba4	lwz	r0,0xc(r8)
0000bba8	cmpwi	cr7,r0,__mh_dylib_header
0000bbac	bne	cr7,0xbc78
0000bbb0	lwz	r0,0x10(r8)
0000bbb4	cmpwi	cr7,r0,__mh_dylib_header
0000bbb8	beq+	cr7,0xbbdc
0000bbbc	addis	r3,r31,__mh_dylib_header
0000bbc0	addis	r4,r31,__mh_dylib_header
0000bbc4	addis	r6,r31,__mh_dylib_header
0000bbc8	li	r5,0x1e1
0000bbcc	addi	r3,r3,0x1a78
0000bbd0	addi	r4,r4,0x2ee0
0000bbd4	addi	r6,r6,0x3028
0000bbd8	bl	___eprintf
0000bbdc	lwzx	r4,r29,r2
0000bbe0	lwz	r3,__mh_dylib_header(r30)
0000bbe4	addi	r9,r8,0x10
0000bbe8	addi	r7,r8,0x8
0000bbec	lwz	r5,0x8(r30)
0000bbf0	lwz	r6,0xc(r30)
0000bbf4	addi	r8,r8,0xc
0000bbf8	bl	_QBTCreateThreadState
0000bbfc	lwz	r2,0x18(r30)
0000bc00	subfic	r0,r3,__mh_dylib_header
0000bc04	adde	r11,r0,r3
0000bc08	or	r28,r3,r3
0000bc0c	add	r9,r29,r2
0000bc10	lwz	r0,0xc(r9)
0000bc14	addic	r10,r0,0xffff
0000bc18	subfe	r2,r10,r0
0000bc1c	cmpw	cr7,r11,r2
0000bc20	beq+	cr7,0xbc44
0000bc24	addis	r3,r31,__mh_dylib_header
0000bc28	addis	r4,r31,__mh_dylib_header
0000bc2c	addis	r6,r31,__mh_dylib_header
0000bc30	li	r5,0x1f0
0000bc34	addi	r3,r3,0x1a78
0000bc38	addi	r4,r4,0x2ee0
0000bc3c	addi	r6,r6,0x3054
0000bc40	b	0xbbd8
0000bc44	lwz	r0,0x10(r9)
0000bc48	addic	r9,r0,0xffff
0000bc4c	subfe	r2,r9,r0
0000bc50	cmpw	cr7,r11,r2
0000bc54	beq+	cr7,0xbc78
0000bc58	addis	r3,r31,__mh_dylib_header
0000bc5c	addis	r4,r31,__mh_dylib_header
0000bc60	addis	r6,r31,__mh_dylib_header
0000bc64	li	r5,0x1f1
0000bc68	addi	r3,r3,0x1a78
0000bc6c	addi	r4,r4,0x2ee0
0000bc70	addi	r6,r6,0x3090
0000bc74	b	0xbbd8
0000bc78	or	r3,r30,r30
0000bc7c	bl	_QCRIsValid
0000bc80	cmpwi	cr7,r3,__mh_dylib_header
0000bc84	bne+	cr7,0xbca8
0000bc88	addis	r3,r31,__mh_dylib_header
0000bc8c	addis	r4,r31,__mh_dylib_header
0000bc90	addis	r6,r31,__mh_dylib_header
0000bc94	li	r5,0x1f7
0000bc98	addi	r3,r3,0x1a78
0000bc9c	addi	r4,r4,0x2ee0
0000bca0	addi	r6,r6,0x2f18
0000bca4	b	0xbbd8
0000bca8	cmpwi	cr7,r28,__mh_dylib_header
0000bcac	bne	cr7,0xbd08
0000bcb0	cmpwi	cr7,r27,__mh_dylib_header
0000bcb4	beq	cr7,0xbcc0
0000bcb8	lwz	r0,0x8(r30)
0000bcbc	stw	r0,__mh_dylib_header(r27)
0000bcc0	cmpwi	cr7,r26,__mh_dylib_header
0000bcc4	beq	cr7,0xbcd8
0000bcc8	lwz	r2,0x18(r30)
0000bccc	add	r2,r29,r2
0000bcd0	lwz	r0,0x8(r2)
0000bcd4	stw	r0,__mh_dylib_header(r26)
0000bcd8	cmpwi	cr7,r25,__mh_dylib_header
0000bcdc	beq	cr7,0xbcf0
0000bce0	lwz	r2,0x18(r30)
0000bce4	add	r2,r29,r2
0000bce8	lwz	r0,0xc(r2)
0000bcec	stw	r0,__mh_dylib_header(r25)
0000bcf0	cmpwi	cr7,r24,__mh_dylib_header
0000bcf4	beq	cr7,0xbd08
0000bcf8	lwz	r2,0x18(r30)
0000bcfc	add	r2,r29,r2
0000bd00	lwz	r0,0x10(r2)
0000bd04	stw	r0,__mh_dylib_header(r24)
0000bd08	or	r3,r30,r30
0000bd0c	bl	_QCRIsValid
0000bd10	cmpwi	cr7,r3,__mh_dylib_header
0000bd14	bne+	cr7,0xbd38
0000bd18	addis	r3,r31,__mh_dylib_header
0000bd1c	addis	r4,r31,__mh_dylib_header
0000bd20	addis	r6,r31,__mh_dylib_header
0000bd24	li	r5,0x209
0000bd28	addi	r3,r3,0x1a78
0000bd2c	addi	r4,r4,0x2ee0
0000bd30	addi	r6,r6,0x2f18
0000bd34	b	0xbbd8
0000bd38	addi	r1,r1,0x60
0000bd3c	or	r3,r28,r28
0000bd40	lwz	r0,0x8(r1)
0000bd44	lmw	r24,0xffe0(r1)
0000bd48	mtspr	lr,r0
0000bd4c	blr
_QCRSetThreadStateAtIndex:
0000bd50	mfspr	r0,lr
0000bd54	stmw	r24,0xffe0(r1)
0000bd58	or	r27,r4,r4
0000bd5c	bcl	20,31,0xbd60
0000bd60	or	r24,r5,r5
0000bd64	or	r25,r6,r6
0000bd68	mfspr	r31,lr
0000bd6c	stw	r0,0x8(r1)
0000bd70	or	r28,r7,r7
0000bd74	or	r30,r3,r3
0000bd78	stwu	r1,0xffa0(r1)
0000bd7c	bl	_QCRIsValid
0000bd80	cmpwi	cr7,r3,__mh_dylib_header
0000bd84	bne+	cr7,0xbda8
0000bd88	addis	r3,r31,__mh_dylib_header
0000bd8c	addis	r4,r31,__mh_dylib_header
0000bd90	addis	r6,r31,__mh_dylib_header
0000bd94	li	r5,0x21a
0000bd98	addi	r3,r3,0x1850
0000bd9c	addi	r4,r4,0x2cb8
0000bda0	addi	r6,r6,0x2cf0
0000bda4	b	0xbdcc
0000bda8	cmpwi	cr7,r25,__mh_dylib_header
0000bdac	bne+	cr7,0xbdd0
0000bdb0	addis	r3,r31,__mh_dylib_header
0000bdb4	addis	r4,r31,__mh_dylib_header
0000bdb8	addis	r6,r31,__mh_dylib_header
0000bdbc	li	r5,0x21b
0000bdc0	addi	r3,r3,0x1850
0000bdc4	addi	r4,r4,0x2cb8
0000bdc8	addi	r6,r6,0x2ea4
0000bdcc	bl	___eprintf
0000bdd0	cmpwi	cr7,r28,__mh_dylib_header
0000bdd4	bne+	cr7,0xbdf8
0000bdd8	addis	r3,r31,__mh_dylib_header
0000bddc	addis	r4,r31,__mh_dylib_header
0000bde0	addis	r6,r31,__mh_dylib_header
0000bde4	li	r5,0x21c
0000bde8	addi	r3,r3,0x1850
0000bdec	addi	r4,r4,0x2cb8
0000bdf0	addi	r6,r6,0x2eb8
0000bdf4	b	0xbdcc
0000bdf8	andi.	r0,r28,0x3
0000bdfc	beq+	0xbe20
0000be00	addis	r3,r31,__mh_dylib_header
0000be04	addis	r4,r31,__mh_dylib_header
0000be08	addis	r6,r31,__mh_dylib_header
0000be0c	li	r5,0x21d
0000be10	addi	r3,r3,0x1850
0000be14	addi	r4,r4,0x2cb8
0000be18	addi	r6,r6,0x2ecc
0000be1c	b	0xbdcc
0000be20	lwz	r0,0x14(r30)
0000be24	li	r29,0x16
0000be28	cmplw	cr7,r0,r27
0000be2c	ble	cr7,0xbec4
0000be30	or	r3,r28,r28
0000be34	li	r29,0xc
0000be38	bl	0xd160	; symbol stub for: _malloc
0000be3c	or.	r26,r3,r3
0000be40	beq	0xbec4
0000be44	or	r4,r25,r25
0000be48	or	r5,r28,r28
0000be4c	bl	0xd180	; symbol stub for: _memcpy
0000be50	or	r4,r27,r27
0000be54	or	r3,r30,r30
0000be58	bl	_ClearThreadStateAndBacktraceAtIndex
0000be5c	mulli	r4,r27,0x1c
0000be60	lwz	r0,0x18(r30)
0000be64	add	r9,r4,r0
0000be68	lwz	r2,0xc(r9)
0000be6c	cmpwi	cr7,r2,__mh_dylib_header
0000be70	beq+	cr7,0xbe94
0000be74	addis	r3,r31,__mh_dylib_header
0000be78	addis	r4,r31,__mh_dylib_header
0000be7c	addis	r6,r31,__mh_dylib_header
0000be80	li	r5,0x23a
0000be84	addi	r3,r3,0x1850
0000be88	addi	r4,r4,0x2cb8
0000be8c	addi	r6,r6,0x2ef8
0000be90	b	0xbdcc
0000be94	li	r0,0x1
0000be98	li	r29,__mh_dylib_header
0000be9c	stw	r0,0x4(r9)
0000bea0	lwz	r2,0x18(r30)
0000bea4	add	r2,r4,r2
0000bea8	stw	r24,0x8(r2)
0000beac	lwz	r9,0x18(r30)
0000beb0	add	r9,r4,r9
0000beb4	stw	r26,0xc(r9)
0000beb8	lwz	r2,0x18(r30)
0000bebc	add	r2,r4,r2
0000bec0	stw	r28,0x10(r2)
0000bec4	or	r3,r30,r30
0000bec8	bl	_QCRIsValid
0000becc	cmpwi	cr7,r3,__mh_dylib_header
0000bed0	bne+	cr7,0xbef4
0000bed4	addis	r3,r31,__mh_dylib_header
0000bed8	addis	r4,r31,__mh_dylib_header
0000bedc	addis	r6,r31,__mh_dylib_header
0000bee0	li	r5,0x241
0000bee4	addi	r3,r3,0x1850
0000bee8	addi	r4,r4,0x2cb8
0000beec	addi	r6,r6,0x2cf0
0000bef0	b	0xbdcc
0000bef4	addi	r1,r1,0x60
0000bef8	or	r3,r29,r29
0000befc	lwz	r0,0x8(r1)
0000bf00	lmw	r24,0xffe0(r1)
0000bf04	mtspr	lr,r0
0000bf08	blr
_QCRGetBacktraceAtIndex:
0000bf0c	mfspr	r0,lr
0000bf10	stmw	r20,0xffd0(r1)
0000bf14	or	r28,r4,r4
0000bf18	mfcr	r2
0000bf1c	bcl	20,31,0xbf20
0000bf20	stw	r0,0x8(r1)
0000bf24	or	r26,r5,r5
0000bf28	or	r24,r6,r6
0000bf2c	mfspr	r31,lr
0000bf30	or	r30,r3,r3
0000bf34	stw	r2,0x4(r1)
0000bf38	stwu	r1,0xff60(r1)
0000bf3c	bl	_QCRIsValid
0000bf40	cmpwi	cr7,r3,__mh_dylib_header
0000bf44	bne+	cr7,0xbf68
0000bf48	addis	r3,r31,__mh_dylib_header
0000bf4c	addis	r4,r31,__mh_dylib_header
0000bf50	addis	r6,r31,__mh_dylib_header
0000bf54	li	r5,0x250
0000bf58	addi	r3,r3,0x1690
0000bf5c	addi	r4,r4,0x2af8
0000bf60	addi	r6,r6,0x2b30
0000bf64	b	0xbf8c
0000bf68	cmpwi	cr7,r26,__mh_dylib_header
0000bf6c	bne+	cr7,0xbf90
0000bf70	addis	r3,r31,__mh_dylib_header
0000bf74	addis	r4,r31,__mh_dylib_header
0000bf78	addis	r6,r31,__mh_dylib_header
0000bf7c	li	r5,0x251
0000bf80	addi	r3,r3,0x1690
0000bf84	addi	r4,r4,0x2af8
0000bf88	addi	r6,r6,0x2d64
0000bf8c	bl	___eprintf
0000bf90	cmpwi	cr7,r24,__mh_dylib_header
0000bf94	bne+	cr7,0xbfb8
0000bf98	addis	r3,r31,__mh_dylib_header
0000bf9c	addis	r4,r31,__mh_dylib_header
0000bfa0	addis	r6,r31,__mh_dylib_header
0000bfa4	li	r5,0x252
0000bfa8	addi	r3,r3,0x1690
0000bfac	addi	r4,r4,0x2af8
0000bfb0	addi	r6,r6,0x18f4
0000bfb4	b	0xbf8c
0000bfb8	lwz	r0,0x14(r30)
0000bfbc	li	r29,0x16
0000bfc0	cmplw	cr7,r0,r28
0000bfc4	ble	cr7,0xc1b0
0000bfc8	lwz	r2,0x18(r30)
0000bfcc	mulli	r27,r28,0x1c
0000bfd0	lwzx	r29,r2,r27
0000bfd4	bl	0xd140	; symbol stub for: _mach_thread_self
0000bfd8	cmpw	cr7,r29,r3
0000bfdc	bne	cr7,0xc04c
0000bfe0	lwz	r2,0x18(r30)
0000bfe4	add	r2,r27,r2
0000bfe8	lwz	r0,0x4(r2)
0000bfec	cmpwi	cr7,r0,__mh_dylib_header
0000bff0	bne	cr7,0xc04c
0000bff4	or	r4,r28,r28
0000bff8	or	r3,r30,r30
0000bffc	bl	_ClearThreadStateAndBacktraceAtIndex
0000c000	lwz	r0,0x18(r30)
0000c004	add	r4,r27,r0
0000c008	lwz	r2,0xc(r4)
0000c00c	cmpwi	cr7,r2,__mh_dylib_header
0000c010	beq+	cr7,0xc034
0000c014	addis	r3,r31,__mh_dylib_header
0000c018	addis	r4,r31,__mh_dylib_header
0000c01c	addis	r6,r31,__mh_dylib_header
0000c020	li	r5,0x264
0000c024	addi	r3,r3,0x1690
0000c028	addi	r4,r4,0x2af8
0000c02c	addi	r6,r6,0x2d38
0000c030	b	0xbf8c
0000c034	addi	r5,r4,0x10
0000c038	addi	r3,r4,0x8
0000c03c	addi	r4,r4,0xc
0000c040	bl	_QBTCreateThreadStateSelf
0000c044	or.	r29,r3,r3
0000c048	bne	0xc1b0
0000c04c	or	r4,r28,r28
0000c050	or	r3,r30,r30
0000c054	li	r5,__mh_dylib_header
0000c058	li	r6,__mh_dylib_header
0000c05c	li	r7,__mh_dylib_header
0000c060	li	r8,__mh_dylib_header
0000c064	bl	_QCRGetThreadStateAtIndex
0000c068	or.	r29,r3,r3
0000c06c	bne	0xc1b0
0000c070	lwz	r9,0x18(r30)
0000c074	add	r2,r9,r27
0000c078	lwz	r0,0x14(r2)
0000c07c	cmpwi	cr7,r0,__mh_dylib_header
0000c080	bne	cr7,0xc1e4
0000c084	li	r22,__mh_dylib_header
0000c088	li	r23,0x32
0000c08c	addis	r21,r31,__mh_dylib_header
0000c090	addis	r20,r31,__mh_dylib_header
0000c094	or	r3,r23,r23
0000c098	li	r4,0x28
0000c09c	bl	0xcfe0	; symbol stub for: _calloc
0000c0a0	or.	r28,r3,r3
0000c0a4	bne	0xc0b8
0000c0a8	li	r29,0xc
0000c0ac	li	r25,__mh_dylib_header
0000c0b0	cmpwi	cr4,r29,__mh_dylib_header
0000c0b4	b	0xc198
0000c0b8	lwz	r2,0x18(r30)
0000c0bc	lwz	r3,__mh_dylib_header(r30)
0000c0c0	li	r11,__mh_dylib_header
0000c0c4	li	r12,__mh_dylib_header
0000c0c8	lwz	r7,0x8(r30)
0000c0cc	lwz	r8,0xc(r30)
0000c0d0	addi	r0,r1,0x58
0000c0d4	li	r9,__mh_dylib_header
0000c0d8	li	r10,__mh_dylib_header
0000c0dc	add	r2,r27,r2
0000c0e0	lwz	r6,0x10(r2)
0000c0e4	lwz	r4,0x8(r2)
0000c0e8	lwz	r5,0xc(r2)
0000c0ec	stw	r11,0x38(r1)
0000c0f0	stw	r12,0x3c(r1)
0000c0f4	stw	r0,0x48(r1)
0000c0f8	stw	r28,0x40(r1)
0000c0fc	stw	r23,0x44(r1)
0000c100	bl	_QBacktraceMachThreadState
0000c104	cmpwi	cr4,r3,__mh_dylib_header
0000c108	or	r29,r3,r3
0000c10c	bne	cr4,0xc194
0000c110	lwz	r0,0x58(r1)
0000c114	cmplw	cr7,r23,r0
0000c118	blt	cr7,0xc168
0000c11c	lwz	r0,0x18(r30)
0000c120	add	r9,r27,r0
0000c124	lwz	r2,0x14(r9)
0000c128	cmpwi	cr7,r2,__mh_dylib_header
0000c12c	beq+	cr7,0xc148
0000c130	addis	r6,r31,__mh_dylib_header
0000c134	addi	r3,r21,0x1690
0000c138	addi	r4,r20,0x2af8
0000c13c	li	r5,0x298
0000c140	addi	r6,r6,0x2d7c
0000c144	b	0xbf8c
0000c148	stw	r28,0x14(r9)
0000c14c	li	r25,0x1
0000c150	li	r28,__mh_dylib_header
0000c154	lwz	r2,0x18(r30)
0000c158	lwz	r0,0x58(r1)
0000c15c	add	r2,r2,r27
0000c160	stw	r0,0x18(r2)
0000c164	b	0xc198
0000c168	addi	r22,r22,0x1
0000c16c	cmpwi	cr7,r22,0xa
0000c170	bgt	cr7,0xc17c
0000c174	or	r23,r0,r0
0000c178	b	0xc194
0000c17c	addis	r6,r31,__mh_dylib_header
0000c180	addi	r3,r21,0x1690
0000c184	addi	r4,r20,0x2af8
0000c188	li	r5,0x2a2
0000c18c	addi	r6,r6,0x1ae0
0000c190	b	0xbf8c
0000c194	li	r25,__mh_dylib_header
0000c198	or	r3,r28,r28
0000c19c	bl	0xd0c0	; symbol stub for: _free
0000c1a0	bne	cr4,0xc1b0
0000c1a4	cmpwi	cr7,r25,__mh_dylib_header
0000c1a8	beq	cr7,0xc094
0000c1ac	b	0xc1e0
0000c1b0	or	r3,r30,r30
0000c1b4	bl	_QCRIsValid
0000c1b8	cmpwi	cr7,r3,__mh_dylib_header
0000c1bc	bne+	cr7,0xc230
0000c1c0	addis	r3,r31,__mh_dylib_header
0000c1c4	addis	r4,r31,__mh_dylib_header
0000c1c8	addis	r6,r31,__mh_dylib_header
0000c1cc	li	r5,0x2b8
0000c1d0	addi	r3,r3,0x1690
0000c1d4	addi	r4,r4,0x2af8
0000c1d8	addi	r6,r6,0x2b30
0000c1dc	b	0xbf8c
0000c1e0	lwz	r9,0x18(r30)
0000c1e4	add	r2,r9,r27
0000c1e8	li	r29,__mh_dylib_header
0000c1ec	lwz	r0,0x14(r2)
0000c1f0	stw	r0,__mh_dylib_header(r26)
0000c1f4	lwz	r2,0x18(r30)
0000c1f8	add	r2,r2,r27
0000c1fc	lwz	r0,0x18(r2)
0000c200	stw	r0,__mh_dylib_header(r24)
0000c204	lwz	r2,__mh_dylib_header(r26)
0000c208	cmpwi	cr7,r2,__mh_dylib_header
0000c20c	bne	cr7,0xc1b0
0000c210	addis	r3,r31,__mh_dylib_header
0000c214	addis	r4,r31,__mh_dylib_header
0000c218	addis	r6,r31,__mh_dylib_header
0000c21c	li	r5,0x2b7
0000c220	addi	r3,r3,0x1690
0000c224	addi	r4,r4,0x2af8
0000c228	addi	r6,r6,0x2da8
0000c22c	b	0xbf8c
0000c230	addi	r1,r1,0xa0
0000c234	or	r3,r29,r29
0000c238	lwz	r0,0x8(r1)
0000c23c	lwz	r11,0x4(r1)
0000c240	lmw	r20,0xffd0(r1)
0000c244	mtspr	lr,r0
0000c248	mtocrf	0x08,r11
0000c24c	blr
_QCRGetCrashedThreadIndex:
0000c250	mfspr	r0,lr
0000c254	stmw	r30,0xfff8(r1)
0000c258	or	r30,r3,r3
0000c25c	bcl	20,31,0xc260
0000c260	mfspr	r31,lr
0000c264	stw	r0,0x8(r1)
0000c268	stwu	r1,0xffb0(r1)
0000c26c	bl	_QCRIsValid
0000c270	cmpwi	cr7,r3,__mh_dylib_header
0000c274	bne+	cr7,0xc298
0000c278	addis	r3,r31,__mh_dylib_header
0000c27c	addis	r4,r31,__mh_dylib_header
0000c280	addis	r6,r31,__mh_dylib_header
0000c284	li	r5,0x2c0
0000c288	addi	r3,r3,0x1350
0000c28c	addi	r4,r4,0x27b8
0000c290	addi	r6,r6,0x27f0
0000c294	bl	___eprintf
0000c298	addi	r1,r1,0x50
0000c29c	lwz	r3,0x1c(r30)
0000c2a0	lwz	r0,0x8(r1)
0000c2a4	lmw	r30,0xfff8(r1)
0000c2a8	mtspr	lr,r0
0000c2ac	blr
_QCRBacktrace:
0000c2b0	mfspr	r0,lr
0000c2b4	stmw	r29,0xfff4(r1)
0000c2b8	or	r29,r3,r3
0000c2bc	or	r30,r4,r4
0000c2c0	stw	r0,0x8(r1)
0000c2c4	stwu	r1,0xffa0(r1)
0000c2c8	li	r0,__mh_dylib_header
0000c2cc	addi	r3,r1,0x38
0000c2d0	stw	r0,0x38(r1)
0000c2d4	bl	_QCRCreateFromSelf
0000c2d8	cmpwi	cr7,r3,__mh_dylib_header
0000c2dc	bne	cr7,0xc370
0000c2e0	lwz	r3,0x38(r1)
0000c2e4	bl	_QCRIsValid
0000c2e8	cmpwi	cr7,r3,__mh_dylib_header
0000c2ec	beq	cr7,0xc370
0000c2f0	lwz	r3,0x38(r1)
0000c2f4	addi	r5,r1,0x3c
0000c2f8	addi	r6,r1,0x40
0000c2fc	lwz	r4,0x1c(r3)
0000c300	bl	_QCRGetBacktraceAtIndex
0000c304	cmpwi	cr7,r3,__mh_dylib_header
0000c308	bne	cr7,0xc370
0000c30c	lwz	r2,0x38(r1)
0000c310	lwz	r3,0x10(r2)
0000c314	bl	_QMOImageIs64Bit
0000c318	lwz	r9,0x40(r1)
0000c31c	lwz	r2,0x3c(r1)
0000c320	or	r3,r29,r29
0000c324	li	r11,__mh_dylib_header
0000c328	cmpwi	cr7,r9,__mh_dylib_header
0000c32c	addi	r9,r9,0x1
0000c330	addi	r2,r2,0x4
0000c334	mtspr	ctr,r9
0000c338	bne+	cr7,0xc35c
0000c33c	li	r0,0x1
0000c340	mtspr	ctr,r0
0000c344	b	0xc35c
0000c348	lwz	r0,__mh_dylib_header(r2)
0000c34c	addi	r11,r11,0x1
0000c350	addi	r2,r2,0x28
0000c354	stw	r0,__mh_dylib_header(r3)
0000c358	addi	r3,r3,0x4
0000c35c	bdz	0xc368
0000c360	cmplw	cr7,r11,r30
0000c364	blt	cr7,0xc348
0000c368	or	r3,r11,r11
0000c36c	b	0xc374
0000c370	li	r3,__mh_dylib_header
0000c374	addi	r1,r1,0x60
0000c378	lwz	r0,0x8(r1)
0000c37c	lmw	r29,0xfff4(r1)
0000c380	mtspr	lr,r0
0000c384	blr
_QCRDropboxFormatBacktrace:
0000c388	mfspr	r0,lr
0000c38c	stmw	r19,0xffcc(r1)
0000c390	or	r25,r4,r4
0000c394	mfcr	r2
0000c398	bcl	20,31,0xc39c
0000c39c	stw	r0,0x8(r1)
0000c3a0	or	r26,r5,r5
0000c3a4	or	r30,r3,r3
0000c3a8	mfspr	r31,lr
0000c3ac	stw	r2,0x4(r1)
0000c3b0	stwu	r1,0xff30(r1)
0000c3b4	bl	_QCRIsValid
0000c3b8	cmpwi	cr7,r3,__mh_dylib_header
0000c3bc	beq	cr7,0xc590
0000c3c0	cmpwi	cr7,r25,__mh_dylib_header
0000c3c4	beq	cr7,0xc590
0000c3c8	cmpwi	cr7,r26,__mh_dylib_header
0000c3cc	beq	cr7,0xc590
0000c3d0	lwz	r4,0x1c(r30)
0000c3d4	or	r3,r30,r30
0000c3d8	addi	r5,r1,0x38
0000c3dc	addi	r6,r1,0x3c
0000c3e0	bl	_QCRGetBacktraceAtIndex
0000c3e4	cmpwi	cr7,r3,__mh_dylib_header
0000c3e8	bne	cr7,0xc590
0000c3ec	lwz	r11,0x3c(r1)
0000c3f0	lwz	r2,0x38(r1)
0000c3f4	li	r24,__mh_dylib_header
0000c3f8	li	r9,__mh_dylib_header
0000c3fc	cmpwi	cr7,r11,__mh_dylib_header
0000c400	addi	r0,r11,0x1
0000c404	addi	r2,r2,0xffe8
0000c408	mtspr	ctr,r0
0000c40c	bne+	cr7,0xc434
0000c410	li	r10,0x1
0000c414	mtspr	ctr,r10
0000c418	b	0xc434
0000c41c	lwz	r0,__mh_dylib_header(r2)
0000c420	andi.	r10,r0,0x4
0000c424	beq	0xc42c
0000c428	or	r24,r9,r9
0000c42c	addi	r9,r9,0x1
0000c430	addi	r2,r2,0x28
0000c434	bdnz	0xc41c
0000c438	mulli	r28,r24,0x28
0000c43c	or	r27,r24,r24
0000c440	li	r29,__mh_dylib_header
0000c444	addis	r20,r31,__mh_dylib_header
0000c448	addis	r23,r31,__mh_dylib_header
0000c44c	addis	r22,r31,__mh_dylib_header
0000c450	addis	r19,r31,__mh_dylib_header
0000c454	addis	r21,r31,__mh_dylib_header
0000c458	b	0xc57c
0000c45c	lwz	r0,0x38(r1)
0000c460	add	r2,r0,r28
0000c464	lwz	r30,0x18(r2)
0000c468	cmpwi	cr4,r30,__mh_dylib_header
0000c46c	bne	cr4,0xc478
0000c470	stb	r30,0x40(r1)
0000c474	b	0xc4b8
0000c478	or	r3,r30,r30
0000c47c	bl	0xd3a0	; symbol stub for: _strlen
0000c480	cmplwi	cr7,r3,0x1e
0000c484	ble	cr7,0xc4a4
0000c488	add	r6,r30,r3
0000c48c	li	r4,0x20
0000c490	addi	r3,r1,0x40
0000c494	addi	r5,r20,0x2954
0000c498	addi	r6,r6,0xffed
0000c49c	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c4a0	b	0xc4b4
0000c4a4	or	r4,r30,r30
0000c4a8	addi	r3,r1,0x40
0000c4ac	li	r5,0x20
0000c4b0	bl	0xd380	; symbol stub for: _strlcpy
0000c4b4	lwz	r0,0x38(r1)
0000c4b8	add	r2,r28,r0
0000c4bc	lwz	r30,0x14(r2)
0000c4c0	cmpwi	cr7,r30,__mh_dylib_header
0000c4c4	bne	cr7,0xc4d8
0000c4c8	addis	r2,r31,__mh_dylib_header
0000c4cc	stb	r30,0x60(r1)
0000c4d0	addi	r30,r2,0x1974
0000c4d4	b	0xc4f0
0000c4d8	lwz	r6,0x1c(r2)
0000c4dc	lwz	r7,0x20(r2)
0000c4e0	addi	r3,r1,0x60
0000c4e4	li	r4,0x20
0000c4e8	addi	r5,r23,0x2958
0000c4ec	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c4f0	beq	cr4,0xc514
0000c4f4	cmpw	cr6,r29,r26
0000c4f8	beq	cr6,0xc518
0000c4fc	add	r3,r25,r29
0000c500	subf	r4,r29,r26
0000c504	addi	r5,r22,0x2960
0000c508	addi	r6,r1,0x40
0000c50c	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c510	add	r29,r29,r3
0000c514	cmpw	cr6,r29,r26
0000c518	lbz	r0,__mh_dylib_header(r30)
0000c51c	cmpwi	cr7,r0,__mh_dylib_header
0000c520	beq	cr7,0xc548
0000c524	beq	cr6,0xc570
0000c528	add	r3,r25,r29
0000c52c	subf	r4,r29,r26
0000c530	or	r6,r30,r30
0000c534	addi	r5,r19,0x2968
0000c538	addi	r7,r1,0x60
0000c53c	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c540	add	r29,r29,r3
0000c544	cmpw	cr6,r29,r26
0000c548	beq	cr6,0xc570
0000c54c	lwz	r2,0x38(r1)
0000c550	add	r3,r25,r29
0000c554	subf	r4,r29,r26
0000c558	addi	r5,r21,0x2970
0000c55c	add	r2,r28,r2
0000c560	lwz	r6,__mh_dylib_header(r2)
0000c564	lwz	r7,0x4(r2)
0000c568	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c56c	add	r29,r29,r3
0000c570	lwz	r11,0x3c(r1)
0000c574	addi	r27,r27,0x1
0000c578	addi	r28,r28,0x28
0000c57c	cmplw	cr7,r27,r11
0000c580	blt	cr7,0xc45c
0000c584	subf	r2,r24,r27
0000c588	addi	r3,r2,0xffff
0000c58c	b	0xc594
0000c590	li	r3,__mh_dylib_header
0000c594	addi	r1,r1,0xd0
0000c598	lwz	r0,0x8(r1)
0000c59c	lwz	r11,0x4(r1)
0000c5a0	lmw	r19,0xffcc(r1)
0000c5a4	mtspr	lr,r0
0000c5a8	mtocrf	0x08,r11
0000c5ac	blr
_QCRPrintBacktraces:
0000c5b0	mfspr	r0,lr
0000c5b4	stmw	r17,0xffc4(r1)
0000c5b8	or	r23,r4,r4
0000c5bc	mfcr	r2
0000c5c0	bcl	20,31,0xc5c4
0000c5c4	stw	r0,0x8(r1)
0000c5c8	or	r22,r3,r3
0000c5cc	mfspr	r31,lr
0000c5d0	stw	r2,0x4(r1)
0000c5d4	stwu	r1,0xff20(r1)
0000c5d8	bl	_QCRIsValid
0000c5dc	cmpwi	cr7,r3,__mh_dylib_header
0000c5e0	bne+	cr7,0xc604
0000c5e4	addis	r3,r31,__mh_dylib_header
0000c5e8	addis	r4,r31,__mh_dylib_header
0000c5ec	addis	r6,r31,__mh_dylib_header
0000c5f0	li	r5,0x33f
0000c5f4	addi	r3,r3,0xfec
0000c5f8	addi	r4,r4,0x2454
0000c5fc	addi	r6,r6,0x248c
0000c600	b	0xc628
0000c604	cmpwi	cr7,r23,__mh_dylib_header
0000c608	bne+	cr7,0xc62c
0000c60c	addis	r3,r31,__mh_dylib_header
0000c610	addis	r4,r31,__mh_dylib_header
0000c614	addis	r6,r31,__mh_dylib_header
0000c618	li	r5,0x340
0000c61c	addi	r3,r3,0xfec
0000c620	addi	r4,r4,0x2454
0000c624	addi	r6,r6,0x2754
0000c628	bl	___eprintf
0000c62c	lwz	r3,0x10(r22)
0000c630	li	r25,__mh_dylib_header
0000c634	addis	r19,r31,__mh_dylib_header
0000c638	addis	r17,r31,__mh_dylib_header
0000c63c	addis	r18,r31,__mh_dylib_header
0000c640	addis	r20,r31,__mh_dylib_header
0000c644	addis	r21,r31,__mh_dylib_header
0000c648	bl	_QMOImageIs64Bit
0000c64c	cmpwi	cr4,r3,__mh_dylib_header
0000c650	b	0xc820
0000c654	lwz	r0,0x1c(r22)
0000c658	cmpw	cr7,r25,r0
0000c65c	bne	cr7,0xc66c
0000c660	addis	r2,r31,__mh_dylib_header
0000c664	addi	r6,r2,0x2760
0000c668	b	0xc670
0000c66c	addi	r6,r19,0x174c
0000c670	or	r5,r25,r25
0000c674	addi	r4,r17,0x276c
0000c678	or	r3,r23,r23
0000c67c	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000c680	or	r3,r22,r22
0000c684	or	r4,r25,r25
0000c688	addi	r5,r1,0x48
0000c68c	addi	r6,r1,0x4c
0000c690	bl	_QCRGetBacktraceAtIndex
0000c694	cmpwi	cr7,r3,__mh_dylib_header
0000c698	bne	cr7,0xc810
0000c69c	lwz	r0,0x1c(r22)
0000c6a0	cmpw	cr7,r25,r0
0000c6a4	beq	cr7,0xc6b4
0000c6a8	lwz	r9,0x4c(r1)
0000c6ac	li	r10,__mh_dylib_header
0000c6b0	b	0xc700
0000c6b4	lwz	r9,0x4c(r1)
0000c6b8	lwz	r2,0x48(r1)
0000c6bc	li	r10,__mh_dylib_header
0000c6c0	li	r11,__mh_dylib_header
0000c6c4	cmpwi	cr7,r9,__mh_dylib_header
0000c6c8	addi	r0,r9,0x1
0000c6cc	addi	r2,r2,0xffe8
0000c6d0	mtspr	ctr,r0
0000c6d4	bne+	cr7,0xc6fc
0000c6d8	li	r8,0x1
0000c6dc	mtspr	ctr,r8
0000c6e0	b	0xc6fc
0000c6e4	lwz	r0,__mh_dylib_header(r2)
0000c6e8	andi.	r8,r0,0x4
0000c6ec	beq	0xc6f4
0000c6f0	or	r10,r11,r11
0000c6f4	addi	r11,r11,0x1
0000c6f8	addi	r2,r2,0x28
0000c6fc	bdnz	0xc6e4
0000c700	mulli	r29,r10,0x28
0000c704	or	r28,r10,r10
0000c708	li	r26,__mh_dylib_header
0000c70c	b	0xc808
0000c710	lwz	r0,0x48(r1)
0000c714	add	r2,r0,r29
0000c718	lwz	r30,0x18(r2)
0000c71c	cmpwi	cr7,r30,__mh_dylib_header
0000c720	bne	cr7,0xc730
0000c724	addi	r24,r1,0x50
0000c728	stb	r30,0x50(r1)
0000c72c	b	0xc778
0000c730	or	r3,r30,r30
0000c734	bl	0xd3a0	; symbol stub for: _strlen
0000c738	cmplwi	cr7,r3,0x1e
0000c73c	ble	cr7,0xc760
0000c740	add	r6,r30,r3
0000c744	addi	r24,r1,0x50
0000c748	li	r4,0x20
0000c74c	addi	r5,r18,0x277c
0000c750	addi	r6,r6,0xffe5
0000c754	or	r3,r24,r24
0000c758	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c75c	b	0xc774
0000c760	addi	r24,r1,0x50
0000c764	or	r4,r30,r30
0000c768	li	r5,0x20
0000c76c	or	r3,r24,r24
0000c770	bl	0xd380	; symbol stub for: _strlcpy
0000c774	lwz	r0,0x48(r1)
0000c778	add	r2,r29,r0
0000c77c	lwz	r30,0x14(r2)
0000c780	cmpwi	cr7,r30,__mh_dylib_header
0000c784	bne	cr7,0xc798
0000c788	stb	r30,0x70(r1)
0000c78c	addi	r27,r1,0x70
0000c790	addi	r30,r19,0x174c
0000c794	b	0xc7b8
0000c798	lwz	r6,0x1c(r2)
0000c79c	lwz	r7,0x20(r2)
0000c7a0	addi	r27,r1,0x70
0000c7a4	li	r4,0x20
0000c7a8	addi	r5,r20,0x2784
0000c7ac	or	r3,r27,r27
0000c7b0	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c7b4	lwz	r0,0x48(r1)
0000c7b8	add	r2,r0,r29
0000c7bc	lwz	r8,__mh_dylib_header(r2)
0000c7c0	lwz	r9,0x4(r2)
0000c7c4	beq	cr4,0xc7d0
0000c7c8	li	r7,0x12
0000c7cc	b	0xc7dc
0000c7d0	li	r2,__mh_dylib_header
0000c7d4	li	r7,0xa
0000c7d8	or	r8,r2,r2
0000c7dc	or	r5,r26,r26
0000c7e0	or	r6,r24,r24
0000c7e4	stw	r27,0x38(r1)
0000c7e8	or	r10,r30,r30
0000c7ec	or	r3,r23,r23
0000c7f0	addi	r4,r21,0x278c
0000c7f4	addi	r28,r28,0x1
0000c7f8	addi	r26,r26,0x1
0000c7fc	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000c800	addi	r29,r29,0x28
0000c804	lwz	r9,0x4c(r1)
0000c808	cmplw	cr7,r28,r9
0000c80c	blt	cr7,0xc710
0000c810	li	r3,0xa
0000c814	or	r4,r23,r23
0000c818	addi	r25,r25,0x1
0000c81c	bl	0xd0a0	; symbol stub for: _fputc
0000c820	lwz	r0,0x14(r22)
0000c824	cmplw	cr7,r25,r0
0000c828	blt	cr7,0xc654
0000c82c	addi	r1,r1,0xe0
0000c830	lwz	r0,0x8(r1)
0000c834	lwz	r11,0x4(r1)
0000c838	lmw	r17,0xffc4(r1)
0000c83c	mtspr	lr,r0
0000c840	mtocrf	0x08,r11
0000c844	blr
_QCRPrintThreadState:
0000c848	mfspr	r0,lr
0000c84c	stmw	r24,0xffe0(r1)
0000c850	or	r28,r4,r4
0000c854	bcl	20,31,0xc858
0000c858	or	r30,r3,r3
0000c85c	mfspr	r31,lr
0000c860	stw	r0,0x8(r1)
0000c864	stwu	r1,0xff50(r1)
0000c868	bl	_QCRIsValid
0000c86c	cmpwi	cr7,r3,__mh_dylib_header
0000c870	bne+	cr7,0xc894
0000c874	addis	r3,r31,__mh_dylib_header
0000c878	addis	r4,r31,__mh_dylib_header
0000c87c	addis	r6,r31,__mh_dylib_header
0000c880	li	r5,0x48e
0000c884	addi	r3,r3,0xd58
0000c888	addi	r4,r4,0x21c0
0000c88c	addi	r6,r6,0x21f8
0000c890	b	0xc8b8
0000c894	cmpwi	cr7,r28,__mh_dylib_header
0000c898	bne+	cr7,0xc8bc
0000c89c	addis	r3,r31,__mh_dylib_header
0000c8a0	addis	r4,r31,__mh_dylib_header
0000c8a4	addis	r6,r31,__mh_dylib_header
0000c8a8	li	r5,0x48f
0000c8ac	addi	r3,r3,0xd58
0000c8b0	addi	r4,r4,0x21c0
0000c8b4	addi	r6,r6,0x24c0
0000c8b8	bl	___eprintf
0000c8bc	lwz	r4,0x1c(r30)
0000c8c0	or	r3,r30,r30
0000c8c4	li	r5,__mh_dylib_header
0000c8c8	li	r6,__mh_dylib_header
0000c8cc	li	r7,__mh_dylib_header
0000c8d0	li	r8,__mh_dylib_header
0000c8d4	bl	_QCRGetThreadStateAtIndex
0000c8d8	cmpwi	cr7,r3,__mh_dylib_header
0000c8dc	bne	cr7,0xccdc
0000c8e0	lwz	r6,0x1c(r30)
0000c8e4	addis	r5,r31,__mh_dylib_header
0000c8e8	addi	r3,r1,0x48
0000c8ec	li	r4,0x20
0000c8f0	addi	r5,r5,0x2510
0000c8f4	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000c8f8	lwz	r0,0x8(r30)
0000c8fc	cmpwi	cr7,r0,0x12
0000c900	bne	cr7,0xccbc
0000c904	lwz	r2,0x1c(r30)
0000c908	lwz	r0,0x18(r30)
0000c90c	mulli	r2,r2,0x1c
0000c910	add	r2,r2,r0
0000c914	lwz	r0,0x8(r2)
0000c918	cmpwi	cr7,r0,0x1
0000c91c	beq	cr7,0xc948
0000c920	cmpwi	cr7,r0,0x5
0000c924	beq	cr7,0xcaec
0000c928	addis	r3,r31,__mh_dylib_header
0000c92c	addis	r4,r31,__mh_dylib_header
0000c930	addis	r6,r31,__mh_dylib_header
0000c934	li	r5,0x4a8
0000c938	addi	r3,r3,0xd58
0000c93c	addi	r4,r4,0x21c0
0000c940	addi	r6,r6,0x11a8
0000c944	b	0xc8b8
0000c948	or	r3,r30,r30
0000c94c	bl	_QCRIsValid
0000c950	cmpwi	cr7,r3,__mh_dylib_header
0000c954	bne+	cr7,0xc978
0000c958	addis	r3,r31,__mh_dylib_header
0000c95c	addis	r4,r31,__mh_dylib_header
0000c960	addis	r6,r31,__mh_dylib_header
0000c964	li	r5,0x3a8
0000c968	addi	r3,r3,0xd58
0000c96c	addi	r4,r4,0x21c0
0000c970	addi	r6,r6,0x21f8
0000c974	b	0xc8b8
0000c978	lwz	r0,0x1c(r30)
0000c97c	cmpwi	cr7,r0,0xffff
0000c980	bne+	cr7,0xc9a4
0000c984	addis	r3,r31,__mh_dylib_header
0000c988	addis	r4,r31,__mh_dylib_header
0000c98c	addis	r6,r31,__mh_dylib_header
0000c990	li	r5,0x3a9
0000c994	addi	r3,r3,0xd58
0000c998	addi	r4,r4,0x21c0
0000c99c	addi	r6,r6,0x251c
0000c9a0	b	0xc8b8
0000c9a4	mulli	r0,r0,0x1c
0000c9a8	lwz	r2,0x18(r30)
0000c9ac	add	r3,r0,r2
0000c9b0	lwz	r27,0xc(r3)
0000c9b4	cmpwi	cr7,r27,__mh_dylib_header
0000c9b8	bne+	cr7,0xc9dc
0000c9bc	addis	r3,r31,__mh_dylib_header
0000c9c0	addis	r4,r31,__mh_dylib_header
0000c9c4	addis	r6,r31,__mh_dylib_header
0000c9c8	li	r5,0x3aa
0000c9cc	addi	r3,r3,0xd58
0000c9d0	addi	r4,r4,0x21c0
0000c9d4	addi	r6,r6,0x2548
0000c9d8	b	0xc8b8
0000c9dc	lwz	r0,0x8(r3)
0000c9e0	cmpwi	cr7,r0,0x1
0000c9e4	beq+	cr7,0xca08
0000c9e8	addis	r3,r31,__mh_dylib_header
0000c9ec	addis	r4,r31,__mh_dylib_header
0000c9f0	addis	r6,r31,__mh_dylib_header
0000c9f4	li	r5,0x3ab
0000c9f8	addi	r3,r3,0xd58
0000c9fc	addi	r4,r4,0x21c0
0000ca00	addi	r6,r6,0x2580
0000ca04	b	0xc8b8
0000ca08	lwz	r0,0x10(r3)
0000ca0c	cmpwi	cr7,r0,0xa0
0000ca10	bne	cr7,0xccdc
0000ca14	addis	r4,r31,__mh_dylib_header
0000ca18	addi	r5,r1,0x48
0000ca1c	or	r3,r28,r28
0000ca20	addi	r29,r27,0x8
0000ca24	addi	r4,r4,0x25cc
0000ca28	li	r30,__mh_dylib_header
0000ca2c	addi	r26,r1,0x68
0000ca30	addis	r25,r31,__mh_dylib_header
0000ca34	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000ca38	lwz	r5,__mh_dylib_header(r27)
0000ca3c	lwz	r6,0x4(r27)
0000ca40	addis	r4,r31,__mh_dylib_header
0000ca44	or	r3,r28,r28
0000ca48	lwz	r7,0x9c(r27)
0000ca4c	addi	r4,r4,0x25f0
0000ca50	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000ca54	lwz	r5,0x8c(r27)
0000ca58	lwz	r6,0x90(r27)
0000ca5c	addis	r4,r31,__mh_dylib_header
0000ca60	or	r3,r28,r28
0000ca64	lwz	r7,0x94(r27)
0000ca68	lwz	r8,0x98(r27)
0000ca6c	addis	r27,r31,__mh_dylib_header
0000ca70	addi	r4,r4,0x262c
0000ca74	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000ca78	andi.	r0,r30,0x3
0000ca7c	bne	0xca8c
0000ca80	li	r3,0x20
0000ca84	or	r4,r28,r28
0000ca88	bl	0xd0a0	; symbol stub for: _fputc
0000ca8c	li	r4,0x20
0000ca90	addi	r5,r25,0x2664
0000ca94	or	r6,r30,r30
0000ca98	or	r3,r26,r26
0000ca9c	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000caa0	lwz	r6,__mh_dylib_header(r29)
0000caa4	or	r3,r28,r28
0000caa8	addi	r4,r27,0x2668
0000caac	or	r5,r26,r26
0000cab0	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000cab4	srawi	r0,r30,2
0000cab8	addze	r0,r0
0000cabc	rlwinm	r0,r0,2,0,29
0000cac0	subf	r0,r0,r30
0000cac4	cmpwi	cr7,r0,0x3
0000cac8	bne	cr7,0xcad8
0000cacc	li	r3,0xa
0000cad0	or	r4,r28,r28
0000cad4	bl	0xd0a0	; symbol stub for: _fputc
0000cad8	cmpwi	cr7,r30,0x1f
0000cadc	addi	r29,r29,0x4
0000cae0	addi	r30,r30,0x1
0000cae4	bne	cr7,0xca78
0000cae8	b	0xccac
0000caec	or	r3,r30,r30
0000caf0	bl	_QCRIsValid
0000caf4	cmpwi	cr7,r3,__mh_dylib_header
0000caf8	bne+	cr7,0xcb1c
0000cafc	addis	r3,r31,__mh_dylib_header
0000cb00	addis	r4,r31,__mh_dylib_header
0000cb04	addis	r6,r31,__mh_dylib_header
0000cb08	li	r5,0x3e6
0000cb0c	addi	r3,r3,0xd58
0000cb10	addi	r4,r4,0x21c0
0000cb14	addi	r6,r6,0x21f8
0000cb18	b	0xc8b8
0000cb1c	lwz	r0,0x1c(r30)
0000cb20	cmpwi	cr7,r0,0xffff
0000cb24	bne+	cr7,0xcb48
0000cb28	addis	r3,r31,__mh_dylib_header
0000cb2c	addis	r4,r31,__mh_dylib_header
0000cb30	addis	r6,r31,__mh_dylib_header
0000cb34	li	r5,0x3e7
0000cb38	addi	r3,r3,0xd58
0000cb3c	addi	r4,r4,0x21c0
0000cb40	addi	r6,r6,0x251c
0000cb44	b	0xc8b8
0000cb48	mulli	r0,r0,0x1c
0000cb4c	lwz	r2,0x18(r30)
0000cb50	add	r3,r0,r2
0000cb54	lwz	r27,0xc(r3)
0000cb58	cmpwi	cr7,r27,__mh_dylib_header
0000cb5c	bne+	cr7,0xcb80
0000cb60	addis	r3,r31,__mh_dylib_header
0000cb64	addis	r4,r31,__mh_dylib_header
0000cb68	addis	r6,r31,__mh_dylib_header
0000cb6c	li	r5,0x3e8
0000cb70	addi	r3,r3,0xd58
0000cb74	addi	r4,r4,0x21c0
0000cb78	addi	r6,r6,0x2548
0000cb7c	b	0xc8b8
0000cb80	lwz	r0,0x8(r3)
0000cb84	cmpwi	cr7,r0,0x5
0000cb88	beq+	cr7,0xcbac
0000cb8c	addis	r3,r31,__mh_dylib_header
0000cb90	addis	r4,r31,__mh_dylib_header
0000cb94	addis	r6,r31,__mh_dylib_header
0000cb98	li	r5,0x3e9
0000cb9c	addi	r3,r3,0xd58
0000cba0	addi	r4,r4,0x21c0
0000cba4	addi	r6,r6,0x2674
0000cba8	b	0xc8b8
0000cbac	lwz	r0,0x10(r3)
0000cbb0	cmpwi	cr7,r0,0x130
0000cbb4	bne	cr7,0xccdc
0000cbb8	addis	r4,r31,__mh_dylib_header
0000cbbc	addi	r5,r1,0x48
0000cbc0	or	r3,r28,r28
0000cbc4	addi	r29,r27,0x10
0000cbc8	addi	r4,r4,0x25cc
0000cbcc	li	r30,__mh_dylib_header
0000cbd0	addi	r26,r1,0x68
0000cbd4	addis	r25,r31,__mh_dylib_header
0000cbd8	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000cbdc	lwz	r5,__mh_dylib_header(r27)
0000cbe0	lwz	r6,0x4(r27)
0000cbe4	addis	r4,r31,__mh_dylib_header
0000cbe8	or	r3,r28,r28
0000cbec	lwz	r7,0x8(r27)
0000cbf0	lwz	r8,0xc(r27)
0000cbf4	addis	r24,r31,__mh_dylib_header
0000cbf8	lwz	r9,0x12c(r27)
0000cbfc	addi	r4,r4,0x26c0
0000cc00	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000cc04	lwz	r11,0x124(r27)
0000cc08	lwz	r6,0x114(r27)
0000cc0c	addis	r4,r31,__mh_dylib_header
0000cc10	or	r3,r28,r28
0000cc14	lwz	r7,0x118(r27)
0000cc18	lwz	r8,0x11c(r27)
0000cc1c	lwz	r9,0x120(r27)
0000cc20	lwz	r12,0x128(r27)
0000cc24	addi	r4,r4,0x270c
0000cc28	lwz	r5,0x110(r27)
0000cc2c	or	r10,r11,r11
0000cc30	stw	r12,0x38(r1)
0000cc34	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000cc38	andi.	r0,r30,0x3
0000cc3c	bne	0xcc4c
0000cc40	li	r3,0x20
0000cc44	or	r4,r28,r28
0000cc48	bl	0xd0a0	; symbol stub for: _fputc
0000cc4c	li	r4,0x20
0000cc50	addi	r5,r25,0x2664
0000cc54	or	r6,r30,r30
0000cc58	or	r3,r26,r26
0000cc5c	bl	0xd300	; symbol stub for: _snprintf$LDBL128
0000cc60	lwz	r6,__mh_dylib_header(r29)
0000cc64	lwz	r7,0x4(r29)
0000cc68	or	r3,r28,r28
0000cc6c	addi	r4,r24,0x2754
0000cc70	or	r5,r26,r26
0000cc74	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000cc78	srawi	r0,r30,2
0000cc7c	addze	r0,r0
0000cc80	rlwinm	r0,r0,2,0,29
0000cc84	subf	r0,r0,r30
0000cc88	cmpwi	cr7,r0,0x3
0000cc8c	bne	cr7,0xcc9c
0000cc90	li	r3,0xa
0000cc94	or	r4,r28,r28
0000cc98	bl	0xd0a0	; symbol stub for: _fputc
0000cc9c	cmpwi	cr7,r30,0x1f
0000cca0	addi	r29,r29,0x8
0000cca4	addi	r30,r30,0x1
0000cca8	bne	cr7,0xcc38
0000ccac	or	r4,r28,r28
0000ccb0	li	r3,0xa
0000ccb4	bl	0xd0a0	; symbol stub for: _fputc
0000ccb8	b	0xccdc
0000ccbc	addis	r3,r31,__mh_dylib_header
0000ccc0	addis	r4,r31,__mh_dylib_header
0000ccc4	addis	r6,r31,__mh_dylib_header
0000ccc8	li	r5,0x4bd
0000cccc	addi	r3,r3,0xd58
0000ccd0	addi	r4,r4,0x21c0
0000ccd4	addi	r6,r6,0x11a8
0000ccd8	b	0xc8b8
0000ccdc	addi	r1,r1,0xb0
0000cce0	lwz	r0,0x8(r1)
0000cce4	lmw	r24,0xffe0(r1)
0000cce8	mtspr	lr,r0
0000ccec	blr
_QCRPrintImages:
0000ccf0	mfspr	r0,lr
0000ccf4	stmw	r22,0xffd8(r1)
0000ccf8	or	r25,r4,r4
0000ccfc	bcl	20,31,0xcd00
0000cd00	or	r30,r3,r3
0000cd04	mfspr	r31,lr
0000cd08	stw	r0,0x8(r1)
0000cd0c	stwu	r1,0xff30(r1)
0000cd10	bl	_QCRIsValid
0000cd14	cmpwi	cr7,r3,__mh_dylib_header
0000cd18	bne+	cr7,0xcd3c
0000cd1c	addis	r3,r31,__mh_dylib_header
0000cd20	addis	r4,r31,__mh_dylib_header
0000cd24	addis	r6,r31,__mh_dylib_header
0000cd28	li	r5,0x4d0
0000cd2c	addi	r3,r3,0x8b0
0000cd30	addi	r4,r4,0x1d18
0000cd34	addi	r6,r6,0x1d50
0000cd38	b	0xcd60
0000cd3c	cmpwi	cr7,r25,__mh_dylib_header
0000cd40	bne+	cr7,0xcd64
0000cd44	addis	r3,r31,__mh_dylib_header
0000cd48	addis	r4,r31,__mh_dylib_header
0000cd4c	addis	r6,r31,__mh_dylib_header
0000cd50	li	r5,0x4d1
0000cd54	addi	r3,r3,0x8b0
0000cd58	addi	r4,r4,0x1d18
0000cd5c	addi	r6,r6,0x2018
0000cd60	bl	___eprintf
0000cd64	addis	r3,r31,__mh_dylib_header
0000cd68	li	r4,0x1
0000cd6c	li	r5,0x1b
0000cd70	or	r6,r25,r25
0000cd74	addi	r3,r3,0x22bc
0000cd78	li	r26,0x12
0000cd7c	bl	0xd0e0	; symbol stub for: _fwrite
0000cd80	lwz	r3,0x10(r30)
0000cd84	bl	_QMOImageIs64Bit
0000cd88	cmpwi	cr7,r3,__mh_dylib_header
0000cd8c	bne	cr7,0xcd94
0000cd90	li	r26,0xa
0000cd94	or	r3,r30,r30
0000cd98	addi	r4,r1,0x48
0000cd9c	addi	r5,r1,0x4c
0000cda0	li	r27,__mh_dylib_header
0000cda4	addis	r23,r31,__mh_dylib_header
0000cda8	addis	r22,r31,__mh_dylib_header
0000cdac	bl	_QCRGetImages
0000cdb0	addis	r24,r31,__mh_dylib_header
0000cdb4	b	0xce60
0000cdb8	lwz	r9,0x48(r1)
0000cdbc	rlwinm	r2,r27,2,0,29
0000cdc0	addi	r4,r23,0x12a4
0000cdc4	li	r5,__mh_dylib_header
0000cdc8	addi	r6,r1,0x50
0000cdcc	lwzx	r28,r2,r9
0000cdd0	or	r3,r28,r28
0000cdd4	bl	_QMOImageGetSegmentByName
0000cdd8	cmpwi	cr7,r3,__mh_dylib_header
0000cddc	beq+	cr7,0xce00
0000cde0	addis	r3,r31,__mh_dylib_header
0000cde4	addis	r4,r31,__mh_dylib_header
0000cde8	addis	r6,r31,__mh_dylib_header
0000cdec	li	r5,0x4de
0000cdf0	addi	r3,r3,0x8b0
0000cdf4	addi	r4,r4,0x1d18
0000cdf8	addi	r6,r6,0x22d8
0000cdfc	b	0xcd60
0000ce00	or	r3,r28,r28
0000ce04	bl	_QMOImageGetFilePath
0000ce08	or.	r30,r3,r3
0000ce0c	bne	0xce14
0000ce10	addi	r30,r22,0x1010
0000ce14	or	r3,r28,r28
0000ce18	lwz	r29,0x6c(r1)
0000ce1c	lwz	r28,0x68(r1)
0000ce20	addi	r27,r27,0x1
0000ce24	bl	_QMOImageGetSlide
0000ce28	lwz	r9,0x70(r1)
0000ce2c	lwz	r10,0x74(r1)
0000ce30	or	r5,r26,r26
0000ce34	or	r8,r26,r26
0000ce38	addc	r7,r29,r4
0000ce3c	adde	r6,r28,r3
0000ce40	or	r3,r25,r25
0000ce44	stw	r30,0x38(r1)
0000ce48	addi	r4,r24,0x22e4
0000ce4c	addc	r12,r7,r10
0000ce50	adde	r11,r6,r9
0000ce54	addic	r10,r12,0xffff
0000ce58	addme	r9,r11
0000ce5c	bl	0xd060	; symbol stub for: _fprintf$LDBL128
0000ce60	lwz	r0,0x4c(r1)
0000ce64	cmplw	cr7,r27,r0
0000ce68	blt	cr7,0xcdb8
0000ce6c	or	r4,r25,r25
0000ce70	li	r3,0xa
0000ce74	bl	0xd0a0	; symbol stub for: _fputc
0000ce78	addi	r1,r1,0xd0
0000ce7c	lwz	r0,0x8(r1)
0000ce80	lmw	r22,0xffd8(r1)
0000ce84	mtspr	lr,r0
0000ce88	blr
0000ce8c	nop
___eprintf:
0000ce90	mfspr	r0,lr
0000ce94	stmw	r29,0xfff4(r1)
0000ce98	or	r2,r5,r5
0000ce9c	bcl	20,31,0xcea0
0000cea0	or	r7,r6,r6
0000cea4	or	r6,r2,r2
0000cea8	mfspr	r31,lr
0000ceac	stw	r0,0x8(r1)
0000ceb0	or	r0,r4,r4
0000ceb4	or	r4,r3,r3
0000ceb8	stwu	r1,0xffb0(r1)
0000cebc	or	r5,r0,r0
0000cec0	addis	r29,r31,__mh_dylib_header
0000cec4	lwz	r29,0x2264(r29)
0000cec8	addi	r29,r29,0xb0
0000cecc	or	r3,r29,r29
0000ced0	bl	0xd080	; symbol stub for: _fprintf
0000ced4	or	r3,r29,r29
0000ced8	bl	0xd040	; symbol stub for: _fflush
0000cedc	bl	0xcfa0	; symbol stub for: _abort
