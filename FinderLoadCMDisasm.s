/Users/ericgallager/.dropbox/finderplugin/FinderLoadCM (architecture i386):
(__TEXT,__text) section
start:
00001f10	pushl	$0x00
00001f12	movl	%esp,%ebp
00001f14	andl	$0xf0,%esp
00001f17	subl	$0x10,%esp
00001f1a	movl	0x04(%ebp),%ebx
00001f1d	movl	%ebx,0x00(%esp)
00001f21	leal	0x08(%ebp),%ecx
00001f24	movl	%ecx,0x04(%esp)
00001f28	addl	$0x01,%ebx
00001f2b	shll	$0x02,%ebx
00001f2e	addl	%ecx,%ebx
00001f30	movl	%ebx,0x08(%esp)
00001f34	calll	__start
00001f39	hlt
__start:
00001f3a	pushl	%ebp
00001f3b	movl	%esp,%ebp
00001f3d	pushl	%edi
00001f3e	pushl	%esi
00001f3f	pushl	%ebx
00001f40	subl	$0x2c,%esp
00001f43	movl	0x0c(%ebp),%edi
00001f46	movl	0x10(%ebp),%ebx
00001f49	movl	0x08(%ebp),%eax
00001f4c	movl	%eax,_NXArgc
00001f51	movl	%edi,_NXArgv
00001f57	movl	%ebx,_environ
00001f5d	movl	(%edi),%ecx
00001f5f	testl	%ecx,%ecx
00001f61	jne	0x00001f6a
00001f63	movl	$0x00002dc0,%ecx
00001f68	jmp	0x00001f83
00001f6a	movl	%ecx,%edx
00001f6c	jmp	0x00001f7c
00001f6e	cmpb	$0x2f,%al
00001f70	je	0x00001f77
00001f72	addl	$0x01,%edx
00001f75	jmp	0x00001f7c
00001f77	addl	$0x01,%edx
00001f7a	movl	%edx,%ecx
00001f7c	movzbl	(%edx),%eax
00001f7f	testb	%al,%al
00001f81	jne	0x00001f6e
00001f83	movl	%ecx,___progname
00001f89	movl	%ebx,%eax
00001f8b	jmp	0x00001f90
00001f8d	addl	$0x04,%eax
00001f90	movl	(%eax),%edx
00001f92	testl	%edx,%edx
00001f94	jne	0x00001f8d
00001f96	leal	0x04(%eax),%esi
00001f99	movl	0x00004000,%eax
00001f9e	movl	(%eax),%eax
00001fa0	testl	%eax,%eax
00001fa2	je	0x00001fa6
00001fa4	call	*%eax
00001fa6	movl	0x00004008,%eax
00001fab	movl	(%eax),%eax
00001fad	testl	%eax,%eax
00001faf	je	0x00001fb3
00001fb1	call	*%eax
00001fb3	calll	0x00004068	; symbol stub for: ___keymgr_dwarf2_register_sections
00001fb8	leal	0xe0(%ebp),%eax
00001fbb	movl	%eax,0x04(%esp)
00001fbf	movl	$0x00002dc4,(%esp)
00001fc6	calll	__dyld_func_lookup
00001fcb	call	*0xe0(%ebp)
00001fce	leal	0xe4(%ebp),%eax
00001fd1	movl	%eax,0x04(%esp)
00001fd5	movl	$0x00002df4,(%esp)
00001fdc	calll	__dyld_func_lookup
00001fe1	movl	0xe4(%ebp),%eax
00001fe4	testl	%eax,%eax
00001fe6	je	0x00001ff0
00001fe8	movl	%eax,(%esp)
00001feb	calll	0x0000408b	; symbol stub for: _atexit
00001ff0	movl	0x00004004,%eax
00001ff5	movl	$0x00000000,(%eax)
00001ffb	movl	%esi,0x0c(%esp)
00001fff	movl	%ebx,0x08(%esp)
00002003	movl	%edi,0x04(%esp)
00002007	movl	0x08(%ebp),%eax
0000200a	movl	%eax,(%esp)
0000200d	calll	_main
00002012	movl	%eax,(%esp)
00002015	calll	0x0000409f	; symbol stub for: _exit
0000201a	nop
0000201b	nop
dyld_stub_binding_helper:
0000201c	pushl	$__mh_execute_header
00002021	jmp	*0x00003010
00002027	nop
__dyld_func_lookup:
00002028	jmp	*0x00003014
_mach_inject_bundle_pid:
0000202e	pushl	%ebp
0000202f	movl	%esp,%ebp
00002031	pushl	%edi
00002032	pushl	%ebx
00002033	subl	$0x60,%esp
00002036	calll	0x0000203b
0000203b	popl	%ebx
0000203c	cmpl	$0x00,0x08(%ebp)
00002040	sete	%al
00002043	movzbl	%al,%eax
00002046	testl	%eax,%eax
00002048	je	0x00002074
0000204a	leal	0x00000dd1(%ebx),%eax
00002050	movl	%eax,0x0c(%esp)
00002054	movl	$0x00000013,0x08(%esp)
0000205c	leal	0x00000df7(%ebx),%eax
00002062	movl	%eax,0x04(%esp)
00002066	leal	0x00000dfd(%ebx),%eax
0000206c	movl	%eax,(%esp)
0000206f	calll	___eprintf
00002074	cmpl	$0x00,0x0c(%ebp)
00002078	sete	%al
0000207b	movzbl	%al,%eax
0000207e	testl	%eax,%eax
00002080	je	0x000020ac
00002082	leal	0x00000e1b(%ebx),%eax
00002088	movl	%eax,0x0c(%esp)
0000208c	movl	$0x00000014,0x08(%esp)
00002094	leal	0x00000df7(%ebx),%eax
0000209a	movl	%eax,0x04(%esp)
0000209e	leal	0x00000dfd(%ebx),%eax
000020a4	movl	%eax,(%esp)
000020a7	calll	___eprintf
000020ac	cmpl	$0x00,0x10(%ebp)
000020b0	setle	%al
000020b3	movzbl	%al,%eax
000020b6	testl	%eax,%eax
000020b8	je	0x000020e4
000020ba	leal	0x00000e36(%ebx),%eax
000020c0	movl	%eax,0x0c(%esp)
000020c4	movl	$0x00000015,0x08(%esp)
000020cc	leal	0x00000df7(%ebx),%eax
000020d2	movl	%eax,0x04(%esp)
000020d6	leal	0x00000dfd(%ebx),%eax
000020dc	movl	%eax,(%esp)
000020df	calll	___eprintf
000020e4	movl	$0x00000000,0xd4(%ebp)
000020eb	movl	$0x00000000,0xd8(%ebp)
000020f2	cmpl	$0x00,0xd4(%ebp)
000020f6	jne	0x000021b1
000020fc	leal	0x00001fd1(%ebx),%eax
00002102	movl	(%eax),%eax
00002104	movl	(%eax),%edx
00002106	movl	$0x08000100,0x08(%esp)
0000210e	movl	0x0c(%ebp),%eax
00002111	movl	%eax,0x04(%esp)
00002115	movl	%edx,(%esp)
00002118	calll	0x0000404f	; symbol stub for: _CFStringCreateWithCString
0000211d	movl	%eax,0xec(%ebp)
00002120	cmpl	$0x00,0xec(%ebp)
00002124	je	0x000021a4
00002126	leal	0x00001fd1(%ebx),%eax
0000212c	movl	(%eax),%eax
0000212e	movl	(%eax),%edx
00002130	movl	$0x00000001,0x0c(%esp)
00002138	movl	$0x00000000,0x08(%esp)
00002140	movl	0xec(%ebp),%eax
00002143	movl	%eax,0x04(%esp)
00002147	movl	%edx,(%esp)
0000214a	calll	0x00004054	; symbol stub for: _CFURLCreateWithFileSystemPath
0000214f	movl	%eax,0xf0(%ebp)
00002152	cmpl	$0x00,0xf0(%ebp)
00002156	je	0x00002199
00002158	leal	0x00000fdd(%ebx),%edx
0000215e	leal	0x00001fd1(%ebx),%eax
00002164	movl	(%eax),%eax
00002166	movl	(%eax),%ecx
00002168	movl	0xf0(%ebp),%eax
0000216b	movl	%eax,0x10(%esp)
0000216f	movl	$0x00000001,0x0c(%esp)
00002177	movl	$0x00000000,0x08(%esp)
0000217f	movl	%edx,0x04(%esp)
00002183	movl	%ecx,(%esp)
00002186	calll	0x00004059	; symbol stub for: _CFURLCreateWithFileSystemPathRelativeToBase
0000218b	movl	%eax,0xd8(%ebp)
0000218e	movl	0xf0(%ebp),%eax
00002191	movl	%eax,(%esp)
00002194	calll	0x0000404a	; symbol stub for: _CFRelease
00002199	movl	0xec(%ebp),%eax
0000219c	movl	%eax,(%esp)
0000219f	calll	0x0000404a	; symbol stub for: _CFRelease
000021a4	cmpl	$0x00,0xd8(%ebp)
000021a8	jne	0x000021b1
000021aa	movl	$0xf8000002,0xd4(%ebp)
000021b1	movl	$0x00000000,0xdc(%ebp)
000021b8	cmpl	$0x00,0xd4(%ebp)
000021bc	jne	0x000021e7
000021be	leal	0x00001fd1(%ebx),%eax
000021c4	movl	(%eax),%eax
000021c6	movl	(%eax),%edx
000021c8	movl	0xd8(%ebp),%eax
000021cb	movl	%eax,0x04(%esp)
000021cf	movl	%edx,(%esp)
000021d2	calll	0x00004040	; symbol stub for: _CFBundleCreate
000021d7	movl	%eax,0xdc(%ebp)
000021da	cmpl	$0x00,0xdc(%ebp)
000021de	jne	0x000021e7
000021e0	movl	$0xf8000003,0xd4(%ebp)
000021e7	movl	$0x00000000,0xe0(%ebp)
000021ee	cmpl	$0x00,0xd4(%ebp)
000021f2	jne	0x00002219
000021f4	leal	0x00000fed(%ebx),%eax
000021fa	movl	%eax,0x04(%esp)
000021fe	movl	0xdc(%ebp),%eax
00002201	movl	%eax,(%esp)
00002204	calll	0x00004045	; symbol stub for: _CFBundleGetFunctionPointerForName
00002209	movl	%eax,0xe0(%ebp)
0000220c	cmpl	$0x00,0xe0(%ebp)
00002210	jne	0x00002219
00002212	movl	$0xf8000004,0xd4(%ebp)
00002219	movl	$0x00000000,0xe4(%ebp)
00002220	cmpl	$0x00,0xd4(%ebp)
00002224	jne	0x00002278
00002226	movl	0x08(%ebp),%eax
00002229	movl	$0xffffffff,%ecx
0000222e	movl	%eax,0xc4(%ebp)
00002231	movl	$0x00000000,%eax
00002236	cld
00002237	movl	0xc4(%ebp),%edi
0000223a	repnz/scasb	%al,(%edi)
0000223c	movl	%ecx,%eax
0000223e	notl	%eax
00002240	decl	%eax
00002241	incl	%eax
00002242	movl	%eax,0xf4(%ebp)
00002245	movl	0xf4(%ebp),%eax
00002248	addl	$0x04,%eax
0000224b	movl	%eax,0xe8(%ebp)
0000224e	movl	0xe8(%ebp),%eax
00002251	movl	%eax,(%esp)
00002254	calll	0x000040b8	; symbol stub for: _malloc
00002259	movl	%eax,0xe4(%ebp)
0000225c	movl	0xe4(%ebp),%edx
0000225f	addl	$0x04,%edx
00002262	movl	0xf4(%ebp),%eax
00002265	movl	%eax,0x08(%esp)
00002269	movl	%edx,0x04(%esp)
0000226d	movl	0x08(%ebp),%eax
00002270	movl	%eax,(%esp)
00002273	calll	0x00004095	; symbol stub for: _bcopy
00002278	cmpl	$0x00,0xd4(%ebp)
0000227c	jne	0x000022a9
0000227e	movl	0xe0(%ebp),%edx
00002281	movl	$0x00000000,0x10(%esp)
00002289	movl	0x10(%ebp),%eax
0000228c	movl	%eax,0x0c(%esp)
00002290	movl	0xe8(%ebp),%eax
00002293	movl	%eax,0x08(%esp)
00002297	movl	0xe4(%ebp),%eax
0000229a	movl	%eax,0x04(%esp)
0000229e	movl	%edx,(%esp)
000022a1	calll	_mach_inject
000022a6	movl	%eax,0xd4(%ebp)
000022a9	cmpl	$0x00,0xe4(%ebp)
000022ad	je	0x000022ba
000022af	movl	0xe4(%ebp),%eax
000022b2	movl	%eax,(%esp)
000022b5	calll	0x000040ae	; symbol stub for: _free
000022ba	cmpl	$0x00,0xd8(%ebp)
000022be	je	0x000022cb
000022c0	movl	0xd8(%ebp),%eax
000022c3	movl	%eax,(%esp)
000022c6	calll	0x0000404a	; symbol stub for: _CFRelease
000022cb	movl	0xd4(%ebp),%eax
000022ce	addl	$0x60,%esp
000022d1	popl	%ebx
000022d2	popl	%edi
000022d3	leave
000022d4	ret
_main:
000022d5	pushl	%ebp
000022d6	movl	%esp,%ebp
000022d8	pushl	%ebx
000022d9	subl	$0x000000b4,%esp
000022df	calll	0x000022e4
000022e4	popl	%ebx
000022e5	cmpl	$0x03,0x08(%ebp)
000022e9	je	0x000022fa
000022eb	movl	$0x00000001,0xffffff74(%ebp)
000022f5	jmp	0x000024cc
000022fa	movl	0x0c(%ebp),%eax
000022fd	movl	(%eax),%eax
000022ff	movl	%eax,0xdc(%ebp)
00002302	movl	0x0c(%ebp),%eax
00002305	addl	$0x04,%eax
00002308	movl	(%eax),%eax
0000230a	movl	%eax,0xe0(%ebp)
0000230d	movl	0x0c(%ebp),%eax
00002310	addl	$0x08,%eax
00002313	movl	(%eax),%eax
00002315	movl	%eax,(%esp)
00002318	calll	0x00004090	; symbol stub for: _atoi
0000231d	movl	%eax,0xe4(%ebp)
00002320	leal	0xffffff78(%ebp),%eax
00002326	movl	%eax,0x04(%esp)
0000232a	movl	0xe0(%ebp),%eax
0000232d	movl	%eax,(%esp)
00002330	calll	0x000040db	; symbol stub for: _stat
00002335	testl	%eax,%eax
00002337	jns	0x0000235d
00002339	movl	0xe0(%ebp),%eax
0000233c	movl	%eax,0x04(%esp)
00002340	leal	0x00000bbc(%ebx),%eax
00002346	movl	%eax,(%esp)
00002349	calll	0x000040d1	; symbol stub for: _printf
0000234e	movl	$0x00000001,0xffffff74(%ebp)
00002358	jmp	0x000024cc
0000235d	movl	$0x00000401,(%esp)
00002364	calll	0x000040b8	; symbol stub for: _malloc
00002369	movl	%eax,0xe8(%ebp)
0000236c	movl	$0x00000401,(%esp)
00002373	calll	0x000040b8	; symbol stub for: _malloc
00002378	movl	%eax,0xec(%ebp)
0000237b	movl	0xe8(%ebp),%eax
0000237e	movl	%eax,0x04(%esp)
00002382	movl	0xdc(%ebp),%eax
00002385	movl	%eax,(%esp)
00002388	calll	0x000040d6	; symbol stub for: _realpath
0000238d	movl	%eax,0xe8(%ebp)
00002390	movl	0xec(%ebp),%eax
00002393	movl	%eax,0x04(%esp)
00002397	movl	0xe0(%ebp),%eax
0000239a	movl	%eax,(%esp)
0000239d	calll	0x000040d6	; symbol stub for: _realpath
000023a2	movl	%eax,0xec(%ebp)
000023a5	cmpl	$0x00,0xe8(%ebp)
000023a9	je	0x000023b1
000023ab	cmpl	$0x00,0xec(%ebp)
000023af	jne	0x000023ce
000023b1	leal	0x00000bcc(%ebx),%eax
000023b7	movl	%eax,(%esp)
000023ba	calll	0x000040d1	; symbol stub for: _printf
000023bf	movl	$0x00000001,0xffffff74(%ebp)
000023c9	jmp	0x000024cc
000023ce	movl	$0x0000002f,0x04(%esp)
000023d6	movl	0xe8(%ebp),%eax
000023d9	movl	%eax,(%esp)
000023dc	calll	0x000040e5	; symbol stub for: _strrchr
000023e1	movl	%eax,0xf0(%ebp)
000023e4	movl	$0x0000002f,0x04(%esp)
000023ec	movl	0xec(%ebp),%eax
000023ef	movl	%eax,(%esp)
000023f2	calll	0x000040e5	; symbol stub for: _strrchr
000023f7	movl	%eax,0xf4(%ebp)
000023fa	cmpl	$0x00,0xf0(%ebp)
000023fe	je	0x00002406
00002400	cmpl	$0x00,0xf4(%ebp)
00002404	jne	0x00002423
00002406	leal	0x00000bdb(%ebx),%eax
0000240c	movl	%eax,(%esp)
0000240f	calll	0x000040d1	; symbol stub for: _printf
00002414	movl	$0x00000001,0xffffff74(%ebp)
0000241e	jmp	0x000024cc
00002423	movl	0xf0(%ebp),%edx
00002426	movl	0xe8(%ebp),%eax
00002429	movl	%edx,%ecx
0000242b	subl	%eax,%ecx
0000242d	movl	%ecx,%eax
0000242f	movl	%eax,0x08(%esp)
00002433	movl	0xec(%ebp),%eax
00002436	movl	%eax,0x04(%esp)
0000243a	movl	0xe8(%ebp),%eax
0000243d	movl	%eax,(%esp)
00002440	calll	0x000040e0	; symbol stub for: _strncmp
00002445	testl	%eax,%eax
00002447	je	0x00002471
00002449	movl	0xdc(%ebp),%eax
0000244c	movl	%eax,0x08(%esp)
00002450	movl	0xe0(%ebp),%eax
00002453	movl	%eax,0x04(%esp)
00002457	leal	0x00000be8(%ebx),%eax
0000245d	movl	%eax,(%esp)
00002460	calll	0x000040d1	; symbol stub for: _printf
00002465	movl	$0x00000001,0xffffff74(%ebp)
0000246f	jmp	0x000024cc
00002471	movl	0xf0(%ebp),%eax
00002474	movb	$0x00,(%eax)
00002477	movl	0xe4(%ebp),%eax
0000247a	movl	%eax,0x08(%esp)
0000247e	movl	0xe8(%ebp),%eax
00002481	movl	%eax,0x04(%esp)
00002485	movl	0xec(%ebp),%eax
00002488	movl	%eax,(%esp)
0000248b	calll	0x0000202e
00002490	movl	%eax,0xd8(%ebp)
00002493	cmpl	$0x00,0xd8(%ebp)
00002497	je	0x000024c3
00002499	movl	0xd8(%ebp),%eax
0000249c	movl	%eax,0x10(%esp)
000024a0	movl	0xe4(%ebp),%eax
000024a3	movl	%eax,0x0c(%esp)
000024a7	movl	0xe8(%ebp),%eax
000024aa	movl	%eax,0x08(%esp)
000024ae	movl	0xec(%ebp),%eax
000024b1	movl	%eax,0x04(%esp)
000024b5	leal	0x00000c19(%ebx),%eax
000024bb	movl	%eax,(%esp)
000024be	calll	0x000040d1	; symbol stub for: _printf
000024c3	movl	0xd8(%ebp),%eax
000024c6	movl	%eax,0xffffff74(%ebp)
000024cc	movl	0xffffff74(%ebp),%eax
000024d2	addl	$0x000000b4,%esp
000024d8	popl	%ebx
000024d9	leave
000024da	ret
_mach_inject:
000024db	pushl	%ebp
000024dc	movl	%esp,%ebp
000024de	pushl	%edi
000024df	pushl	%esi
000024e0	pushl	%ebx
000024e1	subl	$0x000000cc,%esp
000024e7	calll	0x000024ec
000024ec	popl	%ebx
000024ed	cmpl	$0x00,0x08(%ebp)
000024f1	sete	%al
000024f4	movzbl	%al,%eax
000024f7	testl	%eax,%eax
000024f9	je	0x00002525
000024fb	leal	0x00000a28(%ebx),%eax
00002501	movl	%eax,0x0c(%esp)
00002505	movl	$0x00000039,0x08(%esp)
0000250d	leal	0x00000a34(%ebx),%eax
00002513	movl	%eax,0x04(%esp)
00002517	leal	0x0000094c(%ebx),%eax
0000251d	movl	%eax,(%esp)
00002520	calll	___eprintf
00002525	cmpl	$0x00,0x14(%ebp)
00002529	setle	%al
0000252c	movzbl	%al,%eax
0000252f	testl	%eax,%eax
00002531	je	0x0000255d
00002533	leal	0x00000a3b(%ebx),%eax
00002539	movl	%eax,0x0c(%esp)
0000253d	movl	$0x0000003a,0x08(%esp)
00002545	leal	0x00000a34(%ebx),%eax
0000254b	movl	%eax,0x04(%esp)
0000254f	leal	0x0000094c(%ebx),%eax
00002555	movl	%eax,(%esp)
00002558	calll	___eprintf
0000255d	cmpl	$0x00,0x18(%ebp)
00002561	je	0x00002578
00002563	cmpl	$0x00000400,0x18(%ebp)
0000256a	ja	0x00002578
0000256c	movl	$0x00000001,0xffffff54(%ebp)
00002576	jmp	0x00002582
00002578	movl	$0x00000000,0xffffff54(%ebp)
00002582	movl	0xffffff54(%ebp),%eax
00002588	testl	%eax,%eax
0000258a	je	0x000025b6
0000258c	leal	0x00000a50(%ebx),%eax
00002592	movl	%eax,0x0c(%esp)
00002596	movl	$0x0000003b,0x08(%esp)
0000259e	leal	0x00000a34(%ebx),%eax
000025a4	movl	%eax,0x04(%esp)
000025a8	leal	0x0000094c(%ebx),%eax
000025ae	movl	%eax,(%esp)
000025b1	calll	___eprintf
000025b6	leal	0xc0(%ebp),%eax
000025b9	movl	%eax,0x10(%esp)
000025bd	leal	0xc4(%ebp),%eax
000025c0	movl	%eax,0x0c(%esp)
000025c4	leal	0xc8(%ebp),%eax
000025c7	movl	%eax,0x08(%esp)
000025cb	leal	0xcc(%ebp),%eax
000025ce	movl	%eax,0x04(%esp)
000025d2	movl	0x08(%ebp),%eax
000025d5	movl	%eax,(%esp)
000025d8	calll	_machImageForPointer
000025dd	movl	%eax,0xd0(%ebp)
000025e0	cmpl	$0x00,0x18(%ebp)
000025e4	jne	0x000025ed
000025e6	movl	$0x00004000,0x18(%ebp)
000025ed	movl	$0x00000000,0xbc(%ebp)
000025f4	cmpl	$0x00,0xd0(%ebp)
000025f8	jne	0x0000264a
000025fa	leal	0x00001b28(%ebx),%eax
00002600	movl	(%eax),%eax
00002602	movl	(%eax),%edx
00002604	leal	0xbc(%ebp),%eax
00002607	movl	%eax,0x08(%esp)
0000260b	movl	0x14(%ebp),%eax
0000260e	movl	%eax,0x04(%esp)
00002612	movl	%edx,(%esp)
00002615	calll	0x000040ea	; symbol stub for: _task_for_pid
0000261a	movl	%eax,0xd0(%ebp)
0000261d	cmpl	$0x05,0xd0(%ebp)
00002621	jne	0x0000264a
00002623	leal	0x00001b24(%ebx),%eax
00002629	movl	(%eax),%edx
0000262b	leal	0x000000b0(%edx),%edx
00002631	movl	0x14(%ebp),%eax
00002634	movl	%eax,0x08(%esp)
00002638	leal	0x00000a74(%ebx),%eax
0000263e	movl	%eax,0x04(%esp)
00002642	movl	%edx,(%esp)
00002645	calll	0x000040a9	; symbol stub for: _fprintf
0000264a	movl	$0x00000000,0xb8(%ebp)
00002651	cmpl	$0x00,0xd0(%ebp)
00002655	jne	0x0000267b
00002657	movl	0xbc(%ebp),%edx
0000265a	movl	$0x00000001,0x0c(%esp)
00002662	movl	0x18(%ebp),%eax
00002665	movl	%eax,0x08(%esp)
00002669	leal	0xb8(%ebp),%eax
0000266c	movl	%eax,0x04(%esp)
00002670	movl	%edx,(%esp)
00002673	calll	0x000040f4	; symbol stub for: _vm_allocate
00002678	movl	%eax,0xd0(%ebp)
0000267b	movl	$0x00000000,0xb4(%ebp)
00002682	cmpl	$0x00,0xd0(%ebp)
00002686	jne	0x000026ac
00002688	movl	0xc8(%ebp),%eax
0000268b	movl	0xbc(%ebp),%edx
0000268e	movl	$0x00000001,0x0c(%esp)
00002696	movl	%eax,0x08(%esp)
0000269a	leal	0xb4(%ebp),%eax
0000269d	movl	%eax,0x04(%esp)
000026a1	movl	%edx,(%esp)
000026a4	calll	0x000040f4	; symbol stub for: _vm_allocate
000026a9	movl	%eax,0xd0(%ebp)
000026ac	cmpl	$0x00,0xd0(%ebp)
000026b0	jne	0x00002719
000026b2	movl	0xcc(%ebp),%edx
000026b5	movl	0xb4(%ebp),%eax
000026b8	movl	%edx,%ecx
000026ba	subl	%eax,%ecx
000026bc	movl	%ecx,%eax
000026be	movl	%eax,0xdc(%ebp)
000026c1	movl	0xc0(%ebp),%edx
000026c4	movl	0xc4(%ebp),%ecx
000026c7	movl	0xc8(%ebp),%esi
000026ca	movl	0xcc(%ebp),%edi
000026cd	movl	0xdc(%ebp),%eax
000026d0	movl	%eax,0x10(%esp)
000026d4	movl	%edx,0x0c(%esp)
000026d8	movl	%ecx,0x08(%esp)
000026dc	movl	%esi,0x04(%esp)
000026e0	movl	%edi,(%esp)
000026e3	calll	_fixedUpImageFromImage
000026e8	movl	%eax,0xe0(%ebp)
000026eb	movl	0xc8(%ebp),%edx
000026ee	movl	0xe0(%ebp),%eax
000026f1	movl	0xb4(%ebp),%ecx
000026f4	movl	0xbc(%ebp),%esi
000026f7	movl	%edx,0x0c(%esp)
000026fb	movl	%eax,0x08(%esp)
000026ff	movl	%ecx,0x04(%esp)
00002703	movl	%esi,(%esp)
00002706	calll	0x00004103	; symbol stub for: _vm_write
0000270b	movl	%eax,0xd0(%ebp)
0000270e	movl	0xe0(%ebp),%eax
00002711	movl	%eax,(%esp)
00002714	calll	0x000040ae	; symbol stub for: _free
00002719	movl	$0x00000000,0xb0(%ebp)
00002720	cmpl	$0x00,0xd0(%ebp)
00002724	jne	0x00002781
00002726	cmpl	$0x00,0x0c(%ebp)
0000272a	je	0x00002781
0000272c	cmpl	$0x00,0x10(%ebp)
00002730	je	0x00002781
00002732	movl	0xbc(%ebp),%edx
00002735	movl	$0x00000001,0x0c(%esp)
0000273d	movl	0x10(%ebp),%eax
00002740	movl	%eax,0x08(%esp)
00002744	leal	0xb0(%ebp),%eax
00002747	movl	%eax,0x04(%esp)
0000274b	movl	%edx,(%esp)
0000274e	calll	0x000040f4	; symbol stub for: _vm_allocate
00002753	movl	%eax,0xd0(%ebp)
00002756	cmpl	$0x00,0xd0(%ebp)
0000275a	jne	0x00002781
0000275c	movl	0x0c(%ebp),%eax
0000275f	movl	%eax,%edx
00002761	movl	0xb0(%ebp),%ecx
00002764	movl	0xbc(%ebp),%esi
00002767	movl	0x10(%ebp),%eax
0000276a	movl	%eax,0x0c(%esp)
0000276e	movl	%edx,0x08(%esp)
00002772	movl	%ecx,0x04(%esp)
00002776	movl	%esi,(%esp)
00002779	calll	0x00004103	; symbol stub for: _vm_write
0000277e	movl	%eax,0xd0(%ebp)
00002781	cmpl	$0x00,0xd0(%ebp)
00002785	jne	0x000027a7
00002787	movl	0x08(%ebp),%edx
0000278a	movl	0xcc(%ebp),%eax
0000278d	movl	%edx,%ecx
0000278f	subl	%eax,%ecx
00002791	movl	%ecx,%eax
00002793	movl	%eax,0xd4(%ebp)
00002796	movl	0xb4(%ebp),%eax
00002799	movl	%eax,%edx
0000279b	movl	0xcc(%ebp),%eax
0000279e	movl	%edx,%ecx
000027a0	subl	%eax,%ecx
000027a2	movl	%ecx,%eax
000027a4	movl	%eax,0xd8(%ebp)
000027a7	cmpl	$0x00,0xd0(%ebp)
000027ab	jne	0x00002876
000027b1	leal	0xffffff58(%ebp),%eax
000027b7	movl	%eax,%edi
000027b9	cld
000027ba	movl	$0x00000000,%edx
000027bf	movl	$0x00000010,%eax
000027c4	movl	%eax,%ecx
000027c6	movl	%edx,%eax
000027c8	rep/stosl	%eax,(%edi)
000027ca	movl	0xb8(%ebp),%eax
000027cd	movl	%eax,0xe4(%ebp)
000027d0	movl	0x18(%ebp),%eax
000027d3	movl	%eax,%edx
000027d5	shrl	%edx
000027d7	movl	0xb8(%ebp),%eax
000027da	leal	(%edx,%eax),%eax
000027dd	movl	%eax,0xb8(%ebp)
000027e0	movl	0xb8(%ebp),%eax
000027e3	subl	$0x04,%eax
000027e6	movl	%eax,0xb8(%ebp)
000027e9	movl	$0xdeadbeef,0x98(%ebp)
000027f0	movl	0xd8(%ebp),%eax
000027f3	movl	%eax,0x9c(%ebp)
000027f6	movl	0xb0(%ebp),%eax
000027f9	movl	%eax,0xa0(%ebp)
000027fc	movl	0x10(%ebp),%eax
000027ff	movl	%eax,0xa4(%ebp)
00002802	movl	0xe4(%ebp),%eax
00002805	movl	%eax,0xa8(%ebp)
00002808	leal	0x98(%ebp),%eax
0000280b	movl	0xb8(%ebp),%edx
0000280e	movl	0xbc(%ebp),%ecx
00002811	movl	$0x00000014,0x0c(%esp)
00002819	movl	%eax,0x08(%esp)
0000281d	movl	%edx,0x04(%esp)
00002821	movl	%ecx,(%esp)
00002824	calll	0x00004103	; symbol stub for: _vm_write
00002829	movl	%eax,0xd0(%ebp)
0000282c	movl	0xb4(%ebp),%eax
0000282f	movl	%eax,0x80(%ebp)
00002832	movl	0x80(%ebp),%edx
00002835	movl	0xd4(%ebp),%eax
00002838	leal	(%edx,%eax),%eax
0000283b	movl	%eax,0x80(%ebp)
0000283e	movl	0xb8(%ebp),%eax
00002841	movl	%eax,0xffffff74(%ebp)
00002847	leal	0xffffff58(%ebp),%edx
0000284d	movl	0xbc(%ebp),%ecx
00002850	leal	0xac(%ebp),%eax
00002853	movl	%eax,0x10(%esp)
00002857	movl	$0x00000010,0x0c(%esp)
0000285f	movl	%edx,0x08(%esp)
00002863	movl	$0x00000001,0x04(%esp)
0000286b	movl	%ecx,(%esp)
0000286e	calll	0x000040ef	; symbol stub for: _thread_create_running
00002873	movl	%eax,0xd0(%ebp)
00002876	cmpl	$0x00,0xd0(%ebp)
0000287a	je	0x000028dc
0000287c	movl	0xb0(%ebp),%eax
0000287f	testl	%eax,%eax
00002881	je	0x0000289c
00002883	movl	0xb0(%ebp),%eax
00002886	movl	0xbc(%ebp),%ecx
00002889	movl	0x10(%ebp),%edx
0000288c	movl	%edx,0x08(%esp)
00002890	movl	%eax,0x04(%esp)
00002894	movl	%ecx,(%esp)
00002897	calll	0x000040f9	; symbol stub for: _vm_deallocate
0000289c	movl	0xb4(%ebp),%eax
0000289f	testl	%eax,%eax
000028a1	je	0x000028bc
000028a3	movl	0xc8(%ebp),%eax
000028a6	movl	0xb4(%ebp),%edx
000028a9	movl	0xbc(%ebp),%ecx
000028ac	movl	%eax,0x08(%esp)
000028b0	movl	%edx,0x04(%esp)
000028b4	movl	%ecx,(%esp)
000028b7	calll	0x000040f9	; symbol stub for: _vm_deallocate
000028bc	movl	0xb8(%ebp),%eax
000028bf	testl	%eax,%eax
000028c1	je	0x000028dc
000028c3	movl	0xb8(%ebp),%eax
000028c6	movl	0xbc(%ebp),%ecx
000028c9	movl	0x18(%ebp),%edx
000028cc	movl	%edx,0x08(%esp)
000028d0	movl	%eax,0x04(%esp)
000028d4	movl	%ecx,(%esp)
000028d7	calll	0x000040f9	; symbol stub for: _vm_deallocate
000028dc	movl	0xd0(%ebp),%eax
000028df	addl	$0x000000cc,%esp
000028e5	popl	%ebx
000028e6	popl	%esi
000028e7	popl	%edi
000028e8	leave
000028e9	ret
_machImageForPointer:
000028ea	pushl	%ebp
000028eb	movl	%esp,%ebp
000028ed	pushl	%esi
000028ee	pushl	%ebx
000028ef	subl	$0x000000e0,%esp
000028f5	calll	0x000028fa
000028fa	popl	%ebx
000028fb	cmpl	$0x00,0x08(%ebp)
000028ff	sete	%al
00002902	movzbl	%al,%eax
00002905	testl	%eax,%eax
00002907	je	0x00002933
00002909	leal	0x000006b8(%ebx),%eax
0000290f	movl	%eax,0x0c(%esp)
00002913	movl	$0x000000f6,0x08(%esp)
0000291b	leal	0x00000626(%ebx),%eax
00002921	movl	%eax,0x04(%esp)
00002925	leal	0x0000053e(%ebx),%eax
0000292b	movl	%eax,(%esp)
0000292e	calll	___eprintf
00002933	cmpl	$0x00,0x0c(%ebp)
00002937	sete	%al
0000293a	movzbl	%al,%eax
0000293d	testl	%eax,%eax
0000293f	je	0x0000296b
00002941	leal	0x000006c0(%ebx),%eax
00002947	movl	%eax,0x0c(%esp)
0000294b	movl	$0x000000f7,0x08(%esp)
00002953	leal	0x00000626(%ebx),%eax
00002959	movl	%eax,0x04(%esp)
0000295d	leal	0x0000053e(%ebx),%eax
00002963	movl	%eax,(%esp)
00002966	calll	___eprintf
0000296b	cmpl	$0x00,0x10(%ebp)
0000296f	sete	%al
00002972	movzbl	%al,%eax
00002975	testl	%eax,%eax
00002977	je	0x000029a3
00002979	leal	0x000006c6(%ebx),%eax
0000297f	movl	%eax,0x0c(%esp)
00002983	movl	$0x000000f8,0x08(%esp)
0000298b	leal	0x00000626(%ebx),%eax
00002991	movl	%eax,0x04(%esp)
00002995	leal	0x0000053e(%ebx),%eax
0000299b	movl	%eax,(%esp)
0000299e	calll	___eprintf
000029a3	movl	0x08(%ebp),%eax
000029a6	movl	%eax,0xa8(%ebp)
000029a9	cmpl	$0x00,0x14(%ebp)
000029ad	je	0x000029c7
000029af	cmpl	$0x00,0x18(%ebp)
000029b3	je	0x000029c7
000029b5	movl	0x14(%ebp),%eax
000029b8	movl	$0x00000000,(%eax)
000029be	movl	0x18(%ebp),%eax
000029c1	movl	$0x00000000,(%eax)
000029c7	calll	0x00004081	; symbol stub for: __dyld_image_count
000029cc	movl	%eax,0xb0(%ebp)
000029cf	movl	$0x00000000,0xac(%ebp)
000029d6	jmp	0x00002c98
000029db	movl	0xac(%ebp),%eax
000029de	movl	%eax,(%esp)
000029e1	calll	0x0000406d	; symbol stub for: __dyld_get_image_header
000029e6	movl	%eax,0xb4(%ebp)
000029e9	leal	0x000006cb(%ebx),%eax
000029ef	movl	%eax,0x08(%esp)
000029f3	leal	0x000006d2(%ebx),%eax
000029f9	movl	%eax,0x04(%esp)
000029fd	movl	0xb4(%ebp),%eax
00002a00	movl	%eax,(%esp)
00002a03	calll	0x000040b3	; symbol stub for: _getsectbynamefromheader
00002a08	movl	%eax,0xb8(%ebp)
00002a0b	movl	0xb8(%ebp),%eax
00002a0e	movl	0x20(%eax),%esi
00002a11	movl	0xac(%ebp),%eax
00002a14	movl	%eax,(%esp)
00002a17	calll	0x00004077	; symbol stub for: __dyld_get_image_vmaddr_slide
00002a1c	leal	(%esi,%eax),%eax
00002a1f	movl	%eax,0xbc(%ebp)
00002a22	movl	0xb8(%ebp),%eax
00002a25	movl	0x24(%eax),%edx
00002a28	movl	0xbc(%ebp),%eax
00002a2b	leal	(%edx,%eax),%eax
00002a2e	movl	%eax,0xc0(%ebp)
00002a31	movl	0xbc(%ebp),%eax
00002a34	cmpl	0xa8(%ebp),%eax
00002a37	ja	0x00002c93
00002a3d	movl	0xc0(%ebp),%eax
00002a40	cmpl	0xa8(%ebp),%eax
00002a43	jb	0x00002c93
00002a49	movl	0xac(%ebp),%eax
00002a4c	movl	%eax,(%esp)
00002a4f	calll	0x00004072	; symbol stub for: __dyld_get_image_name
00002a54	movl	%eax,0xc4(%ebp)
00002a57	cmpl	$0x00,0xc4(%ebp)
00002a5b	sete	%al
00002a5e	movzbl	%al,%eax
00002a61	testl	%eax,%eax
00002a63	je	0x00002a8f
00002a65	leal	0x000006d9(%ebx),%eax
00002a6b	movl	%eax,0x0c(%esp)
00002a6f	movl	$0x0000010d,0x08(%esp)
00002a77	leal	0x00000626(%ebx),%eax
00002a7d	movl	%eax,0x04(%esp)
00002a81	leal	0x0000053e(%ebx),%eax
00002a87	movl	%eax,(%esp)
00002a8a	calll	___eprintf
00002a8f	leal	0xffffff48(%ebp),%eax
00002a95	movl	%eax,0x04(%esp)
00002a99	movl	0xc4(%ebp),%eax
00002a9c	movl	%eax,(%esp)
00002a9f	calll	0x000040db	; symbol stub for: _stat
00002aa4	testl	%eax,%eax
00002aa6	je	0x00002abf
00002aa8	calll	0x00004063	; symbol stub for: ___error
00002aad	movl	(%eax),%eax
00002aaf	movl	%eax,%edx
00002ab1	orb	$0xc0,%dh
00002ab4	movl	%edx,0xffffff44(%ebp)
00002aba	jmp	0x00002cae
00002abf	cmpl	$0x00,0x0c(%ebp)
00002ac3	je	0x00002acd
00002ac5	movl	0x0c(%ebp),%edx
00002ac8	movl	0xb4(%ebp),%eax
00002acb	movl	%eax,(%edx)
00002acd	cmpl	$0x00,0x10(%ebp)
00002ad1	je	0x00002c3d
00002ad7	movl	0xffffff78(%ebp),%eax
00002add	movl	0xffffff7c(%ebp),%edx
00002ae3	movl	%eax,%edx
00002ae5	movl	0x10(%ebp),%eax
00002ae8	movl	%edx,(%eax)
00002aea	movl	$0x00000000,0x04(%esp)
00002af2	movl	0xc4(%ebp),%eax
00002af5	movl	%eax,(%esp)
00002af8	calll	0x000040cc	; symbol stub for: _open
00002afd	movl	%eax,0xc8(%ebp)
00002b00	movl	0x10(%ebp),%eax
00002b03	movl	(%eax),%eax
00002b05	movl	%eax,0xcc(%ebp)
00002b08	movl	$0x00000000,0x14(%esp)
00002b10	movl	$0x00000000,0x18(%esp)
00002b18	movl	0xc8(%ebp),%eax
00002b1b	movl	%eax,0x10(%esp)
00002b1f	movl	$0x00000000,0x0c(%esp)
00002b27	movl	$0x00000001,0x08(%esp)
00002b2f	movl	0xcc(%ebp),%eax
00002b32	movl	%eax,0x04(%esp)
00002b36	movl	$0x00000000,(%esp)
00002b3d	calll	0x000040c2	; symbol stub for: _mmap
00002b42	movl	%eax,0xd0(%ebp)
00002b45	movl	0xd0(%ebp),%eax
00002b48	movl	%eax,0xd4(%ebp)
00002b4b	movl	0xd4(%ebp),%eax
00002b4e	movl	(%eax),%eax
00002b50	cmpl	$0xbebafeca,%eax
00002b55	jne	0x00002c20
00002b5b	movl	0xd4(%ebp),%eax
00002b5e	movl	0x04(%eax),%eax
00002b61	movl	%eax,(%esp)
00002b64	calll	__OSSwapInt32
00002b69	movl	%eax,0xd8(%ebp)
00002b6c	calll	0x0000405e	; symbol stub for: _NXGetLocalArchInfo
00002b71	movl	%eax,0xdc(%ebp)
00002b74	movl	0xd0(%ebp),%eax
00002b77	addl	$0x08,%eax
00002b7a	movl	%eax,0xe0(%ebp)
00002b7d	movl	$0x00000000,0xe4(%ebp)
00002b84	movl	$0x00000000,0xe8(%ebp)
00002b8b	movl	$0x00000000,0xe8(%ebp)
00002b92	jmp	0x00002bfd
00002b94	movl	0xe8(%ebp),%edx
00002b97	movl	%edx,%eax
00002b99	shll	$0x02,%eax
00002b9c	addl	%edx,%eax
00002b9e	shll	$0x02,%eax
00002ba1	addl	0xe0(%ebp),%eax
00002ba4	movl	(%eax),%eax
00002ba6	movl	%eax,(%esp)
00002ba9	calll	__OSSwapInt32
00002bae	movl	%eax,0xec(%ebp)
00002bb1	movl	0xe8(%ebp),%edx
00002bb4	movl	%edx,%eax
00002bb6	shll	$0x02,%eax
00002bb9	addl	%edx,%eax
00002bbb	shll	$0x02,%eax
00002bbe	addl	0xe0(%ebp),%eax
00002bc1	movl	0x04(%eax),%eax
00002bc4	movl	%eax,(%esp)
00002bc7	calll	__OSSwapInt32
00002bcc	movl	%eax,0xf0(%ebp)
00002bcf	movl	0xdc(%ebp),%eax
00002bd2	movl	0x04(%eax),%eax
00002bd5	cmpl	0xec(%ebp),%eax
00002bd8	jne	0x00002bf8
00002bda	movl	0xe8(%ebp),%edx
00002bdd	movl	%edx,%eax
00002bdf	shll	$0x02,%eax
00002be2	addl	%edx,%eax
00002be4	shll	$0x02,%eax
00002be7	addl	0xe0(%ebp),%eax
00002bea	movl	%eax,0xe4(%ebp)
00002bed	movl	0xdc(%ebp),%eax
00002bf0	movl	0x08(%eax),%eax
00002bf3	cmpl	0xf0(%ebp),%eax
00002bf6	je	0x00002c05
00002bf8	leal	0xe8(%ebp),%eax
00002bfb	incl	(%eax)
00002bfd	movl	0xe8(%ebp),%eax
00002c00	cmpl	0xd8(%ebp),%eax
00002c03	jb	0x00002b94
00002c05	cmpl	$0x00,0xe4(%ebp)
00002c09	je	0x00002c20
00002c0b	movl	0xe4(%ebp),%eax
00002c0e	movl	0x0c(%eax),%eax
00002c11	movl	%eax,(%esp)
00002c14	calll	__OSSwapInt32
00002c19	movl	%eax,%edx
00002c1b	movl	0x10(%ebp),%eax
00002c1e	movl	%edx,(%eax)
00002c20	movl	0xcc(%ebp),%eax
00002c23	movl	%eax,0x04(%esp)
00002c27	movl	0xd0(%ebp),%eax
00002c2a	movl	%eax,(%esp)
00002c2d	calll	0x000040c7	; symbol stub for: _munmap
00002c32	movl	0xc8(%ebp),%eax
00002c35	movl	%eax,(%esp)
00002c38	calll	0x0000409a	; symbol stub for: _close
00002c3d	cmpl	$0x00,0x14(%ebp)
00002c41	je	0x00002c87
00002c43	cmpl	$0x00,0x18(%ebp)
00002c47	je	0x00002c87
00002c49	leal	0x000006e3(%ebx),%eax
00002c4f	movl	%eax,0x08(%esp)
00002c53	leal	0x000006f0(%ebx),%eax
00002c59	movl	%eax,0x04(%esp)
00002c5d	movl	0xb4(%ebp),%eax
00002c60	movl	%eax,(%esp)
00002c63	calll	0x000040b3	; symbol stub for: _getsectbynamefromheader
00002c68	movl	%eax,0xf4(%ebp)
00002c6b	cmpl	$0x00,0xf4(%ebp)
00002c6f	je	0x00002c87
00002c71	movl	0xf4(%ebp),%eax
00002c74	movl	0x28(%eax),%edx
00002c77	movl	0x14(%ebp),%eax
00002c7a	movl	%edx,(%eax)
00002c7c	movl	0xf4(%ebp),%eax
00002c7f	movl	0x24(%eax),%edx
00002c82	movl	0x18(%ebp),%eax
00002c85	movl	%edx,(%eax)
00002c87	movl	$0x00000000,0xffffff44(%ebp)
00002c91	jmp	0x00002cae
00002c93	leal	0xac(%ebp),%eax
00002c96	incl	(%eax)
00002c98	movl	0xac(%ebp),%eax
00002c9b	cmpl	0xb0(%ebp),%eax
00002c9e	jb	0x000029db
00002ca4	movl	$0xf8000001,0xffffff44(%ebp)
00002cae	movl	0xffffff44(%ebp),%eax
00002cb4	addl	$0x000000e0,%esp
00002cba	popl	%ebx
00002cbb	popl	%esi
00002cbc	leave
00002cbd	ret
__OSSwapInt32:
00002cbe	pushl	%ebp
00002cbf	movl	%esp,%ebp
00002cc1	subl	$0x08,%esp
00002cc4	movl	0x08(%ebp),%eax
00002cc7	bswap	%eax
00002cc9	movl	%eax,0x08(%ebp)
00002ccc	movl	0x08(%ebp),%eax
00002ccf	leave
00002cd0	ret
_fixedUpImageFromImage:
00002cd1	pushl	%ebp
00002cd2	movl	%esp,%ebp
00002cd4	subl	$0x48,%esp
00002cd7	movl	0x0c(%ebp),%eax
00002cda	movl	%eax,(%esp)
00002cdd	calll	0x000040b8	; symbol stub for: _malloc
00002ce2	movl	%eax,0xe4(%ebp)
00002ce5	movl	0x0c(%ebp),%eax
00002ce8	movl	%eax,0x08(%esp)
00002cec	movl	0xe4(%ebp),%eax
00002cef	movl	%eax,0x04(%esp)
00002cf3	movl	0x08(%ebp),%eax
00002cf6	movl	%eax,(%esp)
00002cf9	calll	0x00004095	; symbol stub for: _bcopy
00002cfe	movl	0x10(%ebp),%eax
00002d01	addl	0xe4(%ebp),%eax
00002d04	movl	%eax,0xe8(%ebp)
00002d07	movl	0x14(%ebp),%edx
00002d0a	movl	$0xcccccccd,0xd4(%ebp)
00002d11	movl	0xd4(%ebp),%eax
00002d14	mull	%edx
00002d16	movl	%edx,%eax
00002d18	shrl	$0x02,%eax
00002d1b	movl	%eax,0xec(%ebp)
00002d1e	leal	0xe8(%ebp),%eax
00002d21	incl	(%eax)
00002d23	movl	$0x00000000,0xf0(%ebp)
00002d2a	movl	$0x00000000,0xf0(%ebp)
00002d31	jmp	0x00002d56
00002d33	movl	0xe8(%ebp),%eax
00002d36	movl	(%eax),%eax
00002d38	movl	%eax,0xf4(%ebp)
00002d3b	movl	0x18(%ebp),%edx
00002d3e	leal	0xf4(%ebp),%eax
00002d41	addl	%edx,(%eax)
00002d43	movl	0xe8(%ebp),%edx
00002d46	movl	0xf4(%ebp),%eax
00002d49	movl	%eax,(%edx)
00002d4b	leal	0xe8(%ebp),%eax
00002d4e	addl	$0x05,(%eax)
00002d51	leal	0xf0(%ebp),%eax
00002d54	incl	(%eax)
00002d56	movl	0xf0(%ebp),%eax
00002d59	cmpl	0xec(%ebp),%eax
00002d5c	jl	0x00002d33
00002d5e	movl	0xe4(%ebp),%eax
00002d61	leave
00002d62	ret
00002d63	nop
00002d64	nop
00002d65	nop
00002d66	nop
00002d67	nop
00002d68	nop
00002d69	nop
00002d6a	nop
00002d6b	nop
00002d6c	nop
00002d6d	nop
00002d6e	nop
00002d6f	nop
___eprintf:
00002d70	pushl	%ebp
00002d71	movl	%esp,%ebp
00002d73	subl	$0x28,%esp
00002d76	movl	0x14(%ebp),%eax
00002d79	movl	%ebx,0xf8(%ebp)
00002d7c	calll	0x00002d81
00002d81	popl	%ebx
00002d82	movl	%esi,0xfc(%ebp)
00002d85	movl	%eax,0x10(%esp)
00002d89	movl	0x10(%ebp),%eax
00002d8c	movl	%eax,0x0c(%esp)
00002d90	movl	0x0c(%ebp),%eax
00002d93	movl	0x00001297(%ebx),%esi
00002d99	movl	%eax,0x08(%esp)
00002d9d	movl	0x08(%ebp),%eax
00002da0	movl	%eax,0x04(%esp)
00002da4	movl	(%esi),%eax
00002da6	movl	%eax,(%esp)
00002da9	calll	0x000040a9	; symbol stub for: _fprintf
00002dae	movl	(%esi),%eax
00002db0	movl	%eax,(%esp)
00002db3	calll	0x000040a4	; symbol stub for: _fflush
00002db8	calll	0x00004086	; symbol stub for: _abort
/Users/ericgallager/.dropbox/finderplugin/FinderLoadCM (architecture ppc):
(__TEXT,__text) section
start:
00001880	or	r26,r1,r1
00001884	addi	r1,r1,0xfffc
00001888	rlwinm	r1,r1,0,0,26
0000188c	li	r0,0x0
00001890	stw	r0,0x0(r1)
00001894	stwu	r1,0xffc0(r1)
00001898	lwz	r3,0x0(r26)
0000189c	addi	r4,r26,0x4
000018a0	addi	r27,r3,0x1
000018a4	rlwinm	r27,r27,2,0,29
000018a8	add	r5,r4,r27
000018ac	bl	__start
000018b0	trap
__start:
000018b4	mfspr	r0,lr
000018b8	lis	r2,0x0
000018bc	stmw	r25,0xffe4(r1)
000018c0	lis	r9,0x0
000018c4	or	r28,r4,r4
000018c8	or	r25,r3,r3
000018cc	or	r27,r5,r5
000018d0	stw	r0,0x8(r1)
000018d4	stwu	r1,0xff80(r1)
000018d8	stw	r3,_NXArgc(r2)
000018dc	stw	r4,_NXArgv(r9)
000018e0	lis	r2,0x0
000018e4	stw	r5,_environ(r2)
000018e8	lwz	r9,0x0(r4)
000018ec	cmpwi	cr7,r9,0x0
000018f0	or	r2,r9,r9
000018f4	bne	cr7,0x192c
000018f8	lis	r9,0x0
000018fc	addi	r9,r9,0x2d40
00001900	b	0x193c
00001904	mtspr	ctr,r3
00001908	or	r12,r3,r3
0000190c	bctrl
00001910	b	0x1b68
00001914	cmpwi	cr7,r0,0x2f
00001918	beq	cr7,0x1924
0000191c	addi	r2,r2,0x1
00001920	b	0x192c
00001924	addi	r9,r2,0x1
00001928	or	r2,r9,r9
0000192c	lbz	r0,0x0(r2)
00001930	extsb	r0,r0
00001934	cmpwi	cr7,r0,0x0
00001938	bne	cr7,0x1914
0000193c	lis	r2,0x0
00001940	or	r6,r27,r27
00001944	stw	r9,___progname(r2)
00001948	b	0x1950
0000194c	addi	r6,r6,0x4
00001950	lwz	r0,0x0(r6)
00001954	cmpwi	cr7,r0,0x0
00001958	bne	cr7,0x194c
0000195c	lis	r2,0x0
00001960	addi	r26,r6,0x4
00001964	lwz	r2,0x3014(r2)
00001968	lwz	r2,0x0(r2)
0000196c	cmpwi	cr7,r2,0x0
00001970	beq	cr7,0x1980
00001974	mtspr	ctr,r2
00001978	or	r12,r2,r2
0000197c	bctrl
00001980	lis	r2,0x0
00001984	lwz	r2,0x301c(r2)
00001988	lwz	r2,0x0(r2)
0000198c	cmpwi	cr7,r2,0x0
00001990	beq	cr7,0x19a0
00001994	mtspr	ctr,r2
00001998	or	r12,r2,r2
0000199c	bctrl
000019a0	bl	0x2b50	; symbol stub for: ___keymgr_dwarf2_register_sections
000019a4	lis	r2,0x0
000019a8	lwz	r2,_pointer_to__darwin_gcc3_preregister_frame_info(r2)
000019ac	lwz	r0,0x0(r2)
000019b0	cmpwi	cr7,r0,0x0
000019b4	beq	cr7,0x19c4
000019b8	mtspr	ctr,r2
000019bc	or	r12,r2,r2
000019c0	bctrl
000019c4	lis	r3,0x0
000019c8	addi	r4,r1,0x3c
000019cc	addi	r3,r3,0x2d44
000019d0	bl	__dyld_func_lookup
000019d4	lwz	r0,0x3c(r1)
000019d8	mtspr	ctr,r0
000019dc	or	r12,r0,r0
000019e0	bctrl
000019e4	lis	r3,0x0
000019e8	addi	r4,r1,0x40
000019ec	addi	r3,r3,0x2d74
000019f0	bl	__dyld_func_lookup
000019f4	lis	r3,0x0
000019f8	addi	r4,r1,0x38
000019fc	addi	r3,r3,0x2d88
00001a00	bl	__dyld_func_lookup
00001a04	lis	r3,0x0
00001a08	addi	r4,r1,0x48
00001a0c	addi	r3,r3,0x2da0
00001a10	bl	__dyld_func_lookup
00001a14	lis	r3,0x0
00001a18	addi	r4,r1,0x4c
00001a1c	addi	r3,r3,0x2db8
00001a20	bl	__dyld_func_lookup
00001a24	lis	r3,0x0
00001a28	addi	r4,r1,0x50
00001a2c	addi	r3,r3,0x2dd8
00001a30	bl	__dyld_func_lookup
00001a34	lwz	r2,0x40(r1)
00001a38	cmpwi	cr7,r2,0x0
00001a3c	beq	cr7,0x1b68
00001a40	lwz	r0,0x38(r1)
00001a44	cmpwi	cr7,r0,0x0
00001a48	beq	cr7,0x1b68
00001a4c	lwz	r0,0x48(r1)
00001a50	cmpwi	cr7,r0,0x0
00001a54	beq	cr7,0x1b68
00001a58	lwz	r0,0x4c(r1)
00001a5c	cmpwi	cr7,r0,0x0
00001a60	beq	cr7,0x1b68
00001a64	lwz	r0,0x50(r1)
00001a68	cmpwi	cr7,r0,0x0
00001a6c	beq	cr7,0x1b68
00001a70	mtspr	ctr,r2
00001a74	or	r12,r2,r2
00001a78	lis	r29,0x0
00001a7c	li	r31,0x0
00001a80	addi	r29,r29,0x2dfc
00001a84	bctrl
00001a88	or	r30,r3,r3
00001a8c	b	0x1b60
00001a90	lwz	r0,0x38(r1)
00001a94	or	r3,r31,r31
00001a98	mtspr	ctr,r0
00001a9c	or	r12,r0,r0
00001aa0	bctrl
00001aa4	b	0x1abc
00001aa8	cmpwi	cr7,r0,0x2f
00001aac	beq	cr7,0x1ab8
00001ab0	addi	r2,r2,0x1
00001ab4	b	0x1ac0
00001ab8	addi	r3,r2,0x1
00001abc	or	r2,r3,r3
00001ac0	lbz	r0,0x0(r2)
00001ac4	extsb	r0,r0
00001ac8	cmpwi	cr7,r0,0x0
00001acc	bne	cr7,0x1aa8
00001ad0	lis	r11,0x0
00001ad4	li	r9,0x0
00001ad8	addi	r11,r11,0x2df4
00001adc	lbz	r0,0x0(r11)
00001ae0	extsb	r2,r0
00001ae4	cmpwi	cr7,r2,0x0
00001ae8	beq	cr7,0x1b08
00001aec	lbzx	r0,r9,r3
00001af0	addi	r11,r11,0x1
00001af4	extsb	r0,r0
00001af8	cmpw	cr7,r0,r2
00001afc	bne	cr7,0x1b5c
00001b00	addi	r9,r9,0x1
00001b04	b	0x1adc
00001b08	lwz	r0,0x48(r1)
00001b0c	or	r3,r31,r31
00001b10	mtspr	ctr,r0
00001b14	or	r12,r0,r0
00001b18	bctrl
00001b1c	cmpwi	cr7,r3,0x0
00001b20	beq	cr7,0x1b5c
00001b24	lwz	r0,0x4c(r1)
00001b28	or	r4,r29,r29
00001b2c	li	r5,0x4
00001b30	mtspr	ctr,r0
00001b34	or	r12,r0,r0
00001b38	bctrl
00001b3c	cmpwi	cr7,r3,0x0
00001b40	beq	cr7,0x1b5c
00001b44	lwz	r0,0x50(r1)
00001b48	mtspr	ctr,r0
00001b4c	or	r12,r0,r0
00001b50	bctrl
00001b54	cmpwi	r3,0x0
00001b58	bne	0x1904
00001b5c	addi	r31,r31,0x1
00001b60	cmplw	cr7,r31,r30
00001b64	blt	cr7,0x1a90
00001b68	lis	r3,0x0
00001b6c	addi	r4,r1,0x44
00001b70	addi	r3,r3,0x2e08
00001b74	bl	__dyld_func_lookup
00001b78	lwz	r3,0x44(r1)
00001b7c	cmpwi	cr7,r3,0x0
00001b80	beq	cr7,0x1b88
00001b84	bl	0x2bb0	; symbol stub for: _atexit
00001b88	lis	r2,0x0
00001b8c	li	r0,0x0
00001b90	or	r4,r28,r28
00001b94	or	r5,r27,r27
00001b98	lwz	r2,0x3018(r2)
00001b9c	or	r6,r26,r26
00001ba0	or	r3,r25,r25
00001ba4	stw	r0,0x0(r2)
00001ba8	bl	_main
00001bac	bl	0x2bf0	; symbol stub for: _exit
00001bb0	lis	r12,0x0
00001bb4	ori	r12,r12,0x2bf0
00001bb8	mtspr	ctr,r12
00001bbc	bctr
00001bc0	lis	r12,0x0
00001bc4	ori	r12,r12,_main
00001bc8	mtspr	ctr,r12
00001bcc	bctr
00001bd0	lis	r12,0x0
00001bd4	ori	r12,r12,0x2bb0
00001bd8	mtspr	ctr,r12
00001bdc	bctr
00001be0	lis	r12,0x0
00001be4	ori	r12,r12,__dyld_func_lookup
00001be8	mtspr	ctr,r12
00001bec	bctr
00001bf0	lis	r12,0x0
00001bf4	ori	r12,r12,0x2b50
00001bf8	mtspr	ctr,r12
00001bfc	bctr
dyld_stub_binding_helper:
00001c00	lis	r12,0x0
00001c04	lwz	r12,0x302c(r12)
00001c08	mtspr	ctr,r12
00001c0c	lis	r12,0x0
00001c10	addi	r12,r12,__mh_execute_header
00001c14	bctr
__dyld_func_lookup:
00001c18	lis	r11,0x0
00001c1c	lwz	r11,0x3030(r11)
00001c20	mtspr	ctr,r11
00001c24	bctr
_mach_inject_bundle_pid:
00001c28	mfspr	r0,lr
00001c2c	stmw	r30,0xfff8(r1)
00001c30	stw	r0,0x8(r1)
00001c34	stwu	r1,0xff80(r1)
00001c38	or	r30,r1,r1
00001c3c	bcl	20,31,0x1c40
00001c40	mfspr	r31,lr
00001c44	stw	r3,0x98(r30)
00001c48	stw	r4,0x9c(r30)
00001c4c	stw	r5,0xa0(r30)
00001c50	lwz	r0,0x98(r30)
00001c54	cmpwi	cr7,r0,0x0
00001c58	mfcr	r0
00001c5c	rlwinm	r0,r0,31,31,31
00001c60	cmpwi	cr7,r0,0x0
00001c64	beq	cr7,0x1c88
00001c68	addis	r2,r31,0x0
00001c6c	addi	r3,r2,0x11e0
00001c70	addis	r2,r31,0x0
00001c74	addi	r4,r2,0x1200
00001c78	li	r5,0x13
00001c7c	addis	r2,r31,0x0
00001c80	addi	r6,r2,0x1208
00001c84	bl	___eprintf
00001c88	lwz	r0,0x9c(r30)
00001c8c	cmpwi	cr7,r0,0x0
00001c90	mfcr	r0
00001c94	rlwinm	r0,r0,31,31,31
00001c98	cmpwi	cr7,r0,0x0
00001c9c	beq	cr7,0x1cc0
00001ca0	addis	r2,r31,0x0
00001ca4	addi	r3,r2,0x11e0
00001ca8	addis	r2,r31,0x0
00001cac	addi	r4,r2,0x1200
00001cb0	li	r5,0x14
00001cb4	addis	r2,r31,0x0
00001cb8	addi	r6,r2,0x1230
00001cbc	bl	___eprintf
00001cc0	li	r0,0x1
00001cc4	stw	r0,0x68(r30)
00001cc8	lwz	r0,0xa0(r30)
00001ccc	cmpwi	cr7,r0,0x0
00001cd0	ble	cr7,0x1cdc
00001cd4	li	r0,0x0
00001cd8	stw	r0,0x68(r30)
00001cdc	lwz	r0,0x68(r30)
00001ce0	cmpwi	cr7,r0,0x0
00001ce4	beq	cr7,0x1d08
00001ce8	addis	r2,r31,0x0
00001cec	addi	r3,r2,0x11e0
00001cf0	addis	r2,r31,0x0
00001cf4	addi	r4,r2,0x1200
00001cf8	li	r5,0x15
00001cfc	addis	r2,r31,0x0
00001d00	addi	r6,r2,0x124c
00001d04	bl	___eprintf
00001d08	li	r0,0x0
00001d0c	stw	r0,0x58(r30)
00001d10	li	r0,0x0
00001d14	stw	r0,0x54(r30)
00001d18	lwz	r0,0x58(r30)
00001d1c	cmpwi	cr7,r0,0x0
00001d20	bne	cr7,0x1de8
00001d24	addis	r2,r31,0x0
00001d28	lwz	r2,0x13e0(r2)
00001d2c	lwz	r0,0x0(r2)
00001d30	or	r3,r0,r0
00001d34	lwz	r4,0x9c(r30)
00001d38	lis	r5,0x800
00001d3c	ori	r5,r5,0x100
00001d40	bl	0x2b00	; symbol stub for: _CFStringCreateWithCString
00001d44	or	r0,r3,r3
00001d48	stw	r0,0x40(r30)
00001d4c	lwz	r0,0x40(r30)
00001d50	cmpwi	cr7,r0,0x0
00001d54	beq	cr7,0x1dd0
00001d58	addis	r2,r31,0x0
00001d5c	lwz	r2,0x13e0(r2)
00001d60	lwz	r0,0x0(r2)
00001d64	or	r3,r0,r0
00001d68	lwz	r4,0x40(r30)
00001d6c	li	r5,0x0
00001d70	li	r6,0x1
00001d74	bl	0x2b10	; symbol stub for: _CFURLCreateWithFileSystemPath
00001d78	or	r0,r3,r3
00001d7c	stw	r0,0x3c(r30)
00001d80	lwz	r0,0x3c(r30)
00001d84	cmpwi	cr7,r0,0x0
00001d88	beq	cr7,0x1dc8
00001d8c	addis	r2,r31,0x0
00001d90	lwz	r2,0x13e0(r2)
00001d94	lwz	r9,0x0(r2)
00001d98	addis	r2,r31,0x0
00001d9c	addi	r0,r2,0x1490
00001da0	or	r3,r9,r9
00001da4	or	r4,r0,r0
00001da8	li	r5,0x0
00001dac	li	r6,0x1
00001db0	lwz	r7,0x3c(r30)
00001db4	bl	0x2b20	; symbol stub for: _CFURLCreateWithFileSystemPathRelativeToBase
00001db8	or	r0,r3,r3
00001dbc	stw	r0,0x54(r30)
00001dc0	lwz	r3,0x3c(r30)
00001dc4	bl	0x2af0	; symbol stub for: _CFRelease
00001dc8	lwz	r3,0x40(r30)
00001dcc	bl	0x2af0	; symbol stub for: _CFRelease
00001dd0	lwz	r0,0x54(r30)
00001dd4	cmpwi	cr7,r0,0x0
00001dd8	bne	cr7,0x1de8
00001ddc	lis	r0,0xf800
00001de0	ori	r0,r0,0x2
00001de4	stw	r0,0x58(r30)
00001de8	li	r0,0x0
00001dec	stw	r0,0x50(r30)
00001df0	lwz	r0,0x58(r30)
00001df4	cmpwi	cr7,r0,0x0
00001df8	bne	cr7,0x1e34
00001dfc	addis	r2,r31,0x0
00001e00	lwz	r2,0x13e0(r2)
00001e04	lwz	r0,0x0(r2)
00001e08	or	r3,r0,r0
00001e0c	lwz	r4,0x54(r30)
00001e10	bl	0x2ad0	; symbol stub for: _CFBundleCreate
00001e14	or	r0,r3,r3
00001e18	stw	r0,0x50(r30)
00001e1c	lwz	r0,0x50(r30)
00001e20	cmpwi	cr7,r0,0x0
00001e24	bne	cr7,0x1e34
00001e28	lis	r0,0xf800
00001e2c	ori	r0,r0,0x3
00001e30	stw	r0,0x58(r30)
00001e34	li	r0,0x0
00001e38	stw	r0,0x4c(r30)
00001e3c	lwz	r0,0x58(r30)
00001e40	cmpwi	cr7,r0,0x0
00001e44	bne	cr7,0x1e7c
00001e48	addis	r2,r31,0x0
00001e4c	addi	r0,r2,0x14a0
00001e50	lwz	r3,0x50(r30)
00001e54	or	r4,r0,r0
00001e58	bl	0x2ae0	; symbol stub for: _CFBundleGetFunctionPointerForName
00001e5c	or	r0,r3,r3
00001e60	stw	r0,0x4c(r30)
00001e64	lwz	r0,0x4c(r30)
00001e68	cmpwi	cr7,r0,0x0
00001e6c	bne	cr7,0x1e7c
00001e70	lis	r0,0xf800
00001e74	ori	r0,r0,0x4
00001e78	stw	r0,0x58(r30)
00001e7c	li	r0,0x0
00001e80	stw	r0,0x48(r30)
00001e84	lwz	r0,0x58(r30)
00001e88	cmpwi	cr7,r0,0x0
00001e8c	bne	cr7,0x1edc
00001e90	lwz	r3,0x98(r30)
00001e94	bl	0x2cc0	; symbol stub for: _strlen
00001e98	or	r0,r3,r3
00001e9c	or	r2,r0,r0
00001ea0	addi	r0,r2,0x1
00001ea4	stw	r0,0x38(r30)
00001ea8	lwz	r2,0x38(r30)
00001eac	addi	r0,r2,0x4
00001eb0	stw	r0,0x44(r30)
00001eb4	lwz	r3,0x44(r30)
00001eb8	bl	0x2c40	; symbol stub for: _malloc
00001ebc	or	r0,r3,r3
00001ec0	stw	r0,0x48(r30)
00001ec4	lwz	r2,0x48(r30)
00001ec8	addi	r0,r2,0x4
00001ecc	lwz	r3,0x98(r30)
00001ed0	or	r4,r0,r0
00001ed4	lwz	r5,0x38(r30)
00001ed8	bl	0x2bd0	; symbol stub for: _bcopy
00001edc	lwz	r0,0x58(r30)
00001ee0	cmpwi	cr7,r0,0x0
00001ee4	bne	cr7,0x1f0c
00001ee8	lwz	r0,0x4c(r30)
00001eec	or	r3,r0,r0
00001ef0	lwz	r4,0x48(r30)
00001ef4	lwz	r5,0x44(r30)
00001ef8	lwz	r6,0xa0(r30)
00001efc	li	r7,0x0
00001f00	bl	_mach_inject
00001f04	or	r0,r3,r3
00001f08	stw	r0,0x58(r30)
00001f0c	lwz	r0,0x48(r30)
00001f10	cmpwi	cr7,r0,0x0
00001f14	beq	cr7,0x1f20
00001f18	lwz	r3,0x48(r30)
00001f1c	bl	0x2c20	; symbol stub for: _free
00001f20	lwz	r0,0x54(r30)
00001f24	cmpwi	cr7,r0,0x0
00001f28	beq	cr7,0x1f34
00001f2c	lwz	r3,0x54(r30)
00001f30	bl	0x2af0	; symbol stub for: _CFRelease
00001f34	lwz	r0,0x58(r30)
00001f38	or	r3,r0,r0
00001f3c	lwz	r1,0x0(r1)
00001f40	lwz	r0,0x8(r1)
00001f44	mtspr	lr,r0
00001f48	lmw	r30,0xfff8(r1)
00001f4c	blr
_main:
00001f50	mfspr	r0,lr
00001f54	stmw	r30,0xfff8(r1)
00001f58	stw	r0,0x8(r1)
00001f5c	stwu	r1,0xff30(r1)
00001f60	or	r30,r1,r1
00001f64	bcl	20,31,0x1f68
00001f68	mfspr	r31,lr
00001f6c	stw	r3,0xe8(r30)
00001f70	stw	r4,0xec(r30)
00001f74	lwz	r0,0xe8(r30)
00001f78	cmpwi	cr7,r0,0x3
00001f7c	beq	cr7,0x1f8c
00001f80	li	r0,0x1
00001f84	stw	r0,0xb8(r30)
00001f88	b	0x2168
00001f8c	lwz	r2,0xec(r30)
00001f90	lwz	r0,0x0(r2)
00001f94	stw	r0,0x50(r30)
00001f98	lwz	r2,0xec(r30)
00001f9c	addi	r2,r2,0x4
00001fa0	lwz	r0,0x0(r2)
00001fa4	stw	r0,0x4c(r30)
00001fa8	lwz	r2,0xec(r30)
00001fac	addi	r2,r2,0x8
00001fb0	lwz	r0,0x0(r2)
00001fb4	or	r3,r0,r0
00001fb8	bl	0x2bc0	; symbol stub for: _atoi
00001fbc	or	r0,r3,r3
00001fc0	stw	r0,0x48(r30)
00001fc4	addi	r0,r30,0x58
00001fc8	lwz	r3,0x4c(r30)
00001fcc	or	r4,r0,r0
00001fd0	bl	0x2cb0	; symbol stub for: _stat
00001fd4	or	r0,r3,r3
00001fd8	cmpwi	cr7,r0,0x0
00001fdc	bge	cr7,0x1ffc
00001fe0	addis	r2,r31,0x0
00001fe4	addi	r3,r2,0xf50
00001fe8	lwz	r4,0x4c(r30)
00001fec	bl	0x2c90	; symbol stub for: _printf$LDBL128
00001ff0	li	r0,0x1
00001ff4	stw	r0,0xb8(r30)
00001ff8	b	0x2168
00001ffc	li	r3,0x401
00002000	bl	0x2c40	; symbol stub for: _malloc
00002004	or	r0,r3,r3
00002008	stw	r0,0x44(r30)
0000200c	li	r3,0x401
00002010	bl	0x2c40	; symbol stub for: _malloc
00002014	or	r0,r3,r3
00002018	stw	r0,0x40(r30)
0000201c	lwz	r3,0x50(r30)
00002020	lwz	r4,0x44(r30)
00002024	bl	0x2ca0	; symbol stub for: _realpath
00002028	or	r0,r3,r3
0000202c	stw	r0,0x44(r30)
00002030	lwz	r3,0x4c(r30)
00002034	lwz	r4,0x40(r30)
00002038	bl	0x2ca0	; symbol stub for: _realpath
0000203c	or	r0,r3,r3
00002040	stw	r0,0x40(r30)
00002044	lwz	r0,0x44(r30)
00002048	cmpwi	cr7,r0,0x0
0000204c	beq	cr7,0x205c
00002050	lwz	r0,0x40(r30)
00002054	cmpwi	cr7,r0,0x0
00002058	bne	cr7,0x2074
0000205c	addis	r2,r31,0x0
00002060	addi	r3,r2,0xf60
00002064	bl	0x2c90	; symbol stub for: _printf$LDBL128
00002068	li	r0,0x1
0000206c	stw	r0,0xb8(r30)
00002070	b	0x2168
00002074	lwz	r3,0x44(r30)
00002078	li	r4,0x2f
0000207c	bl	0x2ce0	; symbol stub for: _strrchr
00002080	or	r0,r3,r3
00002084	stw	r0,0x3c(r30)
00002088	lwz	r3,0x40(r30)
0000208c	li	r4,0x2f
00002090	bl	0x2ce0	; symbol stub for: _strrchr
00002094	or	r0,r3,r3
00002098	stw	r0,0x38(r30)
0000209c	lwz	r0,0x3c(r30)
000020a0	cmpwi	cr7,r0,0x0
000020a4	beq	cr7,0x20b4
000020a8	lwz	r0,0x38(r30)
000020ac	cmpwi	cr7,r0,0x0
000020b0	bne	cr7,0x20cc
000020b4	addis	r2,r31,0x0
000020b8	addi	r3,r2,0xf70
000020bc	bl	0x2c90	; symbol stub for: _printf$LDBL128
000020c0	li	r0,0x1
000020c4	stw	r0,0xb8(r30)
000020c8	b	0x2168
000020cc	lwz	r2,0x3c(r30)
000020d0	lwz	r0,0x44(r30)
000020d4	subf	r0,r0,r2
000020d8	lwz	r3,0x44(r30)
000020dc	lwz	r4,0x40(r30)
000020e0	or	r5,r0,r0
000020e4	bl	0x2cd0	; symbol stub for: _strncmp
000020e8	or	r0,r3,r3
000020ec	cmpwi	cr7,r0,0x0
000020f0	beq	cr7,0x2114
000020f4	addis	r2,r31,0x0
000020f8	addi	r3,r2,0xf7c
000020fc	lwz	r4,0x4c(r30)
00002100	lwz	r5,0x50(r30)
00002104	bl	0x2c90	; symbol stub for: _printf$LDBL128
00002108	li	r0,0x1
0000210c	stw	r0,0xb8(r30)
00002110	b	0x2168
00002114	lwz	r2,0x3c(r30)
00002118	li	r0,0x0
0000211c	stb	r0,0x0(r2)
00002120	lwz	r3,0x40(r30)
00002124	lwz	r4,0x44(r30)
00002128	lwz	r5,0x48(r30)
0000212c	bl	_mach_inject_bundle_pid
00002130	or	r0,r3,r3
00002134	stw	r0,0x54(r30)
00002138	lwz	r0,0x54(r30)
0000213c	cmpwi	cr7,r0,0x0
00002140	beq	cr7,0x2160
00002144	addis	r2,r31,0x0
00002148	addi	r3,r2,0xfb0
0000214c	lwz	r4,0x40(r30)
00002150	lwz	r5,0x44(r30)
00002154	lwz	r6,0x48(r30)
00002158	lwz	r7,0x54(r30)
0000215c	bl	0x2c90	; symbol stub for: _printf$LDBL128
00002160	lwz	r0,0x54(r30)
00002164	stw	r0,0xb8(r30)
00002168	lwz	r0,0xb8(r30)
0000216c	or	r3,r0,r0
00002170	lwz	r1,0x0(r1)
00002174	lwz	r0,0x8(r1)
00002178	mtspr	lr,r0
0000217c	lmw	r30,0xfff8(r1)
00002180	blr
_mach_inject:
00002184	mfspr	r0,lr
00002188	stmw	r30,0xfff8(r1)
0000218c	stw	r0,0x8(r1)
00002190	stwu	r1,0xfee0(r1)
00002194	or	r30,r1,r1
00002198	bcl	20,31,0x219c
0000219c	mfspr	r31,lr
000021a0	stw	r3,0x138(r30)
000021a4	stw	r4,0x13c(r30)
000021a8	stw	r5,0x140(r30)
000021ac	stw	r6,0x144(r30)
000021b0	stw	r7,0x148(r30)
000021b4	lwz	r0,0x138(r30)
000021b8	cmpwi	cr7,r0,0x0
000021bc	mfcr	r0
000021c0	rlwinm	r0,r0,31,31,31
000021c4	cmpwi	cr7,r0,0x0
000021c8	beq	cr7,0x21ec
000021cc	addis	r2,r31,0x0
000021d0	addi	r3,r2,0xc84
000021d4	addis	r2,r31,0x0
000021d8	addi	r4,r2,0xd94
000021dc	li	r5,0x39
000021e0	addis	r2,r31,0x0
000021e4	addi	r6,r2,0xd9c
000021e8	bl	___eprintf
000021ec	li	r0,0x1
000021f0	stw	r0,0x10c(r30)
000021f4	lwz	r0,0x144(r30)
000021f8	cmpwi	cr7,r0,0x0
000021fc	ble	cr7,0x2208
00002200	li	r0,0x0
00002204	stw	r0,0x10c(r30)
00002208	lwz	r0,0x10c(r30)
0000220c	cmpwi	cr7,r0,0x0
00002210	beq	cr7,0x2234
00002214	addis	r2,r31,0x0
00002218	addi	r3,r2,0xc84
0000221c	addis	r2,r31,0x0
00002220	addi	r4,r2,0xd94
00002224	li	r5,0x3a
00002228	addis	r2,r31,0x0
0000222c	addi	r6,r2,0xda8
00002230	bl	___eprintf
00002234	lwz	r0,0x148(r30)
00002238	cmpwi	cr7,r0,0x0
0000223c	beq	cr7,0x2258
00002240	lwz	r0,0x148(r30)
00002244	cmplwi	cr7,r0,0x400
00002248	bgt	cr7,0x2258
0000224c	li	r0,0x1
00002250	stw	r0,0x108(r30)
00002254	b	0x2260
00002258	li	r0,0x0
0000225c	stw	r0,0x108(r30)
00002260	lwz	r0,0x108(r30)
00002264	cmpwi	cr7,r0,0x0
00002268	beq	cr7,0x228c
0000226c	addis	r2,r31,0x0
00002270	addi	r3,r2,0xc84
00002274	addis	r2,r31,0x0
00002278	addi	r4,r2,0xd94
0000227c	li	r5,0x3b
00002280	addis	r2,r31,0x0
00002284	addi	r6,r2,0xdbc
00002288	bl	___eprintf
0000228c	addi	r0,r30,0x44
00002290	addi	r2,r30,0x48
00002294	addi	r9,r30,0x4c
00002298	addi	r11,r30,0x50
0000229c	lwz	r3,0x138(r30)
000022a0	or	r4,r0,r0
000022a4	or	r5,r2,r2
000022a8	or	r6,r9,r9
000022ac	or	r7,r11,r11
000022b0	bl	_machImageForPointer
000022b4	or	r0,r3,r3
000022b8	stw	r0,0x40(r30)
000022bc	lwz	r0,0x148(r30)
000022c0	cmpwi	cr7,r0,0x0
000022c4	bne	cr7,0x22d0
000022c8	li	r0,0x4000
000022cc	stw	r0,0x148(r30)
000022d0	li	r0,0x0
000022d4	stw	r0,0x54(r30)
000022d8	lwz	r0,0x40(r30)
000022dc	cmpwi	cr7,r0,0x0
000022e0	bne	cr7,0x230c
000022e4	addis	r2,r31,0x0
000022e8	lwz	r2,0xe88(r2)
000022ec	lwz	r0,0x0(r2)
000022f0	addi	r2,r30,0x54
000022f4	or	r3,r0,r0
000022f8	lwz	r4,0x144(r30)
000022fc	or	r5,r2,r2
00002300	bl	0x2cf0	; symbol stub for: _task_for_pid
00002304	or	r0,r3,r3
00002308	stw	r0,0x40(r30)
0000230c	li	r0,0x0
00002310	stw	r0,0x58(r30)
00002314	lwz	r0,0x40(r30)
00002318	cmpwi	cr7,r0,0x0
0000231c	bne	cr7,0x2344
00002320	lwz	r0,0x54(r30)
00002324	addi	r2,r30,0x58
00002328	or	r3,r0,r0
0000232c	or	r4,r2,r2
00002330	lwz	r5,0x148(r30)
00002334	li	r6,0x1
00002338	bl	0x2d10	; symbol stub for: _vm_allocate
0000233c	or	r0,r3,r3
00002340	stw	r0,0x40(r30)
00002344	li	r0,0x0
00002348	stw	r0,0x5c(r30)
0000234c	lwz	r0,0x40(r30)
00002350	cmpwi	cr7,r0,0x0
00002354	bne	cr7,0x2380
00002358	lwz	r2,0x54(r30)
0000235c	lwz	r9,0x48(r30)
00002360	addi	r0,r30,0x5c
00002364	or	r3,r2,r2
00002368	or	r4,r0,r0
0000236c	or	r5,r9,r9
00002370	li	r6,0x1
00002374	bl	0x2d10	; symbol stub for: _vm_allocate
00002378	or	r0,r3,r3
0000237c	stw	r0,0x40(r30)
00002380	lwz	r0,0x40(r30)
00002384	cmpwi	cr7,r0,0x0
00002388	bne	cr7,0x23b8
0000238c	lwz	r9,0x54(r30)
00002390	lwz	r11,0x5c(r30)
00002394	lwz	r0,0x44(r30)
00002398	lwz	r2,0x48(r30)
0000239c	or	r3,r9,r9
000023a0	or	r4,r11,r11
000023a4	or	r5,r0,r0
000023a8	or	r6,r2,r2
000023ac	bl	0x2d30	; symbol stub for: _vm_write
000023b0	or	r0,r3,r3
000023b4	stw	r0,0x40(r30)
000023b8	li	r0,0x0
000023bc	stw	r0,0x60(r30)
000023c0	lwz	r0,0x40(r30)
000023c4	cmpwi	cr7,r0,0x0
000023c8	bne	cr7,0x243c
000023cc	lwz	r0,0x13c(r30)
000023d0	cmpwi	cr7,r0,0x0
000023d4	beq	cr7,0x243c
000023d8	lwz	r0,0x140(r30)
000023dc	cmpwi	cr7,r0,0x0
000023e0	beq	cr7,0x243c
000023e4	lwz	r0,0x54(r30)
000023e8	addi	r2,r30,0x60
000023ec	or	r3,r0,r0
000023f0	or	r4,r2,r2
000023f4	lwz	r5,0x140(r30)
000023f8	li	r6,0x1
000023fc	bl	0x2d10	; symbol stub for: _vm_allocate
00002400	or	r0,r3,r3
00002404	stw	r0,0x40(r30)
00002408	lwz	r0,0x40(r30)
0000240c	cmpwi	cr7,r0,0x0
00002410	bne	cr7,0x243c
00002414	lwz	r2,0x54(r30)
00002418	lwz	r9,0x60(r30)
0000241c	lwz	r0,0x13c(r30)
00002420	or	r3,r2,r2
00002424	or	r4,r9,r9
00002428	or	r5,r0,r0
0000242c	lwz	r6,0x140(r30)
00002430	bl	0x2d30	; symbol stub for: _vm_write
00002434	or	r0,r3,r3
00002438	stw	r0,0x40(r30)
0000243c	lwz	r0,0x40(r30)
00002440	cmpwi	cr7,r0,0x0
00002444	bne	cr7,0x246c
00002448	lwz	r2,0x138(r30)
0000244c	lwz	r0,0x44(r30)
00002450	subf	r0,r0,r2
00002454	stw	r0,0x3c(r30)
00002458	lwz	r0,0x5c(r30)
0000245c	or	r2,r0,r0
00002460	lwz	r0,0x44(r30)
00002464	subf	r0,r0,r2
00002468	stw	r0,0x38(r30)
0000246c	lwz	r0,0x40(r30)
00002470	cmpwi	cr7,r0,0x0
00002474	bne	cr7,0x255c
00002478	lwz	r0,0x148(r30)
0000247c	rlwinm	r2,r0,31,1,31
00002480	lwz	r0,0x58(r30)
00002484	add	r0,r2,r0
00002488	stw	r0,0x58(r30)
0000248c	addi	r0,r30,0x68
00002490	li	r2,0xa0
00002494	or	r3,r0,r0
00002498	li	r4,0x0
0000249c	or	r5,r2,r2
000024a0	bl	0x2c50	; symbol stub for: _memset
000024a4	lwz	r0,0x5c(r30)
000024a8	stw	r0,0x68(r30)
000024ac	lwz	r2,0x68(r30)
000024b0	lwz	r0,0x3c(r30)
000024b4	add	r0,r2,r0
000024b8	stw	r0,0x68(r30)
000024bc	lwz	r9,0x68(r30)
000024c0	lwz	r2,0x5c(r30)
000024c4	lwz	r0,0x48(r30)
000024c8	add	r0,r2,r0
000024cc	cmplw	cr7,r9,r0
000024d0	crnor	30,28,28
000024d4	mfcr	r0
000024d8	rlwinm	r0,r0,31,31,31
000024dc	cmpwi	cr7,r0,0x0
000024e0	beq	cr7,0x2504
000024e4	addis	r2,r31,0x0
000024e8	addi	r3,r2,0xc84
000024ec	addis	r2,r31,0x0
000024f0	addi	r4,r2,0xd94
000024f4	li	r5,0x97
000024f8	addis	r2,r31,0x0
000024fc	addi	r6,r2,0xde0
00002500	bl	___eprintf
00002504	lwz	r0,0x58(r30)
00002508	stw	r0,0x74(r30)
0000250c	lwz	r0,0x38(r30)
00002510	stw	r0,0x7c(r30)
00002514	lwz	r0,0x60(r30)
00002518	stw	r0,0x80(r30)
0000251c	lwz	r0,0x140(r30)
00002520	stw	r0,0x84(r30)
00002524	lis	r0,0xdead
00002528	ori	r0,r0,0xbeef
0000252c	stw	r0,0xf8(r30)
00002530	lwz	r0,0x54(r30)
00002534	addi	r2,r30,0x68
00002538	addi	r9,r30,0x64
0000253c	or	r3,r0,r0
00002540	li	r4,0x1
00002544	or	r5,r2,r2
00002548	li	r6,0x28
0000254c	or	r7,r9,r9
00002550	bl	0x2d00	; symbol stub for: _thread_create_running
00002554	or	r0,r3,r3
00002558	stw	r0,0x40(r30)
0000255c	lwz	r0,0x40(r30)
00002560	cmpwi	cr7,r0,0x0
00002564	beq	cr7,0x25d8
00002568	lwz	r0,0x60(r30)
0000256c	cmpwi	cr7,r0,0x0
00002570	beq	cr7,0x258c
00002574	lwz	r0,0x54(r30)
00002578	lwz	r2,0x60(r30)
0000257c	or	r3,r0,r0
00002580	or	r4,r2,r2
00002584	lwz	r5,0x140(r30)
00002588	bl	0x2d20	; symbol stub for: _vm_deallocate
0000258c	lwz	r0,0x5c(r30)
00002590	cmpwi	cr7,r0,0x0
00002594	beq	cr7,0x25b4
00002598	lwz	r0,0x54(r30)
0000259c	lwz	r2,0x5c(r30)
000025a0	lwz	r9,0x48(r30)
000025a4	or	r3,r0,r0
000025a8	or	r4,r2,r2
000025ac	or	r5,r9,r9
000025b0	bl	0x2d20	; symbol stub for: _vm_deallocate
000025b4	lwz	r0,0x58(r30)
000025b8	cmpwi	cr7,r0,0x0
000025bc	beq	cr7,0x25d8
000025c0	lwz	r0,0x54(r30)
000025c4	lwz	r2,0x58(r30)
000025c8	or	r3,r0,r0
000025cc	or	r4,r2,r2
000025d0	lwz	r5,0x148(r30)
000025d4	bl	0x2d20	; symbol stub for: _vm_deallocate
000025d8	lwz	r0,0x40(r30)
000025dc	or	r3,r0,r0
000025e0	lwz	r1,0x0(r1)
000025e4	lwz	r0,0x8(r1)
000025e8	mtspr	lr,r0
000025ec	lmw	r30,0xfff8(r1)
000025f0	blr
_machImageForPointer:
000025f4	mfspr	r0,lr
000025f8	stmw	r29,0xfff4(r1)
000025fc	stw	r0,0x8(r1)
00002600	stwu	r1,0xff00(r1)
00002604	or	r30,r1,r1
00002608	bcl	20,31,0x260c
0000260c	mfspr	r31,lr
00002610	stw	r3,0x118(r30)
00002614	stw	r4,0x11c(r30)
00002618	stw	r5,0x120(r30)
0000261c	stw	r6,0x124(r30)
00002620	stw	r7,0x128(r30)
00002624	lwz	r0,0x118(r30)
00002628	cmpwi	cr7,r0,0x0
0000262c	mfcr	r0
00002630	rlwinm	r0,r0,31,31,31
00002634	cmpwi	cr7,r0,0x0
00002638	beq	cr7,0x265c
0000263c	addis	r2,r31,0x0
00002640	addi	r3,r2,0x814
00002644	addis	r2,r31,0x0
00002648	addi	r4,r2,0x924
0000264c	li	r5,0xf6
00002650	addis	r2,r31,0x0
00002654	addi	r6,r2,0x9a4
00002658	bl	___eprintf
0000265c	lwz	r0,0x11c(r30)
00002660	cmpwi	cr7,r0,0x0
00002664	mfcr	r0
00002668	rlwinm	r0,r0,31,31,31
0000266c	cmpwi	cr7,r0,0x0
00002670	beq	cr7,0x2694
00002674	addis	r2,r31,0x0
00002678	addi	r3,r2,0x814
0000267c	addis	r2,r31,0x0
00002680	addi	r4,r2,0x924
00002684	li	r5,0xf7
00002688	addis	r2,r31,0x0
0000268c	addi	r6,r2,0x9ac
00002690	bl	___eprintf
00002694	lwz	r0,0x120(r30)
00002698	cmpwi	cr7,r0,0x0
0000269c	mfcr	r0
000026a0	rlwinm	r0,r0,31,31,31
000026a4	cmpwi	cr7,r0,0x0
000026a8	beq	cr7,0x26cc
000026ac	addis	r2,r31,0x0
000026b0	addi	r3,r2,0x814
000026b4	addis	r2,r31,0x0
000026b8	addi	r4,r2,0x924
000026bc	li	r5,0xf8
000026c0	addis	r2,r31,0x0
000026c4	addi	r6,r2,0x9b4
000026c8	bl	___eprintf
000026cc	lwz	r0,0x118(r30)
000026d0	stw	r0,0x84(r30)
000026d4	lwz	r0,0x124(r30)
000026d8	cmpwi	cr7,r0,0x0
000026dc	beq	cr7,0x2704
000026e0	lwz	r0,0x128(r30)
000026e4	cmpwi	cr7,r0,0x0
000026e8	beq	cr7,0x2704
000026ec	lwz	r2,0x124(r30)
000026f0	li	r0,0x0
000026f4	stw	r0,0x0(r2)
000026f8	lwz	r2,0x128(r30)
000026fc	li	r0,0x0
00002700	stw	r0,0x0(r2)
00002704	bl	0x2b90	; symbol stub for: __dyld_image_count
00002708	or	r0,r3,r3
0000270c	stw	r0,0x7c(r30)
00002710	li	r0,0x0
00002714	stw	r0,0x80(r30)
00002718	b	0x2a38
0000271c	lwz	r3,0x80(r30)
00002720	bl	0x2b60	; symbol stub for: __dyld_get_image_header
00002724	or	r0,r3,r3
00002728	stw	r0,0x78(r30)
0000272c	lwz	r3,0x78(r30)
00002730	addis	r2,r31,0x0
00002734	addi	r4,r2,0x9bc
00002738	addis	r2,r31,0x0
0000273c	addi	r5,r2,0x9c4
00002740	bl	0x2c30	; symbol stub for: _getsectbynamefromheader
00002744	or	r0,r3,r3
00002748	stw	r0,0x74(r30)
0000274c	lwz	r2,0x74(r30)
00002750	lwz	r29,0x20(r2)
00002754	lwz	r3,0x80(r30)
00002758	bl	0x2b80	; symbol stub for: __dyld_get_image_vmaddr_slide
0000275c	or	r0,r3,r3
00002760	add	r0,r29,r0
00002764	stw	r0,0x70(r30)
00002768	lwz	r2,0x74(r30)
0000276c	lwz	r2,0x24(r2)
00002770	lwz	r0,0x70(r30)
00002774	add	r0,r2,r0
00002778	stw	r0,0x6c(r30)
0000277c	lwz	r2,0x70(r30)
00002780	lwz	r0,0x84(r30)
00002784	cmplw	cr7,r2,r0
00002788	bgt	cr7,0x2a2c
0000278c	lwz	r0,0x6c(r30)
00002790	lwz	r2,0x84(r30)
00002794	cmplw	cr7,r0,r2
00002798	blt	cr7,0x2a2c
0000279c	lwz	r3,0x80(r30)
000027a0	bl	0x2b70	; symbol stub for: __dyld_get_image_name
000027a4	or	r0,r3,r3
000027a8	stw	r0,0x68(r30)
000027ac	lwz	r0,0x68(r30)
000027b0	cmpwi	cr7,r0,0x0
000027b4	mfcr	r0
000027b8	rlwinm	r0,r0,31,31,31
000027bc	cmpwi	cr7,r0,0x0
000027c0	beq	cr7,0x27e4
000027c4	addis	r2,r31,0x0
000027c8	addi	r3,r2,0x814
000027cc	addis	r2,r31,0x0
000027d0	addi	r4,r2,0x924
000027d4	li	r5,0x10d
000027d8	addis	r2,r31,0x0
000027dc	addi	r6,r2,0x9cc
000027e0	bl	___eprintf
000027e4	addi	r0,r30,0x88
000027e8	lwz	r3,0x68(r30)
000027ec	or	r4,r0,r0
000027f0	bl	0x2cb0	; symbol stub for: _stat
000027f4	or	r0,r3,r3
000027f8	cmpwi	cr7,r0,0x0
000027fc	beq	cr7,0x2818
00002800	bl	0x2b40	; symbol stub for: ___error
00002804	or	r2,r3,r3
00002808	lwz	r0,0x0(r2)
0000280c	ori	r0,r0,0xc000
00002810	stw	r0,0xe8(r30)
00002814	b	0x2a5c
00002818	lwz	r0,0x11c(r30)
0000281c	cmpwi	cr7,r0,0x0
00002820	beq	cr7,0x2830
00002824	lwz	r2,0x11c(r30)
00002828	lwz	r0,0x78(r30)
0000282c	stw	r0,0x0(r2)
00002830	lwz	r0,0x120(r30)
00002834	cmpwi	cr7,r0,0x0
00002838	beq	cr7,0x29bc
0000283c	lwz	r2,0xb8(r30)
00002840	lwz	r3,0xbc(r30)
00002844	or	r0,r3,r3
00002848	lwz	r2,0x120(r30)
0000284c	stw	r0,0x0(r2)
00002850	lwz	r3,0x68(r30)
00002854	li	r4,0x0
00002858	bl	0x2c80	; symbol stub for: _open
0000285c	or	r0,r3,r3
00002860	stw	r0,0x64(r30)
00002864	lwz	r2,0x120(r30)
00002868	lwz	r0,0x0(r2)
0000286c	stw	r0,0x60(r30)
00002870	li	r3,0x0
00002874	lwz	r4,0x60(r30)
00002878	li	r5,0x1
0000287c	li	r6,0x0
00002880	lwz	r7,0x64(r30)
00002884	li	r8,0x0
00002888	li	r9,0x0
0000288c	bl	0x2c60	; symbol stub for: _mmap
00002890	or	r0,r3,r3
00002894	stw	r0,0x5c(r30)
00002898	lwz	r0,0x5c(r30)
0000289c	stw	r0,0x58(r30)
000028a0	lwz	r2,0x58(r30)
000028a4	lwz	r2,0x0(r2)
000028a8	lis	r0,0xcafe
000028ac	ori	r0,r0,0xbabe
000028b0	cmpw	cr7,r2,r0
000028b4	bne	cr7,0x29a8
000028b8	lwz	r2,0x58(r30)
000028bc	lwz	r0,0x4(r2)
000028c0	stw	r0,0x54(r30)
000028c4	bl	0x2b30	; symbol stub for: _NXGetLocalArchInfo
000028c8	or	r0,r3,r3
000028cc	stw	r0,0x50(r30)
000028d0	lwz	r2,0x5c(r30)
000028d4	addi	r0,r2,0x8
000028d8	stw	r0,0x4c(r30)
000028dc	li	r0,0x0
000028e0	stw	r0,0x48(r30)
000028e4	li	r0,0x0
000028e8	stw	r0,0x44(r30)
000028ec	li	r0,0x0
000028f0	stw	r0,0x44(r30)
000028f4	b	0x297c
000028f8	lwz	r0,0x44(r30)
000028fc	mulli	r0,r0,0x14
00002900	or	r2,r0,r0
00002904	lwz	r0,0x4c(r30)
00002908	add	r2,r2,r0
0000290c	lwz	r0,0x0(r2)
00002910	stw	r0,0x40(r30)
00002914	lwz	r0,0x44(r30)
00002918	mulli	r0,r0,0x14
0000291c	or	r2,r0,r0
00002920	lwz	r0,0x4c(r30)
00002924	add	r2,r2,r0
00002928	lwz	r0,0x4(r2)
0000292c	stw	r0,0x3c(r30)
00002930	lwz	r2,0x50(r30)
00002934	lwz	r2,0x4(r2)
00002938	lwz	r0,0x40(r30)
0000293c	cmpw	cr7,r2,r0
00002940	bne	cr7,0x2970
00002944	lwz	r0,0x44(r30)
00002948	mulli	r0,r0,0x14
0000294c	or	r2,r0,r0
00002950	lwz	r0,0x4c(r30)
00002954	add	r0,r2,r0
00002958	stw	r0,0x48(r30)
0000295c	lwz	r2,0x50(r30)
00002960	lwz	r2,0x8(r2)
00002964	lwz	r0,0x3c(r30)
00002968	cmpw	cr7,r2,r0
0000296c	beq	cr7,0x298c
00002970	lwz	r2,0x44(r30)
00002974	addi	r0,r2,0x1
00002978	stw	r0,0x44(r30)
0000297c	lwz	r0,0x44(r30)
00002980	lwz	r2,0x54(r30)
00002984	cmplw	cr7,r0,r2
00002988	blt	cr7,0x28f8
0000298c	lwz	r0,0x48(r30)
00002990	cmpwi	cr7,r0,0x0
00002994	beq	cr7,0x29a8
00002998	lwz	r2,0x48(r30)
0000299c	lwz	r0,0xc(r2)
000029a0	lwz	r2,0x120(r30)
000029a4	stw	r0,0x0(r2)
000029a8	lwz	r3,0x5c(r30)
000029ac	lwz	r4,0x60(r30)
000029b0	bl	0x2c70	; symbol stub for: _munmap
000029b4	lwz	r3,0x64(r30)
000029b8	bl	0x2be0	; symbol stub for: _close
000029bc	lwz	r0,0x124(r30)
000029c0	cmpwi	cr7,r0,0x0
000029c4	beq	cr7,0x2a20
000029c8	lwz	r0,0x128(r30)
000029cc	cmpwi	cr7,r0,0x0
000029d0	beq	cr7,0x2a20
000029d4	lwz	r3,0x78(r30)
000029d8	addis	r2,r31,0x0
000029dc	addi	r4,r2,0x9d8
000029e0	addis	r2,r31,0x0
000029e4	addi	r5,r2,0x9e4
000029e8	bl	0x2c30	; symbol stub for: _getsectbynamefromheader
000029ec	or	r0,r3,r3
000029f0	stw	r0,0x38(r30)
000029f4	lwz	r0,0x38(r30)
000029f8	cmpwi	cr7,r0,0x0
000029fc	beq	cr7,0x2a20
00002a00	lwz	r2,0x38(r30)
00002a04	lwz	r0,0x28(r2)
00002a08	lwz	r2,0x124(r30)
00002a0c	stw	r0,0x0(r2)
00002a10	lwz	r2,0x38(r30)
00002a14	lwz	r0,0x24(r2)
00002a18	lwz	r2,0x128(r30)
00002a1c	stw	r0,0x0(r2)
00002a20	li	r0,0x0
00002a24	stw	r0,0xe8(r30)
00002a28	b	0x2a5c
00002a2c	lwz	r2,0x80(r30)
00002a30	addi	r0,r2,0x1
00002a34	stw	r0,0x80(r30)
00002a38	lwz	r0,0x80(r30)
00002a3c	lwz	r2,0x7c(r30)
00002a40	cmplw	cr7,r0,r2
00002a44	blt	cr7,0x271c
00002a48	lis	r0,0xf800
00002a4c	stw	r0,0xe8(r30)
00002a50	lwz	r0,0xe8(r30)
00002a54	ori	r0,r0,0x1
00002a58	stw	r0,0xe8(r30)
00002a5c	lwz	r0,0xe8(r30)
00002a60	or	r3,r0,r0
00002a64	lwz	r1,0x0(r1)
00002a68	lwz	r0,0x8(r1)
00002a6c	mtspr	lr,r0
00002a70	lmw	r29,0xfff4(r1)
00002a74	blr
00002a78	nop
00002a7c	nop
___eprintf:
00002a80	mfspr	r0,lr
00002a84	stmw	r29,0xfff4(r1)
00002a88	or	r2,r5,r5
00002a8c	bcl	20,31,0x2a90
00002a90	or	r7,r6,r6
00002a94	or	r6,r2,r2
00002a98	mfspr	r31,lr
00002a9c	stw	r0,0x8(r1)
00002aa0	or	r0,r4,r4
00002aa4	or	r4,r3,r3
00002aa8	stwu	r1,0xffb0(r1)
00002aac	or	r5,r0,r0
00002ab0	addis	r29,r31,0x0
00002ab4	lwz	r29,0x598(r29)
00002ab8	addi	r29,r29,0xb0
00002abc	or	r3,r29,r29
00002ac0	bl	0x2c10	; symbol stub for: _fprintf
00002ac4	or	r3,r29,r29
00002ac8	bl	0x2c00	; symbol stub for: _fflush
00002acc	bl	0x2ba0	; symbol stub for: _abort
